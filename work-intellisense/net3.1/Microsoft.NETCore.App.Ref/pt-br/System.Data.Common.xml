<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Determina a ação que ocorre quando o método <see cref="M:System.Data.DataSet.AcceptChanges" /> ou <see cref="M:System.Data.DataTable.RejectChanges" /> é invocado em um <see cref="T:System.Data.DataTable" /> com um <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">As alterações são colocadas em cascata na relação.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">Nenhuma ação ocorre (padrão).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">Fornece uma descrição dos resultados da consulta e seu efeito sobre o banco de dados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">Quando o comando é executado, o objeto <see langword="Connection" /> associado é fechado quando o objeto <see langword="DataReader" /> associado é fechado.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">A consulta pode retornar vários conjuntos de resultados. A execução da consulta pode afetar o estado do banco de dados. <see langword="Default" /> não define sinalizadores <see cref="T:System.Data.CommandBehavior" /> e, portanto, chamar <see langword="ExecuteReader(CommandBehavior.Default)" /> é funcionalmente equivalente a chamar <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">A consulta retorna informações da coluna e da chave primária. O provedor acrescenta colunas extras ao conjunto de resultados das colunas de chave primária e carimbo de data/hora existentes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">A consulta retorna somente informações de coluna. Ao usar o <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, o Provedor de Dados .NET Framework para SQL Server precede a instrução executada com SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">Fornece uma maneira para que o <see langword="DataReader" /> manipule linhas que contêm colunas com valores binários grandes. Em vez de carregar a linha inteira, <see langword="SequentialAccess" /> permite que o <see langword="DataReader" /> carregue os dados como um fluxo. Use o método <see langword="GetBytes" /> ou <see langword="GetChars" /> para especificar um local de bytes para iniciar a operação de leitura e um tamanho do buffer limitado para os dados retornados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">A consulta retorna um único conjunto de resultados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">A consulta deve retornar uma única linha do primeiro conjunto de resultados. A execução da consulta pode afetar o estado do banco de dados. Alguns provedores de dados .NET Framework podem, mas não precisam, usar essas informações para otimizar o desempenho do comando. Ao especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> com o método <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> do objeto <see cref="T:System.Data.OleDb.OleDbCommand" />, o Provedor de Dados .NET Framework para OLE DB executará a associação usando a interface <see langword="IRow" /> do OLE DB, se ela estiver disponível. Caso contrário, ele usará a interface <see langword="IRowset" />. Se a instrução SQL dever retornar apenas uma única linha, especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> também poderá melhorar o desempenho do aplicativo. É possível especificar <see langword="SingleRow" /> ao executar consultas que devem retornar conjuntos de vários resultados.  Nesse caso, em que uma consulta SQL de conjunto de vários resultados e uma única linha são especificadas, o resultado retornado conterá apenas a primeira linha do primeiro conjunto de resultados. Os outros conjuntos de resultados da consulta não serão retornados.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">Especifica como uma cadeia de caracteres de comando é interpretada.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">O nome de um procedimento armazenado.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">O nome de uma tabela.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">Um comando de texto SQL. (Padrão.)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">Indica a posição do nome do catálogo num nome de tabela qualificado num comando de texto.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">Indica que a posição do nome do catálogo ocorre após a parte do esquema de um nome de tabela totalmente qualificado em um comando de texto. <c>End</c> e <c>Start</c> são mutuamente exclusivos.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">Indica que a posição do nome do catálogo ocorre antes da parte do esquema de um nome de tabela totalmente qualificado em um comando de texto. <c>Start</c> e <c>End</c> são mutuamente exclusivos.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">Representa um conjunto de comandos SQL e uma conexão de banco de dados que são usados para preencher o <see cref="T:System.Data.DataSet" /> e atualizar a fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataAdapter" /> de um objeto existente do mesmo tipo.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Um objeto <see cref="T:System.Data.Common.DataAdapter" /> usado para criar o novo <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Obtém ou define um valor que indica se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado em um <see cref="T:System.Data.DataRow" /> após ter sido adicionado ao <see cref="T:System.Data.DataTable" /> durante alguma das operações de Preenchimento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> for chamado no <see cref="T:System.Data.DataRow" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtém ou define se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado durante um <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> é chamado durante um <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Cria uma cópia dessa instância do <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">A instância clonada de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">Obtém ou define um valor que especifica se uma exceção deve ser gerada quando for encontrado um erro durante uma atualização de linha.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para continuar a atualização sem gerar uma exceção; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">Cria um novo <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="A new table mapping collection.">Uma nova coleção de mapeamento de tabela.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DataAdapter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para correspondência na fonte de dados.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">Um <see cref="T:System.Data.DataSet" /> para preencher com registros.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">Uma cadeia de caracteres que indica o nome da tabela de origem.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">O índice baseado em zero do registro inicial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Um inteiro que indica o número máximo de registros.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Adiciona ou atualiza linhas no <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataTable" /> e o <see cref="T:System.Data.IDataReader" /> especificado.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">Um <see cref="T:System.Data.DataTable" /> para preencher com registros.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">Adiciona ou atualiza as linhas em um intervalo especificado na coleção de objetos <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">Uma coleção de objetos <see cref="T:System.Data.DataTable" /> a serem preenchidos com registros.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Uma instância de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">O índice baseado em zero do registro inicial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Um inteiro que indica o número máximo de registros.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">É retornado quando ocorre um erro durante uma operação de preenchimento.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.LoadOption" /> que determina como o adaptador preenche o <see cref="T:System.Data.DataTable" /> do <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">Um valor <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> a ser preenchido do <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.IDataReader" /> a ser usado como a fonte de dados durante o preenchimento de <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> a ser preenchido do <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.IDataReader" /> a ser usado como a fonte de dados durante o preenchimento de <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">Indica se um <see cref="T:System.Data.Common.DataTableMappingCollection" /> foi criado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um <see cref="T:System.Data.Common.DataTableMappingCollection" /> tiver sido criado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">Determina a ação a ser tomada quando os dados de entrada não têm uma tabela ou coluna correspondente.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />. O padrão é <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">O valor definido não é um dos valores <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />. O padrão é <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">O valor definido não é um dos valores <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">Chamado quando ocorre um erro durante um <see langword="Fill" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">Um objeto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">Redefine <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> para seu estado padrão e faz com que <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> honre <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">Obtém ou define se o método <see langword="Fill" /> deve retornar valores específicos ao provedor ou valores comuns em conformidade com CLS.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">
        <see langword="true" /> se o método <see langword="Fill" /> precisar retornar valores específicos ao provedor; caso contrário, <see langword="false" /> para retornar valores comuns em conformidade com CLS.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">Determina se a propriedade <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> deve ser persistida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> for persistida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">Determina se a propriedade <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> deve ser persistida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> for persistida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">Determina se um ou mais objetos <see cref="T:System.Data.Common.DataTableMapping" /> existem e se devem ser persistidos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se existirem um ou mais objetos <see cref="T:System.Data.Common.DataTableMapping" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indica como uma tabela de origem é mapeada para uma tabela de conjunto de dados.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém uma coleção que fornece o mapeamento mestre entre uma tabela de origem e um <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">Chama as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado em um <see cref="T:System.Data.DataTable" /> denominado “Tabela.”</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">Contém um mapeamento de coluna genérico para um objeto que herda de <see cref="T:System.Data.Common.DataAdapter" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado e o nome de coluna <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">O nome da coluna, que não diferencia maiúsculas de minúsculas, de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtém ou define o nome da coluna dentro de <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">O nome da coluna dentro do para <see cref="T:System.Data.DataSet" /> o qual mapear. O nome não diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">Obtém um <see cref="T:System.Data.DataColumn" /> do <see cref="T:System.Data.DataTable" /> especificado usando <see cref="T:System.Data.MissingSchemaAction" /> e a propriedade <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">O <see cref="T:System.Data.DataTable" /> do qual obter a coluna.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">O <see cref="T:System.Type" /> da coluna de dados.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data column.">Uma coluna de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Uma versão estática do <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> que pode ser chamado sem instanciar um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">O nome da coluna, que não diferencia maiúsculas de minúsculas, de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Uma instância de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">O tipo de dados da coluna que está sendo mapeada.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtém ou define o nome da coluna na fonte de dados da qual mapear. O nome diferencia maiúsculas de minúsculas.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">O nome que diferencia maiúsculas de minúsculas da coluna na fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns vsli:raw="A copy of the current object.">Uma cópia do objeto atual.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">Converte o nome <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> atual para uma cadeia de caracteres.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">O nome <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> atual como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Contém uma coleção de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> .</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Cria um <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vazio.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">Adiciona um objeto de <see cref="T:System.Data.Common.DataColumnMapping" /> à coleção.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">Um objeto <see langword="DataColumnMapping" /> a ser adicionado à coleção.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">O índice do objeto <see langword="DataColumnMapping" /> que foi adicionado à coleção.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Adiciona um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> à coleção quando é atribuído um nome de coluna de origem e um nome da coluna <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">O nome que diferencia maiúsculas de minúsculas da coluna de origem para a qual mapear.</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> para a qual mapear.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">O objeto <see langword="DataColumnMapping" /> que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copia os elementos da <see cref="T:System.Array" /> especificada para o fim da coleção.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">O <see cref="T:System.Array" /> a adicionar à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada para o fim da coleção.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">A matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">Remove todos os objetos <see cref="T:System.Data.Common.DataColumnMapping" /> da coleção.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o <see cref="T:System.Object" /> especificado existe na coleção.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver o objeto <see cref="T:System.Data.Common.DataColumnMapping" />, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com nome de coluna de origem especificado existe na coleção.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O nome da coluna de origem que diferencia maiúsculas de minúsculas do objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">Copia os elementos da <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para a matriz especificada.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Um <see cref="T:System.Array" /> para o qual copiar elementos <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">O índice inicial da matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">Copia os elementos da <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para a matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Uma matriz <see cref="T:System.Data.Common.DataColumnMapping" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice de base zero na <paramref name="array" /> em que a cópia começa.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">Obtém o número de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de itens na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtém o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtém um <see cref="T:System.Data.Common.DataColumnMapping" /> especificado <see cref="T:System.Data.Common.DataColumnMappingCollection" />, nome da coluna de origem e <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">O <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">O nome da coluna de origem que diferencia maiúsculas de minúsculas a ser localizado.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">Um método estático que retorna um objeto <see cref="T:System.Data.DataColumn" /> sem instanciar um objeto <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">O <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">O nome da coluna que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">O tipo de dados da coluna que está sendo mapeada.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Uma instância de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina a ação a ser tomada quando o esquema <see cref="T:System.Data.DataSet" /> existente não coincide com os dados de entrada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtém um enumerador que pode iterar por meio da coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Obtém o local do <see cref="T:System.Object" /> especificado que é um <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" /> a ser localizado.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">O local com base em zero do <see cref="T:System.Object" /> especificado que é um <see cref="T:System.Data.Common.DataColumnMapping" /> na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">Obtém o local do <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">O local com base em zero do <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado que diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtém o local do <see cref="T:System.Data.Common.DataColumnMapping" /> especificado com o nome de coluna <see cref="T:System.Data.DataSet" /> determinado.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">O nome, que não diferencia maiúsculas de minúsculas, da coluna do conjunto de dados a ser localizada.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">O local com base em zero do <see cref="T:System.Data.Common.DataColumnMapping" /> especificado com o nome de coluna <see langword="DataSet" /> especificado ou -1 se o objeto <see langword="DataColumnMapping" /> não existir na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Insere um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no <see cref="T:System.Data.Common.DataColumnMappingCollection" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser inserido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Insere um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no <see cref="T:System.Data.Common.DataColumnMappingCollection" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser inserido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Obtém ou define o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser localizado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtém ou define o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">O <see cref="T:System.Data.Common.DataColumnMapping" /> objeto com o nome de coluna de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Remove o <see cref="T:System.Data.Common.DataColumnMapping" /> especificado da coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">O <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Remove o <see cref="T:System.Object" /> que é um <see cref="T:System.Data.Common.DataColumnMapping" /> da coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">O <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">O objeto especificado não era um objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">O objeto especificado não está na coleção.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">O índice de base zero do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">Não há nenhum objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado da coleção.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">O nome da coluna de origem que diferencia maiúsculas de minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Não há nenhum objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtém um valor que indica se o acesso ao <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtém ou define o elemento no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns vsli:raw="The element at the specified index.">O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Adiciona um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> ao <see cref="T:System.Data.Common.DataColumnMappingCollection" /> usando a coluna de origem e os nomes de coluna <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">O nome da coluna <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">O objeto ColumnMapping que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtém o objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tem o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">O nome, que não diferencia maiúsculas de minúsculas, de uma coluna <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">O objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tem o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtém ou define o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see langword="SourceColumn" /> especificado.</summary>
      <param name="index" vsli:raw="Index of the element.">Índice do elemento.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">O <see langword="IColumnMapping" /> objeto com o nome <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contém uma descrição de uma relação mapeada entre uma tabela de origem e um <see cref="T:System.Data.DataTable" />. Esta classe é usada por um <see cref="T:System.Data.Common.DataAdapter" /> ao preencher um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" /> com uma fonte quando recebe um nome <see cref="T:System.Data.DataTable" /> e um nome de tabela de origem.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMapping" /> quando recebe um nome de tabela de origem, um nome <see cref="T:System.Data.DataTable" /> e uma matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Uma coleção de mapeamento da coluna de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define o nome da tabela de um <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O nome da tabela de <see cref="T:System.Data.DataSet" />a.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém um <see cref="T:System.Data.DataColumn" /> do <see cref="T:System.Data.DataTable" /> especificado usando o valor <see cref="T:System.Data.MissingMappingAction" /> e o nome do <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O nome do <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A data column.">Uma coluna de dados.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">Retorna um objeto <see cref="T:System.Data.DataColumn" /> para um nome de coluna especificado.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O nome do <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">O tipo de dados para <paramref name="sourceColumn" />.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">O nome da tabela de um <see cref="T:System.Data.DataSet" /> para o qual mapear.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">Obtém o <see cref="T:System.Data.DataTable" /> atual para o <see cref="T:System.Data.DataSet" /> especificado usando o valor <see cref="T:System.Data.MissingSchemaAction" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataSet" /> do qual o <see cref="T:System.Data.DataTable" /> deve ser obtido.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data table.">Uma tabela de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">Obtém ou define o nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">O nome da tabela de origem que diferencia maiúsculas e minúsculas de uma fonte de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Uma coleção de mapeamento da coluna de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">Um novo objeto que é uma cópia da instância atual.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">Converte o nome <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> atual para uma cadeia de caracteres.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">O nome <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> atual como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">Uma coleção de objetos <see cref="T:System.Data.Common.DataTableMapping" /> . Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DataTableMappingCollection" />. Essa nova instância está vazia, ou seja, ela ainda não contém nenhum objeto <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">Adiciona um <see cref="T:System.Object" /> que é um mapeamento de tabela para a coleção.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">Um objeto <see langword="DataTableMapping" /> a ser adicionado à coleção.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">O índice do objeto <see langword="DataTableMapping" /> adicionado à coleção.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">O objeto transmitido não era um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Adiciona um objeto <see cref="T:System.Data.Common.DataTableMapping" /> à coleção quando é atribuído um nome de tabela de origem e um nome de tabela <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">O nome que diferencia maiúsculas e minúsculas da tabela de origem do qual mapear.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see cref="T:System.Data.DataSet" /> para a qual mapear.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copia os elementos da <see cref="T:System.Array" /> especificada para o fim da coleção.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">Um <see cref="T:System.Array" /> de valores a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.Common.DataTableMapping" /> especificada para o fim da coleção.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">A matriz de objetos <see cref="T:System.Data.Common.DataTableMapping" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">Remove todos os objetos <see cref="T:System.Data.Common.DataTableMapping" /> da coleção.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado existe na coleção.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">Um <see cref="T:System.Object" /> que é o <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se essa coleção contiver o <see cref="T:System.Data.Common.DataTableMapping" /> especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado existe na coleção.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">O nome da tabela de origem que diferencia maiúsculas e minúsculas contendo o objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver um objeto <see cref="T:System.Data.Common.DataTableMapping" /> com esse nome de tabela de origem, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">Copia os elementos da <see cref="T:System.Data.Common.DataTableMappingCollection" /> para a matriz especificada.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Uma <see cref="T:System.Array" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">O índice inicial da matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">Copia os elementos da <see cref="T:System.Data.Common.DataTableMapping" /> para a matriz especificada.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Uma <see cref="T:System.Data.Common.DataTableMapping" /> para a qual copiar os elementos <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">O índice inicial da matriz.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">Obtém o número de objetos <see cref="T:System.Data.Common.DataTableMapping" /> na coleção.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">O número de <see langword="DataTableMapping" /> objetos na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtém o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see cref="T:System.Data.DataSet" /> a ser localizada.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtém um enumerador que pode iterar por meio da coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtém um <see cref="T:System.Data.Common.DataColumnMapping" /> objeto com o nome da tabela de origem e o nome da tabela <see cref="T:System.Data.DataSet" /> especificados, usando o <see cref="T:System.Data.MissingMappingAction" /> determinado.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">A coleção <see cref="T:System.Data.Common.DataTableMappingCollection" /> a ser pesquisada.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem mapeada.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">O nome, que não diferencia maiúsculas de minúsculas, da tabela <see cref="T:System.Data.DataSet" /> mapeada.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">O parâmetro <paramref name="mappingAction" /> foi definido como <see langword="Error" /> e nenhum mapeamento foi especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado na coleção.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">Um <see cref="T:System.Object" /> que é o objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser localizado.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtém o local do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">O nome, que não diferencia maiúsculas de minúsculas, de uma tabela <see langword="DataSet" /> a ser localizada.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">O local com base em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado ou -1 se o objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existir na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Insere um objeto <see cref="T:System.Data.Common.DataTableMapping" /> no <see cref="T:System.Data.Common.DataTableMappingCollection" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Insere um objeto <see cref="T:System.Data.Common.DataTableMapping" /> no <see cref="T:System.Data.Common.DataTableMappingCollection" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser inserido.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Obtém ou define o objeto <see cref="T:System.Data.Common.DataTableMapping" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">O índice baseado em zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser retornado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtém ou define o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">O <see cref="T:System.Data.Common.DataTableMapping" /> objeto com o nome de tabela de origem especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado da coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado da coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">O objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">O objeto especificado não era um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">O objeto especificado não está na coleção.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> localizado no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">O índice de base zero do objeto <see cref="T:System.Data.Common.DataTableMapping" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">Um objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existe com o índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">Remove o objeto <see cref="T:System.Data.Common.DataTableMapping" /> com o nome da tabela de origem especificado da coleção.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">O nome da tabela de origem que diferencia maiúsculas de minúsculas a ser localizado.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">Um objeto <see cref="T:System.Data.Common.DataTableMapping" /> não existe com o nome da tabela de origem especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">Obtém ou define um item da coleção em um índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">O índice com base em zero do item a ser obtido ou definido.</param>
      <returns vsli:raw="The element at the specified index.">O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Adiciona um mapeamento de tabela à coleção.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">O nome da tabela <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Uma referência ao objeto <see cref="T:System.Data.ITableMapping" /> recém-mapeado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtém o objeto TableMapping com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">O nome da tabela <see langword="DataSet" /> dentro da coleção.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">O objeto TableMapping com o nome de tabela <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtém ou define a instância de <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">O nome <see langword="SourceTable" /> do <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">A instância do <see cref="T:System.Data.ITableMapping" /> com o nome <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">Representa uma coluna dentro de uma fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se os valores <see langword="DBNull" /> são permitidos nessa coluna ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se os valores <see langword="DBNull" /> são permitidos nessa coluna ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituídos em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se os valores <see langword="DBNull" /> forem permitidos nessa coluna; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome do catálogo associado à fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do catálogo ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome do catálogo associado à fonte de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome da coluna base; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome da coluna base; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor está definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome do esquema associado à fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do esquema ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome do esquema associado à fonte de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome do servidor associado à coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do servidor ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome do servidor associado à coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome da tabela no esquema; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome da tabela ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome da tabela no esquema; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">Obtém o nome da coluna. Pode ser definido como o nome da coluna quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The name of the column.">O nome da coluna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém a posição da coluna (ordinal) na linha de fonte de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar a posição da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Um valor <see langword="int32" /> para ordinal da coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o tamanho da coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar o tamanho da coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Um <see langword="int32" /> valor para o tamanho da coluna; caso contrário, uma<see langword="Nothing" /> referência nula (em Visual Basic) se nenhum valor for definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">Obtém o tipo de dados armazenados na coluna. Pode ser definido como um objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">Um objeto <see cref="T:System.Type" /> que representa o tipo de dados que a coluna contém.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome do tipo de dados; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome do tipo de dados ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome do tipo de dados; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna tem um alias ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna tem um alias ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna tiver um alias; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se os valores nesta coluna são automaticamente incrementados ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se os valores nessa coluna são automaticamente incrementados ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituídos em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se os valores nessa coluna forem automaticamente incrementados; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna é uma expressão ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma expressão ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna for uma expressão; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna está oculta ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna está oculta ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna estiver oculta; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna é uma identidade ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma identidade ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna for uma identidade; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna é uma chave ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é uma chave ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna for uma chave; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna contém dados Long ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna contém dados Long ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna contiver dados Long; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se essa coluna é somente leitura ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se essa coluna é somente leitura, ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se essa coluna for somente leitura; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtém um valor booliano anulável que indica se uma restrição única se aplica a essa coluna ou retorna <see langword="null" /> se nenhum valor está definido. Pode ser definido como <see langword="true" /> ou <see langword="false" /> que indica se uma restrição única se aplica a essa coluna ou <see langword="null" /> (<see langword="Nothing" /> em Visual Basic) quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retornará <see langword="true" /> se uma restrição única se aplicar a essa coluna; caso contrário, <see langword="false" />. Se nenhum valor estiver definido, retornará uma referência nula (<see langword="Nothing" /> em Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">Obtém o objeto baseado no nome de propriedade da coluna.</summary>
      <param name="property" vsli:raw="The column property name.">O nome de propriedade de coluna.</param>
      <returns vsli:raw="The object based on the column property name.">O objeto baseado no nome de propriedade da coluna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém a precisão numérica dos dados de coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como um valor <see langword="int32" /> para especificar a precisão numérica dos dados de coluna ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Um <see langword="int32" /> valor que especifica a precisão dos dados da coluna, se os dados forem numéricos; caso contrário, uma referência<see langword="Nothing" /> nula (em Visual Basic) se nenhum valor for definido.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">Obtém um valor <see langword="int32" /> nulo que retorna <see langword="null" /> ou a escala numérica dos dados da coluna. Pode ser definido como <see langword="null" /> ou um valor <see langword="int32" /> para a escala numérica dos dados da coluna quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">Uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido; caso contrário, um valor <see langword="int32" /> que especificará a escala dos dados da coluna, se os dados forem numéricos.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtém o nome qualificado pelo assembly do objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna; caso contrário, <see langword="null" />, se nenhum valor está definido. Pode ser definido como o nome qualificado pelo assembly ou <see langword="null" /> quando substituído em uma classe derivada.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">O nome qualificado pelo assembly do objeto <see cref="T:System.Type" /> que representa o tipo de dados na coluna; caso contrário, uma referência nula (<see langword="Nothing" /> em Visual Basic) se nenhum valor estiver definido.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">Representa uma instrução SQL ou procedimento armazenado a executar contra uma fonte de dados. Fornece uma classe base para classes específicas de banco de dados que representam comandos. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Cria uma instância do objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Quando substituído em uma classe derivada, tenta cancelar a execução de um <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Quando substituído em uma classe derivada, obtém ou define o comando de texto para ser executado na fonte de dados.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">O comando de texto a ser executado. O valor padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">Quando substituído em uma classe derivada, obtém ou define o tempo de espera (em segundos) antes do término da tentativa de execução de um comando e da geração de um erro.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">O tempo de espera, em segundos, para a execução do comando.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">Quando substituído em uma classe derivada, obtém ou define como a propriedade <see cref="P:System.Data.Common.DbCommand.CommandText" /> é interpretada.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Um dos valores de enumeração que especifica como uma cadeia de caracteres de comando é interpretada. O padrão é <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.Common.DbConnection" /> usado pelo <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Quando substituído em uma classe derivada, cria uma nova instância de um objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Cria uma nova instância de um objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Quando substituído em uma classe derivada, obtém ou define o <see cref="T:System.Data.Common.DbConnection" /> usado por este <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">A conexão com a fonte de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">Quando substituído em uma classe derivada, obtém a coleção de objetos <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Quando substituído em uma classe derivada, obtém ou define o <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dentro do qual este objeto <see cref="T:System.Data.Common.DbCommand" /> é executado.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">A transação na qual um objeto de comando de um provedor de dados .NET é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">Quando substituído em uma classe derivada, obtém ou define um valor indicando se o objeto de comando deve estar visível em um controle de interface personalizado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, se o objeto de comando deve estar visível em um controle; caso contrário <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">Descarta de forma assíncrona o objeto de comando.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Quando substituído em uma classe derivada, executa o texto de comando em relação à conexão.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Uma instância de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Uma tarefa que representa a operação.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">Os provedores devem implementar esse método para fornecer uma implementação não padrão para sobrecargas <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento. Exceções geradas por ExecuteReader serão comunicadas por meio da propriedade Exceção de Tarefa retornada.
Esse método aceita um token de cancelamento que pode ser usado para solicitar a operação a ser cancelada no início. As implementações podem ignorar essa solicitação.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Opções de recuperação de dados e execução de instrução.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">Quando substituído em uma classe derivada, executa uma instrução SQL em um objeto de conexão.</summary>
      <returns vsli:raw="The number of rows affected.">O número de linhas afetadas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Uma versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, que executa uma instrução SQL em um objeto de conexão.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser ignorado.
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento.  Exceções geradas por <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> serão comunicadas por meio da propriedade Exceção de Tarefa retornada.
Não invoque outros métodos e propriedades do objeto <see langword="DbCommand" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> no <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> para o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Uma versão assíncrona de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que executa o <see cref="P:System.Data.Common.DbCommand.CommandText" /> contra o <see cref="P:System.Data.Common.DbCommand.Connection" /> e retorna um <see cref="T:System.Data.Common.DbDataReader" />. Esse método propaga a notificação de que as operações devem ser canceladas.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">Quando substituído em uma classe derivada, executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Todas as outras colunas e linhas são ignoradas.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">A primeira coluna da primeira linha no conjunto de resultados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Uma versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, que executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Todas as outras colunas e linhas são ignoradas.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser ignorado.
A implementação padrão invoca o método <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada. A implementação padrão retornará uma tarefa cancelada se já tiver passado um token de cancelamento. Exceções geradas por ExecuteScalar serão comunicadas por meio da propriedade Exceção de Tarefa retornada.
Não invoque outros métodos e propriedades do objeto <see langword="DbCommand" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Obtém a coleção de objetos <see cref="T:System.Data.Common.DbParameter" />. Para obter mais informações sobre parâmetros, consulte Configurando parâmetros e tipos de dados de parâmetro.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Quando substituído em uma classe derivada, cria uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">Cria de maneira assíncrona uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.IDbConnection" /> usado por essa instância do <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Cria uma nova instância de um objeto <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Um objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> para o <see cref="P:System.Data.IDbCommand.Connection" /> e cria um <see cref="T:System.Data.IDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Um dos valores de enumeração que especifica o comportamento do comando.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtém o <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtém ou define o <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> em que este objeto <see cref="T:System.Data.Common.DbCommand" /> é executado.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">A transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtém ou define o <see cref="T:System.Data.Common.DbTransaction" /> em que este objeto <see cref="T:System.Data.Common.DbCommand" /> é executado.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">A transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado. O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Quando substituído em uma classe derivada, obtém ou define como os resultados do comando são aplicados ao <see cref="T:System.Data.DataRow" /> quando usado pelo método de atualização de um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Um dos valores de enumeração que indica como os resultados do comando são aplicados. O padrão é <see langword="Both" />, a menos que o comando seja gerado automaticamente. Nesse caso, o padrão é <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">Gera automaticamente os comandos de tabela única usados para reconciliar as alterações feitas em um <see cref="T:System.Data.DataSet" /> com o banco de dados associado. Isso é uma classe abstrata que só pode ser herdada.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Inicializa uma nova instância de uma classe que herda da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">Permite a implementação de provedor da classe <see cref="T:System.Data.Common.DbCommandBuilder" /> para manipular propriedades de parâmetro adicionais.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">Um <see cref="T:System.Data.Common.DbParameter" /> ao qual as modificações adicionais são aplicadas.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> da tabela de esquema fornecida por <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">O tipo de comando que está sendo gerado, INSERT, UPDATE ou DELETE.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">
        <see langword="true" /> se o parâmetro fizer parte da cláusula WHERE de atualização ou exclusão, <see langword="false" /> se for parte dos valores de atualização ou inserção.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtém ou define o <see cref="T:System.Data.Common.CatalogLocation" /> para uma instância da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtém ou define uma cadeia de caracteres usada como o separador de catálogo para uma instância da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Uma cadeia de caracteres que indica o separador de catálogo para uso com uma instância da classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Especifica qual <see cref="T:System.Data.ConflictOption" /> deve ser usado pelo <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Retorna um dos <see cref="T:System.Data.ConflictOption" /> valores que descrevem o comportamento dessa <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Obtém ou define um objeto <see cref="T:System.Data.Common.DbDataAdapter" /> para o qual as instruções do Transact-SQL são geradas automaticamente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar exclusões na fonte de dados.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar exclusões.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar exclusões na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar exclusões.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar inserções na fonte de dados.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar inserções.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar inserções na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar inserções.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">Retorna o nome do parâmetro especificado no formato de <c>@p#</c>. Use quando estiver criando um construtor de comando personalizado.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">O número a ser incluído como parte do nome do parâmetro.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">O nome do parâmetro com o número especificado anexado como parte do nome do parâmetro.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">Retorna o nome completo do parâmetro, considerando o nome parcial do parâmetro.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">O nome parcial do parâmetro.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">O nome completo do parâmetro correspondente ao nome parcial do parâmetro solicitado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">Retorna o espaço reservado para o parâmetro na instrução SQL associada.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">O número a ser incluído como parte do nome do parâmetro.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">O nome do parâmetro com o número especificado anexado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Retorna a tabela de esquema para o <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">O <see cref="T:System.Data.Common.DbCommand" /> para o qual recuperar a tabela de esquema correspondente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Um <see cref="T:System.Data.DataTable" /> que representa o esquema para o <see cref="T:System.Data.Common.DbCommand" /> específico.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar atualizações na fonte de dados.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar atualizações.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">Obtém o objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para realizar atualizações na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Se <see langword="true" />, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível. Se <see langword="false" />, gerar <c>@p1</c>, <c>@p2</c> e assim por diante.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">O objeto <see cref="T:System.Data.Common.DbCommand" /> gerado automaticamente necessário para executar atualizações.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Redefine as propriedades <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> e <see cref="T:System.Data.UpdateRowSource" /> no <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">O <see cref="T:System.Data.Common.DbCommand" /> a ser usado pelo construtor de comando para o comando de inserção, atualização ou exclusão correspondente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Uma instância <see cref="T:System.Data.Common.DbCommand" /> a ser usada para cada operação de inserção, atualização ou exclusão. Passar um valor nulo permite que o método <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> crie um objeto <see cref="T:System.Data.Common.DbCommand" /> com base no comando Select associado ao <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">Dado um identificador sem aspas no caso de catálogo correto, retorna a forma entre aspas correta desse identificador, incluindo o escape apropriado de quaisquer aspas inseridas no identificador.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">O identificador original sem aspas.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">A versão entre aspas do identificador. As aspas inseridas no identificador são escapadas adequadamente.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtém ou define o caractere ou caracteres iniciais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">O caractere ou os caracteres iniciais a serem usados. O padrão é uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">Essa propriedade não pode ser alterada após um comando de inserção, atualização ou exclusão ter sido gerado.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtém ou define o caractere ou caracteres finais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">O caractere final ou os caracteres a serem usados. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Limpa os comandos associados a este <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">Adiciona um manipulador de eventos para o evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">Uma instância de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contém informações sobre o evento.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">Obtém ou define o caractere a ser usado para o separador entre o identificador do esquema e de quaisquer outros identificadores.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">O caractere a ser usado como o separador de esquema.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">Especifica se todos os valores de coluna em uma declaração de atualização são incluídos ou apenas aqueles alterados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see langword="true" /> se a declaração de atualização gerada pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> incluir todas as colunas; <see langword="false" /> se ela incluir apenas as colunas alteradas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Registra o <see cref="T:System.Data.Common.DbCommandBuilder" /> para lidar com o evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> para um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">O <see cref="T:System.Data.Common.DbDataAdapter" /> a ser usado para a atualização.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">Dado um identificador entre aspas, retorna a forma sem aspas correta desse identificador, incluindo desfazer o escape adequado de quaisquer aspas inseridas no identificador.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">O identificador que terá suas aspas inseridas removidas.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">O identificador sem aspas, com aspas inseridas corretamente sem escape.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">Define o comportamento básico das conexões de banco de dados e fornece uma classe base para conexões específicas do banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnection" /> .</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">Quando substituído em uma classe derivada, inicia uma transação de banco de dados.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns vsli:raw="An object representing the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">Inicia uma transação de banco de dados.</summary>
      <returns vsli:raw="An object representing the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">Inicia uma transação de banco de dados com o nível de isolamento especificado.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns vsli:raw="An object representing the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Inicia de maneira assíncrona uma transação de banco de dados.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> é um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">Quando substituído em uma classe derivada, troca o banco de dados atual por uma conexão aberta.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">O nome do banco de dados a ser usado pela conexão.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">Troca de forma assíncrona o banco de dados atual por uma conexão aberta.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">O nome do banco de dados a ser usado pela conexão.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">Quando substituído em uma classe derivada, fecha a conexão com o banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">Fecha de maneira assíncrona a conexão com o banco de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">Quando substituído em uma classe derivada, obtém ou define a cadeia de caracteres usada para abrir a conexão.</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">A cadeia de conexão usada para estabelecer a conexão inicial. O conteúdo exato da cadeia de conexão depende da fonte de dados específica para esta conexão. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">Obtém o tempo de espera (em segundos) durante o estabelecimento da conexão antes que a tentativa seja finalizada e um erro seja gerado.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">O tempo (em segundos) de espera para abrir uma conexão. O valor padrão é determinado pelo tipo específico de conexão que você está usando.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Quando substituído em uma classe derivada, cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">Quando substituído em uma classe derivada, obtém o nome do banco de dados atual depois que uma conexão for aberta ou o nome do banco de dados especificado na cadeia de conexão antes da conexão ser aberta.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">O nome do banco de dados atual ou daquele que será usado após uma conexão ser aberta. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">Quando substituído em uma classe derivada, obtém o nome do servidor de banco de dados ao qual se conectar.</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">O nome do servidor de banco de dados ao qual se conectar. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DbProviderFactory" /> para este <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">Um conjunto de métodos para criar instâncias de uma implementação de provedor das classes de fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">Descarta de forma assíncrona o objeto da conexão.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">Inscreve-se na transação especificada.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">Uma referência a um <see cref="T:System.Transactions.Transaction" /> existente no qual se inscrever.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Retorna informações de esquema para a fonte de dados deste <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">Retorna informações de esquema para a fonte de dados deste <see cref="T:System.Data.Common.DbConnection" /> usando a cadeia de caracteres especificada para o nome do esquema.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Especifica o nome do esquema a retornar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> é especificado como nulo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">Retorna informações de esquema para a fonte de dados desse <see cref="T:System.Data.Common.DbConnection" /> usando a cadeia de caracteres especificada para o nome do esquema e a matriz de cadeia de caracteres especificada para os valores de restrição.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Especifica o nome do esquema a retornar.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Especifica um conjunto de valores de restrição do esquema solicitado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> é especificado como nulo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.StateChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">Quando substituído em uma classe derivada, abre uma conexão de banco de dados com as configurações especificadas pelo <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Uma versão assíncrona de <see cref="M:System.Data.Common.DbConnection.Open" />, que abre uma conexão de banco de dados com as configurações especificadas pelo <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Esse método invoca o método virtual <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbConnection.Open" />. Provedores devem substituir com uma implementação apropriada. Opcionalmente, o token de cancelamento pode ser respeitado.
A implementação padrão invoca a chamada <see cref="M:System.Data.Common.DbConnection.Open" /> síncrona e retorna uma tarefa concluída. A implementação padrão retornará uma tarefa cancelada se já tiver passado um cancellationToken cancelado. Exceções geradas por Open serão comunicadas por meio da propriedade Exceção de Tarefa retornada.
Não invoque outros métodos e propriedades do objeto <see langword="DbConnection" /> até a Tarefa retornada ser concluída.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">A instrução de cancelamento.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">Quando substituído em uma classe derivada, obtém uma cadeia de caracteres que representa a versão do servidor ao qual o objeto está conectado.</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">A versão do banco de dados. O formato da cadeia de caracteres retornada depende do tipo específico de conexão que você está usando.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> foi chamado enquanto a tarefa retornada não foi concluída e a conexão não foi aberta após uma chamada para <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">Obtém uma cadeia de caracteres que descreve o estado da conexão.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">O estado da conexão. O formato da cadeia de caracteres retornada depende do tipo específico de conexão que você está usando.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">Ocorre quando o estado do evento é alterado.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Inicia uma transação de banco de dados.</summary>
      <returns vsli:raw="An object that represents the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">Inicia uma transação de banco de dados com o nível de isolamento especificado.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Um dos valores de enumeração que especifica o nível de isolamento a ser usado pela transação.</param>
      <returns vsli:raw="An object that represents the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">Cria e retorna um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">Um objeto <see cref="T:System.Data.Common.DbCommand" /> associado à conexão.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">Fornece uma classe base para construtores de cadeia de conexão fortemente tipados.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, opcionalmente usando regras ODBC para delimitar valores.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> para usar {} para delimitar campos, <see langword="false" /> usar aspas.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Adiciona uma entrada com a chave e o valor especificados ao <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">A chave a adicionar à <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value" vsli:raw="The value for the specified key.">O valor para a chave especificada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.
-ou-
O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Fornece uma maneira eficiente e segura para acrescentar uma chave e um valor a um objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">O <see cref="T:System.Text.StringBuilder" /> ao qual adicionar o par chave-valor.</param>
      <param name="keyword" vsli:raw="The key to be added.">A chave a ser adicionada.</param>
      <param name="value" vsli:raw="The value for the supplied key.">O valor para a chave fornecida.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Fornece uma maneira eficiente e segura para acrescentar uma chave e um valor a um objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">O <see cref="T:System.Text.StringBuilder" /> ao qual adicionar o par chave-valor.</param>
      <param name="keyword" vsli:raw="The key to be added.">A chave a ser adicionada.</param>
      <param name="value" vsli:raw="The value for the supplied key.">O valor para a chave fornecida.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> para usar {} para delimitar campos, <see langword="false" /> usar aspas.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">Obtém ou define um valor que indica se a propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> é visível nos designers do Visual Studio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se a cadeia de conexão estiver visível nos designers; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Limpa o conteúdo da instância <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Limpa a coleção de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> no <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> associado.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtém ou define a cadeia de conexão associada a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">A cadeia de conexão atual, criada de pares chave-valor contidos dentro de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. O valor padrão é uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">Um argumento de cadeia de conexão inválido foi fornecido.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">Determina se a <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contém uma chave específica.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">A chave a ser localizada no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiver uma entrada com a chave, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Obtém o número atual de chaves contidas na propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">O número de chaves contidas na cadeia de conexão mantida pela instância de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">Compara as informações de conexão neste objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> com as informações de conexão no objeto fornecido.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> a ser comparado com esse objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as informações de conexão em ambos os objetos <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> causarem uma cadeia de conexão equivalente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Preenche um <see cref="T:System.Collections.Hashtable" /> fornecido com informações sobre todas as propriedades deste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">O <see cref="T:System.Collections.Hashtable" /> a ser preenchido com informações sobre esse <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Obtém um valor que indica se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiver um tamanho fixo; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Obtém um valor que indica se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Obtém ou define o valor associado à chave especificada.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">A chave do item a ser obtida ou definida.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">O valor associado à chave especificada. Se a chave especificada não for encontrada, a tentativa de obtê-la retornará uma referência nula (<see langword="Nothing" /> no Visual Basic) e a tentativa de defini-la criará um novo elemento usando a chave especificada.
Passar uma chave nula (<see langword="Nothing" /> no Visual Basic) gera um <see cref="T:System.ArgumentNullException" />. A atribuição de um valor nulo remove o par chave/valor.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">A propriedade está definida e o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura.
-ou-
A propriedade é definida, <paramref name="keyword" /> não existe na coleção e o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtém um <see cref="T:System.Collections.ICollection" /> que contém as chaves no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Um <see cref="T:System.Collections.ICollection" /> que contém as chaves no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Remove a entrada com a chave especificada da instância de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">A chave do par chave/valor a ser removido da cadeia de conexão neste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">
        <see langword="true" /> se a chave existia na cadeia de conexão e foi removida; <see langword="false" /> se a chave não existia.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> é nulo (<see langword="Nothing" /> no Visual Basic)</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">O <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> é somente leitura ou o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Indica se a chave especificada existe nessa instância <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">A chave a ser localizada no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiver uma entrada com a chave, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Adiciona um elemento com a chave e o valor fornecidos ao objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">O <see cref="T:System.Object" /> a ser usado como chave do elemento a ser adicionado.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">O <see cref="T:System.Object" /> a ser usado como valor do elemento a ser adicionado.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">Determina se o objeto <see cref="T:System.Collections.IDictionary" /> contém um elemento com a chave especificada.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">A chave a ser localizada no objeto <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> contiver um elemento com a chave; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Retorna um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Obtém ou define o elemento com a chave especificada.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">A chave do elemento a ser obtida ou adicionada.</param>
      <returns vsli:raw="The element with the specified key.">O elemento com a chave especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Remove o elemento com a chave especificada do objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">A chave do elemento a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retorna um enumerador que itera em uma coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">Um <see cref="T:System.ComponentModel.AttributeCollection" /> que contém os atributos para esse objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retorna o nome de classe desta instância de um componente.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">O nome de classe do objeto ou <see langword="null" /> se a classe não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retorna o nome desta instância de um componente.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">O nome do objeto ou <see langword="null" /> se o objeto não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Um <see cref="T:System.ComponentModel.TypeConverter" /> que é o conversor para esse objeto ou <see langword="null" />, se não houver nenhum <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retorna o evento padrão para esta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Um <see cref="T:System.ComponentModel.EventDescriptor" /> que representa o evento padrão para esse objeto ou <see langword="null" />, se este objeto não tiver eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade padrão para esse objeto ou <see langword="null" />, se este objeto não tiver propriedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retorna os eventos desta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Retorna os eventos desta instância de um componente usando a matriz de atributos especificada como um filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos filtrados da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retorna as propriedades desta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Retorna as propriedades desta instância de um componente usando a matriz de atributos como um filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades filtradas da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Retorna a cadeia de conexão associada a esse <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">A propriedade <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> atual.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Recupera um valor correspondente para a chave fornecida deste <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">A chave do item a ser recuperada.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">O valor correspondente ao <paramref name="keyword" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se <paramref name="keyword" /> foi encontrado na cadeia de conexão, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> contém um valor nulo (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">Ajuda na implementação da interface <see cref="T:System.Data.IDbDataAdapter" />. Os herdeiros de <see cref="T:System.Data.Common.DbDataAdapter" /> implementam um conjunto de funções para fornecer uma tipagem forte, mas herdam a maioria das funcionalidades necessárias para implementar um DataAdapter por completo.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">Inicializa uma nova instância de uma classe DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">Inicializa uma nova instância da classe <see langword="DataAdapter" /> de um objeto existente do mesmo tipo.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">Um objeto <see langword="DataAdapter" /> usado para criar o novo <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">Adiciona um <see cref="T:System.Data.IDbCommand" /> ao lote atual.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">O <see cref="T:System.Data.IDbCommand" /> a ser adicionado ao lote.</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">O número de comandos no lote antes de adicionar o <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">Remove todos os objetos <see cref="T:System.Data.IDbCommand" /> do lote.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">O <see cref="T:System.Data.DataRow" /> usado para atualizar a fonte de dados.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.IDbCommand" /> executado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Se o comando é uma instrução UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">O <see cref="T:System.Data.DataRow" /> que atualiza a fonte de dados.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Se o comando é uma instrução UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">O nome padrão usado pelo objeto <see cref="T:System.Data.Common.DataAdapter" /> para mapeamentos de tabela.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">Obtém ou define um comando para excluir registros do conjunto de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbDataAdapter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">Executa o lote atual.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">O valor retornado do último comando no lote.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">O número máximo de registros a serem obtidos.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">A tabela de origem é inválida.
-ou-
A conexão é inválida.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Não foi possível encontrar a conexão.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">O parâmetro <paramref name="startRecord" /> é menor que 0.
-ou-
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o <see cref="T:System.Data.DataSet" /> e nomes da tabela de origem, a cadeia de comando e o comportamento do comando.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">O número máximo de registros a serem obtidos.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">O parâmetro <paramref name="startRecord" /> é menor que 0.
-ou-
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para corresponder às existentes na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">O nome do <see cref="T:System.Data.DataTable" /> a ser usado para mapeamento de tabela.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">Adiciona ou atualiza linhas em um <see cref="T:System.Data.DataTable" /> para corresponder às existentes na fonte de dados usando o <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> e <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataTable" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Adiciona ou atualiza linhas em um intervalo especificado no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando os nomes <see cref="T:System.Data.DataSet" /> e <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Os objetos <see cref="T:System.Data.DataTable" /> a preencher da fonte de dados.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">O número máximo de registros a serem obtidos.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">O <see cref="T:System.Data.IDbCommand" /> executado para preencher os objetos <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">O número de linhas adicionadas ao ou atualizadas nas tabelas de dados.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">A tabela de origem é inválida.
-ou-
A conexão é inválida.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Não foi possível encontrar a conexão.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">O parâmetro <paramref name="startRecord" /> é menor que 0.
-ou-
O parâmetro <paramref name="maxRecords" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">Adiciona ou atualiza linhas em um <see cref="T:System.Data.DataTable" /> para corresponder àquelas na fonte de dados, começando pelo registro especificado e recuperando até o número máximo de registros.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">O número de registro baseado em zero pelo qual começar.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">O número máximo de registros a serem obtidos.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Os objetos <see cref="T:System.Data.DataTable" /> a preencher da fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataTable" />. Esse valor não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">Obtém ou define o comportamento do comando usado para preencher o adaptador de dados.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">O <see cref="T:System.Data.CommandBehavior" /> do comando usado para preencher o adaptador de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> com o nome “Tabela” ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder a eles na fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Um <see cref="T:System.Data.DataSet" /> para inserir o esquema.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Um do valores <see cref="T:System.Data.SchemaType" /> que especificam como inserir o esquema.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Uma matriz de objetos <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder à fonte de dados com base nos <see cref="T:System.Data.SchemaType" /> e <see cref="T:System.Data.DataTable" /> especificados.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Um <see cref="T:System.Data.DataSet" /> para inserir o esquema.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Um do valores <see cref="T:System.Data.SchemaType" /> que especificam como inserir o esquema.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Uma referência a uma coleção de objetos <see cref="T:System.Data.DataTable" /> que foram adicionados ao <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">Uma tabela de origem na qual não possível encontrar o esquema.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Configura o esquema do <see cref="T:System.Data.DataTable" /> especificado com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">O <see cref="T:System.Data.DataTable" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">Um <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Configura o esquema do <see cref="T:System.Data.DataTable" /> especificado com base no <see cref="T:System.Data.SchemaType" />, na cadeia de caracteres de comando e nos valores <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">O <see cref="T:System.Data.DataTable" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">A instrução SQL SELECT usada para recuperar linhas da fonte de dados.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Um objeto <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">Retorna um <see cref="T:System.Data.IDataParameter" /> de um dos comandos no lote atual.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">O índice do comando do qual recuperar o parâmetro.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">O índice do parâmetro no comando.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">O <see cref="T:System.Data.IDataParameter" /> especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">Retorna informações sobre uma tentativa de atualização individual dentro de uma atualização em lote maior.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">O ordinal da coluna com base em zero do comando individual dentro do lote.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">O número de linhas afetadas no repositório de dados pelo comando especificado no lote.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">Um <see cref="T:System.Exception" /> lançado durante a execução do comando especificado. Retornará <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção for lançada.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">Informações sobre uma tentativa de atualização individual dentro de uma atualização em lote maior.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Inicializa o envio em lote para o <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">Obtém ou define um comando usado para inserir novos registros na fonte de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados das novas linhas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Gera o evento <see langword="RowUpdated" /> de um provedor de dados .NET Framework.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">Gera o evento <see langword="RowUpdating" /> de um provedor de dados .NET Framework.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">Obtém ou define um comando usado para selecionar registros na fonte de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Um <see cref="T:System.Data.IDbCommand" /> que é usado durante o <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtém ou define uma instrução SQL para excluir registros do conjunto de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtém ou define uma instrução SQL usada para inserir novos registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados para novas linhas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtém ou define uma instrução SQL usada para selecionar registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Um <see cref="T:System.Data.IDbCommand" /> que é usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtém ou define uma instrução SQL usada para atualizar registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Um novo objeto que é uma cópia dessa instância.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Encerra o envio em lote para o <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">O adaptador não dá suporte a lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída na matriz especificada no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> usada para atualizar a fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída na matriz de objetos <see cref="T:System.Data.DataSet" /> especificada.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> usada para atualizar a fonte de dados.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">A coleção <see cref="P:System.Data.IDataAdapter.TableMappings" /> a ser usada.</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> com o nome <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">O <see cref="T:System.Data.DataSet" /> a ser usado para atualizar a fonte de dados.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">O nome da tabela de origem a ser usado para mapeamento de tabela.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Atualiza os valores no banco de dados executando as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">O <see cref="T:System.Data.DataTable" /> usado para atualizar a fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">O <see cref="T:System.Data.DataSet" /> é inválido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">A tabela de origem é inválida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Não há nenhum <see cref="T:System.Data.DataRow" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataTable" /> para atualização.
-ou-
Não há nenhum <see cref="T:System.Data.DataSet" /> para ser usado como uma fonte.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">Obtém ou define um valor que habilita ou desabilita o suporte ao processamento de lote e especifica o número de comandos que podem ser executadas em um lote.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">O número de linhas a serem processadas por lote.
  O valor é 
  Efeito 
  0 
  Não há nenhum limite para o tamanho do lote.  
  
  1 
  Desabilita a atualização em lote.  
  
  &gt; 1 
  As alterações são enviadas usando lotes de operações <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> de uma vez.  
  
   
Ao definir isso com um valor diferente de 1, todos os comandos associados à <see cref="T:System.Data.Common.DbDataAdapter" /> devem ter sua propriedade <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> definida como None ou OutputParameters. Caso contrário, uma exceção será gerada.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">Obtém ou define um comando usado para atualizar registros na fonte de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">Lê um fluxo de linhas apenas de encaminhamento a partir de uma fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbDataReader" /> .</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Fecha o objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Fecha de maneira assíncrona o objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtém um valor que indica a profundidade de aninhamento da linha atual.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">A profundidade de aninhamento da linha atual.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbDataReader" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libera de forma assíncrona todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">Quando substituído em uma classe derivada, obtém o número de colunas na linha atual.</summary>
      <returns vsli:raw="The number of columns in the current row.">O número de colunas da linha atual.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">Não há conexão atual com uma instância do SQL Server.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um booliano.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um byte.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Quando substituído em uma classe derivada, lê um número de bytes especificado da coluna especificada, começando em um índice especificado, e os grava em um buffer começando em uma posição especificada no buffer.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">O número máximo de caracteres a serem lidos.</param>
      <returns vsli:raw="The actual number of bytes read.">O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um caractere único.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Quando substituído em uma classe derivada, lê um número de caracteres especificado de uma coluna especificada, começando em um índice especificado, e os grava em um buffer começando em uma posição especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">O número máximo de caracteres a serem lidos.</param>
      <returns vsli:raw="The actual number of characters read.">O número real de caracteres lidos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Retorna um leitor de dados aninhado para a coluna solicitada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A data reader.">Um leitor de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">Quando substituído em uma classe derivada, obtém o nome do tipo de dados da coluna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The name of the data type.">O nome do tipo de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado que pode ser substituído por uma implementação específica do provedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">Quando substituído em uma classe derivada, retorna um enumerador que pode ser usado para iterar pelas linhas no leitor de dados.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">Um enumerador que pode ser usado para iterar pelas linhas do leitor de dados.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">Quando substituído em uma classe derivada, obtém o tipo de dados da coluna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The data type of the specified column.">O tipo dos dados da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtém o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">O tipo do valor a ser retornado.</typeparam>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados estava fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).
- ou -
O leitor tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">O tipo do valor a ser retornado.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados foi fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).
- ou -
Tentativa de ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">O tipo do valor a ser retornado.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados foi fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).
- ou -
Tentativa de ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">Quando substituído em uma classe derivada, obtém o nome da coluna, dado o ordinal da coluna baseado em zero.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The name of the specified column.">O nome da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">Quando substituído em uma classe derivada, obtém o ordinal da coluna dado o nome da coluna.</summary>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Obtém o tipo específico do provedor da coluna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A provider-specific .NET type.">Um tipo .NET específico do provedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtém o valor da coluna especificada como uma instância de um tipo específico do provedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">Obtém todas as colunas de atributo específicas do provedor na coleção para a linha atual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</param>
      <returns vsli:raw="The number of instances of elements in the array.">O número de instâncias de elementos na matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">O <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtém um fluxo para recuperar dados da coluna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A stream.">Um fluxo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">A coluna especificada não é um tipo binário que dá suporte à leitura com um <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtém um leitor de texto para recuperar dados da coluna.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A text reader.">Um leitor de texto.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">A coluna especificada não é um tipo de texto que dá suporte à leitura com um <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">Quando substituído em uma classe derivada, popula uma matriz de objetos com os valores da coluna da linha atual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">Quando substituído em uma classe derivada, obtém um valor que indica se este <see cref="T:System.Data.Common.DbDataReader" /> contém uma ou mais linhas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a <see cref="T:System.Data.Common.DbDataReader" /> contiver uma ou mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Quando substituído em uma classe derivada, obtém um valor que indica se o <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbDataReader" /> estiver fechado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">O <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">Quando substituído em uma classe derivada, obtém um valor que indica se a coluna tem valores ausentes ou inexistentes.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">A coluna com base em zero a ser recuperada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
Tentando ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">A coluna com base em zero a ser recuperada.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Um token para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
Tentando ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">O índice da coluna está fora do intervalo.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Nenhuma coluna com o nome especificado foi encontrada.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">Quando substituído em uma classe derivada, avança o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver mais conjuntos de resultados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Avança de maneira assíncrona o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Uma tarefa cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais conjuntos de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Avança de maneira assíncrona o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">A instrução de cancelamento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais conjuntos de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">Quando substituído em uma classe derivada, avança o leitor para o próximo registro em um conjunto de resultados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Avança de maneira assíncrona o leitor para o próximo registro em um conjunto de resultados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais linhas de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Avança de maneira assíncrona o leitor para o próximo registro em um conjunto de resultados.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">A instrução de cancelamento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se houver mais linhas de resultados ou <see langword="false" /> se não houver.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ocorreu um erro ao executar o texto do comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Quando substituído em uma classe derivada, obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">O número de linhas alteradas, inseridas ou excluídas. -1 para instruções SELECT; 0 se nenhuma linha foi afetada ou se a instrução falhou.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">Uma instância de <see cref="T:System.Data.IDataReader" /> a ser usada quando o campo aponta para dados mais dados estruturados remotos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">Obtém o número de campos em <see cref="T:System.Data.Common.DbDataReader" /> que não estão ocultos.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">O número de campos que não estão ocultos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Essa classe contém os métodos de extensão do esquema de colunas para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">Obtém um valor que indica se um <see cref="T:System.Data.Common.DbDataReader" /> pode obter um esquema de coluna.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">O <see cref="T:System.Data.Common.DbDataReader" /> a ser verificado para suporte de esquema de coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbDataReader" /> puder obter um esquema de coluna; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtém o esquema da coluna (coleção <see cref="T:System.Data.Common.DbColumn" />) para um <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">O <see cref="T:System.Data.Common.DbDataReader" /> para retornar o esquema de coluna.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">O esquema da coluna (coleção <see cref="T:System.Data.Common.DbColumn" />) para um <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">Implementa <see cref="T:System.Data.IDataRecord" /> e <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> e dá suporte para vinculação de dados para <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">Indica o número de campos no registro atual. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The number of fields within the current record.">O número de campos dentro do registro atual.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">Não conectado a uma fonte de dados da qual ler.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">Retorna o valor da coluna especificada como um booliano.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor booliano for <see langword="true" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">Retorna o valor da coluna especificada como um byte.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">Retorna o valor da coluna especificada como uma matriz bytes.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">O número de bytes a serem lidos.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">Retorna o valor da coluna especificada como um caractere.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Retorna o valor da coluna especificada como uma matriz de caracteres.</summary>
      <param name="i" vsli:raw="Column ordinal.">Ordinal da coluna.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">Buffer para o qual copiar dados.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">O tamanho máximo a ser copiado no buffer.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">Ponto no qual iniciar dentro do buffer.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">Ponto no qual iniciar dentro dos dados de origem.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">Não há suporte no momento.</summary>
      <param name="i" vsli:raw="Not currently supported.">Não há suporte no momento.</param>
      <returns vsli:raw="Not currently supported.">Não há suporte no momento.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">Retorna o nome do tipo de dados back-end.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The name of the back-end data type.">O nome do tipo de dados back-end.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Retorna o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado que pode ser substituído por uma implementação específica do provedor.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Retorna o valor da coluna especificada como um objeto <see cref="T:System.Decimal" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">Retorna o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Retorna o <see cref="T:System.Type" /> que é o tipo de dados do objeto.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">Retorna o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Retorna o valor de GUID do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to return.">O índice do campo a ser retornado.</param>
      <returns vsli:raw="The GUID value of the specified field.">O valor de GUID do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">Retorna o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">Retorna o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">Retorna o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">Retorna o nome da coluna especificada.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The name of the specified column.">O nome da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">Retorna o ordinal da coluna, de acordo com o nome da coluna.</summary>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The column ordinal.">O ordinal da coluna.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">Retorna o valor da coluna especificada como uma cadeia de caracteres.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">Retorna o valor na coluna especificada em seu formato nativo.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value to return.">O valor a ser retornado.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Popula uma matriz de objetos com os valores da coluna do registro atual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Uma matriz de <see cref="T:System.Object" /> na qual os campos de atributo serão copiados.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">Usado para indicar valores inexistentes.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">Indica o valor na coluna especificada em seu formato nativo de acordo com o ordinal da coluna. Esta propriedade é somente para leitura.</summary>
      <param name="i" vsli:raw="The column ordinal.">O ordinal da coluna.</param>
      <returns vsli:raw="The value at the specified column in its native format.">O valor na coluna especificada em seu formato nativo.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">Indica o valor na coluna especificada em seu formato nativo de acordo com o nome da coluna. Esta propriedade é somente para leitura.</summary>
      <param name="name" vsli:raw="The column name.">O nome da coluna.</param>
      <returns vsli:raw="The value at the specified column in its native format.">O valor na coluna especificada em seu formato nativo.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">Um <see cref="T:System.ComponentModel.AttributeCollection" /> que contém os atributos para esse objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retorna o nome de classe desta instância de um componente.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">O nome de classe do objeto ou <see langword="null" /> se a classe não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retorna o nome desta instância de um componente.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">O nome do objeto ou <see langword="null" /> se o objeto não tiver um nome.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Um <see cref="T:System.ComponentModel.TypeConverter" /> que é o conversor para esse objeto ou <see langword="null" />, se não houver nenhum <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retorna o evento padrão para esta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Um <see cref="T:System.ComponentModel.EventDescriptor" /> que representa o evento padrão para esse objeto ou <see langword="null" />, se este objeto não tiver eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade padrão para esse objeto ou <see langword="null" />, se este objeto não tiver propriedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retorna os eventos desta instância de um componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Retorna os eventos desta instância de um componente usando a matriz de atributos especificada como um filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Um <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa os eventos filtrados da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retorna as propriedades desta instância de um componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Retorna as propriedades desta instância de um componente usando a matriz de atributos como um filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades filtradas da instância deste componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">Fornece um mecanismo para enumerar todas as instâncias disponíveis de servidores de banco de dados na rede local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Cria uma nova instância da classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">Recupera um <see cref="T:System.Data.DataTable" /> que contém informações sobre todas as instâncias visíveis do servidor representadas pela instância fortemente tipada dessa classe.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">Uma <see cref="T:System.Data.DataTable" /> que contém informações sobre as instâncias visíveis da fonte de dados associada.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expõe o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> com o leitor de dados fornecido.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">O DataReader por meio do qual iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o leitor especificado e indica se deve fechar o leitor automaticamente após a iteração por meio de seus dados.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">O DataReader por meio do qual iterar.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para fechar automaticamente o DataReader após iterar por seus dados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">O <see langword="DataReader" /> por meio do qual iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado e indica se deve fechar o <see langword="DataReader" /> automaticamente após a iteração por meio de seus dados.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">O <see langword="DataReader" /> por meio do qual iterar.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para fechar automaticamente o <see langword="DataReader" /> após iterar por seus dados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtém o elemento atual na coleção.</summary>
      <returns vsli:raw="The current element in the collection.">O elemento atual na coleção.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">O enumerador é posicionado antes do primeiro elemento da coleção ou depois do último elemento.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Avança o enumerador para o próximo elemento da coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">A coleção foi modificada depois da criação do enumerador.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">A coleção foi modificada depois da criação do enumerador.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">A classe base para todas as exceções geradas em nome da fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com o contexto e as informações de serialização especificados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">A mensagem a ser exibida para essa exceção.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message string.">A cadeia de caracteres da mensagem de erro.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">A referência de exceção interna.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbException" /> com a mensagem de erro e o código de erro especificados.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">O código de erro da exceção.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">Fornece uma lista de constantes para o conhecido MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords e Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Uma constante para uso com o método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa a coleção Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">Fornece valores estáticos usados para nomes de coluna nos objetos MetaDataCollection contidos no <see cref="T:System.Data.DataTable" />. O <see cref="T:System.Data.DataTable" /> é criado pelo método GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna CollectionName na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna ColumnSize na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna CompositeIdentifierSeparatorPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna CreateFormat na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna CreateParameters na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna DataSourceProductName na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna DataSourceProductVersion na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna DataSourceProductVersionNormalized na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna DataType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna GroupByBehavior na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna IdentifierCase na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna IdentifierPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsAutoIncrementable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsBestMatch na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsCaseSensitive na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsConcurrencyType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsFixedLength na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsFixedPrecisionScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsLiteralSupported na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsLong na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsNullable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsSearchable na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsSearchableWithLike na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna IsUnsigned na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna LiteralPrefix na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna LiteralSuffix na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna MaximumScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna MinimumScale na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">Usado pelo método GetSchema para criar a coluna NumberOfIdentifierParts na coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">Usado pelo método GetSchema para criar a coluna NumberOfRestrictions na coleção MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna OrderByColumnsInSelect na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna ParameterMarkerFormat na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna ParameterMarkerPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna ParameterNameMaxLength na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna ParameterNamePattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna ProviderDbType na coleção DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna QuotedIdentifierCase na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna QuotedIdentifierPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">Usado pelo método GetSchema para criar a coluna ReservedWord na coleção ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna StatementSeparatorPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna StringLiteralPattern na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">Usado pelo método GetSchema para criar a coluna SupportedJoinOperators na coleção DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">Usado pelo método GetSchema para criar a coluna TypeName na coleção DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Representa um parâmetro para um <see cref="T:System.Data.Common.DbCommand" /> e, opcionalmente, o mapeamento para uma coluna <see cref="T:System.Data.DataSet" />. Para obter mais informações sobre parâmetros, consulte Configurando parâmetros e tipos de dados de parâmetro.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">A propriedade não está definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">Obtém ou define um valor que indica se o parâmetro aceita valores nulos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se valores nulos são aceitos; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Obtém ou define o nome de <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">O nome do <see cref="T:System.Data.Common.DbParameter" />. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Obtém ou define o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">O número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">Redefine a propriedade DbType às suas configurações originais.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Obtém ou define o número de casas decimais para as quais o <see cref="P:System.Data.Common.DbParameter.Value" /> é resolvido.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">O número de casas decimais para o qual o <see cref="P:System.Data.Common.DbParameter.Value" /> é resolvido.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">Obtém ou define o tamanho máximo, em bytes, dos dados da coluna.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é inferido do valor do parâmetro.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">O nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">Obtém ou define um valor que indica se a coluna de origem permite valor nulo. Isso permite que <see cref="T:System.Data.Common.DbCommandBuilder" /> gere corretamente instruções Update para colunas que permitem valor nulo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see langword="true" /> se a coluna de origem for nula; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> a ser usado ao carregar <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">A propriedade não é definida como um dos valores <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indica a precisão de parâmetros numéricos.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">O número máximo de dígitos usados para representar a propriedade <see langword="Value" /> de um objeto de <see langword="Parameter" /> de provedor de dados. O valor padrão é 0, que indica que um provedor de dados define a precisão para <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">O número de casas decimais para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido. O padrão é 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtém ou define o valor do parâmetro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Um <see cref="T:System.Object" /> que é o valor do parâmetro. O valor padrão é null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">A classe base para uma coleção de parâmetros relevantes a um <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Adiciona o objeto especificado <see cref="T:System.Data.Common.DbParameter" /> ao <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">O <see cref="P:System.Data.Common.DbParameter.Value" /> do <see cref="T:System.Data.Common.DbParameter" /> para adicionar à coleção.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Adiciona uma matriz de itens aos valores especificados para o <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Uma matriz de valores do tipo <see cref="T:System.Data.Common.DbParameter" /> a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Remove todos os valores <see cref="T:System.Data.Common.DbParameter" /> do <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">Indica se um <see cref="T:System.Data.Common.DbParameter" /> com o <see cref="P:System.Data.Common.DbParameter.Value" /> especificado está contido na coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">O <see cref="P:System.Data.Common.DbParameter.Value" /> do <see cref="T:System.Data.Common.DbParameter" /> a ser procurado na coleção.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbParameter" /> estiver na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">Indica se um <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado existe na coleção.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">O nome do <see cref="T:System.Data.Common.DbParameter" /> a ser procurado na coleção.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Common.DbParameter" /> estiver na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">Copia uma matriz de itens para a coleção começando no índice especificado.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">A matriz de itens a serem copiados para a coleção.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">O índice na coleção para copiar os itens.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">Especifica o número de itens na coleção.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de itens na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expõe o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Retorna o objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado na coleção.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">O índice do <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">O objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado na coleção.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Retorna o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">O nome do <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">O objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Retorna o índice do objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">O objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Retorna o índice do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">O índice do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">Insere o índice especificado do objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado na coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">O índice no qual inserir o objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">O objeto <see cref="T:System.Data.Common.DbParameter" /> a ser inserido na coleção.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">Especifica se a coleção tem um tamanho fixo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for um tamanho fixo; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">Especifica se a coleção é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for somente leitura; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">Especifica se a coleção é sincronizada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for sincronizada; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Obtém ou define o <see cref="T:System.Data.Common.DbParameter" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">O índice baseado em zero do parâmetro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">O <see cref="T:System.Data.Common.DbParameter" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">O índice especificado não existe.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Obtém ou define o <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">O nome do parâmetro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">O <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">O índice especificado não existe.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> especificado da coleção.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">O objeto <see cref="T:System.Data.Common.DbParameter" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> no especificado da coleção.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">O índice em que o <see cref="T:System.Data.Common.DbParameter" /> objeto está localizado.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">Remove o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado da coleção.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">Define o objeto <see cref="T:System.Data.Common.DbParameter" /> no índice especificado para um novo valor.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">O índice em que o <see cref="T:System.Data.Common.DbParameter" /> objeto está localizado.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">O novo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">Define o objeto <see cref="T:System.Data.Common.DbParameter" /> com o nome especificado para um novo valor.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">O nome do objeto <see cref="T:System.Data.Common.DbParameter" /> na coleção.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">O novo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">Especifica o <see cref="T:System.Object" /> a ser usado para sincronizar o acesso à coleção.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Um <see cref="T:System.Object" /> a ser usado para sincronizar o acesso ao <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtém ou define o elemento no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns vsli:raw="The element at the specified index.">O elemento no índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Obtém ou define o parâmetro no índice especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">O nome do parâmetro a ser recuperado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Um <see cref="T:System.Object" /> no índice especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">Representa um conjunto de métodos estáticos para criar uma ou mais instâncias de classes <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection" vsli:raw="The connection used.">A conexão usada.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para uma conexão especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">
        <see cref="T:System.Data.DataRow" /> que contém informações de configuração do provedor.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para um <see cref="T:System.Data.DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retorna uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">Nome invariável de um provedor.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">Uma instância de um <see cref="T:System.Data.Common.DbProviderFactory" /> para um nome de provedor especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTable" /> que contém informações sobre todos os provedores instalados que implementam <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Uma <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataRow" /> que contêm os dados a seguir:
  Ordinal de coluna 
  Nome da coluna 
  Descrição 
  0 
  **Name**  
  
  Nome legível do provedor de dados.  
  
  1 
  **Descrição**  
  
  Descrição legível do provedor de dados.  
  
  2 
  **InvariantName**  
  
  Nome que pode ser usado programaticamente para se referir ao provedor de dados.  
  
  3 
  **AssemblyQualifiedName**  
  
  Nome totalmente qualificado da classe de fábrica, que contém informações suficientes para criar uma instância do objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retorna os nomes de provedor invariáveis para todas as instâncias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Os nomes de provedor invariáveis para todas as instâncias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">Registra uma instância de <see cref="T:System.Data.Common.DbProviderFactory" /> sob o nome do provedor invariável especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">O nome do provedor invariável sob o qual registrar o provedor.</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">A instância do alocador do provedor a ser registrada.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">Registra um <see cref="T:System.Data.Common.DbProviderFactory" /> com o nome qualificado pelo assembly determinado sob o nome do provedor invariável especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">O nome do provedor invariável sob o qual registrar o provedor.</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">O nome qualificado pelo assembly de um <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">Registra um <see cref="T:System.Data.Common.DbProviderFactory" /> com o tipo determinado sob o nome do provedor invariável especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">O nome do provedor invariável sob o qual registrar o provedor.</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">O tipo que representa um <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">Tenta obter o <see cref="T:System.Data.Common.DbProviderFactory" /> registrado sob o nome do provedor invariável especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">O nome do provedor invariável a ser pesquisado.</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método é retornado, ele contém o <see cref="T:System.Data.Common.DbProviderFactory" /> associado ao nome do provedor invariável especificado, caso o nome seja encontrado; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um provedor for registrado sob o nome do provedor invariável especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">Remove um registro <see cref="T:System.Data.Common.DbProviderFactory" /> do nome invariável do provedor fornecido.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">O nome do provedor invariável do registro a ser removido.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">
        <see langword="true" /> se o registro for encontrado e removido com sucesso; caso contrário, <see langword="false" />. Este método retornará <see langword="false" /> se um registro de <paramref name="providerInvariantName" /> não for encontrado.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">Representa um conjunto de métodos para criar instâncias de uma implementação de provedor das classes de fonte de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa instância der suporte <see cref="T:System.Data.Common.DbCommandBuilder" /> à classe; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a instância do oferecer <see cref="T:System.Data.Common.DbDataAdapter" /> suporte à classe; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Obtém um valor que indica se esta instância <see cref="T:System.Data.Common.DbProviderFactory" /> é compatível com a classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a instância do oferecer <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> suporte à classe; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Retorna uma nova instância da classe do provedor que implementa a classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Uma nova instância de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">Identifica qual propriedade específica do provedor nas classes de parâmetro fortemente tipadas deve ser usada ao configurar um tipo específico do provedor.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">Especifica se esta propriedade é uma propriedade específica do provedor.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">Indica se a propriedade de atributo é um tipo específico de provedor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade à qual esse atributo é aplicado for uma propriedade de tipo específica do provedor; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">Define o comportamento básico das transações de banco de dados e fornece uma classe base para transações específicas do banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">Inicializa um novo objeto <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">Quando substituído em uma classe derivada, confirma a transação de banco de dados.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">Confirma de maneira assíncrona a transação de banco de dados.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Especifica o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Data.Common.DbTransaction" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">Se <see langword="true" />, esse método liberará todos os recursos mantidos por qualquer objeto gerenciado que este <see cref="T:System.Data.Common.DbTransaction" /> referencia.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">Descarta de forma assíncrona o objeto da transação.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Um <see cref="T:System.Threading.Tasks.ValueTask" /> representando a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">Quando substituído em uma classe derivada, obtém o nível de isolamento dessa transação.</summary>
      <returns vsli:raw="The isolation level for this transaction.">O nível de isolamento para esta transação.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">Quando substituído em uma classe derivada, reverte uma transação de um estado pendente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">Reverte de maneira assíncrona uma transação de um estado pendente.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Um token opcional para cancelar a operação assíncrona. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Uma tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">Obtém o objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação ou uma referência nula, se a transação não for mais válida.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">O objeto <see cref="T:System.Data.Common.DbConnection" /> associado à transação.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">Especifica a relação entre as colunas em uma cláusula GROUP BY e as colunas não agregadas na lista de seleção de uma instrução SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">A cláusula GROUP BY deve conter todas as colunas não agregadas na lista de seleção e não deve conter outras colunas que não estão na lista de seleção.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">A cláusula GROUP BY deve conter todas as colunas não agregadas na lista de seleção e pode conter outras colunas que não estão na lista de seleção.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">Não há suporte para a cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">O suporte à cláusula GROUP BY é desconhecido.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">Não há relação entre as colunas na cláusula GROUP BY e as colunas não agregadas na lista de SELECT. Você pode agrupar por qualquer coluna.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">Gera um esquema de colunas.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Obtém o esquema de coluna (coleção <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">O esquema de coluna (coleção <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">Especifica como os identificadores são tratados pela fonte de dados ao pesquisar o catálogo do sistema.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">A fonte de dados não diferencia maiúsculas e minúsculas do identificador ao pesquisar o catálogo do sistema. Os identificadores "ab" e "AB" serão correspondentes.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">A fonte de dados diferencia maiúsculas e minúsculas do identificador ao pesquisar o catálogo do sistema. Os identificadores "ab" e "AB" não serão correspondentes.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">A fonte de dados tem regras ambíguas sobre maiúsculas e minúsculas do identificador e não pode discernir essas informações.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Fornece dados para o evento <see langword="RowUpdated" /> de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">O <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">O tipo de instrução SQL executada.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Obtém o <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">O <see cref="T:System.Data.IDbCommand" /> executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Cópia as referências às linhas modificadas para a matriz fornecida.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">A matriz de <see cref="T:System.Data.DataRow" /> para a qual ser copiada.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Cópia as referências às linhas modificadas para a matriz fornecida.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">A matriz de <see cref="T:System.Data.DataRow" /> para a qual ser copiada.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">O índice na matriz no qual começar a copiar.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Obtém erros gerados pelo provedor de dados .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> foi executado.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Os erros gerados pelo provedor de dados de .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> foi executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">O número de linhas alteradas, inseridas ou excluídas, 0 se nenhuma linha tiver sido afetada ou a instrução tiver falhado e -1 para instruções SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtém o <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">Obtém o número de linhas processadas em um lote de registros atualizados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">
        <see langword="int" /> que especifica o número de linhas processadas.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">Obtém o tipo de instrução SQL executada.</summary>
      <returns vsli:raw="The type of SQL statement executed.">O tipo de instrução SQL executada.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtém o <see cref="T:System.Data.UpdateStatus" /> da propriedade <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.UpdateStatus" />. O padrão é <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.Common.DataTableMapping" /> enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">Fornece os dados para o evento RowUpdating de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> para <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">O <see cref="T:System.Data.IDbCommand" /> a ser executado quando <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> é chamado.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">O tipo de instrução SQL a ser executado.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">Obtém ou define o objeto <see cref="T:System.Data.IDbCommand" /> para uma instância desta classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">Obtém o <see cref="T:System.Data.IDbCommand" /> a ser executado durante a operação <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.IDbCommand" /> a ser executado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Obtém erros gerados pelo provedor de dados .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> é executado.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Os erros gerados pelo provedor de dados de .NET Framework quando o <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> é executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">Obtém o <see cref="T:System.Data.DataRow" /> que será enviado ao servidor como parte de uma operação de inserção, atualização ou exclusão.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> a ser enviado por meio de um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">Obtém o tipo de instrução SQL a ser executado.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">O tipo de instrução SQL a ser executado.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtém ou define o <see cref="T:System.Data.UpdateStatus" /> da propriedade <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.UpdateStatus" />. O padrão é <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado por meio de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">O <see cref="T:System.Data.Common.DataTableMapping" /> a ser enviado por meio do <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">Descreve os metadados de coluna do esquema para uma tabela de banco de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">Especifica se o valor <see langword="DBNull" /> é permitido.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Especifica o nome da coluna na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">Especifica o nome do esquema na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">Especifica o nome da tabela na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Especifica o nome da coluna na tabela de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">Especifica o ordinal da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">Especifica o tamanho da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">Especifica o tipo de dados na coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">Especifica se esta coluna tem alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">Especifica se esta coluna é uma expressão.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">Especifica se esta coluna é uma chave para a tabela.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">Especifica se esta coluna contém dados longos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">Especifica se uma restrição exclusiva se aplica a esta coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">Especifica o tipo de dados específico do provedor sem versão da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">Especificará a precisão dos dados de coluna, se os dados forem numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">Especificará a escala dos dados de coluna, se os dados forem numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Especifica o tipo de dados da coluna específicos do provedor.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">Descreve metadados de coluna opcionais do esquema para uma tabela de banco de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">Especifica o valor no qual a série de novas colunas de identidade é atribuído.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">Especifica o incremento entre os valores na coluna de identidade.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">O nome do catálogo associado aos resultados da consulta mais recente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">O namespace da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">O nome do servidor da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">O namespace para a tabela que contém a coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">Especifica o mapeamento da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">O valor padrão da coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">A expressão usada para calcular a coluna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">Especifica se os valores de coluna na coluna são automaticamente incrementados.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">Especifica se esta coluna está oculta.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">Especifica se esta coluna é somente leitura.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">Especifica se esta coluna contém informações de versão da linha.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Especifica o tipo de dados da coluna específicos do provedor.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">Especifica quais tipos de instruções de junção Transact-SQL têm suporte da fonte de dados.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">A fonte de dados dá suporte a junções externas completas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">A fonte de dados dá suporte a junções internas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">A fonte de dados dá suporte a junções externas esquerdas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">A fonte de dados não oferece suporte a consultas de junção.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">A fonte de dados dá suporte a junções externas direitas.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">Especifica como as alterações conflitantes na fonte de dados serão detectadas e resolvidas.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">As instruções Update e Delete incluirão todas as colunas pesquisáveis da tabela na cláusula WHERE. Isso é equivalente a especificar <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">Se houver colunas Carimbo de Data/Hora na tabela, elas serão usadas na cláusula WHERE de todas as instruções de atualização geradas. Isso é equivalente a especificar <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">Todas as instruções UPDATE e DELETE incluem apenas colunas <see cref="P:System.Data.DataTable.PrimaryKey" /> na cláusula WHERE. Se nenhum <see cref="P:System.Data.DataTable.PrimaryKey" /> for definido, todas as colunas pesquisáveis serão incluídas na cláusula WHERE. Isso é equivalente a <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">Descreve o estado atual da conexão com uma fonte de dados.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">A conexão com a fonte de dados foi desfeita. Isso poderá ocorrer somente depois que a conexão foi aberta. Uma conexão nesse estado pode ser fechada e aberta novamente. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">A conexão está fechada.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">O objeto de conexão está se conectando à fonte de dados.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">O objeto de conexão está executando um comando. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">O objeto de conexão está recuperando os dados. (Esse valor é reservado para versões futuras do produto.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">A conexão está aberta.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Representa uma restrição que pode ser aplicada em um ou mais objetos <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtém o <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertence.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">O <see cref="T:System.Data.DataSet" /> ao qual a restrição pertence.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtém o <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertence.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">O nome de uma restrição no <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">O nome do <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">O nome de <see cref="T:System.Data.Constraint" /> é um valor nulo ou uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">O <see cref="T:System.Data.ConstraintCollection" /> já contém um <see cref="T:System.Data.Constraint" /> com o mesmo nome (a comparação não diferencia maiúsculas de minúsculas.).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">Obtém a coleção de propriedades de restrição definidas pelo usuário.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Um <see cref="T:System.Data.PropertyCollection" /> das informações personalizadas.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Define o <see cref="T:System.Data.DataSet" /> da restrição.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">O <see cref="T:System.Data.DataSet" /> ao qual esta restrição pertencerá.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Obtém o <see cref="T:System.Data.DataTable" /> ao qual a restrição se aplica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Uma <see cref="T:System.Data.DataTable" /> à qual a restrição se aplica.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">Obtém o <see cref="P:System.Data.Constraint.ConstraintName" />, se houver um, como uma cadeia de caracteres.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">O valor da cadeia de caracteres do <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa uma coleção de restrições para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">Adiciona o objeto <see cref="T:System.Data.Constraint" /> especificado à coleção.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">O <see langword="Constraint" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">O argumento <paramref name="constraint" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">A restrição já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">A coleção já tem uma restrição com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">Constrói um novo <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, <see cref="T:System.Data.DataColumn" /> e o valor que indica se a coluna é uma chave primária e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">O nome do <see langword="UniqueConstraint" />.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">O <see cref="T:System.Data.DataColumn" /> ao qual a restrição se aplica.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Especifica se a coluna deve ser a chave primária. Se <see langword="true" />, a coluna será uma coluna de chave primária.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Um novo <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">A restrição já pertence a esta coleção.
-Ou-
A restrição pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">Constrói um novo <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome, coluna pai e coluna filha especificados e adiciona a restrição à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">A chave primária ou pai, <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">A chave estrangeira ou filha, <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Um novo <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">Constrói um novo <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> e o valor que indica se a coluna é uma chave primária e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">O nome do <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> aos quais uma restrição se aplica.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Especifica se a coluna deve ser a chave primária. Se <see langword="true" />, a coluna será uma coluna de chave primária.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Um novo <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">A restrição já pertence a esta coleção.
-Ou-
A restrição pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">Constrói um novo <see cref="T:System.Data.ForeignKeyConstraint" />, com as matrizes especificadas de colunas pai e colunas filha e adiciona a restrição à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas de chave primária ou pai.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas de chave estrangeira ou filha.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Um novo <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.ConstraintCollection" /> especificada para o fim da coleção.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">Uma matriz de objetos <see cref="T:System.Data.ConstraintCollection" /> a serem adicionados à coleção.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">Indica se um <see cref="T:System.Data.Constraint" /> pode ser removido.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">O <see cref="T:System.Data.Constraint" /> a ser testado para remoção da coleção.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.Constraint" /> puder ser removido da coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">Limpa a coleção de todos os objetos <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">Ocorre sempre que o <see cref="T:System.Data.ConstraintCollection" /> é alterado devido objetos <see cref="T:System.Data.Constraint" /> que sendo adicionados ou removidos.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">Indica se o objeto <see cref="T:System.Data.Constraint" /> especificado pelo nome existe na coleção.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">O <see cref="P:System.Data.Constraint.ConstraintName" /> da restrição.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver a restrição especificada, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Obtém o índice do <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">O <see cref="T:System.Data.Constraint" /> a ser pesquisado.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">O índice baseado em zero do <see cref="T:System.Data.Constraint" /> se estiver na coleção, caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">Obtém o índice do <see cref="T:System.Data.Constraint" /> especificado por nome.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">O nome do <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">O índice do <see cref="T:System.Data.Constraint" /> se estiver na coleção, caso contrário, -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">Obtém o <see cref="T:System.Data.Constraint" /> da coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">O índice da restrição a ser retornado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">O <see cref="T:System.Data.Constraint" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">Obtém o <see cref="T:System.Data.Constraint" /> da coleção com o nome especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">O <see cref="P:System.Data.Constraint.ConstraintName" /> da restrição a ser retornado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">O <see cref="T:System.Data.Constraint" /> com o nome especificado; caso contrário, um valor nulo se o <see cref="T:System.Data.Constraint" /> não existir.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">Remove o <see cref="T:System.Data.Constraint" /> especificado da coleção.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">O <see cref="T:System.Data.Constraint" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">O argumento <paramref name="constraint" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">A restrição não pertence à coleção.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">Remove o objeto <see cref="T:System.Data.Constraint" /> especificado por nome da coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">O nome do <see cref="T:System.Data.Constraint" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">Remove o objeto <see cref="T:System.Data.Constraint" /> no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">O índice do <see cref="T:System.Data.Constraint" /> a ser removido.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">A coleção não tem uma restrição no índice.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">Representa a exceção gerada ao tentar uma ação que viola uma restrição.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" />. Esse é o construtor sem parâmetros.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> usando o contexto de fluxo e serialização especificadas.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.ConstraintException" /> usando a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">Obtém a instância <see langword="Exception" /> que causou a exceção atual.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa o esquema de uma coluna em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataColumn" /> como uma cadeia de caracteres de tipo.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" />, como cadeia de caracteres de tipo, usando o nome de coluna especificado.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando a o nome da coluna e o tipo de dados especificados.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome do parâmetro, o tipo de dados e a expressão especificados.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">A expressão usada para criar esta coluna. Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome especificado, o tipo de dados, a expressão e o valor que determina se a coluna é um atributo.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Uma cadeia de caracteres que representa o nome da coluna a ser criada. Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">A expressão usada para criar esta coluna. Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Nenhum <paramref name="dataType" /> foi especificado.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">Obtém ou define um valor que indica se valores nulos são permitidos nesta coluna para linhas que pertencem à tabela.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se forem permitidos valores nulos; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">Obtém ou define um valor que indica se a coluna incrementa automaticamente o valor da coluna para novas linhas adicionadas à tabela.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da coluna for incrementado automaticamente; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">A coluna é uma coluna computada.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">Obtém ou define o valor inicial de uma coluna que tem a propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />. O padrão é 0.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">O valor inicial para o recurso <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">Obtém ou define o incremento usado por uma coluna com sua propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />.</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">O número pelo qual o valor da coluna é incrementado automaticamente. O padrão é 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">O valor definido é zero.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">Obtém ou define a legenda da coluna.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">A legenda da coluna. Se não for definido, retornará o valor <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">Obtém ou define o <see cref="T:System.Data.MappingType" /> da coluna.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Obtém ou define o nome da coluna no <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The name of the column.">O nome da coluna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">A propriedade é definida como <see langword="null" /> ou com uma cadeia de caracteres vazia e a coluna pertence a uma coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">Uma coluna com o mesmo nome já existe na coleção. A comparação de nomes não diferencia maiúsculas de minúsculas.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">Obtém ou define o tipo dos dados armazenados na coluna.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">Um objeto <see cref="T:System.Type" /> que representa o tipo de dados da coluna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">A coluna já tem dados armazenados.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">Obtém ou define o <see langword="DateTimeMode" /> da coluna.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">O <see cref="T:System.Data.DataSetDateTime" /> da coluna especificada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">Obtém ou define o valor padrão para a coluna ao criar novas linhas.</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Um valor apropriado para <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">Quando você estiver adicionando uma linha, o valor padrão não será uma instância do tipo de dados da coluna.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">Obtém ou define a expressão usada para filtrar linhas, calcular os valores em uma coluna ou criar uma coluna de agregação.</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">Uma expressão para calcular o valor de uma coluna, ou criar uma coluna agregada. O tipo de retorno de uma expressão é determinado pelo <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">A propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> ou <see cref="P:System.Data.DataColumn.Unique" /> é definida como <see langword="true" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">Quando você usa a função CONVERT, a expressão é avaliada como uma cadeia de caracteres, mas a cadeia de caracteres não contém uma representação que pode ser convertida para o parâmetro de tipo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">Quando você usa a função CONVERT, a conversão solicitada não é possível. Consulte a função Conversão na seção a seguir para obter informações detalhadas sobre as possíveis conversões.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">Quando você usa a função SUBSTRING, o argumento de início está fora do intervalo.
-Ou-
Quando você usa a função SUBSTRING, o argumento de tamanho está fora do intervalo.</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Quando você usa a função LEN ou TRIM, a expressão não é avaliada como uma cadeia de caracteres. Isso inclui as expressões avaliadas como <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém a coleção de informações de usuário personalizadas associadas a um <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Um <see cref="T:System.Data.PropertyCollection" /> das informações personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">Obtém ou define o tamanho máximo de uma coluna de texto.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">O tamanho máximo da coluna em caracteres. Se a coluna não tiver comprimento máximo, o valor será-1 (padrão).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém ou define o namespace do <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O namespace do <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">O namespace já tem dados.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">Obtém a posição (de base zero) da coluna na coleção <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">A posição da coluna. Obterá -1 se a coluna não for membro de uma coleção.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define um prefixo XML que cria o alias do namespace do <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">O prefixo XML para o namespace <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="name" vsli:raw="Parameter reference.">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">Obtém ou define um valor que indica se a coluna permite alterações assim que uma linha tiver sido adicionada à tabela.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">A propriedade é definida como <see langword="false" /> em uma coluna computada.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">Altera o ordinal ou a posição do <see cref="T:System.Data.DataColumn" /> para o ordinal ou a posição especificada.</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">O ordinal especificado.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">Obtém o <see cref="T:System.Data.DataTable" /> ao qual a coluna pertence.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">O <see cref="T:System.Data.DataTable" /> ao qual o <see cref="T:System.Data.DataColumn" /> pertence.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">Obtém o <see cref="P:System.Data.DataColumn.Expression" /> da coluna, se houver.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">O valor <see cref="P:System.Data.DataColumn.Expression" />, se a propriedade estiver definida; caso contrário, a propriedade <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">Obtém ou define um valor que indica se os valores em cada linha da coluna devem ser exclusivos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor deve ser exclusivo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">A coluna é uma coluna calculada.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Fornece dados para o evento de <see cref="E:System.Data.DataTable.ColumnChanging" /> .</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">O <see cref="T:System.Data.DataRow" /> da coluna com o valor de alteração.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">O <see cref="T:System.Data.DataColumn" /> com o valor de alteração.</param>
      <param name="value" vsli:raw="The new value.">O novo valor.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Obtém o <see cref="T:System.Data.DataColumn" /> com um valor de alteração.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">O <see cref="T:System.Data.DataColumn" /> com um valor de alteração.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">Obtém ou define o novo valor proposto para a coluna.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">O valor proposto, do tipo <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Obtém o <see cref="T:System.Data.DataRow" /> da coluna com um valor de alteração.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">O <see cref="T:System.Data.DataRow" /> da coluna com um valor de alteração.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Data.DataTable.ColumnChanging" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa uma coleção de objetos <see cref="T:System.Data.DataColumn" /> para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Cria e adiciona o objeto especificado <see cref="T:System.Data.DataColumn" /> ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">O <see cref="T:System.Data.DataColumn" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">A coluna já pertence a essa coleção ou a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome especificado ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome e tipo especificado ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">O <see cref="P:System.Data.DataColumn.ColumnName" /> a ser usado ao criar a coluna.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">O <see cref="P:System.Data.DataColumn.DataType" /> da nova coluna.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Cria e adiciona um objeto <see cref="T:System.Data.DataColumn" /> que tem o nome, tipo e expressão especificados ao <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">O nome a ser usado ao criar a coluna.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">O <see cref="P:System.Data.DataColumn.DataType" /> da nova coluna.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">A expressão a ser atribuída à propriedade <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">O <see cref="T:System.Data.DataColumn" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">A coleção já tem uma coluna com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">A expressão é inválida. Para obter mais informações sobre como criar expressões, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.DataColumn" /> especificada para o fim da coleção.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">Verifica se uma coluna específica pode ser removida da coleção.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">Um <see cref="T:System.Data.DataColumn" /> na coleção.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">
        <see langword="true" /> se a coluna puder ser removida. <see langword="false" /> se,

O parâmetro <paramref name="column" /> é <see langword="null" />.

A coluna não pertence a esta coleção.

A coluna é parte de uma relação.

Expressão de outra coluna depende desta coluna.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">O parâmetro <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">A coluna não pertence a esta coleção.
-ou-
A coluna é parte de uma relação.
-ou-
Expressão de outra coluna depende desta coluna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">Limpa a coleção de todas as colunas.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">Ocorre quando uma coleção de colunas é alterada, seja pela inclusão ou pela remoção de uma coluna.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">Verifica se a coleção tem uma coluna com o nome especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">O <see cref="P:System.Data.DataColumn.ColumnName" /> da coluna a ser pesquisada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se existir uma coluna com este nome; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">Copia toda a coleção para uma matriz existente, iniciando em um índice especificado na matriz.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> na qual a coleção será copiada.</param>
      <param name="index" vsli:raw="The index to start from.">O índice a partir do qual iniciar.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">Obtém o índice de uma coluna especificada pelo nome.</summary>
      <param name="column" vsli:raw="The name of the column to return.">O nome da coluna a ser retornada.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">O índice da coluna especificado por <paramref name="column" /> se ele for localizado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">Obtém o índice da coluna com o nome específico (o nome não diferencia maiúsculas de minúsculas).</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">O nome da coluna a ser localizada.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">O índice baseado em zero da coluna com o nome especificado ou -1 se a coluna não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">Obtém o <see cref="T:System.Data.DataColumn" /> da coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">O índice baseado em zero da coluna a ser retornada.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">O <see cref="T:System.Data.DataColumn" /> no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">Obtém o <see cref="T:System.Data.DataColumn" /> da coleção com o nome especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">O <see cref="P:System.Data.DataColumn.ColumnName" /> da coleção a ser retornado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">O <see cref="T:System.Data.DataColumn" /> na coleção com o <see cref="P:System.Data.DataColumn.ColumnName" /> especificado; caso contrário, um valor nulo se o <see cref="T:System.Data.DataColumn" /> não existir.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">Remove o objeto <see cref="T:System.Data.DataColumn" /> especificado da coleção.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">O <see cref="T:System.Data.DataColumn" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">A coluna não pertence a esta coleção.
-Ou-
A coluna é parte de uma relação.
-Ou-
Expressão de outra coluna depende desta coluna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">Remove da coleção o objeto <see cref="T:System.Data.DataColumn" /> que tem o nome especificado.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">O nome da coluna a ser removida.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">A coleção não tem uma coluna com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">Remove a coluna no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">O índice da coluna a ser removido.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">A coleção não tem uma coluna no índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">Representa a exceção que é gerada quando erros são gerados usando componentes do ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" />. Esse é o construtor sem parâmetros.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com o contexto e as informações de serialização especificados.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataException" /> com a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Fornece métodos de extensão para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtém o valor da coluna especificada como um booliano.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtém o valor da coluna especificada como um byte.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Lê um número de bytes especificado da coluna especificada começando em um índice especificado e os grava em um buffer começando em uma posição especificada no buffer.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">O número máximo de caracteres a serem lidos.</param>
      <returns vsli:raw="The actual number of bytes read.">O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">Obtém o valor da coluna especificada como um único caractere.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Lê um número de caracteres especificado de uma coluna especificada começando em um índice especificado e os grava em um buffer começando em uma posição especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">O índice na linha na qual a operação de leitura é iniciada.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">O buffer no qual os dados são copiados.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">O índice com o buffer no qual os dados serão copiados.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">O número máximo de caracteres a serem lidos.</param>
      <returns vsli:raw="The actual number of characters read.">O número real de caracteres lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Retorna um leitor de dados aninhado para a coluna solicitada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="A data reader.">Um leitor de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">Obtém o nome do tipo de dados da coluna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">O leitor de dados do qual obter o nome do tipo de coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The name of the data type.">O nome do tipo de dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">Obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">Obtém o tipo de dados da coluna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">O leitor de dados do qual obter o tipo de campo.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The data type of the specified column.">O tipo de dados da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtém o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">O tipo do valor a ser retornado.</typeparam>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados estava fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).
- ou -
O leitor tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtém de forma assíncrona o valor da coluna especificada como um tipo solicitado.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Um token opcional para cancelar a operação assíncrona.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">O tipo do valor a ser retornado.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Uma tarefa cujo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o valor da coluna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados foi fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou <see langword="false" />).
- ou -
Tentativa de ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get_*_ executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">O valor retornado pelo banco de dados não corresponde ou não pode ser convertido em <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">Obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Obtém o tipo específico do provedor da coluna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="A provider-specific .NET type.">Um tipo .NET específico do provedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtém o valor da coluna especificada como uma instância de um tipo específico do provedor.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtém um fluxo para recuperar dados da coluna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="A stream.">Um fluxo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">A coluna especificada não é um tipo binário que dá suporte à leitura com um <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.String" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">A conversão especificada não é válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtém um leitor de texto para recuperar dados da coluna.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="A text reader.">Um leitor de texto.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
O leitor de dados tentou ler uma coluna lida anteriormente em modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">A coluna especificada não é um tipo de texto que dá suporte à leitura com um <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">Obtém um valor que indica se a coluna contém valores ausentes ou inexistentes.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtém, de maneira assíncrona, um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">O leitor de dados do qual obter o valor da coluna.</param>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Um token opcional para cancelar a operação assíncrona.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Um <see cref="T:System.Threading.Tasks.Task`1" /> cuja propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> será <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" /> ou será <see langword="false" /> se não for.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">A conexão caiu ou foi fechada durante a recuperação de dados.
- ou -
O leitor de dados é fechado durante a recuperação de dados.
- ou -
Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).
- ou -
Tentando ler uma coluna lida anteriormente no modo sequencial.
- ou -
Havia uma operação assíncrona em andamento. Isso se aplica a todos os métodos Get* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Representa uma relação pai/filho entre dois objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome <see cref="T:System.Data.DataRelation" /> especificado e os objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome do <see cref="T:System.Data.DataRelation" />. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">O pai <see cref="T:System.Data.DataColumn" /> na relação.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">O filho <see cref="T:System.Data.DataColumn" /> na relação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm diferentes tipos de dados
-Ou-
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome especificado, os objetos <see cref="T:System.Data.DataColumn" /> pai e filho e um valor que indica se é necessário criar restrições.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">O <see cref="T:System.Data.DataColumn" /> pai na relação.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">O <see cref="T:System.Data.DataColumn" /> filho na relação.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Um valor que indica se é restrições são ou não criadas. <see langword="true" /> se as restrições são criadas. Caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm diferentes tipos de dados
-Ou-
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome <see cref="T:System.Data.DataRelation" /> e matrizes correspondentes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos filho <see cref="T:System.Data.DataColumn" /> .</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> contêm <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Os objetos <see cref="T:System.Data.DataColumn" /> têm diferentes tipos de dados
-Ou-
Uma ou ambas as matrizes não são compostas por colunas diferentes da mesma tabela.
-Ou-
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelation" /> usando o nome especificado, matrizes correspondentes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho e um valor que indica se é necessário criar restrições.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos filho <see cref="T:System.Data.DataColumn" /> .</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Um valor que indica se é necessário criar restrições. <see langword="true" /> se as restrições forem criadas. Caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Um ou ambos os objetos <see cref="T:System.Data.DataColumn" /> são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm diferentes tipos de dados
-Ou-
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome do <see cref="T:System.Data.DataRelation" />. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela pai da relação.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">O nome do namespace da tabela pai.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">O nome do namespace da tabela filho.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> pai da relação.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> filho da relação.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Um valor que indica se as relações são aninhadas.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">O nome da relação. Se <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será fornecido quando o objeto criado for adicionado ao <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela pai da relação.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">O nome do <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> pai da relação.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Uma matriz de nomes de objeto <see cref="T:System.Data.DataColumn" /> no <see cref="T:System.Data.DataTable" /> filho da relação.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Um valor que indica se as relações são aninhadas.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">As tabelas pai e filho pertencem a diferentes objetos <see cref="T:System.Data.DataSet" />.
-Ou-
Um ou mais pares de objetos <see cref="T:System.Data.DataColumn" /> pai e filho têm tipos de dados incompatíveis.
-Ou-
Os objetos <see cref="T:System.Data.DataColumn" /> pai e filho são idênticos.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">Obtém os objetos <see cref="T:System.Data.DataColumn" /> filho dessa relação.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">Obtém o <see cref="T:System.Data.ForeignKeyConstraint" /> para a relação.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Um <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">Obtém a tabela filho dessa relação.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Um <see cref="T:System.Data.DataTable" /> que é a tabela filho da relação.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Obtém o <see cref="T:System.Data.DataSet" /> ao qual o <see cref="T:System.Data.DataRelation" /> pertence.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Um <see cref="T:System.Data.DataSet" /> ao qual o <see cref="T:System.Data.DataRelation" /> pertence.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">Obtém a coleção que armazena as propriedades personalizadas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">Um <see cref="T:System.Data.PropertyCollection" /> que contém propriedades personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">Obtém ou define um valor que indica se os objetos <see cref="T:System.Data.DataRelation" /> são aninhados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os objetos <see cref="T:System.Data.DataRelation" /> forem aninhados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que são as colunas pai desse <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas pai <see cref="T:System.Data.DataRelation" />deste.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">Obtém o <see cref="T:System.Data.UniqueConstraint" /> que garante que os valores na coluna pai de um <see cref="T:System.Data.DataRelation" /> são exclusivos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">Um <see cref="T:System.Data.UniqueConstraint" /> valor que garante que os valores em uma coluna pai sejam exclusivos.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém o pai <see cref="T:System.Data.DataTable" /> desse <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">Uma <see cref="T:System.Data.DataTable" /> que é a tabela pai dessa relação.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="name" vsli:raw="Parameter reference.">Referência de parâmetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Obtém ou define o nome usado para recuperar um <see cref="T:System.Data.DataRelation" /> do <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">O nome do a <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> ou a cadeia de caracteres vazia ("") foi passada em um <see cref="T:System.Data.DataColumn" /> que é um <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">A <see cref="T:System.Data.DataRelation" /> pertence a uma coleção que já contém uma <see cref="T:System.Data.DataRelation" /> com o mesmo nome.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">Obtém o <see cref="P:System.Data.DataRelation.RelationName" />, se houver.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">O valor da propriedade <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Representa a coleção de objetos <see cref="T:System.Data.DataRelation" /> para este <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com uma coluna pai e filho especificada e a adiciona à coleção.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">A coluna pai da relação.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">A coluna filho da relação.</param>
      <returns vsli:raw="The created relation.">A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com as colunas pai e filho especificadas e as adiciona à coleção.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">As colunas pai da relação.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">As colunas filho da relação.</param>
      <returns vsli:raw="The created relation.">A relação criada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">O argumento <paramref name="relation" /> é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataRelation" /> ao <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">O <see langword="DataRelation" /> a adicionar à coleção.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">O parâmetro <paramref name="relation" /> é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">A coleção já tem uma relação com o nome especificado. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com o nome e as colunas pai e filho especificadas e os adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the relation.">O nome da relação.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">A coluna pai da relação.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">A coluna filho da relação.</param>
      <returns vsli:raw="The created relation.">A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com o nome especificado e colunas pai e filho, com restrições opcionais de acordo com o valor do parâmetro <paramref name="createConstraints" /> e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the relation.">O nome da relação.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">A coluna pai da relação.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">A coluna filho da relação.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">
        <see langword="true" /> para criar restrições; caso contrário, <see langword="false" />. (O padrão é <see langword="true" />).</param>
      <returns vsli:raw="The created relation.">A relação criada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com o nome e as matrizes de colunas pai e filho especificadas e os adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">O nome do <see langword="DataRelation" /> a ser criado.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Uma matriz de objetos filho <see langword="DataColumn" /> .</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">O <see langword="DataRelation" /> criado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">O nome da relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">Cria um <see cref="T:System.Data.DataRelation" /> com o nome especificado, matrizes de colunas pai e filho e um valor que especifica se uma restrição deve ser criada e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">O nome do <see langword="DataRelation" /> a ser criado.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> pai.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Uma matriz de objetos filho <see langword="DataColumn" /> .</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para criar uma restrição; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The created relation.">A relação criada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">O nome da relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">A relação entrou em um estado inválido desde que foi criada.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">Executa a verificação na tabela.</summary>
      <param name="relation" vsli:raw="The relation to check.">A relação a ser verificada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">A relação é nula.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">A relação já pertence a essa coleção ou pertence a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">A coleção já tem uma relação com o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.DataRelation" /> especificada para o fim da coleção.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">A matriz de objetos <see cref="T:System.Data.DataRelation" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">Verifica se o <see cref="T:System.Data.DataRelation" /> especificado pode ser removido da coleção.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">A relação na qual executar a verificação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.DataRelation" /> puder ser removido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">Limpa a coleção de todas as relações.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">Ocorre quando a coleção foi alterada.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">Verifica se um <see cref="T:System.Data.DataRelation" /> com o nome específico (não diferencia maiúsculas de minúsculas) existe na coleção.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">O nome da relação a ser localizada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se existir uma relação com o nome especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">Copia a coleção de objetos <see cref="T:System.Data.DataRelation" /> começando no índice especificado.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">A matriz de objetos <see cref="T:System.Data.DataRelation" /> para a qual copiar a coleção.</param>
      <param name="index" vsli:raw="The index to start from.">O índice a partir do qual iniciar.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <returns vsli:raw="The referenced DataSet.">O DataSet referenciado.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Obtém o índice do objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The relation to search for.">A relação a ser pesquisada.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">O índice baseado em 0 da relação ou -1 se a relação não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">Obtém o índice do <see cref="T:System.Data.DataRelation" /> especificado por nome.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">O nome da relação a ser localizada.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">O índice baseado em zero da relação com o nome especificado ou -1 se a relação não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">Obtém o objeto <see cref="T:System.Data.DataRelation" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">O índice baseado em zero a ser localizado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">O <see cref="T:System.Data.DataRelation" />, ou um valor nulo, se o <see cref="T:System.Data.DataRelation" /> especificado não existir.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">Obtém o objeto <see cref="T:System.Data.DataRelation" /> especificado por nome.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">O nome da relação a ser localizada.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">O <see cref="T:System.Data.DataRelation" />nomeado ou um valor nulo se o <see cref="T:System.Data.DataRelation" /> especificado não existir.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">Remove a relação especificada da coleção.</summary>
      <param name="relation" vsli:raw="The relation to remove.">A relação a ser removida.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">A relação é um valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">A relação não pertence à coleção.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">Remove a relação com o nome especificado da coleção.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">O nome da relação a ser removida.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">A coleção não tem uma relação com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">Remove a relação no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">O índice da relação a ser removida.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">A coleção não tem uma relação no índice especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Realiza uma verificação no objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">O objeto <see langword="DataRelation" /> a ser verificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">A coleção não tem uma relação no índice especificado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">A relação especificada não pertence a essa coleção ou pertence a outra coleção.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa uma linha de dados em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">Inicializa uma nova instância do DataRow. Constrói uma linha do construtor. Somente para uso interno.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">construtor</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">Confirma todas as alterações feitas nessa linha desde a última vez que <see cref="M:System.Data.DataRow.AcceptChanges" /> foi chamado.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Inicia uma operação de edição em um objeto <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">O método foi chamado em uma linha excluída.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">Cancela a edição atual da linha.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">Limpa os erros da linha. Isso inclui o <see cref="P:System.Data.DataRow.RowError" /> e erros definidos com <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Exclui o <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">O <see cref="T:System.Data.DataRow" /> já foi excluído.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">Finaliza a edição que ocorre na linha.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">O método foi chamado dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">A edição violou uma restrição.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">A linha pertence à tabela e a edição tentou alterar o valor de uma coluna somente leitura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">A edição tentou colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém as linhas filho deste <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">A relação é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém as linhas filho de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém as linhas filhas de uma <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="P:System.Data.DataRelation.RelationName" /> da <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém as linhas filho de uma <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="P:System.Data.DataRelation.RelationName" /> da <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém a descrição de erro da <see cref="T:System.Data.DataColumn" /> especificada.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Um <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="The text of the error description.">O texto da descrição do erro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">Obtém a descrição do erro da coluna especificada pelo índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">O índice com base em zero da coluna.</param>
      <returns vsli:raw="The text of the error description.">O texto da descrição do erro.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">Obtém a descrição do erro da coluna, especificada pelo nome.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The text of the error description.">O texto da descrição do erro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">Obtém uma matriz de colunas que contêm erros.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> que contêm erros.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="relation" /> não pertence ao <see cref="T:System.Data.DataTable" />.
- ou -
A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Essa linha não pertence à tabela filho do objeto <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">A linha não pertence a uma tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" />e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">A linha é <see langword="null" />.
- ou -
O <paramref name="relation" /> não pertence às relações pai dessa tabela.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">A linha não pertence a uma tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém a linha pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" /> e <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">O <see cref="T:System.Data.DataRow" /> pai da linha atual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Uma linha filho tem vários pais.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O <see cref="T:System.Data.DataRelation" /> não pertence ao <see cref="T:System.Data.DataSet" /> dessa linha.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">A linha não pertence a uma <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando a <see cref="T:System.Data.DataRelation" /> especificada e a <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">O <see cref="T:System.Data.DataRelation" /> a ser usado.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O <see cref="T:System.Data.DataRelation" /> não pertence ao <see cref="T:System.Data.DataSet" /> dessa linha.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">A linha é <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">A tabela filho da relação não é a tabela à qual a linha pertence.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">A linha não pertence a uma <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de uma <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtém as linhas pai de um <see cref="T:System.Data.DataRow" /> usando o <see cref="P:System.Data.DataRelation.RelationName" /> especificado de um <see cref="T:System.Data.DataRelation" /> e a <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">O <see cref="P:System.Data.DataRelation.RelationName" /> de um <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" /> especificando a versão dos dados a serem obtidos. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" /> ou uma matriz de comprimento zero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">A relação e a linha não pertencem à mesma tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="relation" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">A linha não tem o <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">Obtém um valor que indica se há erros em uma linha.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a linha contiver um erro; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">Obtém um valor que indica se existe uma versão especificada.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a versão existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">Obtém um valor que indica se o <see cref="T:System.Data.DataColumn" /> especificado contém um valor null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Um <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">Obtém um valor que indica se o <see cref="T:System.Data.DataColumn" /> e <see cref="T:System.Data.DataRowVersion" /> especificados contêm um valor nulo.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Um <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">A linha não tem o <paramref name="version" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">Obtém um valor que indica se a coluna no índice especificado contém um valor nulo.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">O índice com base em zero da coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Nenhuma coluna corresponde ao índice especificado por <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">Obtém um valor que indica se a coluna nomeada contém um valor null.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coluna contiver um valor nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém ou define os dados armazenados no <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">Um <see cref="T:System.Data.DataColumn" /> que contém os dados.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">A coluna não pertence a essa tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">O <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Ocorreu uma tentativa de definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Os tipos de dados do valor e a coluna não correspondem.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtém a versão especificada de dados armazenados no <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">Um <see cref="T:System.Data.DataColumn" /> que contém informações sobre a coluna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">A coluna não pertence à tabela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">O argumento <paramref name="column" /> contém null.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">A linha não tem esta versão de dados.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">Obtém ou define os dados armazenados na coluna especificada por índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">O índice com base em zero da coluna.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Ocorre quando você tenta definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ocorre quando você define o valor e o <see cref="T:System.Type" /> do novo valor não corresponde a <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">Obtém os dados armazenados na coluna, especificados pelo índice e a versão dos dados a serem recuperados.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">O índice com base em zero da coluna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">O argumento <paramref name="columnIndex" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Os tipos de dados do valor e a coluna não correspondem.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">A linha não tem esta versão de dados.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Ocorreu uma tentativa de definir um valor em uma linha excluída.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">Obtém ou define os dados armazenados na coluna especificada por nome.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Ocorre quando você tenta definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Ocorre quando você define um valor e seu <see cref="T:System.Type" /> não corresponde a <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Ocorre quando você tentar inserir um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> está definido como <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">Obtém a versão especificada de dados armazenados na coluna nomeada.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores <see cref="T:System.Data.DataRowVersion" /> que especifica a versão de linha que você deseja. Os valores possíveis são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Um <see cref="T:System.Object" /> que contém os dados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Os tipos de dados do valor e a coluna não correspondem.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">A linha não tem esta versão de dados.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">A linha foi excluída.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">Obtém ou define todos os valores para essa linha por meio de uma matriz.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Uma matriz do tipo <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Um valor na matriz não corresponde ao <see cref="P:System.Data.DataColumn.DataType" /> no <see cref="T:System.Data.DataColumn" /> respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">Uma edição violou uma restrição.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">Uma edição tentou alterar o valor de uma coluna somente leitura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">Uma edição tentou colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> do objeto <see cref="T:System.Data.DataColumn" /> é <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">A linha foi excluída.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Rejeita todas as alterações feitas na linha desde que <see cref="M:System.Data.DataRow.AcceptChanges" /> foi chamado pela última vez.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">A linha não pertence à tabela.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">Obtém ou define a descrição de erro personalizada de uma linha.</summary>
      <returns vsli:raw="The text describing an error.">O texto que descreve um erro.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Obtém o estado atual da linha no que diz respeito à sua relação com o <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">Altera o <see cref="P:System.Data.DataRow.RowState" /> de um <see cref="T:System.Data.DataRow" /> para <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Define a descrição do erro para uma coluna especificada como um <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">O <see cref="T:System.Data.DataColumn" /> para o qual definir a descrição do erro.</param>
      <param name="error" vsli:raw="The error description.">A descrição do erro.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">Define a descrição do erro da coluna especificada pelo índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">O índice com base em zero da coluna.</param>
      <param name="error" vsli:raw="The error description.">A descrição do erro.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">O argumento <paramref name="columnIndex" /> está fora do intervalo</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">Define a descrição do erro da coluna especificada pelo nome.</summary>
      <param name="columnName" vsli:raw="The name of the column.">O nome da coluna.</param>
      <param name="error" vsli:raw="The error description.">A descrição do erro.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">Altera o <see cref="P:System.Data.DataRow.RowState" /> de um <see cref="T:System.Data.DataRow" /> para <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">Define o valor do <see cref="T:System.Data.DataColumn" /> especificado para um valor nulo.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Um <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Define a linha pai de um <see cref="T:System.Data.DataRow" /> com novo pai especificado <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O novo pai <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Define a linha pai de um <see cref="T:System.Data.DataRow" /> com novo pai especificado <see cref="T:System.Data.DataRow" /> e <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O novo pai <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">A relação <see cref="T:System.Data.DataRelation" /> a ser usada.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">Uma das linhas não pertence a uma tabela</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">Uma das linhas é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">A relação não pertence ao <see cref="T:System.Data.DataRelationCollection" /> do objeto <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">O filho <see cref="T:System.Data.DataTable" /> da relação não é a tabela a qual essa linha pertence.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">Obtém o <see cref="T:System.Data.DataTable" /> para o qual essa linha tem um esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">O <see cref="T:System.Data.DataTable" /> ao qual essa linha pertence.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Descreve uma ação executada em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">A linha foi adicionada à tabela.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">A linha foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">As versões original e atual da linha foram alteradas.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">A versão original da linha foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">As alterações na linha foram confirmadas.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">A linha foi excluída da tabela.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">A linha não foi alterada.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">A alteração mais recente na linha foi revertida.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">O tipo <see langword="DataRowBuilder" /> dá suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">Fornece dados para os eventos <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> e <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">A <see cref="T:System.Data.DataRow" /> na qual uma ação está ocorrendo.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtém a ação que ocorreu em uma <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">Obtém a linha em que uma ação ocorreu.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">O <see cref="T:System.Data.DataRow" /> no qual ocorreu uma ação.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa o método que manipulará os eventos <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> e <see cref="E:System.Data.DataTable.RowDeleted" /> de um <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa uma coleção de linhas para um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">Adiciona o <see cref="T:System.Data.DataRow" /> especificado ao objeto <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">O <see cref="T:System.Data.DataRow" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">A linha é nula.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">A linha pertence a outra tabela ou já pertence a esta tabela.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">A adição invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">A adição tenta colocar um valor nulo em um <see cref="T:System.Data.DataColumn" /> em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Cria uma linha usando os valores especificados e a adiciona ao <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">Uma matriz de valores usados para criar a nova linha.</param>
      <returns vsli:raw="The new row.">Nenhum.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">Um valor não corresponde a seu respectivo tipo de coluna.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Adicionar a linha invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Tentativa de colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">Limpa a coleção de todas as linhas.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Uma <see cref="T:System.Data.ForeignKeyConstraint" /> é aplicada no <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">Obtém um valor que indica se a chave primária de qualquer linha na coleção contém o valor especificado.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">O valor da chave primária para a qual testar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver um <see cref="T:System.Data.DataRow" /> com o valor especificado da chave primária; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">Obtém um valor que indica se as colunas de chave primária de qualquer linha na coleção contêm os valores especificados na matriz de objetos.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">Uma matriz de valores de chave primária para os quais testar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.DataRowCollection" /> contiver um <see cref="T:System.Data.DataRow" /> com os valores de chave especificados; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copia todos os objetos <see cref="T:System.Data.DataRow" /> da coleção para a matriz fornecida, começando pelo índice da matriz de destino especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">A matriz unidimensional que é o destino dos elementos copiados do <see langword="DataRowCollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">O índice de base zero na matriz em que a cópia começa.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copia todos os objetos <see cref="T:System.Data.DataRow" /> da coleção para a matriz fornecida, começando pelo índice da matriz de destino especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">A matriz unidimensional que é o destino dos elementos copiados do <see langword="DataRowCollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">O índice de base zero na matriz em que a cópia começa.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Obtém o número total de objetos <see cref="T:System.Data.DataRow" /> nesta coleção.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">O número total de objetos <see cref="T:System.Data.DataRow" /> nesta coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">Obtém a linha especificada pelo valor da chave primária.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">O valor da chave primária do <see cref="T:System.Data.DataRow" /> a ser encontrado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Um <see cref="T:System.Data.DataRow" /> que contém o valor de chave primária especificada; caso contrário, um valor nulo, se o valor da chave primária não existir no <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">Obtém a linha que contém os valores de chave primária especificados.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">Uma matriz de valores de chave primária a serem localizados. O tipo da matriz é <see langword="Object" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Um objeto <see cref="T:System.Data.DataRow" /> que contém o valor de chave primária especificada; caso contrário, um valor nulo, se o valor da chave primária não existir no <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">Nenhuma linha corresponde a esse valor de índice.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">A tabela não tem uma chave primária.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Obtém um <see cref="T:System.Collections.IEnumerator" /> para essa coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Um <see cref="T:System.Collections.IEnumerator" /> para essa coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtém o índice do objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">O <see langword="DataRow" /> a ser pesquisado.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">O índice baseado em zero da linha ou -1, se a linha não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">Insere uma nova linha na coleção na localização especificada.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">O <see cref="T:System.Data.DataRow" /> a ser adicionado.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">A localização (baseada em zero) na coleção à qual você deseja adicionar o <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">O <paramref name="pos" /> é menor que 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">Obtém a linha no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">O índice baseado em zero da linha a ser retornada.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">Remove o <see cref="T:System.Data.DataRow" /> especificado da coleção.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">O <see cref="T:System.Data.DataRow" /> a ser removido.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">Remove a linha no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">O índice da linha a ser removida.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">Retorna uma instância singleton da classe <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtém uma instância singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Uma instância de um <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">Compara a equivalência de dois objetos <see cref="T:System.Data.DataRow" /> usando uma comparação baseada em valor.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos a serem comparados, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtém uma instância singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Uma instância de um <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">Compara dois objetos <see cref="T:System.Data.DataRow" /> usando uma comparação por coluna baseada em valor.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">O primeiro objeto <see cref="T:System.Data.DataRow" /> a ser comparado.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">O segundo objeto <see cref="T:System.Data.DataRow" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois objetos <see cref="T:System.Data.DataRow" /> tiverem conjuntos ordenados de valores de coluna iguais, caso contrário,<see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">Um ou os dois objetos <see cref="T:System.Data.DataRow" /> de origem são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Retorna um código hash para o objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">O <see cref="T:System.Data.DataRow" /> do qual o código hash será calculado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">Um valor <see cref="T:System.Int32" /> que representa o código hash da linha.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Os objetos <see cref="T:System.Data.DataRow" /> de origem não pertencem a um <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Os objetos <see cref="T:System.Data.DataRow" /> de origem são <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">Define os métodos de extensão para a classe <see cref="T:System.Data.DataRow" />. Está é uma classe estática.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">O objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica a coluna cujo valor deverá ser retornado.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="column" /> não ocorre no <see cref="T:System.Data.DataTable" /> do qual o <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">O objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica a coluna cujo valor deverá ser retornado.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="column" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex" vsli:raw="The column index.">O índice da coluna.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnIndex" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="ordinal" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">A posição ordinal baseada em zero da coluna da qual retornar o valor.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="ordinal" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="ordinal" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">O nome da coluna para o qual o valor será retornado.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="columnName" /> não ocorre no <see cref="T:System.Data.DataTable" /> do qual o <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Um valor <see langword="null" /> foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada. O método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">O nome da coluna para o qual o valor será retornado.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Uma enumeração <see cref="T:System.Data.DataRowVersion" /> que especifica a versão do valor da coluna a ser retornada, como a versão <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Um parâmetro genérico que especifica o tipo de retorno da coluna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">O valor, do tipo <paramref name="T" />, do <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" /> e <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">A coluna especificada por <paramref name="columnName" /> não existe na <see cref="T:System.Data.DataTable" /> da qual a <see cref="T:System.Data.DataRow" /> faz parte.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Um valor null foi atribuído a um tipo que não permite valor null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">Define um novo valor para a coluna especificada no <see cref="T:System.Data.DataRow" />. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">A entrada <see cref="T:System.Data.DataColumn" /> especifica qual valor de linha a ser recuperado.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">A coluna especificada por <paramref name="column" /> não pode ser encontrada.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">O <paramref name="column" /> é nulo.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">Define um novo valor para a coluna especificada na <see cref="T:System.Data.DataRow" /> em que o método é chamado. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">A posição ordinal baseada em zero da coluna da qual definir o valor.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">O argumento <paramref name="ordinal" /> está fora do intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">Define um novo valor para a coluna especificada no <see cref="T:System.Data.DataRow" />. O método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> também dá suporte a tipos anuláveis.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">A entrada <see cref="T:System.Data.DataRow" />, que funciona como a instância <see langword="this" /> do método de extensão.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">O nome da coluna para o qual o valor será definido.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">O novo valor de linha para a coluna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Um parâmetro genérico que especifica o tipo de valor da coluna.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">A coluna especificada por <paramref name="columnName" /> não pode ser encontrada.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Ocorre ao tentar definir um valor em uma linha excluída.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Não foi possível converter o tipo de valor da coluna subjacente no tipo especificado pelo parâmetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtém o estado de um objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">A linha foi adicionada a um <see cref="T:System.Data.DataRowCollection" /> e <see cref="M:System.Data.DataRow.AcceptChanges" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">A linha foi excluída usando o método <see cref="M:System.Data.DataRow.Delete" /> do <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">A linha foi criada, mas não faz parte de nenhum <see cref="T:System.Data.DataRowCollection" />. Um <see cref="T:System.Data.DataRow" /> ficará nesse estado imediatamente depois de ser criado e antes de ser adicionado a uma coleção ou se ele tiver sido removido de uma coleção.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">A linha foi modificada e <see cref="M:System.Data.DataRow.AcceptChanges" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">A linha não foi alterada desde a última chamada a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Descreve a versão de um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">A linha contém os valores atuais.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">A versão padrão do <see cref="T:System.Data.DataRowState" />. Para um valor <see langword="DataRowState" /> igual a <see langword="Added" />, <see langword="Modified" /> ou <see langword="Deleted" />, a versão padrão é <see langword="Current" />. Para um valor <see cref="T:System.Data.DataRowState" /> igual a <see langword="Detached" />, a versão é <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">A linha contém os valores originais.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">A linha contém um valor proposto.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Representa uma exibição personalizada de um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">Inicia um procedimento de edição.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">Cancela um procedimento de edição.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o <see cref="T:System.Data.DataRelation" /> filho especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">O objeto <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o pai e o <see cref="T:System.Data.DataRelation" /> especificados.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">O objeto <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="The parent object.">O objeto pai.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o nome de <see cref="T:System.Data.DataRelation" /> filho especificado.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Uma cadeia de caracteres contendo o nome <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">Retorna um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho com o pai e o nome <see cref="T:System.Data.DataRelation" /> especificados.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Uma cadeia de caracteres contendo o nome <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para manter a exibição filho criada em sincronia com o pai; caso contrário <see langword="false" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> filho.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">Obtém o <see cref="T:System.Data.DataView" /> ao qual essa linha pertence.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">O <see langword="DataView" /> ao qual essa linha pertence.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">Exclui uma linha.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Confirma as alterações para o <see cref="T:System.Data.DataRow" /> subjacente e encerra a sessão de edição que foi iniciada com <see cref="M:System.Data.DataRowView.BeginEdit" />.  Use <see cref="M:System.Data.DataRowView.CancelEdit" /> para descartar as alterações feitas na <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">Obtém um valor que indica se o <see cref="T:System.Data.DataRowView" /> atual é idêntico ao objeto especificado.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Um <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="object" /> for um <see cref="T:System.Data.DataRowView" /> e retornar a mesma linha que o <see cref="T:System.Data.DataRowView" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Retorna o código hash do objeto <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">Um código hash de inteiro com sinal de 32 bits 1, que representa o booliano <see langword="true" /> se o valor dessa instância é diferente de zero, caso contrário, o inteiro zero, que representa o booliano <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">Indica se a linha está no modo de edição.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a linha estiver no modo de edição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">Indica se um <see cref="T:System.Data.DataRowView" /> é novo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a linha for nova; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtém ou define um valor em uma coluna especificada.</summary>
      <param name="ndx" vsli:raw="The column index.">O índice da coluna.</param>
      <returns vsli:raw="The value of the column.">O valor da coluna.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">A <see cref="P:System.Data.DataRowView.DataView" /> não permite edições e <see cref="T:System.Data.DataRowView" /> não é nova.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">Nenhuma coluna corresponde a esse valor de índice.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtém ou define um valor em uma coluna especificada.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">Cadeia de caracteres que contém a coluna especificada.</param>
      <returns vsli:raw="The value of the column.">O valor da coluna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">Uma coluna com a relação ou o nome especificado não foi encontrada.
-ou-
A <see cref="P:System.Data.DataRowView.DataView" /> não permite edições e <see cref="T:System.Data.DataRowView" /> não é nova.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">
        <paramref name="property" /> sem correspondência ao definir um valor.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">O evento que é gerado quando uma propriedade <see cref="T:System.Data.DataRowView" /> é alterada.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">Obtém o <see cref="T:System.Data.DataRow" /> que está sendo visualizado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">O <see cref="T:System.Data.DataRow" /> que está sendo visualizado pelo <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtém a descrição da versão atual do <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" />. Os valores possíveis para a propriedade <see cref="P:System.Data.DataRowView.RowVersion" /> são <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> e <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retorna uma coleção de atributos personalizados para esta instância de um componente.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">Um AttributeCollection que contém os atributos para este objeto.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retorna o nome de classe desta instância de um componente.</summary>
      <returns vsli:raw="The class name of this instance of a component.">O nome de classe desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retorna o nome desta instância de um componente.</summary>
      <returns vsli:raw="The name of this instance of a component.">O nome desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retorna um conversor de tipo para esta instância de um componente.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">O conversor de tipo para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retorna o evento padrão para esta instância de um componente.</summary>
      <returns vsli:raw="The default event for this instance of a component.">O evento padrão para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retorna a propriedade padrão para esta instância de um componente.</summary>
      <returns vsli:raw="The default property for this instance of a component.">A propriedade padrão para esta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retorna um editor do tipo especificado para esta instância de um componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Um <see cref="T:System.Type" /> que representa o editor para esse objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Um <see cref="T:System.Object" /> do tipo especificado que é o editor para esse objeto ou <see langword="null" />, se não for possível encontrar o editor.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retorna os eventos desta instância de um componente.</summary>
      <returns vsli:raw="The events for this instance of a component.">Os eventos desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">Retorna os eventos desta instância de um componente com atributos especificados.</summary>
      <param name="attributes" vsli:raw="The attributes.">Os atributos</param>
      <returns vsli:raw="The events for this instance of a component.">Os eventos desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retorna as propriedades desta instância de um componente.</summary>
      <returns vsli:raw="The properties for this instance of a component.">As propriedades desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">Retorna as propriedades desta instância de um componente com atributos especificados.</summary>
      <param name="attributes" vsli:raw="The attributes.">Os atributos.</param>
      <returns vsli:raw="The properties for this instance of a component.">As propriedades desta instância de um componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa a propriedade cujo proprietário deve ser encontrado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Um <see cref="T:System.Object" /> que representa o proprietário da propriedade especificada.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">Obtém uma mensagem que descreve todos os erros de validação do objeto.</summary>
      <returns vsli:raw="The validation error on the object.">O erro de validação no objeto.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">Obtém a mensagem de erro da propriedade com o nome fornecido.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">O nome da propriedade cuja mensagem de erro será obtida.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">A mensagem de erro da propriedade. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">Representa um cache de dados na memória.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataSet" /> que tem as informações de serialização e contexto fornecidas.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema" vsli:raw="">O valor booliano.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataSet" /> com o nome especificado.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O nome do <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Confirma todas as alterações feitas nesse <see cref="T:System.Data.DataSet" /> desde que foi carregado ou desde a última vez que <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Começa a inicialização de um <see cref="T:System.Data.DataSet" /> usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">Obtém ou define um valor que indica se comparações de cadeia de caracteres dentro de objetos <see cref="T:System.Data.DataTable" /> diferenciam maiúsculas de minúsculas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as comparações de cadeia de caracteres diferenciam maiúsculas de minúsculas; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">Limpa o <see cref="T:System.Data.DataSet" /> de todos os dados, removendo todas as linhas em todas as tabelas.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">Copia a estrutura do <see cref="T:System.Data.DataSet" />, incluindo todos os esquemas, relações e restrições <see cref="T:System.Data.DataTable" />. Não copia todos os dados.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">Um novo <see cref="T:System.Data.DataSet" /> com o mesmo esquema que o <see cref="T:System.Data.DataSet" /> atual, mas sem nenhum dado.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Copia a estrutura e os dados para este <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um novo <see cref="T:System.Data.DataSet" /> com a mesma estrutura (esquemas de tabela, relações e restrições) e dados que esse <see cref="T:System.Data.DataSet" />.

Se essas classes tiverem sido subclassificadas, a cópia também será das mesmas classes subclasses.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">Retorna um <see cref="T:System.Data.DataTableReader" /> com um resultado definido por <see cref="T:System.Data.DataTable" />, na mesma sequência em que as tabelas são exibidas na coleção <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um <see cref="T:System.Data.DataTableReader" /> que contém um ou mais conjuntos de resultados, correspondentes às instâncias <see cref="T:System.Data.DataTable" /> contidas no <see cref="T:System.Data.DataSet" /> de origem.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTableReader" /> com um conjunto de resultados por <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Uma matriz de DataTables que fornece a ordem dos conjuntos de resultado a serem retornados no <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">Um <see cref="T:System.Data.DataTableReader" /> que contém um ou mais conjuntos de resultados, correspondentes às instâncias <see cref="T:System.Data.DataTable" /> contidas no <see cref="T:System.Data.DataSet" /> de origem. Os conjuntos de resultados retornados estão na ordem especificada pelo parâmetro <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define o nome do <see cref="T:System.Data.DataSet" /> atual.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O nome do <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtém uma exibição personalizada dos dados contidos no <see cref="T:System.Data.DataSet" /> para permitir a filtragem, a pesquisa e a navegação usando um <see cref="T:System.Data.DataViewManager" /> personalizado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina o <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o qual o construtor protegido <see langword="DataSet" /> de <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> é invocado durante a desserialização em cenários de comunicação remota.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> com o qual o construtor protegido <see langword="DataSet" /> de <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> é invocado durante a desserialização em cenários de comunicação remota.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Uma enumeração <see cref="T:System.Data.SchemaSerializationMode" /> que indica se as informações de esquema foram omitidas do conteúdo.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina o <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">A instância <see cref="T:System.Xml.XmlReader" /> que é passada durante a desserialização do <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Uma enumeração <see cref="T:System.Data.SchemaSerializationMode" /> que indica se as informações de esquema foram omitidas do conteúdo.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Encerra a inicialização de um <see cref="T:System.Data.DataSet" /> que é usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">Obtém ou define um valor que indica se as regras de restrição são seguidas ao tentar qualquer operação de atualização.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se as regras são impostas; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">Não é possível impor uma ou mais restrições.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">Obtém a coleção de informações de usuário personalizadas associadas a um <see langword="DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">Um <see cref="T:System.Data.PropertyCollection" /> com todas as informações de usuário personalizadas.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">Obtém uma cópia do <see cref="T:System.Data.DataSet" /> que contém todas as alterações feitas nele desde que ele foi carregado ou desde que o <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado pela última vez.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cópia das alterações desse <see cref="T:System.Data.DataSet" /> que pode ter ações realizadas nele e posteriormente ser mesclada novamente usando <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se não forem encontradas linhas alteradas, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtém uma cópia do <see cref="T:System.Data.DataSet" /> que contém todas as alterações feitas desde o último carregamento ou desde que <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cópia filtrada do <see cref="T:System.Data.DataSet" /> que pode ter ações executadas nela e, mais tarde, ser mesclada novamente com o <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se nenhuma linha do <see cref="T:System.Data.DataRowState" /> desejado for encontrada, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">Obtém uma cópia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para DataSet.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">O conjunto de esquemas especificado.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Uma cópia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Popula um objeto de informações de serialização com os dados necessários para serializar o <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DataSet" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Retorna uma instância <see cref="T:System.Xml.Schema.XmlSchema" /> serializável.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">A instância <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">Desserializa os dados da tabela do fluxo XML ou binário.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">A instância <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The streaming context.">O contexto de streaming.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Retorna a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Uma cadeia de caracteres que é uma representação dos dados armazenados no <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Retorna o Esquema XML para a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Cadeia de caracteres que é o Esquema XML para a representação XML dos dados armazenados no <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> tem alterações, incluindo linhas novas, excluídas ou modificadas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.DataSet" /> tiver alterações; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> tem alterações, incluindo linhas novas, excluídas ou modificadas, filtradas por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.DataSet" /> tiver alterações; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém um valor que indica se há erros em qualquer um dos objetos <see cref="T:System.Data.DataTable" /> nesse <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se qualquer tabela contiver um erro; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica o esquema XML do <see cref="T:System.IO.Stream" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">O <see langword="Stream" /> do qual ler o esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica o esquema XML do <see cref="T:System.IO.TextReader" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">O <see langword="TextReader" /> do qual ler o esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica o esquema XML do arquivo especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">O nome do arquivo (incluindo o caminho) do qual o esquema é lido.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica o esquema XML do <see cref="T:System.Xml.XmlReader" /> especificado ao <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">O <see langword="XMLReader" /> do qual ler o esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Uma matriz de cadeias de caracteres de Uniform Resource Identifier (URI) do namespace a serem excluídas da inferência do esquema.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Ocorre após o <see cref="T:System.Data.DataSet" /> ser inicializado.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">Desserialize todos os dados de tabelas do DataSet do fluxo XML ou binário.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">Inspeciona o formato da representação serializada do <see langword="DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado representar um <see langword="DataSet" /> serializado em seu formato binário, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Obtém um valor que indica se o <see cref="T:System.Data.DataSet" /> é inicializado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o componente concluiu a inicialização; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido, usando uma matriz de instâncias <see cref="T:System.Data.DataTable" /> para fornecer o esquema e as informações de namespace.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> dentro de <see cref="T:System.Data.DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Uma matriz de instâncias <see cref="T:System.Data.DataTable" />, da qual o método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> recupera informações de nome e namespace. Cada uma dessas tabelas deve ser um membro do <see cref="T:System.Data.DataTableCollection" /> contido por este <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido, usando uma matriz de instâncias <see cref="T:System.Data.DataTable" /> para fornecer o esquema e as informações de namespace.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> dentro de <see cref="T:System.Data.DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> a ser chamado quando ocorrer um erro ao carregar os dados.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">Uma matriz de instâncias <see cref="T:System.Data.DataTable" />, da qual o método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> recupera informações de nome e namespace.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">Preenche um <see cref="T:System.Data.DataSet" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />, usando uma matriz de cadeias de caracteres para fornecer os nomes das tabelas dentro de <see langword="DataSet" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão nas instâncias <see cref="T:System.Data.DataTable" /> dentro de <see langword="DataSet" /> serão combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">Uma matriz de cadeias de caracteres da qual o <see langword="Load" /> método recupera informações de nome de tabela.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtém ou define as informações de localidade usadas para comparar cadeias de caracteres na tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Globalization.CultureInfo" /> que contém dados sobre a localidade do computador do usuário. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Mescla uma matriz de objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataSet" /> atual.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">A matriz de objetos <see langword="DataRow" /> a serem mesclados no <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Mescla uma matriz de objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> atual e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">A matriz de objetos <see cref="T:System.Data.DataRow" /> a serem mesclados no <see langword="DataSet" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" />; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema no <see langword="DataSet" /> atual.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">Não é possível habilitar uma ou mais restrições.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema no <see langword="DataSet" /> atual, preservando ou descartando as alterações neste <see langword="DataSet" /> de acordo com o argumento determinado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" /> atual; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Mescla um <see cref="T:System.Data.DataSet" /> especificado e seu esquema com o atual <see langword="DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> atual e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">O <see langword="DataSet" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" /> atual; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Mescla um <see cref="T:System.Data.DataTable" /> especificado e seu esquema no <see cref="T:System.Data.DataSet" /> atual.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">O <see cref="T:System.Data.DataTable" /> cujos dados e esquema serão mesclados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="table" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Mescla um <see cref="T:System.Data.DataTable" /> especificado e seu esquema com o atual <see langword="DataSet" />, preservando ou descartando alterações no <see langword="DataSet" /> e manipulando um esquema incompatível de acordo com os argumentos fornecidos.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">O <see langword="DataTable" /> cujos dados e esquema serão mesclados.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para preservar alterações no <see langword="DataSet" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="dataSet" /> é <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">Ocorre quando uma origem e um destino <see cref="T:System.Data.DataRow" /> têm o mesmo valor de chave primária e <see cref="P:System.Data.DataSet.EnforceConstraints" /> é definido como true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define o namespace do <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O namespace do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">O namespace já tem dados.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">Aciona o evento <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ocorre quando um objeto <see cref="T:System.Data.DataRelation" /> é removido de um <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">O <see cref="T:System.Data.DataRelation" /> sendo removido.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ocorre quando um <see cref="T:System.Data.DataTable" /> é removido de um <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">O <see cref="T:System.Data.DataTable" /> sendo removido.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define um prefixo XML que cria o alias do namespace do <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">O prefixo XML para o namespace <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">Envia uma notificação de que a propriedade <see cref="T:System.Data.DataSet" /> especificada está prestes a ser alterada.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">O nome da propriedade que está prestes a ser alterada.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Um objeto que deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">O <see cref="T:System.IO.Stream" /> do qual ler.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">O <see langword="TextReader" /> do qual ler o esquema e os dados.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">O <see cref="T:System.IO.TextReader" /> do qual ler.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">Lê o esquema XML e dados no <see cref="T:System.Data.DataSet" /> usando o arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">O nome do arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lê dados e o esquema XML no <see cref="T:System.Data.DataSet" /> usando o arquivo especificado e <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">O nome do arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lê o esquema XML e os dados no <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlReader" /> e <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">O <see langword="XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lê o esquema XML do <see cref="T:System.IO.Stream" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">O <see cref="T:System.IO.Stream" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lê o esquema XML do <see cref="T:System.IO.TextReader" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">O <see cref="T:System.IO.TextReader" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lê o esquema XML do arquivo especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">O nome de arquivo (incluindo o caminho) do qual será realizada a leitura.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lê o esquema XML do <see cref="T:System.Xml.XmlReader" /> especificado no <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">O <see cref="T:System.Xml.XmlReader" /> do qual ler.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">Ignora os atributos e retorna um DataSet vazio.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">O leitor XML especificado.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Reverte todas as alterações feitas ao <see cref="T:System.Data.DataSet" /> desde que foi criado ou desde a última vez em que o <see cref="M:System.Data.DataSet.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">Obtém a coleção de relações que vinculam tabelas e permitem a navegação de tabelas principais para tabelas secundárias.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Um <see cref="T:System.Data.DataRelationCollection" /> que contém uma coleção de objetos <see cref="T:System.Data.DataRelation" />. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">Obtém ou define um <see cref="T:System.Data.SerializationFormat" /> para o <see cref="T:System.Data.DataSet" /> usado durante a comunicação remota.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Um objeto <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">Limpa todas as tabelas e remove todas as relações, restrições externas e tabelas de <see cref="T:System.Data.DataSet" />. As subclasses devem substituir <see cref="M:System.Data.DataSet.Reset" /> para restaurar um <see cref="T:System.Data.DataSet" /> ao seu estado original.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define um <see cref="T:System.Data.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um <see cref="T:System.Data.SchemaSerializationMode" /> para um <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">Obtém um valor que indica se a propriedade <see cref="P:System.Data.DataSet.Relations" /> deve ser persistida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da propriedade tiver sido alterado do padrão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">Obtém um valor que indica se a propriedade <see cref="P:System.Data.DataSet.Tables" /> deve ser persistida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da propriedade tiver sido alterado do padrão, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém a coleção de tabelas contidas no <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">O <see cref="T:System.Data.DataTableCollection" /> contido por este <see cref="T:System.Data.DataSet" />. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Grava os dados atuais para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.Stream" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Grava os dados atuais para o <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">O objeto <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">Um objeto <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">Grava os dados atuais do <see cref="T:System.Data.DataSet" /> no arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava os dados atuais do <see cref="T:System.Data.DataSet" /> no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">O <see cref="T:System.Xml.XmlWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataSet" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">O <see cref="T:System.Xml.XmlWriter" /> com o qual gravar.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Um objeto <see cref="T:System.IO.Stream" /> usado para gravar em um arquivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">O objeto <see cref="T:System.IO.Stream" /> no qual gravar.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">O objeto <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">O objeto <see cref="T:System.IO.TextWriter" /> no qual gravar.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um arquivo.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">O nome do arquivo (incluindo o caminho) no qual gravar.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> não é definido como <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um arquivo.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">O nome do arquivo no qual gravar.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML em um objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">O <see cref="T:System.Xml.XmlWriter" /> no qual ocorrerá a gravação.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava a estrutura <see cref="T:System.Data.DataSet" /> como um esquema XML no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">O objeto <see cref="T:System.Xml.XmlWriter" /> no qual gravar.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Um representante usado para converter <see cref="T:System.Type" /> na cadeia de caracteres.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Descreve o formato de serialização para colunas <see cref="T:System.DateTime" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> sempre é armazenado no Local. Se <see cref="F:System.Data.DataSetDateTime.Utc" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em Local. A serialização nesse modo sempre é executada no Local. Há um deslocamento durante a serialização.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> sempre é armazenado em Não especificado. Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em <see cref="F:System.Data.DataSetDateTime.Unspecified" />. A serialização nesse modo não causa um deslocamento.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> é armazenado em Não especificado. Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido em <see cref="F:System.Data.DataSetDateTime.Unspecified" />. A serialização nesse modo causa um deslocamento. Esse é o comportamento padrão e é compatível com versões anteriores. Essa opção deve ser vista como sendo Não especificado no armazenamento, mas aplicando um deslocamento que é semelhante a <see cref="F:System.Data.DataSetDateTime.Local" /> durante a serialização.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> é armazenado no UTC (Universal Coordinated Time). Se <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> for atribuído a uma coluna nesse modo, primeiro, ele será convertido no formato <see langword="Utc" />. A serialização nesse modo sempre é executada em <see langword="Utc" />. não há um deslocamento durante a serialização.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">Marca uma propriedade, um evento ou um extensor com uma descrição. Os designers visuais podem exibir essa descrição ao referenciar o membro.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataSysDescriptionAttribute" /> usando a cadeia de caracteres da descrição especificada.</summary>
      <param name="description" vsli:raw="The description string.">A cadeia de caracteres da descrição.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">Obtém o texto para a descrição.</summary>
      <returns vsli:raw="The description string.">A cadeia de caracteres da descrição.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">Representa uma tabela de dados na memória.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> sem argumentos.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> com o nome da tabela especificada.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">O nome a ser dado à tabela. Se <paramref name="tableName" /> for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando ele for adicionado na <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTable" /> usando o nome de tabela e o namespace especificados.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">O nome a ser dado à tabela. Se <paramref name="tableName" /> for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando ele for adicionado na <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">Obtém o namespace para a representação XML dos dados armazenados no <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Confirma todas as alterações feitas à tabela desde a última vez em que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Começa a inicialização de um <see cref="T:System.Data.DataTable" /> usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">Desativa as notificações, a manutenção de índice e as restrições durante o carregamento de dados.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">Indica se a comparação de cadeias de caracteres dentro da tabela diferencia maiúsculas de minúsculas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see langword="true" /> se a comparação diferencia maiúsculas de minúsculas; caso contrário <see langword="false" />. O padrão é definido como o pai <see cref="T:System.Data.DataSet" /> da propriedade do <see cref="P:System.Data.DataSet.CaseSensitive" /> objeto ou <see langword="false" /> se o <see cref="T:System.Data.DataTable" /> foi criado independentemente de um <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém a coleção das relações filho desta <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Um <see cref="T:System.Data.DataRelationCollection" /> que contém as relações filho da tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">Limpa o <see cref="T:System.Data.DataTable" /> de todos os dados.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">Clona a estrutura do <see cref="T:System.Data.DataTable" />, incluindo todos os esquemas e restrições de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um novo <see cref="T:System.Data.DataTable" /> com o mesmo esquema que o <see cref="T:System.Data.DataTable" /> atual.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ocorre depois que um valor foi alterado para o <see cref="T:System.Data.DataColumn" /> especificado em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Ocorre quando um valor está sendo alterado para o <see cref="T:System.Data.DataColumn" /> especificado em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">Obtém a coleção de colunas que pertencem a essa tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">Um <see cref="T:System.Data.DataColumnCollection" /> que contém a coleção de objetos <see cref="T:System.Data.DataColumn" /> para a tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">Calcula a expressão especificada nas linhas atuais que passam os critérios de filtro.</summary>
      <param name="expression" vsli:raw="The expression to compute.">A expressão a computar.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">O filtro para limitar as linhas que são avaliadas na expressão.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">Um <see cref="T:System.Object" />, definido como o resultado do cálculo. Se a expressão for avaliada como nula, o valor retornado será <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">Obtém a coleção de restrições mantidas por essa tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">Um <see cref="T:System.Data.ConstraintCollection" /> que contém a coleção de objetos <see cref="T:System.Data.Constraint" /> para a tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Copia a estrutura e os dados para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">Um novo <see cref="T:System.Data.DataTable" /> com a mesma estrutura (esquemas de tabela e restrições) e dados que esse <see cref="T:System.Data.DataTable" />.
Se essas classes tiverem sido derivadas, a cópia também será das mesmas classes derivadas.
<see cref="M:System.Data.DataTable.Copy" /> cria um novo <see cref="T:System.Data.DataTable" /> com a mesma estrutura e dados que o <see cref="T:System.Data.DataTable" /> original. Para copiar a estrutura para um novo <see cref="T:System.Data.DataTable" />, mas não os dados, use <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTableReader" /> correspondente aos dados nessa <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">Um <see cref="T:System.Data.DataTableReader" /> que contém um conjunto de resultados, correspondente à instância <see cref="T:System.Data.DataTable" /> da origem.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Cria uma nova instância de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The new expression.">A nova expressão.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Obtém o <see cref="T:System.Data.DataSet" /> ao qual essa tabela pertence.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">O <see cref="T:System.Data.DataSet" /> ao qual essa tabela pertence.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">Obtém uma exibição personalizada da tabela que pode incluir uma exibição filtrada ou uma posição do cursor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataView" /> associado ao <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">Obtém ou define a expressão que retorna um valor usado para representar essa tabela na interface do usuário. A propriedade <see langword="DisplayExpression" /> permite exibir o nome da tabela em uma interface do usuário.</summary>
      <returns vsli:raw="A display string.">Uma cadeia de caracteres de exibição.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Encerra a inicialização de um <see cref="T:System.Data.DataTable" /> que é usado em um formulário ou por outro componente. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">Desativa as notificações, a manutenção de índice e as restrições após o carregamento de dados.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">Obtém a coleção de informações de usuário personalizadas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">Um <see cref="T:System.Data.PropertyCollection" /> que contém informações de usuário personalizadas.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">Verifica se a inicialização está em andamento. A inicialização ocorre no tempo de execução.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">Obtém uma cópia do <see cref="T:System.Data.DataTable" /> que contém todas as alterações feitas nele desde que ele foi carregado ou que o <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado pela última vez.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">Uma cópia das alterações neste <see cref="T:System.Data.DataTable" /> ou <see langword="null" /> se nenhuma alteração foi encontrada.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtém uma cópia do <see cref="T:System.Data.DataTable" /> que contém todas as alterações feitas desde o último carregamento ou desde que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cópia filtrada do <see cref="T:System.Data.DataTable" /> que pode ter ações executadas nela e, mais tarde, ser mesclada novamente ao <see cref="T:System.Data.DataTable" /> usando <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Se nenhuma linha do <see cref="T:System.Data.DataRowState" /> desejado for encontrada, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">Esse método retorna uma instância <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém a linguagem WSDL que descreve o <see cref="T:System.Data.DataTable" /> para os Serviços Web.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Uma instância <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">A instância <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">Obtém uma matriz de objetos <see cref="T:System.Data.DataRow" /> que contêm erros.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> que têm erros.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Popula um objeto de informações de serialização com os dados necessários para serializar o <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DataTable" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">O parâmetro <paramref name="info" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">Obtém o tipo de linha.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo do <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">Obtém um valor que indica se há erros em alguma das linhas em uma das tabelas de <see cref="T:System.Data.DataSet" /> a que a tabela pertence.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver erros; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">Copia um <see cref="T:System.Data.DataRow" /> em um <see cref="T:System.Data.DataTable" />, preservando quaisquer configurações de propriedade, bem como os valores originais e atuais.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">O <see cref="T:System.Data.DataRow" /> a ser importado.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Ocorre após o <see cref="T:System.Data.DataTable" /> ser inicializado.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Obtém um valor que indica se o <see cref="T:System.Data.DataTable" /> é inicializado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o componente concluiu a inicialização; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />fornecido. Se o <see cref="T:System.Data.DataTable" /> já contiver linhas, os dados de entrada da fonte de dados serão mesclados com as linhas existentes.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Um <see cref="T:System.Data.IDataReader" /> que fornece um conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" />fornecido. Se o <see langword="DataTable" /> já contiver linhas, os dados de entrada da fonte de dados serão mesclados com as linhas existentes de acordo com o valor do parâmetro <paramref name="loadOption" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Um <see cref="T:System.Data.IDataReader" /> que fornece um ou vários conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão no <see cref="T:System.Data.DataTable" /> são combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">Preenche um <see cref="T:System.Data.DataTable" /> com valores de uma fonte de dados usando o <see cref="T:System.Data.IDataReader" /> fornecido comum delegado de tratamento de erro.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Um <see cref="T:System.Data.IDataReader" /> que fornece um conjunto de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Um valor da enumeração <see cref="T:System.Data.LoadOption" /> que indica como as linhas que já estão no <see cref="T:System.Data.DataTable" /> são combinadas com linhas de entrada que compartilham a mesma chave primária.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> a ser chamado quando ocorrer um erro ao carregar os dados.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Localiza e atualiza uma linha específica. Se nenhuma linha correspondente for encontrada, uma nova linha será criada usando os valores fornecidos.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Uma matriz de valores usados para criar a nova linha.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para aceitar alterações; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O novo <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">A matriz é maior que o número de colunas na tabela.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">Um valor não corresponde a seu respectivo tipo de coluna.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Adicionar a linha invalida uma restrição.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Tentativa de colocar um valor nulo em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é falso.</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Localiza e atualiza uma linha específica. Se nenhuma linha correspondente for encontrada, uma nova linha será criada usando os valores fornecidos.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Uma matriz de valores usados para criar a nova linha.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">Usado para determinar como os valores da matriz são aplicados aos valores correspondentes em uma linha existente.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O novo <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtém ou define as informações de localidade usadas para comparar cadeias de caracteres na tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Um <see cref="T:System.Globalization.CultureInfo" /> que contém dados sobre a localidade do computador do usuário. O padrão é o <see cref="T:System.Data.DataSet" /> do objeto <see cref="T:System.Globalization.CultureInfo" /> (retornado pela propriedade <see cref="P:System.Data.DataSet.Locale" />) ao qual pertence o <see cref="T:System.Data.DataTable" />; se a tabela não pertencer a um <see cref="T:System.Data.DataSet" />, o padrão será o atual sistema <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Mesclar o <see cref="T:System.Data.DataTable" /> especificado ao <see cref="T:System.Data.DataTable" /> atual.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> a ser mesclado com o <see cref="T:System.Data.DataTable" /> atual.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Mescla o <see cref="T:System.Data.DataTable" /> especificado com o <see langword="DataTable" /> atual, indicando se as alterações no <see langword="DataTable" /> atual devem ser preservadas.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">O <see langword="DataTable" /> a ser mesclado com o <see langword="DataTable" /> atual.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, para preservar alterações no <see langword="DataTable" /> atual; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Mescla o <see cref="T:System.Data.DataTable" /> especificado com o <see langword="DataTable" /> atual, indicando se as alterações e a maneira como manipular o esquema ausente no <see langword="DataTable" /> atual devem ser preservadas.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> a ser mesclado com o <see cref="T:System.Data.DataTable" /> atual.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, para preservar alterações no <see cref="T:System.Data.DataTable" /> atual; caso contrário, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">Obtém ou define o tamanho inicial para essa tabela.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">O tamanho inicial em linhas dessa tabela. O padrão é 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define o namespace da representação XML dos dados armazenados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O namespace do <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">Cria um novo <see cref="T:System.Data.DataRow" /> com o mesmo esquema que a tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataRow" /> com o mesmo esquema que o <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Retorna uma matriz de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">Um valor <see cref="T:System.Int32" /> que descreve o tamanho da matriz.</param>
      <returns vsli:raw="The new array.">A nova matriz.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">Cria uma nova linha de uma linha existente.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">Uma classe derivada <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">Notifica o <see cref="T:System.Data.DataTable" /> que um <see cref="T:System.Data.DataColumn" /> está sendo removido.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">O <see cref="T:System.Data.DataColumn" /> sendo removido.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataRowChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém a coleção de relações de pai desta <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Uma <see cref="T:System.Data.DataRelationCollection" /> que contém as relações de pai da tabela. Será retornada uma coleção vazia se não houver nenhum objeto <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define o namespace da representação XML dos dados armazenados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O prefixo de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">Obtém ou define uma matriz de colunas que funcionam como chaves primárias da tabela de dados.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">A chave é uma chave estrangeira.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Um objeto que deriva de <see cref="T:System.IO.Stream" /></param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">O <see cref="T:System.IO.TextReader" /> que será usado para ler os dados.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lê o esquema XML e dados para o <see cref="T:System.Data.DataTable" /> do arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">O nome do arquivo do qual os dados serão lidos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lê o esquema XML e dados no <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">O <see cref="T:System.Xml.XmlReader" /> que será usado para ler os dados.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">O <see cref="T:System.Data.XmlReadMode" /> usado para ler os dados.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o fluxo especificado.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">O fluxo usado para ler o esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">O <see cref="T:System.IO.TextReader" /> usado para ler as informações de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> do arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">O nome do arquivo do qual as informações de esquema devem ser lidas.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lê um esquema XML para a <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">O <see cref="T:System.Xml.XmlReader" /> usado para ler as informações de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">Lê de um fluxo XML.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Um objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Reverte todas as alterações feitas na tabela desde que foi carregado ou desde a última vez em que <see cref="M:System.Data.DataTable.AcceptChanges" /> foi chamado.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">Obtém ou define o formato de serialização.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Uma enumeração <see cref="T:System.Data.SerializationFormat" /> que especifica a serialização de <see langword="Binary" /> ou <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">Redefine o <see cref="T:System.Data.DataTable" /> com o estado original. A redefinição remove todos os dados, índices, relações e colunas da tabela. Se um DataSet incluir uma DataTable, a tabela ainda fará parte do DataSet depois que a tabela for redefinida.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">Ocorre após um <see cref="T:System.Data.DataRow" /> ter sido alterado com êxito.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">Ocorre quando uma <see cref="T:System.Data.DataRow" /> está sendo alterada.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">Ocorre depois que uma linha na tabela é excluída.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">Ocorre antes de uma linha na tabela estar prestes a ser excluída.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">Obtém a coleção de linhas que pertencem a essa tabela.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Um <see cref="T:System.Data.DataRowCollection" /> que contém objetos <see cref="T:System.Data.DataRow" />; caso contrário, um valor nulo se nenhum objeto <see cref="T:System.Data.DataRow" /> existir.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem aos critérios de filtro.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem aos critérios de filtro, na ordem de classificação especificada.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Uma cadeia de caracteres que especifica a direção da coluna e da classificação.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">Uma matriz de objetos <see cref="T:System.Data.DataRow" /> que correspondem à expressão de filtro.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">Obtém uma matriz de todos os objetos <see cref="T:System.Data.DataRow" /> que correspondem ao filtro, na ordem de classificação correspondente ao estado especificado.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Os critérios a serem usados para filtrar as linhas. Para ver exemplos de como filtrar linhas, consulte DataView RowFilter Syntax [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Uma cadeia de caracteres que especifica a direção da coluna e da classificação.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for uma coleção de objetos <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">Um <see cref="T:System.Collections.IList" /> que pode ser associado a uma fonte de dados de objeto.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="An XmlReader.">Um XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">Um XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Ocorre depois que uma <see cref="T:System.Data.DataTable" /> é limpa.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Ocorre quando uma <see cref="T:System.Data.DataTable" /> é limpa.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define o nome de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O nome do <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">
        <see langword="null" /> ou uma cadeia de caracteres vazia ("") é passada e essa tabela pertence a uma coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">A tabela pertence a uma coleção que já tem uma tabela com o mesmo nome. (A comparação diferencia maiúsculas de minúsculas).</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">Ocorre quando um novo <see cref="T:System.Data.DataRow" /> é inserido.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">Obterá o <see cref="P:System.Data.DataTable.TableName" /> e a <see cref="P:System.Data.DataTable.DisplayExpression" />, se houver algum como uma cadeia de caracteres concatenada.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">Uma cadeia de caracteres que consiste nos valores de <see cref="P:System.Data.DataTable.TableName" /> e <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">O fluxo no qual os dados serão gravados.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.Stream" /> especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">O fluxo no qual os dados serão gravados.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">O fluxo no qual os dados serão gravados.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> no arquivo especificado usando o <see cref="T:System.Data.XmlWriteMode" /> especificado. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">O fluxo no qual os dados serão gravados.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">O <see cref="T:System.IO.TextWriter" /> com o qual gravar o conteúdo.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.IO.TextWriter" /> especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">O <see cref="T:System.IO.TextWriter" /> com o qual gravar o conteúdo.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.IO.TextWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">O arquivo no qual gravar os dados XML.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o arquivo especificado. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">O arquivo no qual gravar os dados XML.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema da <see cref="T:System.Data.DataTable" /> usando o arquivo especificado e o <see cref="T:System.Data.XmlWriteMode" />. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">O nome do arquivo no qual os dados serão gravados.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema da <see cref="T:System.Data.DataTable" /> usando o arquivo especificado e o <see cref="T:System.Data.XmlWriteMode" />. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">O nome do arquivo no qual os dados serão gravados.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">O <see cref="T:System.Xml.XmlWriter" /> com o qual o conteúdo será gravado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava o conteúdo atual do <see cref="T:System.Data.DataTable" /> como XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">O <see cref="T:System.Xml.XmlWriter" /> com o qual o conteúdo será gravado.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava os dados atuais e, opcionalmente, o esquema do <see cref="T:System.Data.DataTable" /> usando o <see cref="T:System.Xml.XmlWriter" /> e o <see cref="T:System.Data.XmlWriteMode" /> especificados. Para gravar o esquema, defina o valor do parâmetro <paramref name="mode" /> como <see langword="WriteSchema" />. Para salvar os dados para a tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Se for <see langword="true" />, grave o conteúdo da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas os dados da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o fluxo especificado.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">O fluxo no qual o esquema XML será gravado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o fluxo especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">O fluxo no qual o esquema XML será gravado.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">O <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.IO.TextWriter" /> especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">O <see cref="T:System.IO.TextWriter" /> com o qual gravar.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o arquivo especificado.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">O nome do arquivo a ser usado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML para o arquivo especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">O nome do arquivo a ser usado.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">O <see cref="T:System.Xml.XmlWriter" /> a ser usado.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Grava a estrutura de dados atual do <see cref="T:System.Data.DataTable" /> como um esquema XML usando o <see cref="T:System.Xml.XmlWriter" /> especificado. Para salvar o esquema da tabela e todos os descendentes, defina o parâmetro <paramref name="writeHierarchy" /> como <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Se for <see langword="true" />, grave o esquema da tabela atual e todos os descendentes. Se <see langword="false" /> (o valor padrão), grave apenas o esquema da tabela atual.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Fornece dados para o método <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">O <see cref="T:System.Data.DataTable" /> cujas linhas estão sendo limpas.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">Obtém a tabela cujas linhas estão sendo limpas.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">O <see cref="T:System.Data.DataTable" /> cujas linhas estão sendo limpas.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">Obtém o nome da tabela cujas linhas estão sendo limpas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">Um <see cref="T:System.String" /> que indica o nome da tabela.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">Obtém o namespace da tabela cujas linhas estão sendo limpas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">Um <see cref="T:System.String" /> que indica o nome do namespace.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Representa o método que manipula o método <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataTableClearEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Representa a coleção de tabelas para o <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">Cria um novo objeto <see cref="T:System.Data.DataTable" /> usando um nome padrão e o adiciona à coleção.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">Adiciona o <see langword="DataTable" /> especificado à coleção.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">O objeto <see langword="DataTable" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">O valor especificado para a tabela é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">A tabela já pertence a essa coleção ou a outra coleção.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">Uma tabela na coleção tem o mesmo nome. A comparação não diferencia maiúsculas de minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Cria um objeto <see cref="T:System.Data.DataTable" /> usando o nome especificado e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O nome a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Uma tabela na coleção tem o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Cria um objeto <see cref="T:System.Data.DataTable" /> usando o nome especificado e o adiciona à coleção.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O nome a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O namespace a ser dado a <see cref="T:System.Data.DataTable" /> criada.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> recém-criado.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Uma tabela na coleção tem o mesmo nome. (A comparação não diferencia maiúsculas de minúsculas.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">Copia os elementos da matriz <see cref="T:System.Data.DataTable" /> especificada para o fim da coleção.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">A matriz de objetos <see cref="T:System.Data.DataTable" /> a ser adicionada à coleção.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">Verifica se o objeto <see cref="T:System.Data.DataTable" /> especificado pode ser removido da coleção.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">A <see langword="DataTable" /> na coleção na qual executar a verificação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a tabela puder ser removida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Limpa a coleção de todos os objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Ocorre após o <see cref="T:System.Data.DataTableCollection" /> ser alterado devido aos objetos <see cref="T:System.Data.DataTable" /> sendo adicionados ou removidos.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Ocorre enquanto o <see cref="T:System.Data.DataTableCollection" /> está sendo alterado devido aos objetos <see cref="T:System.Data.DataTable" /> sendo adicionados ou removidos.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.DataTable" /> com o nome especificado existe na coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a tabela especificada existir. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">Obtém um valor que indica se um objeto <see cref="T:System.Data.DataTable" /> com o nome e o namespace de tabela especificados existe na coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a tabela especificada existir. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">Copia todos os elementos do <see cref="T:System.Data.DataTableCollection" /> atual para um <see cref="T:System.Array" /> unidimensional, começando no índice da matriz de destino especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">O <see cref="T:System.Array" /> unidimensional para o qual os elementos do objeto <see cref="T:System.Data.DataTableCollection" /> atual serão copiados.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">O índice <see cref="T:System.Array" /> de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtém o índice do objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">O <see langword="DataTable" /> a ser pesquisado.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">O índice baseado em zero da tabela ou -1 se a tabela não for encontrada na coleção.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtém o índice na coleção do objeto <see cref="T:System.Data.DataTable" /> com o nome especificado.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">O nome do objeto <see langword="DataTable" /> a ser pesquisado.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">O índice baseado em zero da <see langword="DataTable" /> com o nome especificado ou -1 se a tabela não existir na coleção.

Retorna -1 quando duas ou mais tabelas têm o mesmo nome, mas diferentes namespaces. A chamada não terá êxito se houver qualquer ambiguidade durante a correspondência de um nome de tabela para exatamente uma tabela.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtém o índice na coleção do objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">O índice baseado em zero da <see cref="T:System.Data.DataTable" /> com o nome especificado ou -1 se a tabela não existir na coleção.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">Obtém o objeto <see cref="T:System.Data.DataTable" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O índice baseado em zero do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Um <see cref="T:System.Data.DataTable" /> com o índice especificado; caso contrário <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">O valor de índice é maior que o número de itens na coleção.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtém o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">O nome do <see langword="DataTable" /> a ser localizado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Um <see cref="T:System.Data.DataTable" /> com o nome especificado; caso contrário, <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">Obtém o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado no namespace especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">O nome do <see langword="DataTable" /> a ser localizado.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Um <see cref="T:System.Data.DataTable" /> com o nome especificado; caso contrário, <see langword="null" /> se o <see cref="T:System.Data.DataTable" /> não existir.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">Remove o objeto <see cref="T:System.Data.DataTable" /> especificado da coleção.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">O <see langword="DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">O valor especificado para a tabela é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">A tabela não pertence a esta coleção.
-ou-
A tabela é parte de uma relação.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Remove o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado da coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">A coleção não tem uma tabela com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Remove o objeto <see cref="T:System.Data.DataTable" /> com o nome especificado da coleção.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">O nome do objeto <see cref="T:System.Data.DataTable" /> a ser removido.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">O nome do namespace <see cref="T:System.Data.DataTable" /> a ser pesquisado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">A coleção não tem uma tabela com o nome especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">Remove o objeto <see cref="T:System.Data.DataTable" /> no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">O índice do <see langword="DataTable" /> a ser removido.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">A coleção não tem uma tabela no índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">Define os métodos de extensão para a classe <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> é uma classe estática.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Cria e retorna um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">O <see cref="T:System.Data.DataTable" /> de origem com base no qual o <see cref="T:System.Data.DataView" /> habilitado para LINQ é criado.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">Cria e retorna um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ que representa a consulta LINQ to DataSet.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">A consulta LINQ to DataSet de origem com base na qual o <see cref="T:System.Data.DataView" /> habilitado para LINQ é criado.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Retorna um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />. Esse objeto pode ser usado em uma expressão LINQ ou um método de consulta.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">A origem <see cref="T:System.Data.DataTable" /> a ser tornada enumerável.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">A fonte de <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTable" /> que contém cópias dos objetos <see cref="T:System.Data.DataRow" />, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Um <see cref="T:System.Data.DataTable" /> que contém a sequência de entrada como o tipo de objetos <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> e não é possível criar uma nova tabela.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copia objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataTable" /> especificado, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Uma enumeração <see cref="T:System.Data.LoadOption" /> que especifica as opções de carga do <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Os objetos <see cref="T:System.Data.DataRow" /> copiados não se ajustam ao esquema do <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> ou o destino <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copia objetos <see cref="T:System.Data.DataRow" /> no <see cref="T:System.Data.DataTable" /> especificado, dado um objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Uma enumeração <see cref="T:System.Data.LoadOption" /> que especifica as opções de carga do <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">Um delegado <see cref="T:System.Data.FillErrorEventHandler" /> que representa o método que vai manipular um erro.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Os objetos <see cref="T:System.Data.DataRow" /> copiados não se ajustam ao esquema do <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">A sequência de origem <see cref="T:System.Collections.Generic.IEnumerable`1" /> é <see langword="null" /> ou o destino <see cref="T:System.Data.DataTable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Data.DataRow" /> na sequência de origem tem um estado de <see cref="F:System.Data.DataRowState.Deleted" />.
-ou-
A sequência de origem não contém nenhum objeto <see cref="T:System.Data.DataRow" />.
-ou-
Um <see cref="T:System.Data.DataRow" /> na sequência de origem é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Fornece dados para o método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">Inicializa uma nova instância de <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">O <see cref="T:System.Data.DataRow" /> sendo adicionado.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">Obtém a linha que está sendo adicionada.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">O <see cref="T:System.Data.DataRow" /> que está sendo adicionado.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Representa o método que manipula o método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">O <see cref="T:System.Data.DataTableReader" /> obtém o conteúdo de um ou mais objetos <see cref="T:System.Data.DataTable" /> na forma de um ou mais conjuntos de resultados somente leitura de somente avanço.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableReader" /> usando dados do <see cref="T:System.Data.DataTable" /> fornecido.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">O <see cref="T:System.Data.DataTable" /> do qual o novo <see cref="T:System.Data.DataTableReader" /> obtém seu conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataTableReader" /> usando a matriz de objetos <see cref="T:System.Data.DataTable" /> fornecida.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">A matriz de objetos <see cref="T:System.Data.DataTable" /> que fornece os resultados para o novo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Fecha o <see cref="T:System.Data.DataTableReader" /> atual.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">A profundidade de aninhamento da linha atual do <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">A profundidade do aninhamento para a linha atual; sempre zero.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">Retorna o número de colunas na linha atual.</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">Quando não posicionado em um conjunto de resultados válido, 0; caso contrário, o número de colunas na linha atual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de recuperar a contagem de campos em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtém o valor da coluna especificada como um <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">A coluna especificada não contém um <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtém o valor da coluna especificada como um byte.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">A coluna especificada não contém um byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">Lê um fluxo de bytes, começando no deslocamento de coluna especificado no buffer como uma matriz iniciada no deslocamento de buffer especificado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">O índice no buffer no qual será iniciada a colocação dos dados.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">O tamanho máximo a ser copiado no buffer.</param>
      <returns vsli:raw="The actual number of bytes read.">O número real de bytes lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">A coluna especificada não contém uma matriz de bytes.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">Obtém o valor da coluna especificada como um caractere.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the column.">O valor da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">O campo especificado não contém um caractere.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Retorna o valor da coluna especificada como uma matriz de caracteres.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">O buffer no qual o fluxo de caracteres deve ser lido.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">O índice no buffer no qual será iniciada a colocação dos dados.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">O tamanho máximo a ser copiado no buffer.</param>
      <returns vsli:raw="The actual number of characters read.">O número real de caracteres lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">A coluna especificada não contém uma matriz de caracteres.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">Obtém uma cadeia de caracteres que representa o tipo de dados da coluna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="A string representing the column's data type.">Uma cadeia de caracteres que representa o tipo de dados da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">A coluna especificada não contém um valor de DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtém o valor da coluna especificada como um <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">A coluna especificada não contém um valor <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">Obtém o valor da coluna como um número de ponto flutuante de precisão dupla.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">O ordinal com base em zero da coluna.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see langword="DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">A coluna especificada não contém um número de ponto flutuante de precisão dupla.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">Retorna um enumerador que pode ser usado para iterar na coleção de item.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">Um objeto <see cref="T:System.Collections.IEnumerator" /> que representa a coleção de itens.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Obtém o <see cref="T:System.Type" /> que é o tipo de dados do objeto.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the column.">O valor da coluna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">A coluna especificada não contém um número de ponto flutuante de precisão simples.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">Obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">A coluna especificada não contém um GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">A coluna especificada não contém um inteiro com sinal de 16 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">A coluna especificada não contém um valor inteiro com sinal de 32 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">A coluna especificada não contém um valor inteiro com sinal de 64 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtém o valor da coluna especificada como um <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The name of the specified column.">O nome da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">Obtém a ordinal da coluna, de acordo com o nome da coluna.</summary>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">Obtém o tipo da coluna especificada no formato específico do provedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">O <see cref="T:System.Type" /> que é o tipo de dados do objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">Obtém o valor da coluna especificada no formato específico do provedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">O número com base em zero da coluna cujo valor é recuperado.</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">O valor da coluna especificada no formato específico do provedor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Preenche a matriz fornecida com informações de tipo específicas do provedor para todas as colunas no <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Uma matriz de objetos a ser preenchida com as informações de tipo para as colunas no <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">O número de valores de coluna copiados para a matriz.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">O <see cref="T:System.Data.DataTableReader" /> está fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">Obtém o valor da coluna especificada como uma cadeia de caracteres.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The value of the specified column.">O valor da coluna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">A coluna especificada não contém uma cadeia de caracteres.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">Obtém o valor da coluna especificada em seu formato nativo.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">O valor da coluna especificada. Esse método retorna <see langword="DBNull" /> para colunas nulas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar colunas em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">Popula uma matriz de objetos com os valores da coluna da linha atual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Uma matriz de <see cref="T:System.Object" /> para a qual copiar os valores da coluna de <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">O número de valores de coluna copiados para a matriz.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">Obtém um valor que indica se o <see cref="T:System.Data.DataTableReader" /> contém uma ou mais linhas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.DataTableReader" /> contiver uma ou mais linhas; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de recuperar informações sobre um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Obtém um valor que indica se o <see cref="T:System.Data.DataTableReader" /> está fechado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Data.DataTableReader" /> estiver fechado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">Obtém um valor que indica se a coluna contém valores ausentes ou inexistente.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da coluna especificada for equivalente a <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">Obtém o valor da coluna especificada em seu formato nativo de acordo com o ordinal da coluna.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the specified column in its native format.">O valor da coluna especificada em seu formato nativo.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">Obtém o valor da coluna especificada em seu formato nativo de acordo com o nome da coluna.</summary>
      <param name="name" vsli:raw="The name of the column.">O nome da coluna.</param>
      <returns vsli:raw="The value of the specified column in its native format.">O valor da coluna especificada em seu formato nativo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">O nome especificado não é um nome de coluna válido.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Foi feita uma tentativa de recuperar dados de uma linha excluída.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">Avança o <see cref="T:System.Data.DataTableReader" /> para o próximo conjunto de resultados, se houver.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver outro conjunto de resultados; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Foi feita uma tentativa de navegar em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">Avança o <see cref="T:System.Data.DataTableReader" /> para o próximo registro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver outra linha a ser lida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Foi feita uma tentativa de ler ou acessar uma coluna em um <see cref="T:System.Data.DataTableReader" /> fechado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">Obtém o número de linhas inseridas, alteradas ou excluídas pela execução da instrução SQL.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">O <see cref="T:System.Data.DataTableReader" /> não dá suporte a essa propriedade e sempre retorna 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">Representa uma exibição personalizada sujeita a limite de dados de um <see cref="T:System.Data.DataTable" /> para classificação, filtragem, pesquisa, edição e navegação. O <see cref="T:System.Data.DataView" /> não armazenam dados, mas representa uma exibição conectada do <see cref="T:System.Data.DataTable" /> correspondente. Alterações aos dados do <see cref="T:System.Data.DataView" /> afetarão o <see cref="T:System.Data.DataTable" />. Alterações aos dados do <see cref="T:System.Data.DataTable" /> afetarão todos os <see cref="T:System.Data.DataView" />s associados a ele.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" /> com o <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Um <see cref="T:System.Data.DataTable" /> para adicionar ao <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataView" /> com o <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> e <see cref="T:System.Data.DataViewRowState" /> especificados.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Um <see cref="T:System.Data.DataTable" /> para adicionar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Um <see cref="P:System.Data.DataView.RowFilter" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Um <see cref="P:System.Data.DataView.Sort" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Um <see cref="T:System.Data.DataViewRowState" /> para aplicar ao <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Adiciona uma nova linha ao <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">Um novo objeto <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">Obtém ou define um valor que indica se é permitido excluir.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se as exclusões forem permitidas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">Obtém ou define um valor que indica se é permitido editar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se for permitido editar; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">Obtém ou define um valor que indica se as novas linhas podem ser adicionadas usando o método <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se novas linhas puderem ser adicionadas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">Obtém ou define um valor que indica se a classificação padrão deve ser usada. A classificação padrão é (crescente) por todas as chaves primárias, conforme especificado por <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a classificação padrão for usada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Começa a inicialização de um <see cref="T:System.Data.DataView" /> usado em um formulário ou por outro componente. A inicialização ocorre em runtime.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Fecha o <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">Ocorre após um <see cref="T:System.Data.DataColumnCollection" /> ter sido alterado com êxito.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">Copia os itens para uma matriz. Somente para Interfaces do Web Forms.</summary>
      <param name="array" vsli:raw="array to copy into.">a matriz para a qual será copiado.</param>
      <param name="index" vsli:raw="index to start at.">o índice no qual será iniciado.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">Obtém o número de registros em <see cref="T:System.Data.DataView" /> após <see cref="P:System.Data.DataView.RowFilter" /> e <see cref="P:System.Data.DataView.RowStateFilter" /> terem sido aplicados.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">O número de registros em <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">Obtém o <see cref="T:System.Data.DataViewManager" /> associado a esta exibição.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">O <see langword="DataViewManager" /> que criou esta exibição. Se esse é o <see cref="T:System.Data.DataView" /> padrão para um <see cref="T:System.Data.DataTable" />, a propriedade <see langword="DataViewManager" /> retorna o <see langword="DataViewManager" /> padrão para o <see langword="DataSet" />. Caso contrário, se o <see langword="DataView" /> foi criado sem um <see langword="DataViewManager" />, esta propriedade é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">Exclui uma linha no índice especificado.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">O índice da linha a ser excluída.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Descarta os recursos (exceto a memória) usados pelo objeto <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Encerra a inicialização de um <see cref="T:System.Data.DataView" /> que é usado em um formulário ou por outro componente. A inicialização ocorre em runtime.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">Determina se as instâncias <see cref="T:System.Data.DataView" /> especificadas são consideradas iguais.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">O <see cref="T:System.Data.DataView" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas instâncias <see cref="T:System.Data.DataView" /> forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">Localiza uma linha no <see cref="T:System.Data.DataView" /> segundo o valor da chave de classificação especificada.</summary>
      <param name="key" vsli:raw="The object to search for.">O objeto a ser procurado.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">O índice da linha no <see cref="T:System.Data.DataView" /> que contém o valor da chave de classificação especificada; caso contrário, -1 se o valor da chave de classificação não existir.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">Localiza uma linha no <see cref="T:System.Data.DataView" /> pelos valores de chave de classificação especificados.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Uma matriz de valores, digitada como <see cref="T:System.Object" />.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">O índice da posição da primeira linha no <see cref="T:System.Data.DataView" /> que corresponde aos valores de chave de classificação especificados; caso contrário, -1 se não houver nenhum valor de chave de classificação correspondente.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Retorna uma matriz de objetos <see cref="T:System.Data.DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificado.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">O valor da coluna, digitado como <see cref="T:System.Object" />, a ser pesquisado.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Uma matriz de objetos <see langword="DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificada ou, se nenhuma linha contiver os valores da chave de classificação especificada, uma matriz de <see langword="DataRowView" /> vazia.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Retorna uma matriz de objetos <see cref="T:System.Data.DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificado.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Uma matriz de valores de coluna, digitada como <see cref="T:System.Object" />, a ser pesquisada.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Uma matriz de objetos <see langword="DataRowView" /> cujas colunas correspondem ao valor da chave de classificação especificada ou, se nenhuma linha contiver os valores da chave de classificação especificada, uma matriz de <see langword="DataRowView" /> vazia.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém um enumerador para este <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">Um <see cref="T:System.Collections.IEnumerator" /> para navegar pela lista.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">Ocorre após um <see cref="T:System.Data.DataView" /> ter sido alterado com êxito.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">Ocorrerá quando a inicialização da <see cref="T:System.Data.DataView" /> for concluída.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">Obtém um valor que indica se o componente é inicializado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o componente concluiu a inicialização; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém um valor que indica se a fonte de dados está atualmente aberta e projetando exibições de dados no <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se a fonte estiver aberta; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">Obtém uma linha de dados de uma tabela especificada.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O índice de um registro no <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">Um <see cref="T:System.Data.DataRowView" /> da linha que você deseja.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">Ocorre quando a lista gerenciada pelo <see cref="T:System.Data.DataView" /> é alterada.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Abre um <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">Reservado apenas para uso interno.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém ou define a expressão usada para filtrar quais linhas são exibidas no <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">Uma cadeia de caracteres que especifica como as linhas devem ser filtradas.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém ou define o filtro de estado de linha usado no <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém ou define a coluna ou as colunas de classificação e a ordem de classificação para o <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">Uma cadeia de caracteres que contém o nome da coluna seguido por “ASC” (crescente) ou “DESC” (decrescente). As colunas são classificadas em ordem crescente por padrão. Várias colunas podem ser separadas por vírgulas.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Um valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Um valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Um valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Um valor <see cref="T:System.Int32" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">Um valor <see cref="T:System.Object" /> a ser inserido.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Um valor <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Um valor <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Um valor <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="The item added to the list.">O item adicionado à lista.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Um valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">Um objeto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> a serem encontrados na coleção como associáveis. Ele pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.DataTable" /> de origem.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">Um <see cref="T:System.Data.DataTable" /> que fornece os dados para esta exibição.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, o <see cref="T:System.Data.DataTable" /> retornado conterá linhas que têm valores distintos para todas as suas colunas. O valor padrão é <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Uma matriz de cadeia de caracteres que contém uma lista de nomes da coluna a serem incluídos no <see cref="T:System.Data.DataTable" /> retornado. O <see cref="T:System.Data.DataTable" /> contém as colunas especificadas na ordem em que aparecem nessa matriz.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O nome do <see cref="T:System.Data.DataTable" /> retornado.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Cria e retorna um novo <see cref="T:System.Data.DataTable" /> com base em linhas em um <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">O nome do <see cref="T:System.Data.DataTable" /> retornado.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, o <see cref="T:System.Data.DataTable" /> retornado conterá linhas que têm valores distintos para todas as suas colunas. O valor padrão é <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Uma matriz de cadeia de caracteres que contém uma lista de nomes da coluna a serem incluídos no <see cref="T:System.Data.DataTable" /> retornado. O <see langword="DataTable" /> contém as colunas especificadas na ordem em que aparecem nessa matriz.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Uma nova instância de <see cref="T:System.Data.DataTable" /> que contém as linhas e as colunas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">Reservado apenas para uso interno.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">Reservado apenas para uso interno.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">Reservado apenas para uso interno.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contém uma <see cref="T:System.Data.DataViewSettingCollection" /> padrão para cada <see cref="T:System.Data.DataTable" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.DataViewManager" /> para o <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">O nome do <see cref="T:System.Data.DataSet" /> a ser usado.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Cria um <see cref="T:System.Data.DataView" /> para o <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">O nome do <see cref="T:System.Data.DataTable" /> a ser usado no <see cref="T:System.Data.DataView" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.DataSet" /> a ser usado com o <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">O <see cref="T:System.Data.DataSet" /> a ser usado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">Obtém ou define um valor usado para persistência do código.</summary>
      <returns vsli:raw="A value that is used for code persistence.">Um valor que é usado para persistência de código.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém o <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see cref="T:System.Data.DataTable" /> no <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">Um <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ocorre depois que uma linha é adicionada ou excluída de uma <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Gera um evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> quando um <see cref="T:System.Data.DataRelation" /> é adicionado ou removido do <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Adiciona um item ao <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The position into which the new element was inserted.">A posição na qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Determinará se o <see cref="T:System.Collections.IList" /> contiver um valor específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Object" /> for encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Determina o índice de um item específico em <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">O índice de <paramref name="value" /> se encontrado na lista; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Insere um item na <see cref="T:System.Collections.IList" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">O <see cref="T:System.Object" /> a ser inserido no <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtém ou define o elemento no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns vsli:raw="The element at the specified index.">O elemento no índice especificado.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">Remove o item <see cref="T:System.Collections.IList" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">O índice com base em zero do item a ser removido.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">Adiciona o <see cref="T:System.ComponentModel.PropertyDescriptor" /> aos índices usados para pesquisa.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> a ser adicionado aos índices usados para pesquisa.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">Classifica a lista com base em um <see cref="T:System.ComponentModel.PropertyDescriptor" /> e um <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> pelo qual se classificar.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">Um dos valores de <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Retorna o índice da linha que tem o <see cref="T:System.ComponentModel.PropertyDescriptor" /> determinado.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> no qual pesquisar.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">O valor do parâmetro da propriedade a ser pesquisado.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">O índice da linha que tem o <see cref="T:System.ComponentModel.PropertyDescriptor" /> determinado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">Remove o <see cref="T:System.ComponentModel.PropertyDescriptor" /> dos índices usados para pesquisa.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> para remover os índices usados para pesquisa.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Remove qualquer classificação aplicada usando <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Retorna o <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades em cada item usado para associar os dados.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> a serem encontrados na coleção como associáveis. Ele pode ser <see langword="null" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">O <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa as propriedades em cada item usado para associar os dados.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">Retorna o nome da lista.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />, para a qual o nome da lista é retornado. Ele pode ser <see langword="null" />.</param>
      <returns vsli:raw="The name of the list.">O nome da lista.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Gera um evento <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> quando um <see cref="T:System.Data.DataTable" /> é adicionado ou removido do <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Descreve a versão dos dados em um <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">Uma nova linha.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">Linhas atuais, incluindo inalteradas, novas e modificadas. Por padrão, <see cref="T:System.Data.DataViewRowState" /> é definido como CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">Uma linha excluída.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">A versão atual dos dados originais que foram modificados (consulte <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">A versão original dos dados que foram modificados. (Embora os dados já tenham sido modificados, eles estão disponíveis como <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">nenhuma.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">Linhas originais, incluindo linhas inalteradas e excluídas.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">Uma linha inalterada.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Representa as configurações padrão para <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> e <see cref="P:System.Data.DataView.Table" /> para DataViews criadas de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">Obtém ou define um valor que indica se a classificação padrão deve ser usada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a classificação padrão for usada; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">Obtém o <see cref="T:System.Data.DataViewManager" /> que contém esse <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">Obtém ou define o filtro a ser aplicado no <see cref="T:System.Data.DataView" />. Consulte <see cref="P:System.Data.DataView.RowFilter" /> para obter um exemplo de código usando RowFilter.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">Uma cadeia de caracteres que contém o filtro a ser aplicado.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém ou define um valor que indica se deseja exibir as linhas Atuais, Excluídas, Modificadas Atuais, Modificadas Originais, Novas, Originais, Inalteradas ou nenhuma linha no <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">Um valor que indica quais linhas exibir.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtém ou define um valor que indica a classificação a ser aplicada no <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">A classificação a ser aplicada no <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">Obtém o <see cref="T:System.Data.DataTable" /> ao qual as propriedades <see cref="T:System.Data.DataViewSetting" /> se aplicam.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Um objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contém uma coleção somente leitura de objetos <see cref="T:System.Data.DataViewSetting" /> para cada <see cref="T:System.Data.DataTable" /> em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia os objetos de coleção para uma instância <see cref="T:System.Array" /> unidimensional começando no índice especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">O índice da matriz na qual iniciar a inserção.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtém o número de objetos <see cref="T:System.Data.DataViewSetting" /> no <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">O número de <see cref="T:System.Data.DataViewSetting" /> objetos na coleção.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtém um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Um objeto <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">Obtém um valor que indica se o <see cref="T:System.Data.DataViewSettingCollection" /> é somente leitura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">Sempre retorna <see langword="true" /> para indicar que a coleção é somente leitura.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">Obtém um valor que indica se o acesso a <see cref="T:System.Data.DataViewSettingCollection" /> é sincronizado (thread-safe).</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">Essa propriedade é sempre <see langword="false" />, a menos que seja substituída por uma classe derivada.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">Obtém os objetos de <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado da coleção.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">Obtém os objetos <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado por seu índice.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O índice baseado em zero do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">Obtém os <see cref="T:System.Data.DataViewSetting" /> do <see cref="T:System.Data.DataTable" /> especificado por seu nome.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">O nome do <see cref="T:System.Data.DataTable" /> a ser localizado.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Uma coleção de objetos <see cref="T:System.Data.DataViewSetting" /> .</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">A exceção lançada pelo <see cref="T:System.Data.Common.DataAdapter" /> durante uma operação de inserção, atualização ou exclusão se o número de linhas afetadas é igual a zero.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">A cadeia de caracteres de texto que descreve os detalhes da exceção.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">A cadeia de caracteres de texto que descreve os detalhes da exceção.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">Uma referência a uma exceção interna.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">A mensagem de erro que explica a razão desta exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">Uma matriz que contém os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Copia os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção, para a matriz de objetos <see cref="T:System.Data.DataRow" /> especificada.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">A matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> na qual copiar os objetos <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">Copia os objetos <see cref="T:System.Data.DataRow" /> cuja falha de atualização gerou essa exceção, para a matriz de objetos <see cref="T:System.Data.DataRow" /> especificada, começando no índice da matriz de destino especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">A matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> na qual copiar os objetos <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">O índice de matriz de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Preenche o objeto de informações de serialização especificado com os dados necessários para serializar o <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados serializados associados a <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">O parâmetro <paramref name="info" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Obtém ou define o valor de <see cref="T:System.Data.DataRow" /> que gerou o <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O valor de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">Obtém o número de linhas cuja atualização falhou, gerando essa exceção.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">Um inteiro que contém uma contagem do número de linhas cuja atualização falhou.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">Especifica o tipo de dados de um campo, uma propriedade ou um objeto <see langword="Parameter" /> de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">Um fluxo de comprimento variável de caracteres não Unicode que variam entre 1 e 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">Um fluxo de comprimento fixo de caracteres não Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">Um fluxo de comprimento variável de dados binários que variam entre 1 e 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Um tipo simples que representa valores boolianos de <see langword="true" /> ou <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">Um inteiro sem sinal de 8 bits que varia em valor de 0 a 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">Um valor de moeda variando de -2 63 (ou -922.337.203.685.477,5808) a 2 63 -1 (ou +922.337.203.685.477,5807) com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">Um tipo que representa um valor de data.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">Um tipo que representa um valor de data e hora.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Dados de data e hora. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Dados de data e hora com reconhecimento de fuso horário. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. O intervalo de valores de fuso horário é de -14:00 a +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">Um tipo simples que representam valores que variam de 1,0 x 10 -28 a aproximadamente 7,9 x 10 28 com 28-29 dígitos significativos.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">Um tipo de ponto flutuante que representa valores que variam de aproximadamente 5,0 x 10 -324 a 1,7 x 10 308 com uma precisão de 15-16 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">Um GUID (identificador global exclusivo).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">Um tipo integral que representa inteiros de 16 bits com sinal com valores entre -32768 e 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">Um tipo integral que representa inteiros de 32 bits com sinal com valores entre -2147483648 e 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">Um tipo integral que representa inteiros de 64 bits com sinal com valores entre -9223372036854775808 e 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">Um tipo geral que representa qualquer tipo de valor ou referência não explicitamente representado por outro valor <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">Um tipo integral que representa inteiros de 8 bits com sinal com valores entre -128 e 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">Um tipo de ponto flutuante que representa valores que variam de aproximadamente 1,5 x 10 -45 a 3,4 x 10 38 com uma precisão de sete dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Um tipo que representa as cadeias de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Uma cadeia de caracteres de comprimento fixo Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">Um tipo que representa um valor <see langword="DateTime" /> do SQL Server. Se você quiser usar um valor SQL Server <see langword="time" />, use <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">Um tipo integral que representa inteiros de 16 bits sem sinal com valores entre 0 e 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">Um tipo integral que representa inteiros de 32 bits sem sinal com valores entre 0 e 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">Um tipo integral que representa inteiros de 64 bits sem sinal com valores entre 0 e 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">Um valor numérico de comprimento variável.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">Uma representação analisada de um documento ou fragmento XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Representa a exceção gerada quando há uma tentativa de ação em um <see cref="T:System.Data.DataRow" /> que foi excluído.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">Representa a exceção gerada quando um nome de objeto de banco de dados duplicado é encontrado durante uma operação de adição em um objeto relacionado ao <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.DuplicateNameException" /> com a cadeia de caracteres e exceção especificadas.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> retornada por uma consulta LINQ to DataSet. Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Retorna um enumerador para a coleção de objetos <see cref="T:System.Data.DataRow" />. Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para percorrer a coleção de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> retornada por uma consulta.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">Retorna um enumerador para a coleção de objetos de linha contidos.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> fortemente tipado que pode ser usado para percorrer a coleção de objetos <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Retorna um enumerador para a coleção de objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para percorrer a coleção de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">Contém os métodos de extensão para as classes de coleção de linha de dados.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">Converte os elementos de um <see cref="T:System.Data.EnumerableRowCollection" /> para o tipo especificado.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">O <see cref="T:System.Data.EnumerableRowCollection" /> que contém os elementos a serem convertidos.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">O tipo para o qual converter os elementos de origem.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Um <see cref="T:System.Data.EnumerableRowCollection" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">Um elemento na sequência não pode ser convertido para o tipo <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">Projeta cada elemento de uma <see cref="T:System.Data.EnumerableRowCollection`1" /> em um novo formulário.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">Uma <see cref="T:System.Data.EnumerableRowCollection`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> para os quais invocar uma função de transformação.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">O tipo que <paramref name="TRow" /> será transformado em.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Um <see cref="T:System.Data.EnumerableRowCollection`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtra uma sequência de linhas com base no predicado especificado.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a filtrar.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Um <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contém linhas da sequência de entrada que atendem à condição.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">Representa a exceção que é gerada quando a propriedade <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> não pode ser avaliada.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.EvaluateException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Fornece dados para o evento <see cref="E:System.Data.Common.DataAdapter.FillError" /> de um <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">O <see cref="T:System.Data.DataTable" /> sendo atualizado.</param>
      <param name="values" vsli:raw="The values for the row being updated.">Os valores da linha sendo atualizada.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">Obtém ou define um valor que indica se deve-se ou não dar continuidade à operação de preenchimento, apesar do erro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a operação de preenchimento deve continuar; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">Obtém o <see cref="T:System.Data.DataTable" /> sendo atualizado quando o erro ocorreu.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">O <see cref="T:System.Data.DataTable" /> sendo atualizado.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">Obtém os erros que estão sendo tratados.</summary>
      <returns vsli:raw="The errors being handled.">Os erros que estão sendo manipulados.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">Obtém os valores da linha sendo atualizada quando o erro ocorreu.</summary>
      <returns vsli:raw="The values for the row being updated.">Os valores da linha sendo atualizada.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Data.Common.DataAdapter.FillError" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">O <see cref="T:System.Data.FillErrorEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">Representa uma restrição de ação imposta em um conjunto de colunas em uma relação de chave estrangeira/chave primária quando um valor ou uma linha é excluída ou atualizada.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com os objetos <see cref="T:System.Data.DataColumn" /> pai e filho especificados.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">O <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">O <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com as matrizes especificadas de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome especificado e objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">O <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">O <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.ForeignKeyConstraint" /> com o nome especificado, bem como matrizes de objetos <see cref="T:System.Data.DataColumn" /> pai e filho.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">O nome do <see cref="T:System.Data.ForeignKeyConstraint" />. Se for <see langword="null" /> ou uma cadeia de caracteres vazia, um nome padrão será fornecido quando for adicionado à coleção de restrições.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio. Os objetos <see cref="T:System.Data.ForeignKeyConstraint" /> criados usando este construtor, em seguida, devem ser adicionados à coleção via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tabelas e colunas com os nomes especificados devem existir no momento em que o método é chamado ou se <see cref="M:System.Data.DataTable.BeginInit" /> foi chamado antes de se chamar este construtor, as tabelas e colunas com os nomes especificados devem existir no momento em que <see cref="M:System.Data.DataTable.EndInit" /> é chamado.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">O nome do pai <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">O nome do <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" /> e <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é excluída. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é atualizada. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Este construtor é fornecido para suporte de tempo de design no ambiente do Visual Studio. Os objetos <see cref="T:System.Data.ForeignKeyConstraint" /> criados usando este construtor, em seguida, devem ser adicionados à coleção via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tabelas e colunas com os nomes especificados devem existir no momento em que o método é chamado ou se <see cref="M:System.Data.DataTable.BeginInit" /> foi chamado antes de se chamar este construtor, as tabelas e colunas com os nomes especificados devem existir no momento em que <see cref="M:System.Data.DataTable.EndInit" /> é chamado.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">O nome do pai <see cref="T:System.Data.DataTable" /> que contém objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> pai na restrição.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Uma matriz dos nomes de objetos <see cref="T:System.Data.DataColumn" /> filho na restrição.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" /> e <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é excluída. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Um dos valores <see cref="T:System.Data.Rule" /> a serem usados quando uma linha é atualizada. O padrão é <see langword="Cascade" />. Os valores possíveis incluem <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> e <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Uma ou ambas as colunas são <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">As colunas têm tipos de dados diferentes.

Ou -
As tabelas não pertencem ao mesmo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">Indica a ação que deve ocorrer por essa restrição quando <see cref="M:System.Data.DataTable.AcceptChanges" /> é invocado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.AcceptRejectRule" />. Os valores possíveis <see langword="None" />incluem e <see langword="Cascade" />. O padrão é <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">Obtém as colunas filho dessa restrição.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas filho da restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">Obtém ou define a ação que ocorre nessa restrição quando uma linha é excluída.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.Rule" />. O padrão é <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">Obtém um valor que indica se o <see cref="T:System.Data.ForeignKeyConstraint" /> atual é idêntico ao objeto especificado.</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">O objeto ao qual este <see cref="T:System.Data.ForeignKeyConstraint" /> é comparado. Dois <see cref="T:System.Data.ForeignKeyConstraint" /> são iguais se eles restringem as mesmas colunas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os objetos forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">Obtém o código hash desta instância do objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">As colunas pai dessa restrição.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">Uma matriz de <see cref="T:System.Data.DataColumn" /> objetos que são as colunas pai da restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">Obtém a tabela pai dessa restrição.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">O pai <see cref="T:System.Data.DataTable" /> desta restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">Obtém a tabela filho dessa restrição.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">Um <see cref="T:System.Data.DataTable" /> que é a tabela filho na restrição.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">Obtém ou define a ação que ocorre nessa restrição quando uma linha é atualizada.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.Rule" />. O padrão é <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">Associa uma coluna de fonte de dados a uma coluna <see cref="T:System.Data.DataSet" /> e é implementado pela classe <see cref="T:System.Data.Common.DataColumnMapping" />, que é usada em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtém ou define o nome da coluna dentro de <see cref="T:System.Data.DataSet" /> para o qual mapear.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">O nome da coluna dentro do para <see cref="T:System.Data.DataSet" /> o qual mapear. O nome não diferencia maiúsculas de minúsculas.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtém ou define o nome da coluna na fonte de dados da qual mapear. O nome diferencia maiúsculas de minúsculas.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">O nome que diferencia maiúsculas de minúsculas da coluna na fonte de dados.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contém uma coleção de objetos DataColumnMapping e é implementado pelo <see cref="T:System.Data.Common.DataColumnMappingCollection" />, que é usado em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Adiciona um objeto de ColumnMapping à coleção ColumnMapping usando a coluna de origem e nomes de coluna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">O nome da coluna <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">O objeto ColumnMapping que foi adicionado à coleção.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtém um valor que indica se o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contém um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome de coluna de origem especificado existe; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtém o objeto ColumnMapping com o nome de coluna <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">O nome da coluna <see cref="T:System.Data.DataSet" /> dentro da coleção.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">O objeto ColumnMapping com o nome de coluna <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">Obtém o local do objeto <see cref="T:System.Data.Common.DataColumnMapping" /> com o nome da coluna de origem especificado. O nome diferencia maiúsculas de minúsculas.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">O nome que diferencia maiúsculas de minúsculas da coluna de origem.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">O local baseado em zero do objeto <see langword="DataColumnMapping" /> com o nome da coluna de origem especificado.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtém ou define o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see langword="SourceColumn" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">O nome <see langword="SourceColumn" /> do objeto <see langword="IColumnMapping" /> a ser localizado.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">O <see langword="IColumnMapping" /> objeto com o nome <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">Remove o objeto <see cref="T:System.Data.IColumnMapping" /> com o nome <see cref="P:System.Data.IColumnMapping.SourceColumn" /> especificado da coleção.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">O nome <see langword="SourceColumn" /> que diferencia maiúsculas de minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Um objeto <see cref="T:System.Data.Common.DataColumnMapping" /> não existe com o nome <see langword="SourceColumn" /> especificado.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">Permite que um objeto implemente um DataAdapter e representa um conjunto de métodos e propriedades relacionadas à ação de mapeamento que são usadas para preencher e atualizar um <see cref="T:System.Data.DataSet" /> e atualizar uma fonte de dados.
Instâncias <see cref="T:System.Data.IDbDataAdapter" /> são para fontes de dados que são (ou se parecem com) bancos de dados relacionais com comandos textuais (como Transact-SQL), enquanto instâncias <see cref="T:System.Data.IDataAdapter" /> podem usar qualquer tipo de fonte de dados.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Adiciona ou atualiza linhas no <see cref="T:System.Data.DataSet" /> para corresponder àquelas na fonte de dados usando o nome <see cref="T:System.Data.DataSet" /> e cria um <see cref="T:System.Data.DataTable" /> chamado "Table".</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Um <see cref="T:System.Data.DataSet" /> a ser preenchido com registros e, se necessário, esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">O número de linhas adicionadas com êxito a ou atualizadas no <see cref="T:System.Data.DataSet" />. Isso não inclui linhas afetadas por instruções que não retornam linhas.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Adiciona um <see cref="T:System.Data.DataTable" /> com o nome “Tabela” ao <see cref="T:System.Data.DataSet" /> especificado e configura o esquema para corresponder a eles na fonte de dados com base no <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">O <see cref="T:System.Data.DataSet" /> a ser preenchido com o esquema da fonte de dados.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Uma matriz de objetos <see cref="T:System.Data.DataTable" /> que contém informações de esquema retornadas da fonte de dados.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Uma matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contém os parâmetros definidos pelo usuário.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">Indica ou especifica se colunas ou tabelas de origem não mapeadas são passadas com seus nomes de origem para serem filtradas ou para gerarem um erro.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.MissingMappingAction" />. O padrão é <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">O valor definido não é um dos valores <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">Indica ou especifica se as colunas, tabelas de origem ausentes e suas relações são adicionadas ao esquema do conjunto de dados, se são ignoradas ou se causam um erro a ser gerado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.MissingSchemaAction" />. O padrão é <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">O valor definido não é um dos valores <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indica como uma tabela de origem é mapeada para uma tabela de conjunto de dados.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Uma coleção que fornece o mapeamento mestre entre os registros retornados e o <see cref="T:System.Data.DataSet" />. O valor padrão é uma coleção vazia.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Chama as respectivas instruções INSERT, UPDATE ou DELETE para cada linha inserida, atualizada ou excluída no <see cref="T:System.Data.DataSet" /> especificado em um <see cref="T:System.Data.DataTable" /> denominado “Tabela”.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">O <see cref="T:System.Data.DataSet" /> usado para atualizar a fonte de dados.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O número de linhas atualizadas com êxito a partir do <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registro afetado.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Representa um parâmetro a um objeto de Comando e, como opção, seus mapeamentos para colunas <see cref="T:System.Data.DataSet" /> e é implementado por provedores de dados .NET Framework que acessam as fontes de dados.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">A propriedade não foi definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">Obtém um valor que indica se o parâmetro aceita valores nulos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se valores nulos forem aceitos; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">Obtém ou define o nome de <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">O nome do <see cref="T:System.Data.IDataParameter" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">O nome da coluna de origem que é mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> a ser usado ao carregar <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">A propriedade não foi definida como um dos valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtém ou define o valor do parâmetro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Um <see cref="T:System.Object" /> que é o valor do parâmetro. O valor padrão é null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Coleta todos os parâmetros relevantes a um objeto de Comando e seus mapeamentos para colunas <see cref="T:System.Data.DataSet" /> e é implementado por provedores de dados .NET Framework que acessam as fontes de dados.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">Obtém um valor que indica se um parâmetro na coleção tem o nome especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">O nome do parâmetro.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver parâmetro, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Obtém o local do <see cref="T:System.Data.IDataParameter" /> dentro da coleção.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">O nome do parâmetro.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">O local baseado em zero do <see cref="T:System.Data.IDataParameter" /> dentro da coleção.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Obtém ou define o parâmetro no índice especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">O nome do parâmetro a ser recuperado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Um <see cref="T:System.Object" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">Remove o <see cref="T:System.Data.IDataParameter" /> da coleção.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">O nome do parâmetro.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">Fornece um meio de ler um ou mais fluxos somente encaminhamento de conjuntos de resultados obtidos com a execução de um comando em uma fonte de dados e é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">Fecha o objeto <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtém um valor que indica a profundidade de aninhamento da linha atual.</summary>
      <returns vsli:raw="The level of nesting.">O nível de aninhamento.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">O <see cref="T:System.Data.IDataReader" /> está fechado.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">Obtém um valor que indica se o leitor de dados está fechado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o leitor de dados estiver fechado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">Avança o leitor de dados para o resultado seguinte ao ler os resultados de instruções SQL em lote.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">Avança o <see cref="T:System.Data.IDataReader" /> para o próximo registro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">O número de linhas alteradas, inseridas ou excluídas, 0 se nenhuma linha tiver sido afetada ou a instrução tiver falhado e -1 para instruções SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">Fornece acesso aos valores de coluna em cada linha para um <see langword="DataReader" /> e é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">Obtém o número de colunas na linha atual.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">Quando não estiver posicionado em um conjunto de registros válido, 0. Caso contrário, o número de colunas no registro atual. O padrão é -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtém o valor da coluna especificada como um booliano.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The value of the column.">O valor da coluna.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">Obtém o valor de inteiro sem sinal de 8 bits da coluna especificada.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">O valor de inteiro sem sinal de 8 bits da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lê um fluxo de bytes do deslocamento de coluna especificado no buffer como uma matriz, iniciando no deslocamento de buffer especificado.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">O índice no campo no qual será iniciada a operação de leitura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">O número de bytes a serem lidos.</param>
      <returns vsli:raw="The actual number of bytes read.">O número real de bytes lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">Obtém o valor do caractere da coluna especificada.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <returns vsli:raw="The character value of the specified column.">O valor do caractere da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lê um fluxo de caracteres do deslocamento de coluna especificado no buffer como uma matriz iniciada no deslocamento de buffer fornecido.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">O ordinal da coluna baseado em zero.</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">O índice dentro da linha da qual iniciar a operação de leitura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">O buffer no qual o fluxo de bytes deve ser lido.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">O número de bytes a serem lidos.</param>
      <returns vsli:raw="The actual number of characters read.">O número real de caracteres lidos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Retorna um <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">O <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">Obtém as informações de tipo de dados do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The data type information for the specified field.">As informações de tipo de dados do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">Obtém o valor de dados de data e hora do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The date and time data value of the specified field.">O valor de dados de data e hora do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">Obtém o valor numérico de posição fixa do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">O valor numérico de posição fixa do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">Obtém o número de ponto flutuante de precisão dupla do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">O número de ponto flutuante de precisão dupla do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Obtém as informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">As informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">Obtém o número de ponto flutuante de precisão simples do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">O número de ponto flutuante de precisão simples do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Retorna o valor de GUID do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The GUID value of the specified field.">O valor de GUID do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">Obtém o valor inteiro com sinal de 16 bits do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">O valor inteiro com sinal de 16 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">Obtém o valor inteiro com sinal de 32 bits do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">O valor inteiro com sinal de 32 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">Obtém o valor inteiro com sinal de 64 bits do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">O valor inteiro com sinal de 64 bits do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">Obtém o nome do campo a ser localizado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">O nome do campo ou a cadeia de caracteres vazia (""), se não houver valor a ser retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">Retorna o índice do campo nomeado.</summary>
      <param name="name" vsli:raw="The name of the field to find.">O nome do campo a ser localizado.</param>
      <returns vsli:raw="The index of the named field.">O índice do campo nomeado.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">Obtém o valor de cadeia de caracteres do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The string value of the specified field.">O valor de cadeia de caracteres do campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">Retorne o valor do campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">O <see cref="T:System.Object" /> que conterá o valor do campo após o retorno.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Popula uma matriz de objetos com os valores da coluna do registro atual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Uma matriz de <see cref="T:System.Object" /> na qual os campos de atributo serão copiados.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">O número de instâncias de <see cref="T:System.Object" /> na matriz.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">Retorna se o campo especificado está definido como nulo.</summary>
      <param name="i" vsli:raw="The index of the field to find.">O índice do campo a ser localizado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o campo especificado é definido como nulo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">Obtém a coluna localizada no índice especificado.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">O índice baseado em zero da coluna a obter.</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">A coluna localizado no índice especificado como um <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">Obtém a coluna com o nome especificado.</summary>
      <param name="name" vsli:raw="The name of the column to find.">O nome da coluna a ser encontrado.</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">A coluna com o nome especificado como um <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Nenhuma coluna com o nome especificado foi encontrada.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">Representa uma instrução SQL que é executada enquanto está conectada a uma fonte de dados e que é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Tenta cancelar a execução de um <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Obtém ou define o comando de texto a ser executado na fonte de dados.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">O comando de texto a ser executado. O valor padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">Obtém ou define o tempo de espera (em segundos) antes de encerrar a tentativa de executar um comando e antes de gerar um erro.</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">O tempo de espera (em segundos) para a execução do comando. O valor padrão é 30 segundos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">O valor atribuído da propriedade é menor que 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">Indica ou especifica como a propriedade <see cref="P:System.Data.IDbCommand.CommandText" /> é interpretada.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.CommandType" />. O padrão é <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtém ou define o <see cref="T:System.Data.IDbConnection" /> usado por essa instância do <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">A conexão com a fonte de dados.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Cria uma nova instância de um objeto <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Um objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">Executa uma instrução SQL no objeto <see langword="Connection" /> de um provedor de dados .NET Framework e retorna o número de linhas afetadas.</summary>
      <returns vsli:raw="The number of rows affected.">O número de linhas afetadas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">A conexão não existe.
- ou -
A conexão não está aberta.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> para o <see cref="P:System.Data.IDbCommand.Connection" /> e cria um <see cref="T:System.Data.IDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Um objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">Executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Colunas ou linhas extra são ignoradas.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">A primeira coluna da primeira linha no conjunto de resultados.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtém o <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Os parâmetros da instrução SQL ou do procedimento armazenado.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Cria uma versão preparada (ou compilada) do comando na fonte de dados.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não foi definido.
- ou -
O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não é <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">Obtém ou define a transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">o objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado. O valor padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Obtém ou define como os resultados do comando são aplicados a <see cref="T:System.Data.DataRow" /> quando usados pelo método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Um dos valores de <see cref="T:System.Data.UpdateRowSource" />. O padrão é <see langword="Both" />, a menos que o comando seja gerado automaticamente. Nesse caso, o padrão é <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">O valor inserido não era um dos valores <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">Representa uma conexão aberta com uma fonte de dados, e é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Inicia uma transação de banco de dados.</summary>
      <returns vsli:raw="An object representing the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">Inicia uma transação de banco de dados com o valor <see cref="T:System.Data.IsolationLevel" /> especificado.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns vsli:raw="An object representing the new transaction.">Um objeto que representa a nova transação.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">Altera o banco de dados atual para um objeto <see langword="Connection" /> aberto.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">O nome do banco de dados a ser usado em lugar do banco de dados atual.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">Fecha a conexão com o banco de dados.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">Obtém ou define a cadeia de caracteres usada para abrir um banco de dados.</summary>
      <returns vsli:raw="A string containing connection settings.">Uma cadeia de caracteres que contém as configurações de conexão.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">Obtém o tempo de espera (em segundos) durante a tentativa de estabelecimento da conexão antes que a tentativa seja terminada e um erro seja gerado.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">O tempo (em segundos) de espera para abrir uma conexão. O valor padrão é 15 segundos.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">Cria e retorna um objeto de comando associado à conexão.</summary>
      <returns vsli:raw="A Command object associated with the connection.">Um objeto de comando associado à conexão.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">Obtém o nome do banco de dados atual ou o banco de dados a ser usado após uma conexão ser aberta.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">O nome do banco de dados atual ou o nome do banco de dados a ser usado assim que a conexão for aberta. O valor padrão é uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">Abre uma conexão de banco de dados com as configurações especificadas pela propriedade <see langword="ConnectionString" /> do objeto Connection específico do provedor.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">Obtém o estado atual da conexão.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">Representa um conjunto de propriedades relacionadas ao comando que são usadas para preencher o <see cref="T:System.Data.DataSet" /> e atualizar uma fonte de dados, o qual é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtém ou define uma instrução SQL para excluir registros do conjunto de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtém ou define uma instrução SQL usada para inserir novos registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados para novas linhas no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtém ou define uma instrução SQL usada para selecionar registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Um <see cref="T:System.Data.IDbCommand" /> que é usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtém ou define uma instrução SQL usada para atualizar registros na fonte de dados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados para linhas modificadas no conjunto de dados.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Usada pelos Designers de dados do Visual Basic .NET para representar um parâmetro para um objeto de comando e, opcionalmente, seu mapeamento para colunas <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indica a precisão de parâmetros numéricos.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">O número máximo de dígitos usados para representar a propriedade Value de um objeto de parâmetro de provedor de dados. O valor padrão é 0, que indica que um provedor de dados define a precisão para o valor.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">Indica a escala de parâmetros numéricos.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">O número de casas decimais para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido. O padrão é 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">O tamanho do parâmetro.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é inferido do valor do parâmetro.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">Representa uma transação a ser realizada em uma fonte de dados e é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">Confirma a transação do banco de dados.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Ocorreu um erro ao tentar confirmar a transação.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">A transação já foi confirmada ou revertida.
- ou -
A conexão foi desfeita.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">Especifica o objeto Connection a associar à transação.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">O objeto de conexão a ser associado à transação.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">Especifica o <see cref="T:System.Data.IsolationLevel" /> para essa transação.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">O <see cref="T:System.Data.IsolationLevel" /> para essa transação. O padrão é <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">Reverte uma transação de um estado pendente.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Ocorreu um erro ao tentar confirmar a transação.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">A transação já foi confirmada ou revertida.
- ou -
A conexão foi desfeita.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Representa a exceção gerada ao chamar o método <see cref="M:System.Data.DataRow.EndEdit" /> dentro do evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.InRowChangingEventException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">Fornece a funcionalidade básica para a criação de coleções.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">Copia todos os elementos do <see cref="T:System.Data.InternalDataCollectionBase" /> atual para um <see cref="T:System.Array" /> unidimensional, começando no índice <see cref="T:System.Data.InternalDataCollectionBase" /> especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">O <see cref="T:System.Array" /> unidimensional para o qual os elementos do objeto <see cref="T:System.Data.InternalDataCollectionBase" /> atual serão copiados.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">O índice <see cref="T:System.Array" /> de destino no qual a cópia é iniciada.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">Obtém o número total de elementos em uma coleção.</summary>
      <returns vsli:raw="The total number of elements in a collection.">O número total de elementos em uma coleção.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtém um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Um <see cref="T:System.Collections.IEnumerator" /> para a coleção.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">Obtém um valor que indica se o <see cref="T:System.Data.InternalDataCollectionBase" /> é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">Obtém um valor que indica se o <see cref="T:System.Data.InternalDataCollectionBase" /> é sincronizado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção for sincronizada; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">Obtém os itens da coleção como uma lista.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">Um <see cref="T:System.Collections.ArrayList" /> que contém a coleção.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">Obtém um objeto que pode ser usado para sincronizar a coleção.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">O <see cref="T:System.Object" /> usado para sincronizar a coleção.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">Representa a exceção gerada quando ocorre uma tentativa incorreta de criar ou acessar uma relação.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidConstraintException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Representa a exceção gerada ao tentar adicionar uma <see cref="T:System.Data.DataColumn" /> que contém um <see cref="P:System.Data.DataColumn.Expression" /> inválido a um <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.InvalidExpressionException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">Especifica o comportamento de bloqueio de transação para a conexão.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">As alterações pendentes de transações com maior isolamento não podem ser substituídas.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">Bloqueios compartilhados são mantidos durante a leitura dos dados para impedir leituras sujas, mas os dados podem ser alterados antes do término da transação, resultando em leituras não repetíveis ou em dados fantasmas.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">Uma leitura suja é possível, o que significa que nenhum bloqueio compartilhado é emitido e nenhum bloqueio exclusivo é respeitado.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">Os bloqueios são colocados em todos os dados usados em uma consulta, impedindo que outros usuários atualizem os dados. Evita leituras não repetíveis, mas linhas fantasma ainda são possíveis.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">Um bloqueio de intervalos é colocado no <see cref="T:System.Data.DataSet" />, impedindo que outros usuários atualizem ou insiram linhas no conjunto de dados até que a transação seja concluída.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">Reduz o bloqueio armazenando uma versão dos dados que um aplicativo pode ler enquanto outro está modificando os mesmos dados. Indica que em uma transação não é possível ver as alterações feitas em outras transações, mesmo que a consulta seja repetida.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">Um nível de isolamento diferente daquele especificado está sendo usado, mas não é possível determinar o nível.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">Associa uma tabela de origem a uma tabela em um <see cref="T:System.Data.DataSet" /> e é implementado pela classe <see cref="T:System.Data.Common.DataTableMapping" />, que é usada em comum por provedores de dados .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtém o <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para o <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection of data column mappings.">Uma coleção de mapeamentos de coluna de dados.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtém ou define o nome que não diferencia maiúsculas e minúsculas da tabela dentro do <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">O nome da tabela que não diferencia maiúsculas de minúsculas na <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">Obtém ou define o nome que diferencia maiúsculas e minúsculas da tabela de origem.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contém uma coleção de objetos TableMapping e é implementado pelo <see cref="T:System.Data.Common.DataTableMappingCollection" />, que é usado comumente por provedores de dados do .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Adiciona um mapeamento de tabela à coleção.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">O nome da tabela <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Uma referência ao objeto <see cref="T:System.Data.ITableMapping" /> recém-mapeado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">Obtém um valor que indica se a coleção contém um mapeamento de tabela com o nome da tabela de origem especificado.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um mapeamento de tabela com o nome da tabela de origem especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtém o objeto TableMapping com o nome da tabela <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">O nome da tabela <see langword="DataSet" /> dentro da coleção.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">O objeto TableMapping com o nome de tabela <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Obtém o local do objeto <see cref="T:System.Data.ITableMapping" /> dentro da coleção.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">O nome que diferencia maiúsculas e minúsculas da tabela de origem.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">O local baseado em zero do objeto <see cref="T:System.Data.ITableMapping" /> dentro da coleção.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtém ou define a instância de <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">O nome <see langword="SourceTable" /> do <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">A instância do <see cref="T:System.Data.ITableMapping" /> com o nome <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">Remove o objeto <see cref="T:System.Data.ITableMapping" /> com o nome <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado da coleção.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">O nome diferencia maiúsculas e minúsculas do <see langword="SourceTable" />.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">Identifica uma lista de parâmetros de cadeia de conexão identificados pela propriedade <see langword="KeyRestrictions" /> que são permitidos ou não são permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">Padrão. Identifica os únicos parâmetros da cadeia de conexão adicionais que são permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">Identifica os parâmetros de cadeia de conexão adicionais que não são permitidos.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">Controla como os valores da fonte de dados serão aplicados às linhas existentes ao usar o método <see cref="Overload:System.Data.DataTable.Load" /> ou <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">Os valores de entrada para essa linha serão gravados nas versões de valor atual e valor original dos dados para cada coluna.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">Os valores de entrada para essa linha serão gravados na versão original do valor de cada coluna. A versão atual dos dados em cada coluna não será alterada.  Esse é o padrão.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">Os valores de entrada para essa linha serão gravados na versão atual de cada coluna. A versão original dos dados de cada coluna não será alterada.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">Especifica como uma <see cref="T:System.Data.DataColumn" /> é mapeada.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">A coluna é mapeada para um atributo XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">A coluna é mapeada para um elemento XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">A coluna é mapeada para uma estrutura interna.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">A coluna é mapeada para um nó <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">Ocorre quando uma origem e um destino <see langword="DataRow" /> têm o mesmo valor de chave primária e a propriedade <see cref="P:System.Data.DataSet.EnforceConstraints" /> está definida como true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">Inicializa uma nova instância de uma classe <see cref="T:System.Data.MergeFailedEventArgs" /> com o <see cref="T:System.Data.DataTable" /> e uma descrição do conflito de mesclagem.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">O objeto <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">Uma descrição do conflito de mesclagem.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">Retorna uma descrição do conflito de mesclagem.</summary>
      <returns vsli:raw="A description of the merge conflict.">Uma descrição do conflito de mesclagem.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Retorna o objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">O objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Data.DataSet.MergeFailed" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The data for the event.">Os dados do evento.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">Determina a ação que ocorre quando um mapeamento está faltando em uma tabela de origem ou uma coluna de origem.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Um <see cref="T:System.InvalidOperationException" /> será gerado se o mapeamento de coluna especificado estiver ausente.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">A coluna ou a tabela que não tiver um mapeamento será ignorada. Retorna <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">A coluna de origem ou a tabela de origem é criada e adicionada ao <see cref="T:System.Data.DataSet" /> usando seu nome original.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">Representa a exceção que é lançada ao tentar acessar uma linha em uma tabela que não tem chaves primárias.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">Uma descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.MissingPrimaryKeyException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">Especifica a ação a ser tomada ao adicionar dados ao <see cref="T:System.Data.DataSet" /> e o <see cref="T:System.Data.DataTable" /> ou <see cref="T:System.Data.DataColumn" /> necessário está ausente.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">Adiciona as colunas necessárias para concluir o esquema.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">Adiciona as colunas necessárias e as informações de chave primária para concluir o esquema. Para obter mais informações sobre como as informações de chave primária são adicionadas a um <see cref="T:System.Data.DataTable" />, consulte <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Para que o <see langword="AddWithKey" /> funcione corretamente com o Provedor de Dados .NET Framework para OLE DB, é necessário que o provedor OLE DB nativo obtenha as informações de chave primária necessárias definindo a propriedade DBPROP_UNIQUEROWS e, em seguida, determine quais colunas são colunas de chave primária examinando DBCOLUMN_KEYCOLUMN em IColumnsRowset. Como alternativa, o usuário pode definir explicitamente as restrições de chave primária em cada <see cref="T:System.Data.DataTable" />. Isso garante que os registros de entrada que correspondem aos registros existentes são atualizados em vez de acrescentados. Ao usar <see langword="AddWithKey" />, o Provedor de Dados .NET Framework para SQL Server acrescenta uma cláusula FOR BROWSE à instrução executada. O usuário deve estar ciente de efeitos colaterais potenciais, como interferência no uso de instruções SET FMTONLY ON. Para obter mais informações, confira SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Um <see cref="T:System.InvalidOperationException" /> será gerado se o mapeamento de coluna especificado estiver ausente.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">Ignora as colunas extras.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Representa a exceção gerada quando você tenta inserir um valor null em uma coluna em que <see cref="P:System.Data.DataColumn.AllowDBNull" /> é definido como <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.NoNullAllowedException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Representa uma coleção de objetos <see cref="T:System.Data.DataRow" /> ordenados retornados de uma consulta.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica o tipo de um parâmetro em uma consulta em relação ao <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">O parâmetro é um parâmetro de entrada.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">O parâmetro pode produzir tanto entrada quanto saída.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">O parâmetro é um parâmetro de saída.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">O parâmetro representa um valor de retorno de uma operação como um procedimento armazenado, uma função interna ou uma função definida pelo usuário.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa uma coleção de propriedades que podem ser adicionadas a <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> ou <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">A origem e o destino de um determinado fluxo serializado.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Cria uma cópia superficial do objeto <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Retorna <see cref="T:System.Object" />, uma cópia superficial do objeto <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">Representa a exceção acionada quando você tenta alterar o valor de uma coluna somente leitura.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.ReadOnlyException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa a exceção gerada ao tentar executar uma operação em um <see cref="T:System.Data.DataRow" /> que não está em um <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.RowNotInTableException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">Indica a ação que ocorre quando um <see cref="T:System.Data.ForeignKeyConstraint" /> é imposto.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">Excluir ou atualizar linhas relacionadas. Esse é o padrão.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">Nenhuma ação em linhas relacionadas.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">Definir valores em linhas relacionadas como o valor contido na propriedade <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">Definir valores em linhas relacionadas como <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Indica o modo de serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ignora a serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">Inclui a serialização de esquema para um <see cref="T:System.Data.DataSet" /> tipado. O padrão.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">Especifica como tratar os mapeamentos de esquema existentes ao realizar uma operação <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">Aplicar todos os mapeamento de tabela existentes ao esquema de entrada. Configurar o <see cref="T:System.Data.DataSet" /> com o esquema transformado.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">Ignorar os mapeamentos de tabela no DataAdapter. Configurar o <see cref="T:System.Data.DataSet" /> usando o esquema de entrada sem aplicar nenhuma transformação.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina o formato de serialização para um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">Serialize como conteúdo binário. Disponível somente no ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">Serialize como conteúdo XML. O padrão.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">Especifica o tipo de dados específico do SQL Server de um campo, propriedade, para uso em um <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. Um inteiro com sinal de 64 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento fixo de dados binários que varia entre 1 e 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. Um valor numérico sem sinal que pode ser 0, 1 ou <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. Um fluxo de comprimento fixo de caracteres não Unicode que varia entre 1 e 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">Dados de data que variam entre valores de 1º de janeiro de 1 AD e 31 de dezembro de 9999 AD.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. Dados de data e hora que variam entre valores de 1º de janeiro de 1753 e 31 de dezembro de 9999, com uma precisão de 3,33 milissegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Dados de data e hora. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Dados de data e hora com reconhecimento de fuso horário. O intervalo de valores de data é de 1º de janeiro de 1 DC a 31 de dezembro de 9999 DC. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. O intervalo de valores de fuso horário é de -14:00 a +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. Um valor numérico de escala e precisão fixas entre -10 38 -1 e 10 38 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. Um número de ponto flutuante dentro do intervalo de -1,79E +308 a 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento variável de dados binários que variam entre 0 e 2 31 -1 (ou 2.147.483.647) bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. Um inteiro com sinal de 32 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Um valor de moeda que varia de -2 63 (ou -9.223.372.036.854.775.808) a 2 63 -1 (ou +9.223.372.036.854.775.807) com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Um fluxo de comprimento fixo de caracteres Unicode que varia entre 1 e 4.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Um fluxo de comprimento variável de dados Unicode com um comprimento máximo de 2 30 -1 (ou 1.073.741.823) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Um fluxo de comprimento variável de caracteres Unicode que varia entre 1 e 4.000 caracteres. A conversão implícita falhará se a cadeia de caracteres for maior que 4.000 caracteres. Defina explicitamente o objeto ao trabalhar com cadeias de caracteres com mais de 4.000 caracteres. Use <see cref="F:System.Data.SqlDbType.NVarChar" /> quando a coluna de banco de dados for <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. Um número de ponto flutuante dentro do intervalo de -3,40E +38 a 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. Dados de data e hora que variam entre valores de 1º de janeiro de 1900 e 6 de junho de 2079, com uma precisão de um minuto.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. Um inteiro de 16 bits com sinal.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Um valor de moeda que varia de -214.748,3648 a +214.748,3647 com uma precisão de dez milésimos de uma unidade monetária.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">Um tipo de dados especial para especificar os dados estruturados contidos em parâmetros com valor de tabela.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. Um fluxo de comprimento variável de dados não Unicode com um comprimento máximo de 2 31 -1 (ou 2.147.483.647) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">Dados de tempo com base em um relógio de 24 horas. O intervalo de valores temporais é de 00:00:00 a 23:59:59,9999999, com uma precisão de 100 nanossegundos. Corresponde a um valor <see langword="time" /> do SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Números binários gerados automaticamente, que têm garantia de serem exclusivos dentro de um banco de dados. <see langword="timestamp" /> normalmente é usado como um mecanismo para o carimbo de versão de linhas de tabela. O tamanho do armazenamento é de 8 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. Um inteiro de 8 bits sem sinal.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">Um UDT (tipo definido pelo usuário) do SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. Um GUID (identificador global exclusivo).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> do tipo <see cref="T:System.Byte" />. Um fluxo de comprimento variável de dados binários que variam entre 1 e 8.000 bytes. A conversão implícita falhará se a matriz de bytes for maior que 8.000 bytes. Defina explicitamente o objeto ao trabalhar com matrizes de byte maiores que 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Um fluxo de comprimento variável de caracteres não Unicode que variam entre 1 e 8.000 caracteres. Use <see cref="F:System.Data.SqlDbType.VarChar" /> quando a coluna de banco de dados for <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. Um tipo de dados especial que pode conter dados numéricos, de cadeia de caracteres ou de data, bem como os valores Empty e Null do SQL Server, que são assumidos caso nenhum outro tipo seja declarado.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">Um valor XML. Obtenha o XML como uma cadeia de caracteres usando o método <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> ou a propriedade <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> ou como um <see cref="T:System.Xml.XmlReader" /> chamando o método <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">Todos os objetos e todas as estruturas <see cref="N:System.Data.SqlTypes" /> implementam a interface <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">Indica se uma estrutura é nula. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" /> se o valor desse objeto for nulo. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">A classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> não foi planejada para uso como um componente autônomo, mas como uma classe da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">Representa um fluxo de tamanho variável de dados binários a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />, configurando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de acordo com os conteúdos da matriz de bytes fornecida.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">A matriz de bytes a ser armazenada ou recuperada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena dois valores <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificados para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">Um <see cref="T:System.Data.SqlTypes.SqlBinary" /> que é o valor concatenado de x e y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> ao objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">O objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser comparado a essa estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos desta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  O valor desse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é menor do que o objeto.  
  
  Zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é igual ao objeto.  
  
  Maior que zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é maior do que o objeto.  
  
- ou - 
O objeto é uma referência nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> ao objeto fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">O objeto a ser comparado a essa estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos desta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  O valor desse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é menor do que o objeto.  
  
  Zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é igual ao objeto.  
  
  Maior que zero 
  Esse objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> é maior do que o objeto.  
  
- ou - 
O objeto é uma referência nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Os valores concatenados do <paramref name="x" /> e os parâmetros <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlBinary" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlBinary" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Retorna o código hash para esta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> é nula. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see langword="null" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">Obtém o byte único da propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> localizada na posição indicada pelo parâmetro de inteiro, <paramref name="index" />. Se <paramref name="index" /> indicar uma posição além do final da matriz de bytes, um <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> será gerado. Esta propriedade é somente para leitura.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">A posição do byte a ser recuperado.</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">O byte localizado na posição indicada pelo parâmetro Integer.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">A propriedade é lida quando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />
- ou -
O parâmetro <paramref name="index" /> indica uma posição além do comprimento da matriz de bytes, conforme indicado pela propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">Obtém o tamanho em bytes da propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">O comprimento dos dados binários na <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> propriedade.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">A propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> é lida quando a propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlBinary" /> para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Os valores concatenados do <paramref name="x" /> e os parâmetros <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma matriz <see cref="T:System.Byte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Uma matriz <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Converte uma matriz de bytes em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">A matriz de bytes a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que representa a matriz de bytes convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Uma instância <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlBinary" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">Converte este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">Uma cadeia de caracteres que contém o <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBinary" />. Se <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> for nulo, a cadeia de caracteres conterá “null”.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">O valor da <see cref="T:System.Data.SqlTypes.SqlBinary" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">A propriedade <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> é lida quando a propriedade contém <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">Representa um valor inteiro que é 1 ou 0 a ser armazenado no banco de dados ou recuperado do banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> usando o valor booliano fornecido.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">O valor para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />; <see langword="true" /> ou <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> usando o valor inteiro especificado.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">O inteiro cujo valor será usado para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcula a operação AND bit a bit de duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">O resultado da operação AND lógica.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> como um byte.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um byte que representa o valor da <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">Compara esse objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> ao objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser comparado ou uma referência nula (<see langword="Nothing" /> no Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do valor.
  Valor 
  Descrição 
  Um inteiro negativo 
  Esta instância é menor que <paramref name="value" />.  
  
  Zero 
  Esta instância é igual a <paramref name="value" />.  
  
  Um inteiro positivo 
  Esta instância é maior que <paramref name="value" />.  
  
- ou - 
 <paramref name="value" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">Compara essa estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> com um objeto especificado e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Um objeto a ser comparado ou uma referência nula (<see langword="Nothing" /> no Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do valor.
  Valor 
  Descrição 
  Um inteiro negativo 
  Esta instância é menor que <paramref name="value" />.  
  
  Zero 
  Esta instância é igual a <paramref name="value" />.  
  
  Um inteiro positivo 
  Esta instância é maior que <paramref name="value" />.  
  
- ou - 
 <paramref name="value" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Compara o parâmetro de objeto fornecido com o <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa um valor falso que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Indica se o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> atual é <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see langword="Value" /> é <see langword="False" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estrutura for nula; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Obtém um valor que indica se o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> atual é <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see langword="Value" /> é <see langword="true" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compara a igualdade de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa um valor um que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Executa uma operação de complemento de um nas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecidas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">O complemento de um do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcula a operação AND bit a bit de duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">O resultado da operação AND lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">Calcula o OR bit a bit de seus dois operandos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The results of the logical OR operation.">Os resultados da operação OR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compara a igualdade de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">Executa uma operação OR exclusiva (XOR) bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">O resultado da operação XOR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">Converte um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em um booliano.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um booliano definido como o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">O operador false pode ser usado para testar o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se ele é falso.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o parâmetro fornecido <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see langword="false" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior que a segunda instância; caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte o valor de byte fornecido em um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um valor de byte a ser convertido em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">Um valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contém 0 ou 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se elas são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Executa uma operação NOT em um <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">O <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em que a operação NOT será executada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> com o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se o argumento for verdadeiro, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> se o argumento for nulo e <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> caso contrário.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Executa uma operação de complemento de um nas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecidas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">O complemento de um do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">O operador true pode ser usado para testar o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar se ele é verdadeiro.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser testada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o parâmetro fornecido <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see langword="true" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Executa uma operação OR bit a bit nas duas estruturas <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cujo Value é o resultado da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">Converte a representação <see cref="T:System.String" /> especificada de um valor lógico para seu <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">O <see cref="T:System.String" /> a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contém o valor analisado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlByte" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlDecimal" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlDouble" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">Uma nova estrutura <see langword="SqlInt16" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> será 1. Caso contrário, o novo valor <see langword="SqlInt16" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">Uma nova estrutura <see langword="SqlInt32" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> será 1. Caso contrário, o novo valor <see langword="SqlInt32" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">Uma nova estrutura <see langword="SqlInt64" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> será 1. Caso contrário, o novo valor <see langword="SqlInt64" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor do novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> será 1. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="false" />, o valor do novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> será 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> não for 0 nem 1, o novo valor <see cref="T:System.Data.SqlTypes.SqlMoney" /> será <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo valor é 1 ou 0.
Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a verdadeiro, o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> será 1; caso contrário, o novo valor da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é 1 ou 0. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for igual a <see langword="true" />, o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> será 1. Caso contrário, o novo valor <see cref="T:System.Data.SqlTypes.SqlString" /> da estrutura é 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">Uma cadeia de caracteres que contém o valor do <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o valor for nulo, a cadeia de caracteres conterá “null”.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa um valor verdadeiro que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">A propriedade é definida como nula.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">O resultado da operação XOR lógica.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">Representa um inteiro sem sinal de 8 bits, no intervalo de 0 a 255, para ser armazenado no recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> usando o valor de byte especificado.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Um valor de byte a ser armazenado na propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see langword="Value" /> contém os resultados da adição.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">Compara essa instância com o objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">O objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
-ou- 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara essa instância com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
-ou- 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divise o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlByte" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">Compara o parâmetro <see cref="T:System.Object" /> fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlByte" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a linguagem de definição de esquema XML (XSD) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">Divide dois valores <see cref="T:System.Data.SqlTypes.SqlByte" /> e retorna o resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">O operador de complemento de um executa uma operação de complemento de um bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os complementos do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">Um <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém a soma dos dois operandos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divise o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">Os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">O parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em um byte.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida em um byte.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Um byte cujo valor é igual ao da propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">Uma estrutura <see langword="SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">Uma instância da classe <see langword="SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao valor numérico representado pelo <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see langword="SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte o valor de byte fornecido em um <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Um valor de byte a ser convertido em <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao parâmetro fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se elas são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlByte" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlByte" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">O operador de complemento de um executa uma operação de complemento de um bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contém os complementos do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Subtrai o segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">Converte a representação <see cref="T:System.String" /> de um número no inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> que contém o número de 8 bits representado pelo parâmetro <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Subtrai o segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> do primeiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see langword="SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma estrutura <see langword="SqlDouble" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma estrutura <see langword="SqlInt16" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte este <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma estrutura <see langword="SqlInt32" /> com o mesmo valor que este <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Uma estrutura <see langword="SqlInt64" /> com <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see langword="SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see langword="SqlSingle" /> que tem o mesmo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">Um <see langword="SqlString" /> que contém a representação de cadeia de caracteres do <see cref="T:System.Data.SqlTypes.SqlByte" /> da estrutura <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> em um <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">Uma cadeia de caracteres que contém o <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do <see cref="T:System.Data.SqlTypes.SqlByte" />. Se o <see langword="Value" /> for nulo, o <see langword="String" /> será uma cadeia de caracteres nula.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">O valor da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the XOR operation.">Os resultados da operação XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">Representa um tipo de referência mutável que encapsula um <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> ou <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base na matriz de bytes especificada.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">A matriz de bytes sem sinal.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base no valor de <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> com base no valor de <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Um <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Retorna uma referência para o buffer interno.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Uma referência ao buffer interno. Para <see cref="T:System.Data.SqlTypes.SqlBytes" /> instâncias criadas com base em ponteiros não gerenciados, ela retorna uma cópia gerenciada do buffer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">Uma <see langword="string" /> que indica o XSD do <see langword="XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">Obtém um valor booliano que indica se esta <see cref="T:System.Data.SqlTypes.SqlBytes" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />Se for NULL, <see langword="false" /> caso contrário. <see cref="T:System.Data.SqlTypes.SqlBytes" /></returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">Obtém ou define a instância <see cref="T:System.Data.SqlTypes.SqlBytes" /> no índice especificado.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Um valor <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Um valor <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtém o comprimento do valor contido na instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Um <see cref="T:System.Int64" /> valor que representa o comprimento do valor que está contido <see cref="T:System.Data.SqlTypes.SqlBytes" /> na instância.
Retornará-1 se nenhum buffer estiver disponível para a instância ou se o valor for nulo.
Retorna um <see cref="P:System.IO.Stream.Length" /> para uma instância com encapsulamento de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtém o comprimento máximo do valor do buffer interno deste <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Um longo que representa o comprimento máximo do valor do buffer interno. Retorna-1 para um encapsulamento <see cref="T:System.Data.SqlTypes.SqlBytes" />de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtém uma instância nula deste <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">Uma instância cuja <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> propriedade retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBytes" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">Copia bytes desta instância <see cref="T:System.Data.SqlTypes.SqlBytes" /> para o buffer passado e retorna o número de bytes copiados.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Um deslocamento do valor longo <see cref="T:System.Int64" /> para o valor contido na instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">O buffer de matriz de bytes para o qual copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Um inteiro <see cref="T:System.Int32" /> que representa o número de bytes a copiar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">Um valor longo <see cref="T:System.Int64" /> que representa o número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Define o comprimento desta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">O valor longo <see cref="T:System.Int64" /> que representa o comprimento.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">Define esta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como nula.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Retorna informações sobre o estado de armazenamento desta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Uma enumeração <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">Obtém ou define os dados deste <see cref="T:System.Data.SqlTypes.SqlBytes" /> como um fluxo.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">O fluxo que contém os dados SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtém informações de serialização com todos os dados necessários para reinstanciar esta instância de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">O objeto a ser populado com informações de serialização.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">O contexto de destino da serialização.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Cria e retorna um <see cref="T:System.Data.SqlTypes.SqlBinary" /> desta instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">Um <see cref="T:System.Data.SqlTypes.SqlBinary" /> dessa instância.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Retorna uma cópia gerenciada do valor mantido por esse <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">O valor <see cref="T:System.Data.SqlTypes.SqlBytes" /> disso como uma matriz de bytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Copia os bytes do buffer transmitido a esta instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Um deslocamento do valor longo <see cref="T:System.Int64" /> para o valor contido na instância <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">O buffer de matriz de bytes para o qual copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Um inteiro <see cref="T:System.Int32" /> que representa o número de bytes a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> é um tipo de referência mutável que encapsula uma matriz <see cref="T:System.Char" /> ou uma instância <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" /> com base na matriz de caracteres especificada.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Uma matriz <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlChars" /> com base no valor de <see cref="T:System.Data.SqlTypes.SqlString" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Retorna uma referência para o buffer interno.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Uma referência ao buffer interno. Para <see cref="T:System.Data.SqlTypes.SqlChars" /> instâncias criadas com base em ponteiros não gerenciados, ela retorna uma cópia gerenciada do buffer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">Obtém um valor booliano que indica se esta <see cref="T:System.Data.SqlTypes.SqlChars" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Data.SqlTypes.SqlChars" /> for nulo. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">Obtém ou define a instância <see cref="T:System.Data.SqlTypes.SqlChars" /> no índice especificado.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Um valor <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Um valor <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtém o comprimento do valor contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Um <see cref="T:System.Int64" /> valor que indica o comprimento em caracteres do valor que está contido <see cref="T:System.Data.SqlTypes.SqlChars" /> na instância.
Retornará-1 se nenhum buffer estiver disponível para a instância ou se o valor for nulo.
Retorna um <see cref="P:System.IO.Stream.Length" /> para uma instância com encapsulamento de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">Obtém o comprimento máximo em caracteres de dois bytes que pode ser contido pelo buffer interno.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Um <see cref="T:System.Int64" /> valor que representa o comprimento máximo em caracteres de dois bytes do valor do buffer interno.
Retorna-1 para um encapsulamento <see cref="T:System.Data.SqlTypes.SqlChars" />de fluxo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Retorna uma instância nula deste <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">Uma instância cuja <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> propriedade retorna <see langword="true" />. Para obter mais informações, consulte lidando com valores nulos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlChars" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">Copia bytes desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> para o buffer passado e retorna o número de caracteres copiados.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Um deslocamento de valor <see cref="T:System.Int64" /><see langword="long" /> no valor que está contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">O buffer de matriz de caracteres para o qual copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">Um valor inteiro <see cref="T:System.Int32" /> que representa o número de caracteres a copiar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">Um valor <see cref="T:System.Int64" /><see langword="long" /> que representa o número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Define o comprimento desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">O valor <see cref="T:System.Int64" /><see langword="long" /> que representa o comprimento.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">Define esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> como nula.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Retorna informações sobre o estado de armazenamento desta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Uma enumeração <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtém informações de serialização com todos os dados necessários para reinstanciar esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">O objeto a ser populado com informações de serialização.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">O contexto de destino da serialização.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">Converte essa instância de <see cref="T:System.Data.SqlTypes.SqlChars" /> na representação de sua <see cref="T:System.Data.SqlTypes.SqlString" /> equivalente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">Uma representação de <see cref="T:System.Data.SqlTypes.SqlString" /> deste tipo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Retorna uma cópia gerenciada do valor mantido por esse <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">O valor <see cref="T:System.Data.SqlTypes.SqlChars" /> disso como uma matriz de caracteres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Copia caracteres do buffer passado para esta instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Um deslocamento de valor <see langword="long" /> no valor que está contido na instância de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">O buffer de matriz de caracteres para o qual copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Um deslocamento de inteiro <see cref="T:System.Int32" /> para o buffer para o qual começar a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">Um inteiro <see cref="T:System.Int32" /> que representa o número de caracteres a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica os valores da opção de comparação de uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">Executa uma classificação binária.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar o tipo Kana. O tipo Kana refere-se aos caracteres japoneses Hiragana e Katakana que representam sons fonéticos em japonês. O Hiragana é usado em expressões e palavras japonesas nativas, enquanto o Katakana é usado para palavras emprestadas de outros idiomas, como “computador” ou “Internet”. Um som fonético pode ser expresso em Hiragana e em Katakana. Se esse valor estiver selecionado, o caractere Hiragana de um som será considerado igual ao caractere Katakana do mesmo som.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar caracteres sem espaçamento, como sinais diacríticos. O Padrão Unicode define caracteres sem espaçamento como caracteres que são combinados com caracteres de base para produzir um novo caractere. Caracteres sem espaçamento não usam espaços de caractere por si só quando são renderizados. Para obter mais informações sobre caracteres de combinação sem espaçamento, consulte o padrão Unicode em https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">Especifica que as comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar a largura do caractere. Por exemplo, os caracteres japoneses Katakana podem ser escritos em largura inteira ou meia largura e, se esse valor for selecionado, os caracteres Katakana escritos em largura inteira serão considerados iguais para os mesmos caracteres escritos em meia largura.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">Especifica as configurações de opção padrão para as comparações <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">Representa os dados de data e hora cujos valores variam de 1º de janeiro de 1753 e 31 de dezembro de 9999, com uma precisão de 3,33 milissegundos para armazenamento ou recuperação de um banco de dados. A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> tem uma estrutura de dados subjacente diferente de seu tipo .NET Framework correspondente, <see cref="T:System.DateTime" />, que pode representar qualquer hora entre 12:00:00 1/1/0001 e 23:59:59 31/12/9999, com precisão de 100 nanossegundos. Na verdade, <see cref="T:System.Data.SqlTypes.SqlDateTime" /> armazena a diferença relativa a 00:00:00 1/1/1900. Portanto, uma conversão de "00:00:00 1/1/1900" para um número inteiro retornará 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando o valor <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Uma estrutura <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">Um valor inteiro que representa a data como tiques.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">Um valor inteiro que representa a hora como tiques.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês e o dia.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um inteiro que representa o ano do da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o número de dias da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto e o segundo da nova estrutura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o dia do mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto, o segundo e o milissegundo da nova estrutura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o dia do mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor duplo que representa o milissegundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> usando os parâmetros fornecidos para inicializar o ano, o mês, o dia, a hora, o minuto, o segundo e o microssegundo da nova estrutura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o ano da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o mês da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o dia da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa a hora da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o minuto da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o segundo da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um valor inteiro que representa o microssegundo (milésimos de um milissegundo) da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Adiciona um <see cref="T:System.Data.SqlTypes.SqlDateTime" /> ao <see langword="TimeSpan" /> especificado.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Um valor <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> com a estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a ser comparada.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Zero 
  Essa instância é igual a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Maior que zero 
  Esta instância é maior do que <see cref="T:System.Data.SqlTypes.SqlDateTime" />  
  
- ou - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtém o número de tiques que representa a data desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">O número de tiques que representam a data contida na <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> propriedade <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dessa estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto é uma instância de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> e os dois são iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtém o código hash para esta instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa o valor de data válida máxima para uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa o valor de data válida mínima para uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Executa uma comparação lógica de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Adiciona o período indicado pelo parâmetro <see cref="T:System.TimeSpan" /> fornecido, <paramref name="t" />, à estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Uma estrutura <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Se um dos argumentos for <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, o novo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> será <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em uma estrutura <see cref="T:System.DateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Um objeto <see cref="T:System.DateTime" /> cujas propriedades <see cref="P:System.DateTime.Date" /> e <see cref="P:System.DateTime.TimeOfDay" /> contêm os mesmos valores de data e hora que a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cujo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> é igual à data e hora representadas pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />. Se a <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> recém-criada será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Converte uma estrutura <see cref="T:System.DateTime" /> em uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Uma estrutura <see langword="DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cujo <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> é igual às propriedades <see cref="P:System.DateTime.Date" /> e <see cref="P:System.DateTime.TimeOfDay" /> combinadas da estrutura <see cref="T:System.DateTime" /> fornecida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Executa uma comparação lógica de duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Subtrai a estrutura <see cref="T:System.TimeSpan" /> fornecida, <paramref name="t" />, da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fornecida.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Uma estrutura <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que representa os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">Converte a representação <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada de uma data e hora em sua <see cref="T:System.String" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">A <see langword="string" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> igual a data e hora representada pela <see langword="string" /> especificada.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">Uma constante cujo valor é o número de tiques equivalentes a uma hora.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">Uma constante cujo valor é o número de tiques equivalentes a um minuto.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">Uma constante cujo valor é o número de tiques equivalentes a um segundo.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">Subtrai o <see langword="Timespan" /> especificado desta instância <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Um valor <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtém o número de tiques que representa a hora desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">O número de tiques que representam a hora desta <see cref="T:System.Data.SqlTypes.SqlDateTime" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma estrutura <see langword="SqlString" /> cujo valor é uma cadeia de caracteres que representa a data e hora contidas nesta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em um <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Uma <see langword="String" /> que representa a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">O valor dessa <see cref="T:System.Data.SqlTypes.SqlDateTime" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">Representa um valor numérico entre -10^38 +1 e 10^38 - 1, com precisão e escala fixas.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando os parâmetros fornecidos.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O número máximo de dígitos que podem ser usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O número de casas decimais para as quais a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> será resolvida para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Um valor booliano que indica se a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa um número positivo ou negativo.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Um inteiro sem sinal de 32 bits que será combinado com data2, data3 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Um inteiro sem sinal de 32 bits que será combinado com data1, data3 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Um inteiro sem sinal de 32 bits que será combinado com data1, data2 e data4 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Um inteiro sem sinal de 32 bits que será combinado com data1, data2 e data3 para criar o inteiro sem sinal de 128 bits que representa o novo valor de estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando os parâmetros fornecidos.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O número máximo de dígitos que podem ser usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O número de casas decimais para as quais a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> será resolvida para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Um valor booliano que indica se a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa um número positivo ou negativo.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">O inteiro sem sinal de 128 bits que fornece o valor do novo <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor de <see cref="T:System.Decimal" /> fornecido.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O valor <see cref="T:System.Decimal" /> a ser armazenado como uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o parâmetro duplo fornecido.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Um duplo que representa o valor para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor inteiro fornecido.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O valor inteiro fornecido que será usado como o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> usando o valor inteiro longo fornecido.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O valor inteiro longo fornecido que será usado como o valor da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">O método Abs obtém o valor absoluto do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o número sem sinal que representa o valor absoluto do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcula a soma dos dois operadores <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém a soma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">A escala do operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> será ajustado para o número de dígitos indicado pelo parâmetro de dígitos. Dependendo do valor do parâmetro fRound, o valor será arrendondado para o número adequado de dígitos ou truncado.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser ajustada.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">O número de dígitos na estrutura ajustada.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">Se esse parâmetro for <see langword="true" />, o novo valor será arredondado, se <see langword="false" />, o valor será truncado.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o número ajustado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">Obtém a representação binária do valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como uma matriz de bytes.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">Uma matriz de bytes que contém a representação binária do <see cref="T:System.Data.SqlTypes.SqlDecimal" /> valor da estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Retorna o menor número inteiro maior ou igual à estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a qual o valor do limite máximo será calculado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que representa o menor valor inteiro maior ou igual à estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDecimal" /> com o objeto <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDecimal" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">Ajusta o valor do operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a precisão e a escala indicadas.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor deverá ser ajustado.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">A precisão da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">A escala da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">Um nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo Value foi ajustado para a precisão e a escala indicadas nos parâmetros.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">Obtém a representação binária desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como uma matriz de inteiros.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma matriz de inteiros que contém a representação binária dessa <see cref="T:System.Data.SqlTypes.SqlDecimal" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">O operador de divisão calcula os resultados de dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o valor do <see langword="SqlDecimal" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">Compara o parâmetro <see cref="T:System.Object" /> fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da instância <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> e os dois forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">Arredonda um número <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado para o próximo número inteiro menor.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para a qual o valor base deve ser calculado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém a parte do número inteiro desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa <see cref="T:System.Data.SqlTypes.SqlDecimal" /> estrutura for nula. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">Indica se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> é maior que zero.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> for atribuído a NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">Uma constante que representa o maior valor possível da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">Uma constante que representa o valor máximo da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma constante que representa o valor máximo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma constante que representa o valor mínimo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcula a soma dos dois operadores <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém a soma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">O operador de divisão calcula os resultados de dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see langword="Decimal" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Double" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Double" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor é igual ao valor do parâmetro <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" /></summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecida em SqlDecimal.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte o operando <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte o valor <see cref="T:System.Decimal" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">O valor <see cref="T:System.Decimal" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor do parâmetro <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Int64" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Int64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é igual ao valor do parâmetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcula os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade Value contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">O operador unário de subtração nega o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser negada.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo valor contém os resultados da negação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">Converte a representação <see cref="T:System.String" /> de um número em seu <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">Gera o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada à potência exponencial especificada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser elevada a uma potência.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">Um valor duplo que indica a potência à qual o número deve ser elevado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém os resultados.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtém o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">O número máximo de dígitos usados para representar a <see langword="Value" /><see cref="T:System.Data.SqlTypes.SqlDecimal" /> dessa estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">Obtém o número mais próximo ao valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada com a precisão especificada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser arredondada.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">O número de dígitos fracionários significativos (precisão) no valor retornado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém os resultados da operação de arredondamento.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">Obtém o número de casas decimais para o qual <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> é resolvido.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">O número de casas decimais para o qual <see langword="Value" /> a propriedade é resolvida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtém um valor que indica o sinal a propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo sinal deve ser avaliado.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Um número que indica o sinal da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcula os resultados da subtração do segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuja propriedade Value contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">Retorna a um duplo igual ao conteúdo da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> desta instância.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">A representação decimal da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Se o Value da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for <see langword="true" />, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o mesmo valor que esta instância de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é uma cadeia de caracteres que representa o valor contido nesta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Um novo objeto <see cref="T:System.String" /> que contém a representação de cadeia de caracteres da propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">Trunca o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada para a posição que você deseja.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser truncada.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">A posição decimal na qual o número será truncado.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">Forneça um valor negativo para o parâmetro <paramref name="position" /> a fim de truncar o valor para a posição correspondente à esquerda da vírgula decimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">Um número no intervalo-79228162514264337593543950335 até 79228162514162514264337593543950335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">Representa um número de ponto flutuante no intervalo de -1,79E +308 a 1,79E +308 a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> usando o parâmetro duplo fornecido para definir a propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Um valor duplo cujo valor será usado para o novo <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O operador de adição calcula a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">A soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">O <see cref="T:System.Object" /> de comparação.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">O operador de divisão divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Executa uma comparação lógica em duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Retorna o código hash para esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">Retorna um valor booliano que indica se esta instância <see cref="T:System.Data.SqlTypes.SqlDouble" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma constante que representa o valor máximo de uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Uma constante que representa o valor mínimo possível do <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O operador de multiplicação calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O operador de adição calcula a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">A soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">O operador de divisão divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Executa uma comparação lógica em duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">O <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é 0 ou 1, dependendo da propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em um duplo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Um duplo equivalente ao valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao valor do número representado pelo <see cref="T:System.Data.SqlTypes.SqlString" />. Se o <see cref="T:System.Data.SqlTypes.SqlString" /> for <see cref="F:System.Data.SqlTypes.SqlString.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />. Se o <see cref="T:System.Data.SqlTypes.SqlByte" /> for <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Se o <see cref="T:System.Data.SqlTypes.SqlDecimal" /> for <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt16" /> for <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt32" /> for <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />. Se o <see cref="T:System.Data.SqlTypes.SqlInt64" /> for <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />. Se o <see cref="T:System.Data.SqlTypes.SqlMoney" /> for <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />. Se o <see cref="T:System.Data.SqlTypes.SqlSingle" /> for <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte o valor duplo fornecido em um <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The double value to convert.">O valor duplo a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> com o mesmo valor que o parâmetro duplo especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se elas são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O operador de multiplicação calcula o produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">O produto dos dois operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">O operador de subtração o segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Os resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Retorna o valor negado da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">Converte a representação da <see cref="T:System.String" /> de um número no equivalente do número de ponto flutuante de precisão dupla.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contém o valor representado pelo <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">O operador de subtração o segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Os resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Um esquema XML consumido pelo .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Um <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Um <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Uma estrutura <see langword="SqlBoolean" /> cujo <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> for diferente de zero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se o <see cref="T:System.Data.SqlTypes.SqlDouble" /> for zero e <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> se a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> for <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see langword="SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">Uma nova estrutura <see langword="SqlDecimal" /> cujo valor convertido é igual ao valor arredondado deste <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see langword="Value" /> é igual à parte inteira do valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Uma nova estrutura <see langword="SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Uma nova estrutura <see langword="SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Uma <see langword="SqlString" /> que representa o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Uma cadeia de caracteres que representa o <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> deste <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">O valor da <see cref="T:System.Data.SqlTypes.SqlDouble" /> estrutura.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">Representa um GUID a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro de matriz de bytes fornecido.</summary>
      <param name="value" vsli:raw="A byte array.">Uma matriz de bytes.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro <see cref="T:System.Guid" /> especificado.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Um <see cref="T:System.Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o valor especificado.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Os primeiros quatro bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Os próximos dois bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Os próximos dois bytes do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">O próximo byte do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> usando o parâmetro <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Um objeto <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> com o <see cref="T:System.Data.SqlTypes.SqlGuid" /> fornecido e retorna uma indicação de seus valores relativos. Compara mais do que os últimos 6 bytes, mas trata os últimos 6 bytes como os mais significativos nas comparações.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compara esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> ao objeto fornecido e retorna uma indicação de seus valores relativos. Compara mais do que os últimos 6 bytes, mas trata os últimos 6 bytes como os mais significativos nas comparações.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlGuid" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlGuid" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Retorna o código hash desta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see langword="null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBinary" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">Um objeto <see langword="SqlBinary" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> fornecido em <see cref="T:System.Guid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Um novo <see cref="T:System.Guid" /> igual ao <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> do <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> especificada em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Um <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Guid" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Um <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual ao parâmetro <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte a estrutura <see cref="T:System.String" /> especificada em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlGuid" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">Converte essa estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em uma matriz de bytes.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma matriz de bytes que representa o <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see langword="SqlBinary" /> que contém os bytes na estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> em um <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Um <see cref="T:System.String" /> que contém a representação de cadeia de caracteres da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">Obtém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">Representa um inteiro com sinal de 16 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> usando o parâmetro inteiro curto fornecido.</summary>
      <param name="value" vsli:raw="A short integer.">Um inteiro curto.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula a soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
o objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt16" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">Compara o objeto especificado com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt16" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see cref="T:System.String" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />. Para obter mais informações, consulte lidando com valores nulos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt16" /> e retorna o resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">O operador ~ executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o complemento da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula a soma de dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém a soma dos dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divide o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Um <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados do XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecida em um inteiro curto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Um inteiro curto cujo valor é o valor do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte o objeto <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao valor representado pelo parâmetro de objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte o inteiro curto fornecido em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A short integer value.">Um valor inteiro curto.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> com o mesmo valor que o inteiro curto especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Executa uma comparação lógica em duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se elas não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compara duas instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor que a segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar se a primeira é menor ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcula o restante após dividir o primeiro operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">O operador ~ executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém o complemento da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">O operador de subtração unário nega o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 16 bits equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um inteiro com sinal de 16 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Um esquema XML consumido pelo .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Se o valor do <see cref="T:System.Data.SqlTypes.SqlInt16" /> for menor que 0 ou maior que 255, ocorrerá uma <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see langword="Value" /> é igual ao valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta instância de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Um objeto <see cref="T:System.String" /> que representa o <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> desta instância de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">Obtém o valor desta instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Um inteiro curto que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt16" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contém os resultados da operação XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">Representa um inteiro com sinal de 32 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> usando o valor inteiro fornecido.</summary>
      <param name="value" vsli:raw="The integer to be converted.">O inteiro a ser convertido.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém a soma das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula o OR bit a bit das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt32" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt32" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt32" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> é nula.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Essa propriedade será <see langword="true" /> se <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma constante que representa o maior valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma constante que representa o menor valor possível de um <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt32" /> e retorna o resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Executa uma operação de complemento de unidade bit a bit na estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação de complemento de unidade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém a soma das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula o OR bit a bit das estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Um <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Executa uma operação OR exclusiva bit a bit nas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em um inteiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The converted integer value.">O valor inteiro convertido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o objeto <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Um objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte a propriedade <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte o inteiro fornecido em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="An integer value.">Um valor inteiro.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade Value é igual ao parâmetro inteiro.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compara os dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém o produto dos dois parâmetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Executa uma operação de complemento de unidade bit a bit na estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação de complemento de unidade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">Nega o <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 32 bits equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um inteiro com sinal de 32 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Se o valor do <see langword="SqlInt32" /> for menor que 0 ou maior que 255, ocorrerá uma <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> em uma <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Uma estrutura <see cref="T:System.String" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Um inteiro que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt32" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">A propriedade contém <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Executa uma operação OR exclusiva bit a bit nas estruturas <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">Representa um inteiro com sinal de 64 bits a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> usando o inteiro longo fornecido.</summary>
      <param name="value" vsli:raw="A long integer.">Um inteiro longo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlInt64" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlInt64" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlInt64" /> e os dois forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retorna o código hash para essa instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">Obtém um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma constante que representa o maior valor possível para uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma constante que representa o menor valor possível para uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">Divide dois valores <see cref="T:System.Data.SqlTypes.SqlInt64" /> e retorna o resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Um valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">O resto deixado após a divisão feita em <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros SqlInt64 para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao complemento de unidade do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula o AND bit a bit de seus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula o OR bit a bit de seus dois operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém os resultados da operação de divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> em longo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo valor longo igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém a parte inteira do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte o parâmetro longo em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A long integer value.">Um valor inteiro longo.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao valor do parâmetro longo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros SqlInt64 para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcula o resto depois de dividir o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contém o resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Executa uma operação de complemento de unidade bit a bit em seu operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao complemento de unidade do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual aos resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">O operador de subtração unário nega o <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cujo <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> negado do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">Converte a representação <see cref="T:System.String" /> de um número em seu inteiro com sinal de 64 bits equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um inteiro com sinal de 64 bits equivalente ao valor contido que está especificado na <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> é igual aos resultados da operação de subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Uma <see cref="T:System.String" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Um inteiro longo que representa o valor dessa <see cref="T:System.Data.SqlTypes.SqlInt64" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Executa uma operação OR exclusiva bit a bit nos parâmetros fornecidos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contém os resultados da operação XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Representa um valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">Representa um valor de moeda que vai de -2 63 (ou -922.337.203.685.477,5808) a 2 63 -1 (ou +922.337.203.685.477,5807), com uma precisão de dez milésimos de uma unidade monetária, que será armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor <see cref="T:System.Decimal" /> especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor duplo especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor inteiro especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o valor inteiro longo especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">O valor monetário a ser inicializado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlMoney" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">O operador de divisão divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlMoney" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtém o código hash para esta instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Uma <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">Retorna um valor Booliano que indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa o valor máximo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa o valor mínimo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcula a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém a soma dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">O operador de divisão divide o primeiro parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> pelo segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificada em <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Decimal" /> cujo valor é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Decimal" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">O valor <see cref="T:System.Decimal" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor do parâmetro <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Int64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Int64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> é igual ao valor do parâmetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">O operador de multiplicação calcula o produto dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">O operador de subtração subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">O operador unário de subtração nega o parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser negada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cujo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contém os resultados da negação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">Converte a representação <see cref="T:System.String" /> de um número em seu <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">A <see langword="String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">O operador de subtração subtrai o segundo parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> do primeiro.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">Converte o Valor desta instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> como uma estrutura <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Decimal" /> cujo valor é igual à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Um duplo com um valor igual a esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Um inteiro de 32 bits cujo valor é igual à parte inteira desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Converte o Valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em um <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Um inteiro de 64 bits cujo valor é igual à parte inteira desta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Se o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> for zero, o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlByte" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é uma cadeia de caracteres que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">Converte esta instância de <see cref="T:System.Data.SqlTypes.SqlMoney" /> em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Uma cadeia de caracteres cujo valor é a representação de cadeia de caracteres do valor deste <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">Obtém o valor monetário de uma instância da estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">O valor monetário de uma instância da <see cref="T:System.Data.SqlTypes.SqlMoney" /> estrutura.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">A propriedade é definida como nula.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa o valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">A classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> não foi planejada para uso como um componente autônomo, mas como uma classe da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">A exceção lançada quando a propriedade <see langword="Value" /> de uma estrutura <see cref="N:System.Data.SqlTypes" /> é definida como nula.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Se o parâmetro <c>innerException</c> não for <see langword="null" />, a exceção atual será gerada em um bloco <see langword="catch" /> que tratará a exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">Representa um número de ponto flutuante no intervalo de -3,40E +38 a 3,40E +38 a ser armazenado ou recuperado de um banco de dados.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> usando o parâmetro duplo fornecido.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Um valor duplo que será usado como o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Um número de ponto flutuante que será usado como o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o <see cref="T:System.Data.SqlTypes.SqlSingle" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlSingle" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divide a primeira estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> pela segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">Uma estrutura <see langword="SqlInt64" /> que contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlSingle" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto é uma instância de <see cref="T:System.Data.SqlTypes.SqlSingle" /> e os dois são iguais. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtém o código hash para esta instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa o valor máximo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa o valor mínimo que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula o produto das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém a soma das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divide a primeira estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> pela segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da divisão.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">Executa uma comparação lógica dos dois parâmetros SqlSingle para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Este operador implícito converte o <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">O parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada em um float.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">O valor <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertido em float.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Um float que contém o valor da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">O objeto <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao valor representado pelo parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica de duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se a primeira é maior ou igual à segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Este operador implícito converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">O <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertido.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuja propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt32" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> fornecido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> fornecida em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cujo <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> é igual ao <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte o valor de ponto flutuante especificado em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">O valor de float a ser convertido em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o valor do float especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se eles não são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula o produto das duas estruturas <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o produto da multiplicação.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Subtrai a segunda estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> da primeira.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Nega o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém o valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Converte a <see cref="T:System.String" /> especificada em uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">A <see cref="T:System.String" /> a ser analisada.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlSingle" /> equivalente ao valor contido no <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Subtrai a segunda estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> da primeira.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contém os resultados da subtração.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Uma estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> cujo <see langword="Value" /> é igual ao <see langword="Value" /> desta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Se o Value da estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> for <see langword="true" />, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. Caso contrário, o <see langword="Value" /> da estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um novo <see langword="SqlDecimal" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um novo <see langword="SqlDouble" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um novo <see langword="SqlInt16" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual ao valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Uma <see cref="T:System.Data.SqlTypes.SqlString" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Um objeto <see langword="String" /> que representa o valor deste <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">Obtém o valor desta estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">Um valor de ponto flutuante no intervalo-3,40 E + 38 a 3,40 E + 38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa o valor zero que pode ser atribuído à propriedade <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de uma instância da classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">Representa um fluxo de tamanho variável de caracteres a ser armazenado ou recuperado do banco de dados. <see cref="T:System.Data.SqlTypes.SqlString" /> tem uma estrutura de dados subjacente diferente de seu correspondente do tipo de dados <see cref="T:System.String" /> .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando a identificação de localidade, as opções de comparação e os dados especificados.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">A matriz de dados a ser armazenada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">A matriz de dados a ser armazenada.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se codificado como Unicode. Caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">A matriz de dados a ser armazenada.</param>
      <param name="index" vsli:raw="The starting index within the array.">O índice inicial dentro da matriz.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">O número de caracteres do índice a ser copiado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">A matriz de dados a ser armazenada.</param>
      <param name="index" vsli:raw="The starting index within the array.">O índice inicial dentro da matriz.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">O número de caracteres do índice a ser copiado.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se codificado como Unicode. Caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando a cadeia de caracteres especificada.</summary>
      <param name="data" vsli:raw="The string to store.">A cadeia de caracteres a ser armazenada.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando os valores de cadeia de caracteres e de identificação de localidade especificados.</summary>
      <param name="data" vsli:raw="The string to store.">A cadeia de caracteres a ser armazenada.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">Inicializa uma nova instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> usando os valores de cadeia de caracteres, identificação de localidade e opções de comparação especificados.</summary>
      <param name="data" vsli:raw="The string to store.">A cadeia de caracteres a ser armazenada.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica as opções de comparação para a nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Concatena dois valores <see cref="T:System.Data.SqlTypes.SqlString" /> especificados para criar uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> que é o valor concatenado de <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">Especifica que as classificações devem ser baseadas em um valor numérico de caracteres em vez de seu valor alfabético.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Cria uma cópia deste objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> no qual todos os valores de propriedade são os mesmos que o original.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Obtém o objeto <see cref="T:System.Globalization.CompareInfo" /> que define como as comparações de cadeia de caracteres devem ser realizadas nesta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Um <see langword="CompareInfo" /> objeto que define a comparação de cadeias de caracteres para esta <see cref="T:System.Data.SqlTypes.SqlString" /> estrutura.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">Obtém a enumeração <see cref="T:System.Globalization.CompareOptions" /> equivalente do valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> especificado.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Um valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que descreve as opções de comparação para esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Um valor <see langword="CompareOptions" /> que corresponde ao <see langword="SqlCompareOptions" /> para esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">Compara esta instância <see cref="T:System.Data.SqlTypes.SqlString" /> com o <see cref="T:System.Data.SqlTypes.SqlString" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">O <see cref="T:System.Data.SqlTypes.SqlString" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor retornado 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara este objeto <see cref="T:System.Data.SqlTypes.SqlString" /> com o <see cref="T:System.Object" /> fornecido e retorna uma indicação de seus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">O <see cref="T:System.Object" /> a ser comparado.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Um número com sinal que indica os valores relativos da instância e do objeto.
  Valor de Retorno 
  Condição 
  Menor que zero 
  Esta instância é menor do que o objeto.  
  
  Zero 
  Esta instância é igual ao objeto.  
  
  Maior que zero 
  Esta instância é maior do que o objeto 
- ou - 
O objeto é uma referência nula (<see langword="Nothing" /> no Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatena as duas estruturas <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor recém concatenado que representa o conteúdo dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Obtém a estrutura <see cref="T:System.Globalization.CultureInfo" /> que representa informações sobre a cultura deste objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">Uma <see cref="T:System.Globalization.CultureInfo" /> estrutura que descreve informações sobre a cultura dessa estrutura SqlString, incluindo os nomes da cultura, o sistema de escrita e o calendário usado e também o acesso a objetos específicos de cultura que fornecem métodos para Common operações, como formatação de datas e de classificação de cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">
        <see langword="true" /> se os dois valores forem iguais. Caso contrário, <see langword="false" />. Se uma das instâncias for nula, o <see langword="SqlString" /> será nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.SqlTypes.SqlString.Value" /> do objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.SqlTypes.SqlString" /> e os dois forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtém o código hash para esta instância.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Obtém uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato ANSI.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Obtém uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato Unicode.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Uma matriz de bytes que tem o conteúdo do <see cref="T:System.Data.SqlTypes.SqlString" /> no formato Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um valor de <see langword="string" /> que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">Especifica que comparações <see cref="T:System.Data.SqlTypes.SqlString" /> devem ignorar maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">Especifica que se a comparação de cadeia de caracteres deve ignorar o tipo Kana.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">Especifica que a comparação de cadeia de caracteres deve ignorar caracteres sem espaçamento, como sinais diacríticos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">Especifica que a comparação de cadeia de caracteres deve ignorar a largura do caractere.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">Indica se esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> é nula.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se <see cref="P:System.Data.SqlTypes.SqlString.Value" /> for <see cref="F:System.Data.SqlTypes.SqlString.Null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica a localidade geográfica e o idioma para a estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">A ID de localidade para a cadeia de caracteres <see cref="P:System.Data.SqlTypes.SqlString.Value" /> armazenada na propriedade.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Representa um <see cref="T:System.DBNull" /> que pode ser atribuído a essa instância da estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatena as duas estruturas <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor recém concatenado que representa o conteúdo dos dois parâmetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são iguais.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias não forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificada em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte a estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> especificada em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlByte" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDateTime" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDecimal" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">A estrutura <see langword="SqlDecimal" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlDouble" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlDouble" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlGuid" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> a ser convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> cujo valor é a representação de cadeia de caracteres do <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt16" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt16" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt32" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">A estrutura SqlInt32 a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlInt64" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlInt64" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Um novo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlMoney" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlMoney" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro especificado <see cref="T:System.Data.SqlTypes.SqlSingle" /> em <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">A estrutura <see cref="T:System.Data.SqlTypes.SqlSingle" /> a ser convertida.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Um novo <see cref="T:System.Data.SqlTypes.SqlString" /> que contém a representação de cadeia de caracteres do parâmetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte um <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.String" /></summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">O <see cref="T:System.Data.SqlTypes.SqlString" /> a ser convertido.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Um <see langword="String" />, cujo conteúdo é o mesmo que a propriedade <see cref="P:System.Data.SqlTypes.SqlString.Value" /> do parâmetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior do que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é maior ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for maior ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Converte o parâmetro <see cref="T:System.String" /> em um <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">O <see cref="T:System.String" /> a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" /> que contém o valor do <see langword="String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se eles são diferentes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> se as duas instâncias forem iguais. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor que o segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor que a segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Executa uma comparação lógica dos dois operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar se o primeiro é menor ou igual ao segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Um <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> se a primeira instância for menor ou igual à segunda instância. Caso contrário, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Se uma das instâncias de <see cref="T:System.Data.SqlTypes.SqlString" /> for nula, o <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> do <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Uma combinação de um ou mais valores de enumeração <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que representam o modo no qual o <see cref="T:System.Data.SqlTypes.SqlString" /> deve ser comparados às outras estruturas <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Um valor que especifica como <see cref="T:System.Data.SqlTypes.SqlString" /> isso deve ser comparado com <see cref="T:System.Data.SqlTypes.SqlString" /> outras estruturas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Um <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> se o <see cref="P:System.Data.SqlTypes.SqlString.Value" /> for diferente de zero; <see langword="false" /> se for zero; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Uma nova estrutura <see langword="SqlByte" /> cujo <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> é igual ao número representado por esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Uma nova estrutura <see langword="SqlDateTime" /> que contém o valor de data representado por este <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contém o valor deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlDouble" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Uma nova estrutura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cujo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> é igual o <see langword="Guid" /> representado por esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt16" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt32" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlInt64" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlMoney" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Converte esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" /> em <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Um novo <see cref="T:System.Data.SqlTypes.SqlSingle" /> que é igual ao valor numérico deste <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte um objeto <see cref="T:System.Data.SqlTypes.SqlString" /> em um <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Um <see cref="T:System.String" /> com o mesmo valor que esta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">Obtém a cadeia de caracteres armazenada nesta estrutura <see cref="T:System.Data.SqlTypes.SqlString" />. Esta propriedade é somente para leitura.</summary>
      <returns vsli:raw="The string that is stored.">A cadeia de caracteres armazenada.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">O valor da cadeia de caracteres é <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">A exceção gerada ao definir um valor em uma estrutura <see cref="N:System.Data.SqlTypes" /> truncaria esse valor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> com uma mensagem de erro especificada e uma referência ao <see cref="T:System.Exception" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Uma referência a um <see cref="T:System.Exception" /> interno.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">A classe de exceção base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com dados serializados.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Se o parâmetro <c>innerException</c> não for <see langword="null" />, a exceção atual será gerada em um bloco <see langword="catch" /> que tratará a exceção interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">Representa dados XML armazenados ou recuperados de um servidor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Cria uma nova instância <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">Cria uma nova instância <see cref="T:System.Data.SqlTypes.SqlXml" />, fornecendo o valor XML da instância derivada de <see cref="T:System.IO.Stream" /> fornecida.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">Uma instância derivada de <see cref="T:System.IO.Stream" /> (como <see cref="T:System.IO.FileStream" />) da qual o conteúdo XML da instância <see cref="T:System.Data.SqlTypes.SqlXml" /> é carregado.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Cria uma nova instância de <see cref="T:System.Data.SqlTypes.SqlXml" /> e a associa-a ao conteúdo do <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Uma instância de classe derivada de <see cref="T:System.Xml.XmlReader" /> a ser usada como o valor da nova instância de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtém o valor do conteúdo XML deste <see cref="T:System.Data.SqlTypes.SqlXml" /> como um <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">Uma instância derivada de <see cref="T:System.Xml.XmlReader" /> que contém o conteúdo XML. O tipo real pode variar (por exemplo, o valor retornado pode ser <see cref="T:System.Xml.XmlTextReader" />) dependendo de como as informações são representadas internamente no servidor.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">Foi feita uma tentativa de acessar essa propriedade em uma instância nula de <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retorna a XSD (linguagem de definição de esquema XML) do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Uma cadeia de caracteres que indica o XSD do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">Indica se esta instância representa ou não um valor <see cref="T:System.Data.SqlTypes.SqlXml" /> nulo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se <see langword="Value" /> for NULL. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Representa uma instância nula do tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Uma instância nula do <see cref="T:System.Data.SqlTypes.SqlXml" /> tipo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r" vsli:raw="An XmlReader.">Um XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">Um XmlWriter</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Obtém a representação de cadeia de caracteres do conteúdo XML desta instância <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="The string representation of the XML content.">A representação de cadeia de caracteres do conteúdo XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">A enumeração <see cref="T:System.Data.SqlTypes.StorageState" /> não foi planejada para uso como um componente autônomo, mas como uma enumeração da qual outras classes derivam a funcionalidade padrão.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">Tamanho do buffer.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">Fluxo.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Buffer não gerenciado.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">Fornece dados para o estado de alteração de evento de um provedor de dados .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">Inicializa uma nova instância da classe <see cref="T:System.Data.StateChangeEventArgs" /> quando são fornecidos o estado original e o estado atual do objeto.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">Obtém o novo estado da conexão. O objeto de conexão já estará no novo estado quando o evento for acionado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">Obtém o estado original da conexão.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Um dos valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Data.Common.DbConnection.StateChange" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">O <see cref="T:System.Data.StateChangeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Fornece informações adicionais para o evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">Cria uma nova instância da classe <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indica o número de linhas afetadas pela instrução que causou a ocorrência do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indica o número de linhas afetadas pela instrução que causou a ocorrência do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns vsli:raw="The number of rows affected.">O número de linhas afetadas.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">O tipo delegado para os manipuladores de eventos do evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The data for the event.">Os dados do evento.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">Especifica o tipo de consulta SQL a ser usado pela classe <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> ou <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">Uma consulta SQL que é uma instrução em lote.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">Uma consulta SQL que é uma instrução DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">Uma consulta SQL que é uma instrução INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">Uma consulta SQL que é uma instrução SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">Uma consulta SQL que é uma instrução UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">A exceção que é lançada por um <see cref="T:System.Data.DataSet" /> fortemente tipado quando o usuário acessa um valor <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" />, usando as informações de serialização e o contexto de streaming especificados.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">Uma estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" /> com a cadeia de caracteres especificada.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.StrongTypingException" /> com a cadeia de caracteres e a exceção interna especificadas.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Uma referência a uma exceção interna.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">Representa a exceção gerada quando a propriedade <see cref="P:System.Data.DataColumn.Expression" /> de um <see cref="T:System.Data.DataColumn" /> contém um erro de sintaxe.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">A origem e destino de um fluxo serializado específico.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.SyntaxErrorException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Esse tipo é usado como uma classe base para a geração de objetos do tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta XSD.exe do .NET Framework e não se destina a ser usado diretamente do código.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo de objetos na sequência de origem representados pela tabela, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">Inicializa um novo <see cref="T:System.Data.TypedTableBase`1" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse tipo não se destina a ser usado diretamente do seu código.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Inicializa um novo <see cref="T:System.Data.TypedTableBase`1" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">Um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados para construir o objeto.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">O contexto de fluxo do objeto que está sendo desserializado.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Converte os elementos de um <see cref="T:System.Data.TypedTableBase`1" /> para o tipo especificado. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Um <see cref="T:System.Data.EnumerableRowCollection" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Retorna um enumerador para o tipo <see cref="T:System.Data.DataRow" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Um objeto que implementa a interface do <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Retorna um enumerador para o tipo <see cref="T:System.Data.DataRow" />. Este método dá suporte à geração de objetos de tipo <see cref="T:System.Data.DataTable" /> pelo Visual Studio e a ferramenta do XSD.exe do .NET Framework. Esse método não se destina a ser usado diretamente do seu código.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Um objeto que implementa a interface do <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">Contém os métodos de extensão da classe <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Enumera os elementos de linha de dados do <see cref="T:System.Data.TypedTableBase`1" /> e retorna um objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />. Esse objeto pode ser usado em uma expressão LINQ ou um método de consulta.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">A origem <see cref="T:System.Data.TypedTableBase`1" /> a ser tornada enumerável.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">O tipo para converter os elementos da origem em.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Um objeto <see cref="T:System.Data.EnumerableRowCollection`1" /> em que o parâmetro genérico <paramref name="T" /> é <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">Retorna o elemento em uma linha especificada em uma sequência ou um valor padrão se a linha estiver fora do intervalo.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">Um objeto enumerável em que se retorna um elemento.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">O índice baseado em zero do elemento a ser recuperado.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">O tipo dos elementos ou da linha.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">O elemento de uma linha especificada em uma sequência.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem crescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem crescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem decrescente de acordo com a chave especificada.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">Classifica as linhas de uma <see cref="T:System.Data.TypedTableBase`1" /> em ordem decrescente de acordo com a chave e o comparador especificados.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Uma função para extrair uma chave de um elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha em <paramref name="source" />, geralmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">O tipo da chave retornada por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">Projeta cada elemento de um <see cref="T:System.Data.TypedTableBase`1" /> em um novo formulário.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> nos quais invocar uma função de transformação.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">Uma função de transformação a ser aplicada a cada elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha no <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Um <see cref="T:System.Data.EnumerableRowCollection`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtra uma sequência de linhas com base no predicado especificado.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Um <see cref="T:System.Data.TypedTableBase`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> a serem filtrados.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Uma função para testar cada elemento em relação a uma condição.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">O tipo dos elementos de linha no <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Um <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contém linhas da sequência de entrada que atendem à condição.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">Representa uma restrição em um conjunto de colunas no qual todos os valores devem ser exclusivos.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o <see cref="T:System.Data.DataColumn" /> a ser restringido e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com a matriz determinada de objetos <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome e <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, <see cref="T:System.Data.DataColumn" /> a ser restringido e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">O <see cref="T:System.Data.DataColumn" /> a ser restringido.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome e a matriz de objetos <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">A matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa uma nova instância da classe <see cref="T:System.Data.UniqueConstraint" /> com o nome especificado, uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida e um valor que especifica se a restrição é uma chave primária.</summary>
      <param name="name" vsli:raw="The name of the constraint.">O nome da restrição.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Uma matriz de objetos <see cref="T:System.Data.DataColumn" /> a ser restringida.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que a restrição é uma chave primária; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">Obtém a matriz de colunas que essa restrição afeta.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">Compara essa restrição a um segundo para determinar se ambos são idênticos.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">O objeto ao qual este <see cref="T:System.Data.UniqueConstraint" /> é comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as restrições forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">Obtém o código hash desta instância do objeto <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">Obtém um valor que indica se a restrição está em uma chave primária ou não.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se a restrição estiver em uma chave primária; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">Obtém uma tabela à qual essa restrição pertence.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">O <see cref="T:System.Data.DataTable" /> ao qual a restrição pertence.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">Especifica como os resultados do comando de consulta são aplicados à linha que está sendo atualizada.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Os parâmetros de saída e a primeira linha retornada podem ser mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Os dados na primeira linha retornada são mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">Todos os parâmetros ou linhas retornados são ignorados.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Os parâmetros de saída são mapeados para a linha alterada no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Especifica a ação a ser adotada com relação à linha atual e às restantes durante um <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">O <see cref="T:System.Data.Common.DataAdapter" /> é continuar processando as linhas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">O manipulador de eventos relata que a atualização deve ser tratada como um erro.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">A linha atual e todas as linhas restantes não deverão ser atualizadas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">A linha atual não deverá ser atualizada.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Representa a exceção lançada quando você tenta retornar uma versão de um <see cref="T:System.Data.DataRow" /> que foi excluído.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com informações de serialização.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Os dados necessários para serializar ou desserializar um objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descrição da origem e do destino do fluxo serializado especificado.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com a cadeia de caracteres especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">A cadeia de caracteres a ser exibida quando a exceção é gerada.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Data.VersionNotFoundException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica como ler dados XML e um esquema relacional em um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">O modo de leitura padrão.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">Lê um DiffGram, aplicando alterações de DiffGram ao <see cref="T:System.Data.DataSet" />. A semântica é idêntica às de uma operação de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Assim como acontece com a operação de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, os valores de <see cref="P:System.Data.DataRow.RowState" /> são preservados. A entrada para <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> com DiffGrams deve apenas ser obtida usando a saída do <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />, como um DiffGram.
O <see cref="T:System.Data.DataSet" /> de destino precisa ter o mesmo esquema do <see cref="T:System.Data.DataSet" /> no qual <see cref="Overload:System.Data.DataSet.WriteXml" /> como DiffGram é chamado. Caso contrário, a operação de mesclagem de DiffGram falhará e uma exceção será gerada.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">Lê os fragmentos XML, como aqueles gerados por consultas FOR XML, em uma instância do SQL Server em execução. Quando <see cref="T:System.Data.XmlReadMode" /> é definido como <see langword="Fragment" />, o namespace padrão é lido como o esquema embutido.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">Ignora qualquer esquema embutido e carrega os dados no esquema <see cref="T:System.Data.DataSet" /> existente. Se os dados não coincidem com o esquema existente, eles serão descartados (incluindo dados de diferentes namespaces definidos para o <see cref="T:System.Data.DataSet" />). Se os dados forem um DiffGram, <see langword="IgnoreSchema" /> tem a funcionalidade que <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignora qualquer esquema embutido, infere o esquema dos dados e carrega-os. Se o <see cref="T:System.Data.DataSet" /> já contiver um esquema, o esquema atual será estendido, adicionando colunas às tabelas existentes. Uma exceção será lançada se uma tabela inferida já existir com um namespace diferente ou se qualquer coluna inferida estiver em conflito com colunas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignora qualquer esquema embutido, infere o esquema digitado dos dados e carrega-os. Se o tipo não pode ser inferido dos dados, ele é interpretado como dados de cadeia de caracteres. Se o <see cref="T:System.Data.DataSet" /> já contiver um esquema, o esquema atual é estendido, adicionando novas colunas ou adicionando colunas às tabelas existentes. Uma exceção será lançada se uma tabela inferida já existir com um namespace diferente ou se qualquer coluna inferida estiver em conflito com colunas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lê qualquer esquema embutido e carrega os dados. Se o <see cref="T:System.Data.DataSet" /> já contém o esquema, novas tabelas podem ser adicionadas ao esquema, mas uma exceção é lançada se todas as tabelas no esquema embutido já existirem no <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica como gravar dados XML e um esquema relacional de um <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Grava todo o <see cref="T:System.Data.DataSet" /> como um DiffGram, incluindo valores originais e atuais. Para gerar um DiffGram que contém apenas valores alterados, chame <see cref="M:System.Data.DataSet.GetChanges" /> e, em seguida, chame <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como um DiffGram no <see cref="T:System.Data.DataSet" /> retornado.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">Grava o conteúdo atual do <see cref="T:System.Data.DataSet" /> como dados XML, sem um esquema XSD. Se nenhum dado for carregado no <see cref="T:System.Data.DataSet" />, nada será gravado.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">Grava o conteúdo atual do <see cref="T:System.Data.DataSet" /> como dados XML com a estrutura relacional como um esquema XSD embutido. Se o <see cref="T:System.Data.DataSet" /> tiver apenas um esquema sem dados, somente o esquema embutido será gravado. Se o <see cref="T:System.Data.DataSet" /> não tiver um esquema atual, nada será gravado.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Permite que os dados estruturados sejam armazenados, recuperados e manipulados por meio de um <see cref="T:System.Data.DataSet" /> relacional.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDataDocument" /> com o <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">O <see langword="DataSet" /> a ser carregado no <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">Cria uma duplicata do nó atual.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns vsli:raw="The cloned node.">O nó clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Cria um elemento com <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">O prefixo do novo elemento. Se String.Empty ou <see langword="null" />, não há nenhum prefixo.</param>
      <param name="localName" vsli:raw="The local name of the new element.">O nome local do novo elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">O URI (Uniform Resource Identifier) do namespace do novo elemento. Se String.Empty ou <see langword="null" />, não há nenhum namespaceURI.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Um novo <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Cria um <see cref="T:System.Xml.XmlEntityReference" /> com o nome especificado.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">O nome da referência da entidade.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Um <see cref="T:System.Xml.XmlEntityReference" /> com o nome especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Chamar esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">Cria um novo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar nesse documento. O <see langword="XPathNavigator" /> é posicionado no nó especificado no parâmetro <paramref name="node" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">O <see cref="T:System.Xml.XmlNode" /> no qual você deseja que o navegador seja inicialmente posicionado.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">Um <see langword="XPathNavigator" /> usado para navegar pelo documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Obtém um <see cref="T:System.Data.DataSet" /> que fornece uma representação relacional dos dados no <see langword="XmlDataDocument" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">Um <see langword="DataSet" /> que pode ser usado para acessar os dados <see langword="XmlDataDocument" /> no usando um modelo relacional.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">Obtém o <see cref="T:System.Xml.XmlElement" /> com a ID especificada. Este método não tem suporte na classe <see cref="T:System.Xml.XmlDataDocument" />. Chamar esse método gerará uma exceção.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">A ID do atributo a ser correspondida.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">Um <see cref="T:System.Xml.XmlElement" /> com a ID especificada.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Chamar esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Recupera o <see cref="T:System.Xml.XmlElement" /> associado ao <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">O <see langword="DataRow" /> cujo <see langword="XmlElement" /> associado você deseja recuperar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">O <see langword="XmlElement" /> que contém uma representação do <see langword="DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">O nome qualificado para correspondência. Ele é comparado com a propriedade <see cref="P:System.Xml.XmlDocument.Name" /> do nó correspondente. O valor especial “*” corresponde a todas as marcas.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Recupera o <see cref="T:System.Data.DataRow" /> associado ao <see cref="T:System.Xml.XmlElement" /> especificado.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">O <see langword="XmlElement" /> cujo <see langword="DataRow" /> associado você deseja recuperar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">O <see langword="DataRow" /> que contém uma representação do <see langword="XmlElement" />; <see langword="null" /> se não houver nenhum <see langword="DataRow" /> associado a <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">Carrega o <see langword="XmlDataDocument" /> do fluxo especificado.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">O fluxo que contém o documento XML a ser carregado.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Carrega o <see langword="XmlDataDocument" /> do <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">O <see langword="TextReader" /> usado para alimentar os dados XML no documento.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">Carrega o <see langword="XmlDataDocument" /> usando a URL especificada.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">A URL do arquivo que contém o documento XML a ser carregado.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carrega o <see langword="XmlDataDocument" /> do <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">O <see langword="XmlReader" /> que contém o documento XML a ser carregado.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">O XML que está sendo carregado contém referências a entidades e o leitor não pode resolver entidades.</exception>
    </member>
  </members>
</doc>