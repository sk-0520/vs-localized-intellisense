<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary>Fornece um wrapper gerenciado para um identificador de processo.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> do identificador especificado, que indica se o identificador deve ser liberado durante a fase de finalização.</summary>
      <param name="existingHandle">O identificador a ser encapsulado.</param>
      <param name="ownsHandle">
        <see langword="true" /> para permitir de maneira que confiável que o <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> libere o identificador durante a fase de finalização; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary>Fornece dados para os eventos de <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> e de <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> .</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary>Obtém a linha de caracteres que foi gravada em um fluxo de saída <see cref="T:System.Diagnostics.Process" /> redirecionado.</summary>
      <returns>A linha que foi escrita por uma <see cref="T:System.Diagnostics.Process" /> associada ao seu fluxo redirecionado <see cref="P:System.Diagnostics.Process.StandardOutput" /> ou <see cref="P:System.Diagnostics.Process.StandardError" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary>Representa o método que manipulará o evento <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> ou <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> de um <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary>Especifica uma descrição de uma propriedade ou evento.</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> usando a descrição especificada.</summary>
      <param name="description">O texto de descrição definida pelo aplicativo.</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary>Obtém o texto de descrição associado ao item monitorado.</summary>
      <returns>Uma descrição definida pelo aplicativo.</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary>Fornece acesso a processos locais e remotos e permite que você inicie e pare os processos do sistema local.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Process" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary>Obtém a prioridade base do processo associado.</summary>
      <returns>A prioridade base, que é calculada de <see cref="P:System.Diagnostics.Process.PriorityClass" /> do processo associado.</returns>
      <exception cref="T:System.InvalidOperationException">O processo foi encerrado.
- ou -
O processo não foi iniciado, portanto, não há ID de processo.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary>Inicia as operações de leitura assíncronas no fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> redirecionado do aplicativo.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> é <see langword="false" />.
- ou -
Uma operação de leitura assíncrona já está em andamento no fluxo <see cref="P:System.Diagnostics.Process.StandardError" />.
- ou -
O fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> foi usado por uma operação de leitura síncrona.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary>Inicia as operações de leitura assíncronas no fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirecionado do aplicativo.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> é <see langword="false" />.
- ou -
Uma operação de leitura assíncrona já está em andamento no fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" />.
- ou -
O fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> foi usado por uma operação de leitura síncrona.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary>Cancela a operação de leitura assíncrona no fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> redirecionado de um aplicativo.</summary>
      <exception cref="T:System.InvalidOperationException">O fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> não está habilitado para operações de leitura assíncronas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary>Cancela a operação de leitura assíncrona no fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirecionado de um aplicativo.</summary>
      <exception cref="T:System.InvalidOperationException">O fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> não está habilitado para operações de leitura assíncronas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary>Libera todos os recursos associados a esse componente.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary>Fecha um processo que tem uma interface do usuário enviando uma mensagem de fechamento à janela principal.</summary>
      <returns>
        <see langword="true" /> se a mensagem de fechamento tiver sido enviada com êxito; <see langword="false" /> se o processo associado não tiver uma janela principal ou se a janela principal estiver desabilitada (por exemplo, se uma caixa de diálogo modal estiver sendo mostrada).</returns>
      <exception cref="T:System.InvalidOperationException">O processo já terminou.
- ou -
Nenhum processo está associado a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary>Libere todos os recursos usados por esse processo.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary>Obtém ou define se o evento <see cref="E:System.Diagnostics.Process.Exited" /> deve ser gerado quando o processo é encerrado.</summary>
      <returns>
        <see langword="true" /> se o evento <see cref="E:System.Diagnostics.Process.Exited" /> precisar ser gerado quando o processo associado for terminado (por meio de uma saída ou uma chamada a <see cref="M:System.Diagnostics.Process.Kill" />); caso contrário, <see langword="false" />. O padrão é <see langword="false" />. Observe que o evento <see cref="E:System.Diagnostics.Process.Exited" /> é gerado mesmo que o valor de <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /> seja <see langword="false" /> quando o processo é encerrado durante ou antes que o usuário execute uma verificação de <see cref="P:System.Diagnostics.Process.HasExited" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary>Coloca um componente <see cref="T:System.Diagnostics.Process" /> no estado para interagir com os processos do sistema operacional executados em um modo especial, habilitando a propriedade nativa <see langword="SeDebugPrivilege" /> no thread atual.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary>Ocorre quando um aplicativo realiza gravação em seu fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> redirecionado.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary>Obtém o valor especificado pelo processo associado quando ele foi finalizado.</summary>
      <returns>O código especificado pelo processo associado quando ele foi finalizado.</returns>
      <exception cref="T:System.InvalidOperationException">O processo não foi encerrado.
- ou -
O processo <see cref="P:System.Diagnostics.Process.Handle" /> não é válido.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.ExitCode" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary>Ocorre quando um processo é fechado.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary>Obtém a hora em que o processo associado foi encerrado.</summary>
      <returns>Um <see cref="T:System.DateTime" /> que indica quando o processo associado foi encerrado.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.ExitTime" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary>Obtém um novo componente <see cref="T:System.Diagnostics.Process" /> e o associa ao processo ativo no momento.</summary>
      <returns>Um novo componente <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo que está executando o aplicativo de chamada.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary>Retorna um novo componente <see cref="T:System.Diagnostics.Process" />, tendo em conta o identificador de um processo no computador local.</summary>
      <param name="processId">O identificador exclusivo do sistema de um recurso de processo.</param>
      <returns>Um componente <see cref="T:System.Diagnostics.Process" /> associado ao recurso de processo local identificado pelo parâmetro <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">O processo especificado pelo parâmetro <paramref name="processId" /> não está em execução. O identificador pode ter expirado.</exception>
      <exception cref="T:System.InvalidOperationException">O processo não foi iniciado por esse objeto.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary>Retorna um novo componente <see cref="T:System.Diagnostics.Process" />, dado um identificador de processo e o nome de um computador na rede.</summary>
      <param name="processId">O identificador exclusivo do sistema de um recurso de processo.</param>
      <param name="machineName">O nome de um computador na rede.</param>
      <returns>Um componente <see cref="T:System.Diagnostics.Process" /> associado ao recurso de processo remoto identificado pelo parâmetro <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">O processo especificado pelo parâmetro <paramref name="processId" /> não está em execução. O identificador pode ter expirado.
- ou -
A sintaxe do parâmetro <paramref name="machineName" /> é inválida. O nome pode ter tamanho zero (0).</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="machineName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O processo não foi iniciado por esse objeto.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary>Cria um novo componente <see cref="T:System.Diagnostics.Process" /> para cada recurso de processo no computador local.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.Process" /> que representa todos os recursos de processo sendo executados no computador local.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary>Cria um novo componente <see cref="T:System.Diagnostics.Process" /> para cada recurso de processo no computador especificado.</summary>
      <param name="machineName">O computador por meio do qual deve ser lida a lista de processos.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.Process" /> que representa todos os recursos de processo sendo executados no computador especificado.</returns>
      <exception cref="T:System.ArgumentException">A sintaxe do parâmetro <paramref name="machineName" /> é inválida. Ele pode ter comprimento zero (0).</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="machineName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A plataforma de sistema operacional não dá suporte a esta operação em computadores remotos.</exception>
      <exception cref="T:System.InvalidOperationException">Há problemas ao acessar as APIs de contador de desempenho usadas para obter informações do processo. Essa exceção é específica ao Windows NT, Windows 2000 e Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um problema ao acessar uma API do sistema subjacente.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary>Cria uma matriz de novos componentes <see cref="T:System.Diagnostics.Process" /> e os associa a todos os recursos do processo no computador local que compartilham o nome do processo especificado.</summary>
      <param name="processName">O nome amigável do processo.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.Process" /> que representa os recursos do processo que executam o aplicativo ou arquivo especificado.</returns>
      <exception cref="T:System.InvalidOperationException">Há problemas ao acessar as APIs de contador de desempenho usadas para obter informações do processo. Essa exceção é específica ao Windows NT, Windows 2000 e Windows XP.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary>Cria uma matriz de novos componentes <see cref="T:System.Diagnostics.Process" /> e os associa a todos os recursos do processo em um computador remoto que compartilham o nome do processo especificado.</summary>
      <param name="processName">O nome amigável do processo.</param>
      <param name="machineName">O nome de um computador na rede.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.Process" /> que representa os recursos do processo que executam o aplicativo ou arquivo especificado.</returns>
      <exception cref="T:System.ArgumentException">A sintaxe do parâmetro <paramref name="machineName" /> é inválida. Ele pode ter comprimento zero (0).</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="machineName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">A plataforma de sistema operacional não dá suporte a esta operação em computadores remotos.</exception>
      <exception cref="T:System.InvalidOperationException">A tentativa de conexão para <paramref name="machineName" /> falhou.
- ou -
Há problemas ao acessar as APIs de contador de desempenho usadas para obter informações do processo. Essa exceção é específica ao Windows NT, Windows 2000 e Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um problema ao acessar uma API do sistema subjacente.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary>Obtém o identificador nativo do processo associado.</summary>
      <returns>O identificador que o sistema operacional atribuiu ao processo associado quando o processo foi iniciado. O sistema usa esse identificador para manter o controle dos atributos do processo.</returns>
      <exception cref="T:System.InvalidOperationException">O processo não foi iniciado ou foi fechado. A propriedade <see cref="P:System.Diagnostics.Process.Handle" /> não pode ser lida porque não há um processo associado a essa instância de <see cref="T:System.Diagnostics.Process" />.
- ou -
A instância de <see cref="T:System.Diagnostics.Process" /> foi anexada a um processo em execução, mas você não tem as permissões necessárias para obter um identificador com direitos de acesso completo.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.Handle" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary>Obtém o número de identificadores abertos pelo processo.</summary>
      <returns>O número de identificadores do sistema operacional abertos pelo processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary>Obtém um valor que indica se o processo associado foi encerrado.</summary>
      <returns>
        <see langword="true" /> se o processo do sistema operacional referenciado pelo componente <see cref="T:System.Diagnostics.Process" /> tiver sido terminado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Não há nenhum processo associado ao objeto.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O código de saída do processo não pôde ser recuperado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary>Obtém o identificador exclusivo para o processo associado.</summary>
      <returns>O identificador exclusivo gerado pelo sistema do processo que é referenciado por essa instância de <see cref="T:System.Diagnostics.Process" />.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Diagnostics.Process.Id" /> do processo não foi definida.
- ou -
Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary>Interrompe imediatamente o processo associado.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível terminar o processo associado.
- ou -
O processo está sendo encerrado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando chamar <see cref="M:System.Diagnostics.Process.Kill" /> para um processo em execução em um computador remoto. Esse método está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo já terminou.
- ou -
Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary>Interrompe imediatamente o processo associado e, opcionalmente, seus processos filho/descendentes.</summary>
      <param name="entireProcessTree">
        <see langword="true" /> para encerrar o processo associado e seus descendentes; <see langword="false" /> para encerrar apenas o processo associado.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível terminar o processo associado.
- ou -
O processo está sendo encerrado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando chamar <see cref="M:System.Diagnostics.Process.Kill" /> para um processo em execução em um computador remoto. Esse método está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo já terminou.
- ou -
Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.
- ou -
O processo de chamada é um membro da árvore descendente do processo associado.</exception>
      <exception cref="T:System.AggregateException">Nem todos os processos na árvore descendente do processo associado podem ser encerrados.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary>Tira um componente <see cref="T:System.Diagnostics.Process" /> do estado que permite a ele interagir com processos do sistema operacional que são executados em um modo especial.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary>Obtém o nome do computador no qual o processo associado está em execução.</summary>
      <returns>O nome do computador no qual o processo associado está em execução.</returns>
      <exception cref="T:System.InvalidOperationException">Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary>Obtém o módulo principal do processo associado.</summary>
      <returns>O <see cref="T:System.Diagnostics.ProcessModule" /> usado para iniciar o processo.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.MainModule" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Um processo de 32 bits está tentando acessar os módulos de um processo de 64 bits.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.
- ou -
O processo foi encerrado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary>Obtém o identificador de janela da janela principal do processo associado.</summary>
      <returns>O identificador de janela gerado pelo sistema da janela principal do processo associado.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> não foi definido porque o processo foi encerrado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary>Obtém a legenda da janela principal do processo.</summary>
      <returns>O título da janela principal do processo.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> não foi definida, porque o processo foi encerrado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary>Obtém ou define o tamanho de conjunto de trabalho máximo permitido em bytes para o processo associado.</summary>
      <returns>O tamanho máximo do conjunto de trabalho permitido na memória para o processo em bytes.</returns>
      <exception cref="T:System.ArgumentException">O tamanho máximo do conjunto de trabalho é inválido. Ele deve ser maior ou igual ao tamanho mínimo de conjunto de trabalho.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">As informações de conjunto de trabalho não puderam ser recuperadas do recurso do processo associado.
- ou -
O identificador de processo é zero, porque o processo não foi iniciado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.
- ou -
O processo foi encerrado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary>Obtém ou define o tamanho de conjunto de trabalho mínimo permitido em bytes para o processo associado.</summary>
      <returns>O tamanho mínimo do conjunto de trabalho necessário na memória para o processo em bytes.</returns>
      <exception cref="T:System.ArgumentException">O tamanho mínimo do conjunto de trabalho é inválido. Ele deve ser menor ou igual ao tamanho máximo do conjunto de trabalho.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">As informações de conjunto de trabalho não puderam ser recuperadas do recurso do processo associado.
- ou -
O identificador de processo é zero, porque o processo não foi iniciado.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.
- ou -
O processo foi encerrado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary>Obtém os módulos que foram carregados pelo processo associado.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.ProcessModule" /> que representa os módulos que foram carregados pelo processo associado.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.Modules" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.Modules" /> para o processo do sistema ou o tempo ocioso. Esses processos não têm módulos.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary>Obtém a quantidade de memória não paginada, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória, em bytes, que o sistema alocou para o processo associado que não pode ser gravada no arquivo de paginação de memória virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary>Obtém a quantidade de memória não paginada, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória do sistema, em bytes, alocada para o processo associado que não pode ser gravada no arquivo de paginação de memória virtual.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary>Gera o <see cref="E:System.Diagnostics.Process.Exited" /> evento.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary>Ocorre sempre que um aplicativo grava uma linha no fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirecionado.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary>Obtém a quantidade de memória paginada, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória, em bytes, alocada pelo processo associado que pode ser gravada no arquivo de paginação da memória virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary>Obtém a quantidade de memória paginada, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória, em bytes, alocada no arquivo de paginação de memória virtual para o processo associado.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary>Obtém a quantidade de memória paginável do sistema, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória, em bytes, do sistema alocada para o processo associado que pode ser gravado no arquivo de paginação da memória virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary>Obtém a quantidade de memória paginável do sistema, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória do sistema, em bytes, alocada para o processo associado que pode ser gravada no arquivo de paginação de memória virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary>Obtém a quantidade máxima de memória, em bytes, no arquivo de paginação de memória virtual usado pelo processo associado.</summary>
      <returns>A quantidade máxima de memória, em bytes, alocada pelo processo associado que pode ser gravada no arquivo de paginação da memória virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary>Obtém a quantidade máxima de memória, em bytes, no arquivo de paginação de memória virtual usado pelo processo associado.</summary>
      <returns>A quantidade máxima de memória, em bytes, alocada no arquivo de paginação de memória virtual para o processo associado desde que ele foi iniciado.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary>Obtém a quantidade máxima de memória virtual, em bytes, usada pelo processo associado.</summary>
      <returns>A quantidade máxima de memória virtual, em bytes, que o processo associado solicitou.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary>Obtém a quantidade máxima de memória virtual, em bytes, usada pelo processo associado.</summary>
      <returns>A quantidade máxima de memória virtual, em bytes, alocada ao processo associado desde sua inicialização.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary>Obtém o tamanho do conjunto de trabalho máximo para o processo associado, em bytes.</summary>
      <returns>A quantidade máxima de memória física que o processo associado exigiu todos de uma vez, em bytes.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary>Obtém a quantidade máxima de memória física, em bytes, usada pelo processo associado.</summary>
      <returns>A quantidade máxima de memória física, em bytes, alocada para o processo associado desde sua inicialização.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary>Obtém ou define um valor que indica se a prioridade do processo associada deve temporariamente ser aumentada pelo sistema operacional quando o foco estiver na janela principal.</summary>
      <returns>
        <see langword="true" /> se o aumento dinâmico da prioridade de processo deve ocorrer para um processo quando ele sair do estado de espera; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar as informações de aumento de prioridade do recurso de processo associado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">O identificador de processo é zero. (O processo não foi iniciado.)</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary>Obtém ou define a categoria geral de prioridade para o processo associado.</summary>
      <returns>A categoria de prioridade do processo associado, do qual o <see cref="P:System.Diagnostics.Process.BasePriority" /> do processo é calculado.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">As informações de prioridade do processo não puderam ser definidas nem recuperadas do recurso do processo associado.
- ou -
O identificador de processo é zero. (O processo não foi iniciado.)</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.PriorityClass" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não está disponível.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A classe de prioridade não pode ser definida porque ela não usa um valor válido, conforme definido na enumeração <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary>Obtém a quantidade de memória privada, em bytes, alocada ao processo associado.</summary>
      <returns>O número de bytes alocados pelo processo associado que não podem ser compartilhados com outros processos.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary>Obtém a quantidade de memória privada, em bytes, alocada ao processo associado.</summary>
      <returns>A quantidade de memória, em bytes, alocada ao processo associado que não pode ser compartilhada com outros processos.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary>Obtém o tempo de processador privilegiado para esse processo.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica a quantidade de tempo que o processo gastou executando o código no núcleo do sistema operacional.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary>Obtém o nome do processo.</summary>
      <returns>O nome que o sistema usa para identificar o processo para o usuário.</returns>
      <exception cref="T:System.InvalidOperationException">O processo não tem um identificador ou nenhum processo está associado ao <see cref="T:System.Diagnostics.Process" />.
- ou -
O processo associado foi encerrado.</exception>
      <exception cref="T:System.NotSupportedException">O processo não está neste computador.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary>Obtém ou define os processadores nos quais os threads desse processo podem ser agendados para execução.</summary>
      <returns>Um bitmask que representa os processadores nos quais os threads do processo associado podem ser executados. O padrão depende do número de processadores no computador. O valor padrão é 2 n -1, em que n é o número de processadores.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">As informações de <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> não puderam ser definidas nem recuperadas do recurso do processo associado.
- ou -
O identificador de processo é zero. (O processo não foi iniciado.)</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo <see cref="P:System.Diagnostics.Process.Id" /> não estava disponível.
- ou -
O processo foi encerrado.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary>Descarta informações sobre o processo associado que foi armazenado em cache dentro do componente do processo.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary>Obtém um valor que indica se a interface do usuário do processo está respondendo.</summary>
      <returns>
        <see langword="true" /> se a interface do usuário do processo associado estiver respondendo ao sistema; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.Responding" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary>Obtém o identificador nativo para esse processo.</summary>
      <returns>O identificador nativo para esse processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary>Obtém o identificador de sessão dos Serviços de Terminal para o processo associado.</summary>
      <returns>O identificador de sessão dos Serviços de Terminal para o processo associado.</returns>
      <exception cref="T:System.NullReferenceException">Não há nenhuma sessão associada a este processo.</exception>
      <exception cref="T:System.InvalidOperationException">Não há nenhum processo associado a esse identificador de sessão.
- ou -
O processo associado não está neste computador.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary>Obtém um fluxo usado para ler a saída de erro do aplicativo.</summary>
      <returns>Um <see cref="T:System.IO.StreamReader" /> que pode ser usado para ler o fluxo de erro padrão do aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> não foi definido para o redirecionamento; verifique se <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> foi definido como <see langword="true" /> e se <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> foi definido como <see langword="false" />.
- ou -
O fluxo <see cref="P:System.Diagnostics.Process.StandardError" /> foi aberto para operações de leitura assíncronas com <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary>Obtém um fluxo usado para gravar a entrada do aplicativo.</summary>
      <returns>Um <see cref="T:System.IO.StreamWriter" /> que pode ser usado para gravar o fluxo de entrada padrão do aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O fluxo <see cref="P:System.Diagnostics.Process.StandardInput" /> não foi definido porque <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> está definido como <see langword="false" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary>Obtém um fluxo usado para ler a saída textual do aplicativo.</summary>
      <returns>Um <see cref="T:System.IO.StreamReader" /> que pode ser usado para ler o fluxo de saída padrão do aplicativo.</returns>
      <exception cref="T:System.InvalidOperationException">O fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> não foi definido para o redirecionamento; verifique se <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> foi definido como <see langword="true" /> e se <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> foi definido como <see langword="false" />.
- ou -
O fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" /> foi aberto para operações de leitura assíncronas com <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary>Inicia (ou reutiliza) o recurso do processo que é especificado pela propriedade <see cref="P:System.Diagnostics.Process.StartInfo" /> desse componente <see cref="T:System.Diagnostics.Process" /> e o associa ao componente.</summary>
      <returns>
        <see langword="true" /> se um recurso de processo for iniciado, <see langword="false" /> se nenhum novo recurso de processo for iniciado (por exemplo, se um processo existente for reutilizado).</returns>
      <exception cref="T:System.InvalidOperationException">Não foi especificado nenhum nome de arquivo no <see cref="T:System.Diagnostics.Process" /> do componente <see cref="P:System.Diagnostics.Process.StartInfo" />.
- ou -
O membro <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> da propriedade <see cref="P:System.Diagnostics.Process.StartInfo" /> é <see langword="true" /> enquanto <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> ou <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> é <see langword="true" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Erro ao abrir o arquivo associado.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Sistemas operacionais sem suporte para shell, como o Nano Server (somente .NET Core) não são compatíveis com o método.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary>Inicia o recurso de processo especificado pelo parâmetro que contém informações de início do processo (por exemplo, o nome do arquivo do processo a ser iniciado) e associa o recurso a um novo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="startInfo">O <see cref="T:System.Diagnostics.ProcessStartInfo" /> que contém as informações usadas para iniciar o processo, incluindo o nome do arquivo e quaisquer argumentos de linha de comando.</param>
      <returns>Um novo <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo, ou <see langword="null" />, se nenhum recurso do processo tiver sido iniciado. Observe que um novo processo iniciado junto com instâncias já em execução do mesmo processo será independente dos outros. Além disso, Iniciar poderá retornar um Processo não nulo com a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> já definida como <see langword="true" />. Nesse caso, o processo iniciado pode ter ativado uma instância existente de si próprio e fechado em seguida.</returns>
      <exception cref="T:System.InvalidOperationException">Nenhum nome de arquivo foi especificado na propriedade <paramref name="startInfo" /> do parâmetro <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.
- ou -
A propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> do parâmetro <paramref name="startInfo" /> é <see langword="true" /> e a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> ou <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> também é <see langword="true" />.
- ou -
A propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> do parâmetro <paramref name="startInfo" /> é <see langword="true" /> e a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> não é <see langword="null" /> ou está vazia ou a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> não é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="startInfo" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um erro ao abrir o arquivo associado.
- ou -
O arquivo especificado na propriedade <paramref name="startInfo" /> do parâmetro <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> não pôde ser encontrado.
- ou -
A soma do comprimento dos argumentos e do comprimento do caminho completo para o processo excede 2080. A mensagem de erro associada a essa exceção pode ser uma das seguintes: “A área de dados transferida para uma chamada do sistema é muito pequena”. ou “O acesso foi negado”.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Sistemas operacionais sem suporte para shell, como o Nano Server (somente .NET Core) não são compatíveis com o método.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary>Inicia um recurso de processo especificando o nome de um arquivo de aplicativo ou documento e associa o recurso a um novo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">O nome de um arquivo de aplicativo ou documento a ser executado no processo.</param>
      <returns>Um novo <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo, ou <see langword="null" />, se nenhum recurso do processo tiver sido iniciado. Observe que um novo processo iniciado junto com instâncias já em execução do mesmo processo será independente dos outros. Além disso, Iniciar poderá retornar um Processo não nulo com a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> já definida como <see langword="true" />. Nesse caso, o processo iniciado pode ter ativado uma instância existente de si próprio e fechado em seguida.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um erro ao abrir o arquivo associado.
- ou -
Não foi possível encontrar o arquivo especificado no <paramref name="fileName" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">A variável de ambiente PATH tem uma cadeia de caracteres que contém aspas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary>Inicia um recurso de processo especificando o nome de um aplicativo e um conjunto de argumentos de linha de comando e associa o recurso a um novo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">O nome de um arquivo de aplicativo a ser executado no processo.</param>
      <param name="arguments">Argumentos de linha de comando a serem passados durante o início do processo.</param>
      <returns>Um novo <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo, ou <see langword="null" />, se nenhum recurso do processo tiver sido iniciado. Observe que um novo processo iniciado junto com instâncias já em execução do mesmo processo será independente dos outros. Além disso, Iniciar poderá retornar um Processo não nulo com a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> já definida como <see langword="true" />. Nesse caso, o processo iniciado pode ter ativado uma instância existente de si próprio e fechado em seguida.</returns>
      <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="fileName" /> ou <paramref name="arguments" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um erro ao abrir o arquivo associado.
- ou -
Não foi possível encontrar o arquivo especificado no <paramref name="fileName" />.
- ou -
A soma do comprimento dos argumentos e do comprimento do caminho completo para o processo excede 2080. A mensagem de erro associada a essa exceção pode ser uma das seguintes: “A área de dados transferida para uma chamada do sistema é muito pequena”. ou “O acesso foi negado”.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">A variável de ambiente PATH tem uma cadeia de caracteres que contém aspas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Inicia um recurso de processo, especificando o nome de um aplicativo, um nome de usuário, uma senha e um domínio e associa o recurso a um novo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">O nome de um arquivo de aplicativo a ser executado no processo.</param>
      <param name="userName">O nome de usuário a ser usado ao iniciar o processo.</param>
      <param name="password">Um <see cref="T:System.Security.SecureString" /> que contém a senha a ser usada ao iniciar o processo.</param>
      <param name="domain">O domínio a ser usado ao iniciar o processo.</param>
      <returns>Um novo <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo, ou <see langword="null" />, se nenhum recurso do processo tiver sido iniciado. Observe que um novo processo iniciado junto com instâncias já em execução do mesmo processo será independente dos outros. Além disso, Iniciar poderá retornar um Processo não nulo com a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> já definida como <see langword="true" />. Nesse caso, o processo iniciado pode ter ativado uma instância existente de si próprio e fechado em seguida.</returns>
      <exception cref="T:System.InvalidOperationException">Nenhum nome de arquivo foi especificado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Erro ao abrir o arquivo associado.
- ou -
Não foi possível encontrar o arquivo especificado no <paramref name="fileName" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este membro não é compatível com o Linux ou o macOS (somente .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Inicia um recurso de processo, especificando o nome de um aplicativo, um conjunto de argumentos de linha de comando, um nome de usuário, uma senha e um domínio e associa o recurso a um novo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">O nome de um arquivo de aplicativo a ser executado no processo.</param>
      <param name="arguments">Argumentos de linha de comando a serem passados durante o início do processo.</param>
      <param name="userName">O nome de usuário a ser usado ao iniciar o processo.</param>
      <param name="password">Um <see cref="T:System.Security.SecureString" /> que contém a senha a ser usada ao iniciar o processo.</param>
      <param name="domain">O domínio a ser usado ao iniciar o processo.</param>
      <returns>Um novo <see cref="T:System.Diagnostics.Process" /> associado ao recurso do processo, ou <see langword="null" />, se nenhum recurso do processo tiver sido iniciado. Observe que um novo processo iniciado junto com instâncias já em execução do mesmo processo será independente dos outros. Além disso, Iniciar poderá retornar um Processo não nulo com a propriedade <see cref="P:System.Diagnostics.Process.HasExited" /> já definida como <see langword="true" />. Nesse caso, o processo iniciado pode ter ativado uma instância existente de si próprio e fechado em seguida.</returns>
      <exception cref="T:System.InvalidOperationException">Nenhum nome de arquivo foi especificado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um erro ao abrir o arquivo associado.
- ou -
Não foi possível encontrar o arquivo especificado no <paramref name="fileName" />.
- ou -
A soma do tamanho dos argumentos e o tamanho do caminho completo para o arquivo associado excede 2.080. A mensagem de erro associada a essa exceção pode ser uma das seguintes: “A área de dados transferida para uma chamada do sistema é muito pequena”. ou “O acesso foi negado”.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto do processo já foi descartado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este membro não é compatível com o Linux ou o macOS (somente .NET Core).</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary>Obtém ou define as propriedades a serem passadas para o método <see cref="M:System.Diagnostics.Process.Start" /> do <see cref="T:System.Diagnostics.Process" />.</summary>
      <returns>O <see cref="T:System.Diagnostics.ProcessStartInfo" /> que representa os dados com os quais o processo será iniciado. Esses argumentos incluem o nome do documento ou arquivo executável usado para iniciar o processo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor que especifica o <see cref="P:System.Diagnostics.Process.StartInfo" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Diagnostics.Process.Start" /> não foi usado para iniciar o processo.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary>Obtém a hora em que o processo associado foi iniciado.</summary>
      <returns>Um objeto que indica quando o processo é iniciado. Uma exceção é lançada se o processo não está em execução.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.StartTime" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.InvalidOperationException">O processo foi encerrado.
- ou -
O processo não foi iniciado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ocorreu um erro na chamada para a função do Windows.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary>Obtém ou define o objeto usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de um evento de encerramento de um processo.</summary>
      <returns>O <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de um evento <see cref="E:System.Diagnostics.Process.Exited" /> no processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary>Obtém o conjunto de threads que estão em execução no processo associado.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.ProcessThread" /> que representa o sistema operacional de threads em execução no processo associado no momento.</returns>
      <exception cref="T:System.SystemException">O processo não tem um <see cref="P:System.Diagnostics.Process.Id" /> ou nenhum processo está associado à instância <see cref="T:System.Diagnostics.Process" />.
- ou -
O processo associado foi encerrado.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary>Formata o nome do processo como uma cadeia de caracteres, combinada com o tipo de componente pai, se aplicável.</summary>
      <returns>O <see cref="P:System.Diagnostics.Process.ProcessName" />, combinado com o valor retornado <see cref="M:System.Object.ToString" /> do componente base.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary>Obtém o tempo de processador total para esse processo.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica o tempo que o processo associado passou utilizando a CPU. Esse valor é a soma de <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> e <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />.</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary>Obtém o tempo de processador do usuário para esse processo.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica a quantidade de tempo que o processo associado gastou executando o código dentro da porção de aplicativo do processo (e não dentro do núcleo do sistema operacional).</returns>
      <exception cref="T:System.NotSupportedException">Você está tentando acessar a propriedade <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> para um processo que está sendo executado em um computador remoto. Essa propriedade está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary>Obtém o tamanho da memória virtual do processo, em bytes.</summary>
      <returns>A quantidade de memória virtual, em bytes, que o processo associado solicitou.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary>Obtém a quantidade de memória virtual, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória virtual, em bytes, alocada para o processo associado.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary>Instrui o componente <see cref="T:System.Diagnostics.Process" /> a esperar indefinidamente que o processo associado seja encerrado.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível acessar a configuração de espera.</exception>
      <exception cref="T:System.SystemException">Nenhum processo <see cref="P:System.Diagnostics.Process.Id" /> foi definido e não existe um <see cref="P:System.Diagnostics.Process.Handle" /> do qual a propriedade <see cref="P:System.Diagnostics.Process.Id" /> possa ser determinada.
- ou -
Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.
- ou -
Você está tentando chamar <see cref="M:System.Diagnostics.Process.WaitForExit" /> para um processo em execução em um computador remoto. Esse método está disponível somente para processos em execução no computador local.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary>Instrui o componente <see cref="T:System.Diagnostics.Process" /> a aguardar o número especificado de milissegundos para que o processo associado seja encerrado.</summary>
      <param name="milliseconds">O tempo, em milissegundos, a aguardar até que o processo seja encerrado. O máximo é o maior valor possível de um inteiro de 32 bits, que representa o infinito para o sistema operacional.</param>
      <returns>
        <see langword="true" /> se o processo associado tiver sido encerrado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível acessar a configuração de espera.</exception>
      <exception cref="T:System.SystemException">Nenhum processo <see cref="P:System.Diagnostics.Process.Id" /> foi definido e não existe um <see cref="P:System.Diagnostics.Process.Handle" /> do qual a propriedade <see cref="P:System.Diagnostics.Process.Id" /> possa ser determinada.
- ou -
Não há processos associados a esse objeto <see cref="T:System.Diagnostics.Process" />.
- ou -
Você está tentando chamar <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> para um processo em execução em um computador remoto. Esse método está disponível somente para processos em execução no computador local.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary>Faz com que o componente <see cref="T:System.Diagnostics.Process" /> aguarde por tempo indefinido até que o processo associado entre em um estado ocioso. Essa sobrecarga se aplica apenas a processos com uma interface do usuário e, portanto, um loop de mensagem.</summary>
      <returns>
        <see langword="true" /> se o processo associado tiver atingido um estado ocioso.</returns>
      <exception cref="T:System.InvalidOperationException">O processo não tem uma interface gráfica.
- ou -
Ocorreu um erro desconhecido. O processo não conseguiu entrar em um estado ocioso.
- ou -
O processo já terminou.
- ou -
Nenhum processo está associado a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary>Faz com que o componente <see cref="T:System.Diagnostics.Process" /> a aguarde o número especificado de milissegundos para que o processo entre em um estado ocioso. Essa sobrecarga se aplica apenas a processos com uma interface do usuário e, portanto, um loop de mensagem.</summary>
      <param name="milliseconds">Um valor de 1 para <see cref="F:System.Int32.MaxValue" />, que especifica o tempo, em milissegundos, a aguardar até que o processo associado entre em um estado ocioso. Um valor de 0 especifica um retorno imediato e um valor de -1 especifica uma espera infinita.</param>
      <returns>
        <see langword="true" /> se o processo associado tiver atingido um estado ocioso; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">O processo não tem uma interface gráfica.
- ou -
Ocorreu um erro desconhecido. O processo não conseguiu entrar em um estado ocioso.
- ou -
O processo já terminou.
- ou -
Nenhum processo está associado a esse objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary>Obtém o uso de memória física do processo associado, em bytes.</summary>
      <returns>A quantidade total de memória física usada pelo processo associado, em bytes.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary>Obtém a quantidade de memória física, em bytes, alocada para o processo associado.</summary>
      <returns>A quantidade de memória física, em bytes, alocada para o processo associado.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary>Representa um arquivo .dll ou .exe que é carregado em um processo específico.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary>Obtém o endereço de memória no qual o módulo foi carregado.</summary>
      <returns>O endereço de carregamento do módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary>Obtém o endereço de memória da função executada quando o sistema carrega e executa o módulo.</summary>
      <returns>O ponto de entrada do módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary>Obtém o caminho completo até o módulo.</summary>
      <returns>O caminho totalmente qualificado que define o local do módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary>Obtém informações de versão sobre o módulo.</summary>
      <returns>Um <see cref="T:System.Diagnostics.FileVersionInfo" /> que contém as informações de versão do módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary>Obtém quantidade de memória necessária para carregar o módulo.</summary>
      <returns>O tamanho, em bytes, da memória que o módulo ocupa.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary>Obtém o nome do módulo do processo.</summary>
      <returns>O nome do módulo.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary>Converte o nome do módulo em uma cadeia de caracteres.</summary>
      <returns>O valor da propriedade <see cref="P:System.Diagnostics.ProcessModule.ModuleName" />.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary>Fornece uma coleção fortemente tipada de objetos <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessModuleCollection" /> sem instâncias <see cref="T:System.Diagnostics.ProcessModule" /> associadas.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessModuleCollection" /> usando a matriz de instâncias <see cref="T:System.Diagnostics.ProcessModule" /> especificada.</summary>
      <param name="processModules">Uma matriz de instâncias <see cref="T:System.Diagnostics.ProcessModule" /> com as quais inicializar esta instância <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary>Determina se o módulo de processo especificado existe na coleção.</summary>
      <param name="module">Uma instância <see cref="T:System.Diagnostics.ProcessModule" /> que indica o módulo a ser localizado na coleção.</param>
      <returns>
        <see langword="true" /> se o módulo existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary>Copia uma matriz de instâncias de <see cref="T:System.Diagnostics.ProcessModule" /> à coleção, no índice especificado.</summary>
      <param name="array">Uma matriz de instâncias <see cref="T:System.Diagnostics.ProcessModule" /> a serem adicionadas à coleção.</param>
      <param name="index">O local no qual adicionar as novas instâncias.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary>Fornece a localização de um módulo especificado na coleção.</summary>
      <param name="module">O <see cref="T:System.Diagnostics.ProcessModule" /> cujo índice é recuperado.</param>
      <returns>O índice de base zero que define o local do módulo dentro de <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary>Obtém um índice para iterar pelo conjunto de módulos de processo.</summary>
      <param name="index">O valor do índice de base zero do módulo na coleção.</param>
      <returns>Um <see cref="T:System.Diagnostics.ProcessModule" /> que indexa os módulos na coleção</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary>Indica a prioridade que o sistema associa a um processo. Esse valor, junto com o valor de prioridade de cada thread do processo, determina o nível de prioridade básica de cada thread.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary>Especifica que o processo tem prioridade maior que <see langword="Normal" />, mas inferior a <see langword="High" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary>Especifica que o processo tem prioridade superior a <see langword="Idle" />, mas abaixo de <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary>Especifica que o processo executa tarefas de tempo crítico que devem ser executadas imediatamente, como a caixa de diálogo <see langword="Task List" />, que deve responder rapidamente quando chamada pelo usuário, independentemente da carga no sistema operacional. Os threads do processo capturam os threads de processos da classe de prioridade normal ou ociosa. Tome muito cuidado ao especificar <see langword="High" /> para a classe de prioridade do processo, porque um aplicativo de classe de alta prioridade pode usar quase todo o tempo do processador disponível.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary>Especifica que os threads desse processo são executados somente quando o sistema está ocioso, como uma proteção de tela. Os threads do processo são capturados pelos threads de qualquer processo em execução em uma classe de prioridade mais alta. Essa classe de prioridade é herdada por processos filho.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary>Especifica que o processo não tem necessidades especiais de agendamento.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary>Especifica que o processo tem a prioridade mais alta possível. Os threads de um processo com prioridade <see langword="RealTime" /> impedem os threads de todos os outros processos, incluindo processos do sistema operacional que realizam tarefas importantes. Portanto, um processo de prioridade <see langword="RealTime" /> que é executado por mais de um intervalo muito breve pode fazer com que os caches de disco não sejam liberados ou fazer com que o mouse pare de responder.</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary>Especifica um conjunto de valores usados quando você inicia um processo.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessStartInfo" /> sem especificar um nome de arquivo a ser usado para iniciar o processo.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessStartInfo" /> e especifica um nome de arquivo, como um aplicativo ou documento, com o qual o processo será iniciado.</summary>
      <param name="fileName">Um aplicativo ou documento com o qual um processo será iniciado.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessStartInfo" />, especifica um nome de arquivo do aplicativo com o qual iniciar o processo e especifica um conjunto de argumentos de linha de comando para passar para o aplicativo.</summary>
      <param name="fileName">Um aplicativo com o qual iniciar um processo.</param>
      <param name="arguments">Os argumentos de linha de comando a serem passados para o aplicativo quando o processo é iniciado.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary>Obtém um conjunto de argumentos de linha de comando a serem usados ao iniciar o aplicativo.</summary>
      <returns>Uma coleção de argumentos de linha de comando.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary>Obtém ou define o conjunto de argumentos de linha de comando a serem usados ao iniciar o aplicativo.</summary>
      <returns>Uma única cadeia de caracteres que contém os argumentos a serem passados para o aplicativo de destino especificado na propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary>Obtém ou define um valor que indica se o processo deve ser iniciado em uma nova janela.</summary>
      <returns>
        <see langword="true" /> para que o processo seja iniciado sem criar uma nova janela que o contenha; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary>Obtém ou define um valor que identifica o domínio a ser usado ao iniciar o processo. Se esse valor for <see langword="null" />, a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> deverá ser especificada no formato UPN.</summary>
      <returns>O domínio do Active Directory a ser usado ao iniciar o processo. Se esse valor for <see langword="null" />, a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> deverá ser especificada no formato UPN.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary>Obtém as variáveis de ambiente que se aplicam a este processo e a seus processos filho.</summary>
      <returns>Um dicionário genérico que contém as variáveis de ambiente que se aplicam a este processo e a seus processos filho. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary>Obtém caminhos de pesquisa para arquivos, diretórios para arquivos temporários, opções específicas de aplicativos e outras informações semelhantes.</summary>
      <returns>Um dicionário de cadeia de caracteres que fornece variáveis de ambiente que se aplicam a este processo e aos processos filho. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary>Obtém ou define um valor que indica se uma caixa de diálogo de erro será exibida para o usuário se o processo não puder ser iniciado.</summary>
      <returns>
        <see langword="true" /> se uma caixa de diálogo de erro deve ser exibida na tela se o processo não pode ser iniciado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary>Obtém ou define o identificador de janela para usar quando uma caixa de diálogo de erro é mostrada para um processo que não pode ser iniciado.</summary>
      <returns>Um ponteiro para o identificador da caixa de diálogo que resulta de uma falha no início do processo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary>Obtém ou define o aplicativo ou documento a ser iniciado.</summary>
      <returns>O nome do aplicativo a ser iniciado ou o nome de um documento de um tipo de arquivo associado a um aplicativo e que tem uma ação abrir padrão disponível para ele. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary>Obtém ou define um valor que indica se o perfil do usuário do Windows deve ser carregado do Registro.</summary>
      <returns>
        <see langword="true" /> se o perfil do usuário do Windows deve ser carregado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary>Obtém ou define uma cadeia de caracteres segura que contém a senha de usuário a ser usada ao iniciar o processo.</summary>
      <returns>A senha de usuário a ser usada ao iniciar o processo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary>Obtém ou define a senha do usuário em texto não criptografado para usar ao iniciar o processo.</summary>
      <returns>A senha do usuário em texto não criptografado.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary>Obtém ou define um valor que indica se a saída de erro de um aplicativo é gravada no fluxo <see cref="P:System.Diagnostics.Process.StandardError" />.</summary>
      <returns>
        <see langword="true" /> se a saída de erro deve ser gravada <see cref="P:System.Diagnostics.Process.StandardError" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary>Obtém ou define um valor que indica se a entrada de um aplicativo é lida do fluxo <see cref="P:System.Diagnostics.Process.StandardInput" />.</summary>
      <returns>
        <see langword="true" /> se a entrada deve ser lida de <see cref="P:System.Diagnostics.Process.StandardInput" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary>Obtém ou define um valor que indica se a saída textual de um aplicativo é gravada no fluxo <see cref="P:System.Diagnostics.Process.StandardOutput" />.</summary>
      <returns>
        <see langword="true" /> se a saída deve ser gravada <see cref="P:System.Diagnostics.Process.StandardOutput" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary>Obtém ou define a codificação preferencial de saída de erro.</summary>
      <returns>Um objeto que representa a codificação preferencial de saída de erro. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding">
      <summary>Obtém ou define a codificação preferencial de entrada padrão.</summary>
      <returns>Um objeto que representa a codificação preferencial para entrada padrão. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary>Obtém ou define a codificação preferencial de saída padrão.</summary>
      <returns>Um objeto que representa a codificação preferencial para a saída padrão. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary>Obtém ou define o nome de usuário a ser usado ao iniciar o processo. Se você usar o formato UPN, <paramref name="user" />@<paramref name="DNS_domain_name" />, a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> deverá ser <see langword="null" />.</summary>
      <returns>O nome de usuário a ser usado ao iniciar o processo. Se você usar o formato UPN, <paramref name="user" />@<paramref name="DNS_domain_name" />, a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> deverá ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary>Obtém ou define um valor que indica se o shell do sistema operacional deve ser usado para iniciar o processo.</summary>
      <returns>
        <see langword="true" /> caso o shell deva ser usado ao iniciar o processo. <see langword="false" /> caso o processo deva ser criado diretamente do arquivo executável. O padrão é <see langword="true" /> em aplicativos .NET Framework e <see langword="false" /> em aplicativos .NET Core.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Uma tentativa de definir o valor como <see langword="true" /> ocorre em aplicativos UWP (Plataforma Universal do Windows).</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary>Obtém ou define o verbo a ser usado ao abrir o aplicativo ou documento especificado pela propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>A ação a ser tomada com o arquivo que o processo abre. O padrão é uma cadeia de caracteres vazia (""), o que significa nenhuma ação.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary>Obtém o conjunto de verbos associados ao tipo de arquivo especificado pela propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>As ações que o sistema pode aplicar ao arquivo indicado pela propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary>Obtém ou define o estado da janela a ser usado quando o processo é iniciado.</summary>
      <returns>Um dos valores de enumeração que indica se o processo é iniciado em uma janela maximizada, minimizada, normal (não maximizada nem minimizada), ou não visível. O padrão é <see langword="Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O estilo da janela não é um dos membros de enumeração <see cref="T:System.Diagnostics.ProcessWindowStyle" />.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary>Quando a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> é <see langword="false" />, obtém ou define o diretório de trabalho para o processo a ser iniciado. Quando <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> é <see langword="true" />, obtém ou define o diretório que contém o processo a ser iniciado.</summary>
      <returns>Quando <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> é <see langword="true" />, o nome totalmente qualificado do diretório que contém o processo a ser iniciado. Quando a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> é <see langword="false" />, o diretório de trabalho para o processo a ser iniciado. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary>Representa um thread de processo do sistema operacional.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary>Obtém a prioridade base do thread.</summary>
      <returns>A prioridade base do thread, que o sistema operacional computa combinando a classe de prioridade do processo com o nível de prioridade do thread associado.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary>Obtém a prioridade atual do thread.</summary>
      <returns>A prioridade atual do thread, que pode se desviar da prioridade base com base em como o sistema operacional está agendando o thread. A prioridade pode ser aumentada temporariamente para um thread ativo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary>Obtém o identificador exclusivo do thread.</summary>
      <returns>O identificador exclusivo associado a um thread específico.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary>Define o processador preferencial para execução desse thread.</summary>
      <returns>O processador preferencial para o thread, usado quando o sistema agenda threads, para determinar em qual processador o thread deve ser executado.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema não pôde definir o thread para ser iniciado no processador especificado.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary>Obtém ou define um valor que indica se o sistema operacional deverá aumentar temporariamente a prioridade do thread associado sempre que a janela principal do processo do thread receber o foco.</summary>
      <returns>
        <see langword="true" />para aumentar a prioridade do thread quando o usuário interage com a interface do processo; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar as informações de aumento de prioridade.
- ou -
Não foi possível definir as informações de aumento de prioridade.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary>Obtém ou define o nível de prioridade do thread.</summary>
      <returns>Um dos <see cref="T:System.Diagnostics.ThreadPriorityLevel" /> valores, especificando um intervalo que limita a prioridade do thread.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar as informações de nível de prioridade do thread.
- ou -
Não foi possível definir o nível de prioridade do thread.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary>Obtém a quantidade de tempo que o thread gastou executando código dentro do núcleo do sistema operacional.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica a quantidade de tempo que o thread gastou executando código dentro do núcleo do sistema operacional.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar o tempo do thread.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary>Define os processadores em que o thread associado pode ser executado.</summary>
      <returns>Um <see cref="T:System.IntPtr" /> que aponta para um conjunto de bits, cada um representando um processador no qual o thread pode ser executado.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível definir a afinidade do processador.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary>Redefine o processador ideal para esse thread indicar que não há um único processador ideal. Em outras palavras, qualquer processador é ideal.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível redefinir o processador ideal.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary>Obtém o endereço de memória da função que o sistema operacional chamou e que iniciou esse thread.</summary>
      <returns>O endereço inicial do thread, que aponta para a função definida pelo aplicativo que o thread executa.</returns>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary>Obtém a hora em que o sistema operacional iniciou o thread.</summary>
      <returns>Um <see cref="T:System.DateTime" /> que representa o tempo que estava no sistema quando o sistema operacional iniciou o thread.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar o tempo do thread.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary>Obtém o estado atual deste thread.</summary>
      <returns>Um <see cref="T:System.Diagnostics.ThreadState" /> que indica a execução do thread, por exemplo, em execução, aguardando ou encerrado.</returns>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary>Obtém a quantidade total de tempo que esse thread gastou usando o processador.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica a quantidade de tempo que o thread teve o controle do processador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar o tempo do thread.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary>Obtém o tempo que o thread associado gastou executando código no aplicativo.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que indica o tempo que o thread gastou executando código no aplicativo em vez de no núcleo do sistema operacional.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível recuperar o tempo do thread.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary>Obtém o motivo pelo qual o thread está aguardando.</summary>
      <returns>Um <see cref="T:System.Diagnostics.ThreadWaitReason" /> que representa o motivo pelo qual o thread está no estado de espera.</returns>
      <exception cref="T:System.InvalidOperationException">O thread não está no estado de espera.</exception>
      <exception cref="T:System.NotSupportedException">O processador está em um computador remoto.</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary>Fornece uma coleção fortemente tipada de objetos <see cref="T:System.Diagnostics.ProcessThread" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessThreadCollection" /> sem instâncias <see cref="T:System.Diagnostics.ProcessThread" /> associadas.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.ProcessThreadCollection" /> usando a matriz de instâncias <see cref="T:System.Diagnostics.ProcessThread" /> especificada.</summary>
      <param name="processThreads">Uma matriz de instâncias <see cref="T:System.Diagnostics.ProcessThread" /> com as quais inicializar esta instância <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary>Acrescenta um thread do processo à coleção.</summary>
      <param name="thread">O thread a ser adicionado à coleção.</param>
      <returns>O índice de base zero do thread na coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary>Determina se o thread de processo especificado existe na coleção.</summary>
      <param name="thread">Uma instância <see cref="T:System.Diagnostics.ProcessThread" /> que indica o thread a ser localizado nesta coleção.</param>
      <returns>
        <see langword="true" /> se o thread existir na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary>Copia uma matriz de instâncias de <see cref="T:System.Diagnostics.ProcessThread" /> à coleção, no índice especificado.</summary>
      <param name="array">Uma matriz de instâncias <see cref="T:System.Diagnostics.ProcessThread" /> a serem adicionadas à coleção.</param>
      <param name="index">O local no qual adicionar as novas instâncias.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary>Fornece a localização de um thread especificado na coleção.</summary>
      <param name="thread">O <see cref="T:System.Diagnostics.ProcessThread" /> cujo índice é recuperado.</param>
      <returns>O índice de base zero que define o local do thread dentro de <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary>Insere um thread de processo no local especificado na coleção.</summary>
      <param name="index">O índice de base zero que indica o local no qual inserir o thread.</param>
      <param name="thread">O thread a ser inserido na coleção.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary>Obtém um índice para iterar pelo conjunto de threads de processo.</summary>
      <param name="index">O valor do índice de base zero do thread na coleção.</param>
      <returns>Um <see cref="T:System.Diagnostics.ProcessThread" /> que indexa os threads na coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary>Exclui um thread de processo da coleção.</summary>
      <param name="thread">O thread a ser removido da coleção.</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary>Especifica como uma nova janela deve aparecer quando o sistema inicia um processo.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary>O estilo de janela oculta. Uma janela pode ser visível ou oculta. O sistema exibe uma janela oculta ao não desenhá-la. Se uma janela for oculta, ele estará efetivamente desabilitada. Uma janela oculta pode processar mensagens do sistema ou de outras janelas, mas não pode processar a entrada do usuário ou exibir a saída. Com frequência, um aplicativo pode manter uma nova janela oculta enquanto personaliza a aparência dela, tornando o estilo da janela <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />. Para usar <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />, a propriedade <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> deve ser <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary>O estilo de janela maximizada. Por padrão, o sistema aumenta uma janela maximizada para que ela ocupe a tela ou, no caso de uma janela filho, a área de cliente da janela pai. Se a janela tiver uma barra de título, o sistema automaticamente a moverá para a parte superior da tela ou para a parte superior da área de cliente da janela pai. Além disso, o sistema desabilita a borda de dimensionamento da janela e a capacidade de posicionamento de janela da barra de título para que o usuário não possa mover a janela arrastando a barra de título.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary>O estilo de janela minimizada. Por padrão, o sistema reduz uma janela minimizada ao tamanho do seu botão da barra de tarefas e a move para a barra de tarefas.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary>O estilo de janela normal e visível. O sistema exibe uma janela com o estilo <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> na tela, em uma localização padrão. Se uma janela estiver visível, o usuário poderá fornecer entradas a ela e exibir suas saídas. Com frequência, um aplicativo pode inicializar uma nova janela para o estilo <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> enquanto personaliza a aparência da janela, tornando o estilo da janela <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary>Especifica o nível de prioridade de um thread.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary>Especifica uma etapa acima da prioridade normal para a <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary>Especifica uma etapa abaixo da prioridade normal para a <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary>Especifica a prioridade mais alta. Isto está duas etapas acima da prioridade normal para a <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary>Especifica a prioridade ociosa. Este é o menor valor de prioridade possível de todos os threads, independentemente do valor da <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary>Especifica a prioridade mais baixa. Isto está duas etapas abaixo da prioridade normal para a <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary>Especifica a prioridade normal para a <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary>Especifica a prioridade crítica em termos de tempo. Esta é a prioridade mais alta de todos os threads, independentemente do valor da <see cref="T:System.Diagnostics.ProcessPriorityClass" /> associada.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary>Especifica o estado de execução atual do thread.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary>Um estado que indica que o thread foi inicializado, mas ainda não foi iniciado.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary>Um estado que indica que o thread está esperando para usar um processador porque não há nenhum processador livre. O thread está preparado para ser executado no próximo processador disponível.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary>Um estado que indica que o thread está usando um processador no momento.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary>Um estado que indica que o thread está prestes a usar um processador. Apenas um thread pode estar nesse estado por vez.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary>Um estado que indica que o thread concluiu a execução e foi encerrado.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary>Um estado que indica que o thread está esperando um recurso, que não um processador, antes de poder ser executado. Por exemplo, podem estar esperando sua pilha de execução ser paginada do disco.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary>O estado do thread é desconhecido.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary>Um estado que indica que o thread não está pronto para usar o processador porque está esperando uma operação periférica ser concluída ou um recurso ficar livre. Quando o thread estiver pronto, ele será reagendado.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary>Especifica o motivo pelo qual um thread está esperando.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary>O thread está esperando o evento par alto.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary>O thread está esperando o evento par baixo.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary>A execução do thread está atrasada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary>O thread está esperando o agendador.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary>O thread está esperando uma página de memória virtual livre.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary>O thread está esperando uma chamada de procedimento local chegar.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary>O thread está esperando a resposta para uma chamada de procedimento local chegar.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary>O thread está esperando uma página de memória virtual chegar na memória.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary>O thread está esperando uma página de memória virtual ser gravada no disco.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary>A execução do thread está suspensa.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary>O thread está esperando a alocação do sistema.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary>O thread está esperando por um motivo desconhecido.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary>O thread está esperando uma solicitação de usuário.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary>O thread está esperando o sistema alocar a memória virtual.</summary>
    </member>
  </members>
</doc>