<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Representa os resultados de uma única captura de subexpressão bem-sucedida.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">A posição na cadeia de caracteres original em que foi encontrado o primeiro caractere da subcadeia capturada.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">A posição inicial baseada em zero da cadeia de caracteres original em que a subcadeia foi encontrada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Obtém o comprimento da subcadeia de caracteres capturada.</summary>
      <returns vsli:raw="The length of the captured substring.">O comprimento da subcadeia de caracteres capturada.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Recupera a subcadeia de caracteres capturada da cadeia de entrada chamando a propriedade <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns vsli:raw="The substring that was captured by the match.">A subcadeia de caracteres que foi capturada pela correspondência.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Obtém a subcadeia de caracteres capturada da cadeia de caracteres de entrada.</summary>
      <returns vsli:raw="The substring that is captured by the match.">A subcadeia de caracteres capturada pela correspondência.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Representa o conjunto de capturas realizadas por um único grupo de captura.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">A posição na matriz de destino em que a cópia deverá começar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.
- ou -
<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Obtém o número de subcadeias de caracteres capturadas pelo grupo.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">O número de itens no <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornece um enumerador iterado por meio da coleção.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Um objeto que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Capture" /> dentro do <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtém um membro individual da coleção.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Índice na coleção de captura.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">A subcadeia de caracteres capturada na posição <paramref name="i" /> da coleção.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> é menor que 0 ou maior que <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Um objeto que pode ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Representa os resultados de um único grupo de captura.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Obtém uma coleção de todas as capturas correspondida pelo grupo de captura, na primeira ordem interna mais à esquerda (ou primeira ordem interna mais à direita se a expressão regular for modificada com a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). A coleção pode ter zero ou mais itens.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">A coleção de subcadeias de caracteres correspondida pelo grupo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Retorna o nome do grupo de captura representado pela instância atual.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">O nome do grupo de captura representado pela instância atual.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Obtém um valor que indica se a correspondência foi bem-sucedida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a correspondência for bem-sucedida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Retorna um <see langword="Group" /> objeto equivalente àquele fornecido e que é seguro compartilhar entre vários threads.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">O objeto <see cref="T:System.Text.RegularExpressions.Group" /> de entrada.</param>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Um objeto <see langword="Group" /> de expressão regular.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Retorna o conjunto de grupos capturados em um única correspondência.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Determina se a coleção de grupos contém um grupo capturado identificado pelo nome especificado.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Uma cadeia de caracteres com o nome do grupo capturado a ser localizado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se a coleção de grupos contiver um grupo capturado identificado por <paramref name="key" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">A posição na matriz de destino em que a cópia deverá começar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.
- ou -
<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Copia os elementos da coleção de grupos para uma matriz <see cref="T:System.Text.RegularExpressions.Group" />, começando em um índice de matriz específico.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">A matriz unidimensional que é o destino dos elementos copiados da coleção de grupos. A matriz deve ter indexação com base em zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> é menor que zero.
- ou -
<paramref name="arrayIndex" /> é maior que o comprimento do <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">O comprimento de <paramref name="array" /> - <paramref name="arrayIndex" /> é menor que a contagem da coleção de grupos.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Retorna o número de grupos na coleção.</summary>
      <returns vsli:raw="The number of groups in the collection.">O número de grupos na coleção.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornece um enumerador iterado por meio da coleção.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Um enumerador que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Group" /> na <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Obtém um valor que indica se o acesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Permite acesso a um membro da coleção pelo índice de inteiros.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">O índice baseado em zero do membro da coleção a ser recuperado.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">O membro da coleção especificado pelo <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Habilita o acesso a um membro da coleção pelo índice de cadeia de caracteres.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">O nome de um grupo de captura.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">O membro da coleção especificado pelo <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Obtém uma enumeração de cadeia de caracteres que contém as chaves de nome da coleção de grupos.</summary>
      <returns vsli:raw="The name keys of the group collection.">As chaves de nome da coleção de grupos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Uma cópia do objeto <see cref="T:System.Text.RegularExpressions.Match" /> para sincronizar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Adiciona um <see cref="T:System.Text.RegularExpressions.Group" /> à coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">O grupo a ser adicionado à coleção.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Limpa a coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina se a coleção de grupos contém um item de grupo específico.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">O grupo a ser localizado na coleção de grupos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se o item de grupo for encontrado na coleção de grupos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Remove um <see cref="T:System.Text.RegularExpressions.Group" /> da coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to remove.">O grupo a ser removido.</param>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Não há suporte para o método. Nenhum valor é retornado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fornece um enumerador iterado por meio da coleção de grupos.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Um enumerador que contém todos os nomes e objetos na coleção <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fornece um enumerador iterado por meio da coleção de grupos.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Um enumerador que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Group" /> na coleção de grupos.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina o índice de um grupo específico na coleção de grupos.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">O grupo a ser localizado na coleção de grupos.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">O índice do <paramref name="item" /> se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Insere um <see cref="T:System.Text.RegularExpressions.Group" /> na coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">A posição na qual inserir o grupo.</param>
      <param name="item" vsli:raw="The group to insert.">O grupo a ser inserido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Obtém o grupo na posição especificada na coleção.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">O índice baseado em zero do grupo na coleção de grupos.</param>
      <returns vsli:raw="The group in the desired position.">O grupo na posição desejada.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Não é possível definir um item. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Remove o <see cref="T:System.Text.RegularExpressions.Group" /> da coleção no índice especificado. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">O índice baseado em zero do grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Adiciona um objeto à coleção de grupos. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">O objeto a ser adicionado à coleção de grupos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Limpa a coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina se a coleção de grupos contém um item de grupo específico.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">O grupo a ser localizado na coleção de grupos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se o item de grupo for encontrado na coleção de grupos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina o índice de um grupo específico na coleção de grupos.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">O grupo a ser localizado na coleção de grupos.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">O índice do <paramref name="item" /> se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Insere um <see cref="T:System.Text.RegularExpressions.Group" /> na coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">A posição na qual inserir o grupo.</param>
      <param name="value" vsli:raw="The group to insert.">O grupo a ser inserido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Obtém um valor que indica se a coleção de grupos tem um tamanho fixo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">
        <see langword="true" /> sempre.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Obtém o grupo na posição desejada.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">A posição baseada em zero do grupo na coleção de grupos.</param>
      <returns vsli:raw="The group in the desired position.">O grupo na posição desejada.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Não é possível definir um item. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Remove um <see cref="T:System.Text.RegularExpressions.Group" /> da coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The group to remove.">O grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Remove o <see cref="T:System.Text.RegularExpressions.Group" /> da coleção no índice especificado. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">O índice baseado em zero do grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Tenta recuperar um grupo identificado pela chave de nome fornecida, se existir, na coleção de grupos.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Uma cadeia de caracteres com a chave de nome do grupo a ser procurada.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">Quando o método é retornado, o grupo cujo nome é <paramref name="key" />, caso seja encontrado; caso contrário, <see langword="null" />, caso não seja encontrado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se um grupo identificado pela chave de nome fornecida existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Obtém uma enumeração de grupo com todos os grupos na coleção de grupos.</summary>
      <returns vsli:raw="A group enumeration.">Uma enumeração de grupo.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Representa os resultados de correspondência de uma única expressão regular.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Obtém o grupo vazio. Todas as correspondências com falha retornam essa correspondência vazia.</summary>
      <returns vsli:raw="An empty match.">Uma correspondência vazia.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Obtém uma coleção de grupos correspondentes à expressão regular.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Os grupos de caracteres que correspondem ao padrão.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Retorna um novo objeto <see cref="T:System.Text.RegularExpressions.Match" /> com os resultados para a próxima correspondência, começando na posição em que a última correspondência terminou (no caractere após o último caractere correspondente).</summary>
      <returns vsli:raw="The next regular expression match.">A próxima expressão regular de correspondência.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Retorna a expansão do padrão de substituição especificado.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">O padrão de substituição a ser usado.</param>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">A versão expandida do parâmetro <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">A expansão não é permitida para este padrão.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Retorna um instância <see cref="T:System.Text.RegularExpressions.Match" /> equivalente a uma fornecida que é adequada para compartilhar entre vários threads.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Uma expressão regular corresponde ao equivalente da esperada.</param>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Uma correspondência da expressão regular que é adequada para compartilhar entre vários threads.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Representa o conjunto de correspondências de sucesso encontrado iterativamente aplicando um padrão de expressão regular à cadeia de caracteres de entrada.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">A posição na matriz em que a cópia deve começar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> é uma matriz multidimensional.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.
- ou -
<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Obtém o número de correspondências.</summary>
      <returns vsli:raw="The number of matches.">O número de correspondências.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornece um enumerador iterado por meio da coleção.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Um objeto que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Match" /> dentro do <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtém um membro individual da coleção.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Índice na coleção <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">A subcadeia de caracteres capturada na posição <paramref name="i" /> da coleção.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> é menor que 0 ou maior ou igual a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Um objeto que pode ser usado para sincronizar o acesso à coleção. Essa propriedade sempre retorna o próprio objeto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Representa o método que é chamado sempre que uma correspondência da expressão regular é encontrada durante uma operação de método de <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">O objeto <see cref="T:System.Text.RegularExpressions.Match" /> que representa uma correspondência da expressão regular única durante uma operação do método de <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Uma cadeia de caracteres retornada pelo método que é representada pelo delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Representa uma expressão regular imutável.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> utilizando dados serializados.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">O objeto que contém um padrão serializado e informações da <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">O destino dessa serialização. (Este parâmetro não é usado; especifique <see langword="null" />.)</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">O padrão que <paramref name="info" /> contém é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> contém um sinalizador <see cref="T:System.Text.RegularExpressions.RegexOptions" /> inválido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada, com opções que modifiquem o padrão.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Uma combinação bit a bit dos valores de enumeração que modificam a expressão regular.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> contém um sinalizador inválido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada, com opções que modificam o padrão e um valor que especifica quanto tempo um padrão que corresponde ao método deve tentar uma correspondência antes de atingir o tempo limite.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Uma combinação bit a bit dos valores de enumeração que modificam a expressão regular.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Obtém ou define o número máximo de entradas no cache estático atual de expressões regulares compiladas.</summary>
      <returns vsli:raw="The maximum number of entries in the static cache.">O número máximo de entradas no cache estático.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">O valor em uma operação de conjuntos é menor que zero.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Obtém ou define um dicionário que mapeia grupos de captura nomeados para seus valores de índice.</summary>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Um dicionário que mapeia grupos de captura nomeados para seus valores de índice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">O valor atribuído à propriedade <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> em uma operação de conjuntos é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Obtém ou define um dicionário que mapeia grupos de captura numerados para seus valores de índice.</summary>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Um dicionário que mapeia grupos de captura numerados para seus valores de índice.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">O valor atribuído à propriedade <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> em uma operação de conjuntos é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados para um assembly nomeado.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">O nome do arquivo do assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.
- ou -
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados para um assembly nomeado com os atributos especificados.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">O nome do arquivo do assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Uma matriz que define os atributos a serem aplicados ao assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.
- ou -
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados e um arquivo de recurso especificado para um assembly nomeado com os atributos especificados.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">O nome do arquivo do assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Uma matriz que define os atributos a serem aplicados ao assembly.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">O nome do arquivo de recurso Win32 a ser incluído no assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.
- ou -
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">O parâmetro <paramref name="resourceFile" /> designa um arquivo de recurso Win32 inválido.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">O arquivo designado pelo parâmetro <paramref name="resourceFile" /> não pôde ser encontrado.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Faz escape de um conjunto mínimo de caracteres (\, *, +, ?, |, {, [, (,), ^, $, ., #, e espaço em branco) substituindo-os por seus códigos de escape. Isso instrui o mecanismo de expressões regulares para interpretar esses caracteres literalmente em vez de metacaracteres.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">A cadeia de caracteres de entrada que contém o texto a ser convertido.</param>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Uma cadeia de caracteres com metacaracteres convertidos em sua forma de escape.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Retorna uma matriz de nomes de grupo de captura para a expressão regular.</summary>
      <returns vsli:raw="A string array of group names.">Uma matriz de cadeia de caracteres de nomes de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Retorna uma matriz de números de grupo de captura que correspondem aos nomes de grupos em uma matriz.</summary>
      <returns vsli:raw="An integer array of group numbers.">Uma matriz de inteiros de números de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Obtém o nome do grupo que corresponde ao número do grupo especificado.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">O número do grupo a ser convertido para o nome de grupo correspondente.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Uma cadeia de caracteres que contém o nome de grupo associado ao número de grupo especificado. Se não houver nenhum nome de grupo que corresponda a <paramref name="i" />, o método retornará <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Retorna o número do grupo que corresponde ao nome do grupo especificado.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">O nome do grupo a ser convertido para o número de grupo correspondente.</param>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">O número do grupo que corresponde ao nome do grupo especificado ou -1 se <paramref name="name" /> não for um nome de grupo válido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Especifica que uma operação de correspondência de padrões não deve atingir o tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">As referências já foram inicializadas.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">A quantidade de tempo máxima que pode decorrer em uma operação de correspondência de padrões antes que a operação atinja o tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Indica se a expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" /> encontra uma correspondência em uma cadeia de caracteres de entrada especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Indica se a expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" /> encontra uma correspondência na cadeia de caracteres de entrada especificada, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">A posição do caractere em que a pesquisa será iniciada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada, usando as opções de correspondência e intervalo de tempo limite especificados.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Pesquisa a primeira ocorrência da expressão regular especificada na cadeia de caracteres de entrada especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Procura a cadeia de caracteres de entrada para a primeira ocorrência de uma expressão regular, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">A posição do caractere baseada em zero na qual iniciar a pesquisa.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Pesquisa a primeira ocorrência de uma expressão regular na cadeia de entrada, começando na posição inicial especificada e pesquisando apenas o número especificado de caracteres.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">A posição do caractere baseado em zero na cadeia de caracteres de entrada que define a posição mais à esquerda a ser pesquisada.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">O número de caracteres na subcadeia de caracteres a ser incluído na pesquisa.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.
- ou -
<paramref name="length" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.
- ou -
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifica uma posição que está fora do intervalo de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Pesquisa a primeira ocorrência da expressão regular especificada na cadeia de caracteres de entrada especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Procura a cadeia de caracteres de entrada para a primeira ocorrência da expressão regular especificada, usando as opções especificadas de correspondência.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Pesquisa a cadeia de caracteres de entrada da primeira ocorrência da expressão regular especificada, usando as opções de correspondência e intervalo de tempo limite especificados.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="An object that contains information about the match.">Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Pesquisa todas as ocorrências de uma expressão regular na cadeia de caracteres de entrada especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Pesquisa a cadeia de caracteres de entrada especificada para todas as ocorrências de uma expressão regular, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa será iniciada.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de entrada especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Uma combinação bit a bit dos valores de enumeração que especifica opções para correspondência.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas e o intervalo de tempo limite.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Uma combinação bit a bit dos valores de enumeração que especifica opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Obtém o intervalo de tempo limite da instância atual.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">O intervalo de tempo máximo que pode decorrer em uma operação de correspondência de padrão antes que uma <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> seja lançada ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se os tempos limite estão desabilitados.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Obtém as opções que foram passadas para o construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Um ou mais membros da enumeração <see cref="T:System.Text.RegularExpressions.RegexOptions" /> que representa as opções que foram passadas para o construtor <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres de substituição especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Em uma cadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular com uma cadeia de caracteres substituta especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">O número máximo de vezes que a substituição pode ocorrer.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Em uma subcadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular com uma cadeia de caracteres substituta especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Número máximo de vezes que a substituição pode ocorrer.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa começa.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="replacement" vsli:raw="The replacement string.">A cadeia de caracteres substituta.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Em uma cadeia de caracteres de entrada especificada, substitui todas as subcadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornecem opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Em uma cadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">O número máximo de vezes que a substituição ocorrerá.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Em uma subcadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">O número máximo de vezes que a substituição ocorrerá.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa começa.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Obtém um valor que indica se a expressão regular pesquisa da direita para a esquerda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a expressão regular for pesquisada da direita para a esquerda; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to split.">A cadeia de caracteres a ser dividida.</param>
      <returns vsli:raw="An array of strings.">Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Divide uma cadeia de entrada no número de vezes máximo especificado em uma matriz de subcadeias de caracteres, nas posições definidas por uma expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to be split.">A cadeia de caracteres a ser dividida.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">O número máximo de vezes que a divisão pode ocorrer.</param>
      <returns vsli:raw="An array of strings.">Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Divide uma cadeia de entrada no número de vezes máximo especificado em uma matriz de subcadeias de caracteres, nas posições definidas por uma expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />. A pesquisa do padrão de expressão regular é iniciada em uma posição de caractere especificada na cadeia de entrada.</summary>
      <param name="input" vsli:raw="The string to be split.">A cadeia de caracteres a ser dividida.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">O número máximo de vezes que a divisão pode ocorrer.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">A posição do caractere na cadeia de caracteres de entrada em que a pesquisa será iniciada.</param>
      <returns vsli:raw="An array of strings.">Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular.</summary>
      <param name="input" vsli:raw="The string to split.">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <returns vsli:raw="An array of strings.">Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input" vsli:raw="The string to split.">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns vsli:raw="An array of strings.">Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input" vsli:raw="The string to split.">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">O padrão de expressão regular para correspondência.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns vsli:raw="A string array.">Uma matriz de cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
- ou -
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para desserializar o objeto <see cref="T:System.Text.RegularExpressions.Regex" /> atual.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">O objeto a ser preenchido com informações de serialização.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">O local para armazenar e recuperar dados serializados. Esse parâmetro está reservado para uso futuro.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Retorna o padrão de expressão regular que foi passado para o construtor <see langword="Regex" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">O parâmetro <paramref name="pattern" /> passado para o construtor <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Converte qualquer caractere de escape na cadeia de caracteres de entrada.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">A cadeia de caracteres de entrada que contém o texto a ser convertido.</param>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Uma cadeia de caracteres com qualquer caractere de escape convertido em sua forma sem escape.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> inclui uma sequência de escape não reconhecida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiver a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiver a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Verifique se o intervalo de tempo limite está dentro de um intervalo aceitável.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">O intervalo de tempo limite a ser verificado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">O tempo limite especificado não está dentro de um intervalo válido.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Fornece informações sobre uma expressão regular usada para compilar uma expressão regular para um assembly autônomo.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contém informações sobre uma expressão regular a ser incluída em um assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">A expressão regular a ser compilada.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">As opções de expressão regular a serem usadas ao compilar a expressão regular.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">O nome do tipo que representa a expressão regular compilada.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">O namespace ao qual o novo tipo pertence.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para tornar a expressão regular compilada publicamente visível; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.
- ou -
<paramref name="name" /> é <see langword="null" />.
- ou -
<paramref name="fullnamespace" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contém informações sobre uma expressão regular com um valor de tempo limite especificado a ser incluído em um assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">A expressão regular a ser compilada.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">As opções de expressão regular a serem usadas ao compilar a expressão regular.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">O nome do tipo que representa a expressão regular compilada.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">O namespace ao qual o novo tipo pertence.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para tornar a expressão regular compilada publicamente visível; caso contrário, <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">O intervalo de tempo limite padrão para a expressão regular.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.
- ou -
<paramref name="name" /> é <see langword="null" />.
- ou -
<paramref name="fullnamespace" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Obtém ou define um valor que indica se a expressão regular compilada tem visibilidade pública.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a expressão regular tiver visibilidade pública; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Obtém ou define o intervalo de tempo limite padrão da expressão regular.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">O intervalo de tempo máximo padrão que pode decorrer em uma operação de correspondência de <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> padrões antes que um <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> seja gerado, ou se os tempos limite estiverem desabilitados.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Obtém ou define o nome do tipo que representa a expressão regular compilada.</summary>
      <returns vsli:raw="The name of the new type.">O nome do novo tipo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">O valor dessa propriedade é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">O valor dessa propriedade é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Obtém ou define o namespace ao qual o novo tipo pertence.</summary>
      <returns vsli:raw="The namespace of the new type.">O namespace do novo tipo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">O valor dessa propriedade é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Obtém ou define as opções a serem usadas ao compilar a expressão regular.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Um combinação bit a bit dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Obtém ou define a expressão regular a ser compilada.</summary>
      <returns vsli:raw="The regular expression to compile.">A expressão regular a ser compilada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">O valor dessa propriedade é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">A exceção que é gerada quando o tempo de execução de um método de correspondência de padrão de expressão regular excede o intervalo de tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com uma mensagem fornecida pelo sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">O objeto que contém os dados serializados.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">O fluxo que contém os dados serializados.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com a cadeia de caracteres de mensagem especificada.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Uma cadeia de caracteres que descreve a exceção.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Uma cadeia de caracteres que descreve a exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">A exceção que é a causa da exceção atual.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com informações sobre o padrão de expressão regular, o texto de entrada e o intervalo de tempo limite.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">O texto de entrada processado pelo mecanismo de expressão regular quando o tempo limite ocorreu.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">O padrão usado pelo mecanismo de expressão regular quando o tempo limite ocorreu.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">O intervalo de tempo limite.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Obtém o texto de entrada que o mecanismo de expressão regular estava processando quando o tempo limite ocorreu.</summary>
      <returns vsli:raw="The regular expression input text.">O texto de entrada da expressão regular.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Obtém o intervalo de tempo limite para uma correspondência de expressão regular.</summary>
      <returns vsli:raw="The time-out interval.">O intervalo de tempo limite.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Obtém o padrão de expressão regular que era usado na operação de correspondência quando o tempo limite ocorreu.</summary>
      <returns vsli:raw="The regular expression pattern.">O padrão de expressão regular.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar um objeto <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">O objeto a ser preenchido com dados.</param>
      <param name="context" vsli:raw="The destination for this serialization.">O destino dessa serialização.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Fornece valores enumerados para definir opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Especifica que a expressão regular será compilada em um assembly. Isso leva a uma execução mais rápida, mas aumenta o tempo de inicialização. Esse valor não deve ser atribuído à propriedade <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> ao chamar o método <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Para obter mais informações, consulte a seção "Expressões regulares compiladas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Especifica que as diferenças culturais no idioma serão ignoradas. Para obter mais informações, consulte a seção "Comparação usando a cultura invariável" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Habilita o comportamento em conformidad com ECMAScript para a expressão. Esse valor pode ser usado somente em conjunto com os valores <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> e <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. O uso deste valor com qualquer outro valor resulta em uma exceção.
Para obter mais informações sobre a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" />, consulte a seção "Comportamento de correspondência ECMAScript" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Especifica que as únicas capturas válidas são grupos explicitamente nomeados ou numerados do formato (?&lt;name&gt;…). Isso permite que parênteses sem nome funcionem como grupos que não são de captura, sem a confusão sintática da expressão (?:...). Para obter mais informações, consulte a seção "Apenas capturas explícitas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Especifica a correspondência sem diferenciação de maiúsculas e minúsculas. Para obter mais informações, consulte a seção "Correspondência sem diferenciação de maiúsculas e minúsculas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Elimina um espaço em branco sem escape do padrão e habilita comentários marcados por #. No entanto, esse valor não afeta nem elimina espaços em branco em classes de caracteres, em quantificadores numéricos nem em tokens que marcam o início dos elementos de idioma de expressão regular individuais. Saiba mais na seção "Ignorar espaço em branco" do artigo Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Modo multilinha. Altera o significado de ^ e $ de modo que eles correspondam ao início e ao final, respectivamente, de qualquer linha, e não apenas ao início e ao final da cadeia de caracteres inteira. Para obter mais informações, consulte a seção "Modo multilinha" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Especifica que nenhuma opção será definida. Para obter mais informações sobre o comportamento padrão do mecanismo de expressão regular, consulte a seção "Opções padrão" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Especifica que a pesquisa se moverá da direita para a esquerda, em vez de se mover da esquerda para a direita. Para obter mais informações, consulte a seção "Modo da direita para esquerda" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Especifica o modo de linha única. Altera o significado do ponto (.) para que coincida com cada caractere (em vez de cada caractere exceto \n). Para obter mais informações, consulte a seção "Modo de linha única" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">A classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> é a classe base par expressões regulares compiladas.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Um número de captura.</param>
      <param name="start" vsli:raw="The starting position of the capture.">A posição inicial da captura.</param>
      <param name="end" vsli:raw="The ending position of the capture.">A posição final da captura.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Determina se um caractere está em uma classe de caractere.</summary>
      <param name="ch" vsli:raw="A character to test.">Um caractere a ser testado.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">O nome interno de uma classe de caractere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <see langword="true" /> se o parâmetro <paramref name="ch" /> está na classe de caractere especificada pelo parâmetro <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch" vsli:raw="A character.">Um caractere.</param>
      <param name="set" vsli:raw="The character set.">O conjunto de caracteres.</param>
      <param name="category" vsli:raw="The character category.">A categoria do caractere.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i" vsli:raw="A number to save.">Um número a ser salvo.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible boundary position.">A posição de limite possível.</param>
      <param name="startpos" vsli:raw="The starting position.">A posição inicial.</param>
      <param name="endpos" vsli:raw="The ending position.">A posição final.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">A posição de limite ECMA possível.</param>
      <param name="startpos" vsli:raw="The starting position.">A posição inicial.</param>
      <param name="endpos" vsli:raw="The ending position.">A posição final.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">O número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">O número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">O número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Uma instância do mecanismo de expressão regular.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">O texto a ser examinado para uma correspondência de padrões.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">A posição inicial com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">A posição final com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">A posição inicial com base zero para procurar essa correspondência.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">O número de caracteres na correspondência anterior.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para pesquisar uma correspondência no modo rápido; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="A match.">Uma correspondência.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Uma instância do mecanismo de expressão regular.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">O texto a ser examinado para uma correspondência de padrões.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">A posição inicial com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">A posição final com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">A posição inicial com base zero para procurar essa correspondência.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">O número de caracteres na correspondência anterior.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para pesquisar uma correspondência no modo rápido; caso contrário, <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">O intervalo de tempo limite.</param>
      <returns vsli:raw="A match.">Uma correspondência.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Um número de captura.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Um número de captura salvo.</param>
      <param name="start" vsli:raw="The starting position.">A posição inicial.</param>
      <param name="end" vsli:raw="The ending position.">A posição final.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Cria uma classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para uma expressão regular compilada.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">Quando substituído em uma classe derivada, cria um objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para uma expressão regular compilada específica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Um objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> criado para executar um objeto de expressão regular compilada especificada.</returns>
    </member>
  </members>
</doc>