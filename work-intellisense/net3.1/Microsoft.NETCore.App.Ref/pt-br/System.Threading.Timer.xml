<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Timer</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Timer">
      <summary>Fornece um mecanismo para executar um método em um thread do pool de threads em intervalos especificados. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Threading.Timer" /> com um período infinito e um tempo de validade infinito usando o objeto <see cref="T:System.Threading.Timer" /> recém-criado como o objeto de estado.</summary>
      <param name="callback">Um delegado <see cref="T:System.Threading.TimerCallback" /> que representa um método a ser executado.</param>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see langword="Timer" />, usando um inteiro com sinal de 32 bits para especificar o intervalo de tempo.</summary>
      <param name="callback">Um delegado <see cref="T:System.Threading.TimerCallback" /> que representa um método a ser executado.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada, ou <see langword="null" />.</param>
      <param name="dueTime">A quantidade de tempo de atraso antes que <paramref name="callback" /> seja invocado, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o timer seja inicializado. Especifica zero (0) para iniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre invocações de <paramref name="callback" />, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="callback" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see langword="Timer" />, usando um inteiro com sinal de 64 bits para medir intervalos de tempo.</summary>
      <param name="callback">Um delegado <see cref="T:System.Threading.TimerCallback" /> que representa um método a ser executado.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada, ou <see langword="null" />.</param>
      <param name="dueTime">A quantidade de tempo de atraso antes que <paramref name="callback" /> seja invocado, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o timer seja inicializado. Especifica zero (0) para iniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre invocações de <paramref name="callback" />, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é maior que 4294967294.</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see langword="Timer" />, usando valores <see cref="T:System.TimeSpan" /> para medir intervalos de tempo.</summary>
      <param name="callback">Um delegado que representa um método a ser executado.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada, ou <see langword="null" />.</param>
      <param name="dueTime">A quantidade de tempo a ser atrasado antes que o parâmetro <paramref name="callback" /> invoque seus métodos. Especifique um milissegundo negativo (-1) para impedir que o temporizador seja iniciado. Especifica zero (0) para iniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre invocações dos métodos referenciados pelo <paramref name="callback" />. Especifique um milissegundo negativo (-1) para desabilitar a sinalização periódica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de milissegundos no valor de <paramref name="dueTime" /> ou <paramref name="period" /> é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" /> ou é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="callback" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)">
      <summary>Inicializa uma nova instância da classe <see langword="Timer" />, usando inteiros sem sinal de 32 bits para medir os intervalos de tempo.</summary>
      <param name="callback">Um delegado que representa um método a ser executado.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada, ou <see langword="null" />.</param>
      <param name="dueTime">A quantidade de tempo de atraso antes que <paramref name="callback" /> seja invocado, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o timer seja inicializado. Especifica zero (0) para iniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre invocações de <paramref name="callback" />, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="callback" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.Timer.ActiveCount">
      <summary>Obtém o número de temporizadores ativos no momento. Um temporizador ativo está registrado para efetuar tique em algum momento no futuro e ainda não foi cancelado.</summary>
      <returns>O número de temporizadores que estão ativos no momento.</returns>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int32,System.Int32)">
      <summary>Altera a hora de início e o intervalo entre as invocações de método para um temporizador, usando inteiros com sinal de 32 bits para medir intervalos de tempo.</summary>
      <param name="dueTime">A quantidade de tempo de atraso antes de invocar o método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifique <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o temporizador seja reiniciado. Especifique zero (0) para reiniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre as invocações do método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <returns>
        <see langword="true" /> se o temporizador foi atualizado com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Threading.Timer" /> já foi descartado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int64,System.Int64)">
      <summary>Altera a hora de início e o intervalo entre as invocações de método para um temporizador, usando inteiros com sinal de 64 bits para medir intervalos de tempo.</summary>
      <param name="dueTime">A quantidade de tempo de atraso antes de invocar o método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifique <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o temporizador seja reiniciado. Especifique zero (0) para reiniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre as invocações do método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <returns>
        <see langword="true" /> se o temporizador foi atualizado com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Threading.Timer" /> já foi descartado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é menor que -1.</exception>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" /> é maior que 4294967294.</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>Altera a hora de início e o intervalo entre as invocações de método para um temporizador, usando valores de <see cref="T:System.TimeSpan" /> para medir os intervalos de tempo.</summary>
      <param name="dueTime">O <see cref="T:System.TimeSpan" /> que representa o período de tempo de atraso antes de invocar o método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído. Especifique um milissegundo negativo (-1) para impedir que o temporizador seja reinicializado. Especifique zero (0) para reiniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre as invocações do método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído. Especifique um milissegundo negativo (-1) para desabilitar a sinalização periódica.</param>
      <returns>
        <see langword="true" /> se o temporizador foi atualizado com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Threading.Timer" /> já foi descartado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" />, em milissegundos, é menor que -1.</exception>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="dueTime" /> ou <paramref name="period" />, em milissegundos, é maior que 4294967294.</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)">
      <summary>Altera a hora de início e o intervalo entre as invocações de método de um temporizador, usando inteiros sem sinal de 32 bits para medir os intervalos de tempo.</summary>
      <param name="dueTime">A quantidade de tempo de atraso antes de invocar o método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifique <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que o temporizador seja reiniciado. Especifique zero (0) para reiniciar o temporizador imediatamente.</param>
      <param name="period">O intervalo de tempo entre as invocações do método de retorno de chamada especificado quando o <see cref="T:System.Threading.Timer" /> foi construído, em milissegundos. Especifica <see cref="F:System.Threading.Timeout.Infinite" /> para desabilitar a sinalização periódica.</param>
      <returns>
        <see langword="true" /> se o temporizador foi atualizado com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Threading.Timer" /> já foi descartado.</exception>
    </member>
    <member name="M:System.Threading.Timer.Dispose">
      <summary>Libera todos os recursos usados pela instância atual do <see cref="T:System.Threading.Timer" />.</summary>
    </member>
    <member name="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)">
      <summary>Libera todos os recursos usados pela instância atual do <see cref="T:System.Threading.Timer" /> e indica quando o temporizador for descartado.</summary>
      <param name="notifyObject">O <see cref="T:System.Threading.WaitHandle" /> a ser sinalizado quando o <see langword="Timer" /> for descartado.</param>
      <returns>
        <see langword="true" /> se a função for bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="notifyObject" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Timer.DisposeAsync">
      <summary>Libera todos os recursos usados pela instância atual do <see cref="T:System.Threading.Timer" />.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask" /> que é concluído quando todo o trabalho associado ao temporizador é encerrado.</returns>
    </member>
    <member name="T:System.Threading.TimerCallback">
      <summary>Representa o método que manipula chamadas de um <see cref="T:System.Threading.Timer" />.</summary>
      <param name="state">Um objeto que contém informações específicas do aplicativo relevantes para o método invocado por esse delegado, ou <see langword="null" />.</param>
    </member>
  </members>
</doc>