<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.InteropServices</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <summary vsli:raw="The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.">Exceção lançada quando uma unidade de dados é lida ou gravada em um endereço que não é múltiplo do tamanho dos dados. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.DataMisalignedException" />.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message.">Inicializa uma nova instância da classe <see cref="T:System.DataMisalignedException" /> usando a mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Um objeto <see cref="T:System.String" /> que descreve o erro. O conteúdo de <paramref name="message" /> deve ser compreendido por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message and underlying exception.">Inicializa uma nova instância da classe <see cref="T:System.DataMisalignedException" /> usando a mensagem de erro especificada e uma exceção subjacente.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Um objeto <see cref="T:System.String" /> que descreve o erro. O conteúdo de <paramref name="message" /> deve ser compreendido por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt;. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da <see cref="T:System.DataMisalignedException" /> atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary vsli:raw="The exception that is thrown when a DLL specified in a DLL import cannot be found.">A exceção que é lançada quando uma DLL especificada em uma importação de DLL não pode ser encontrada.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with default properties.">Inicializa uma nova instância da classe <see cref="T:System.DllNotFoundException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.DllNotFoundException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.DllNotFoundException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.DllNotFoundException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.IO.UnmanagedMemoryAccessor">
      <summary vsli:raw="Provides random access to unmanaged blocks of memory from managed code.">Fornece acesso aleatório aos blocos de memória não gerenciados a partir de código gerenciado.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, and capacity.">Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> com o buffer especificado, o deslocamento e a capacidade.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">O buffer que conterá o acessador.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">O byte no qual o acessador é iniciado.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">O tamanho, em bytes, da memória a ser alocada.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> mais <paramref name="capacity" /> é maior que <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="offset" /> ou <paramref name="capacity" /> é menor que zero.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> mais <paramref name="capacity" /> encapsularia a extremidade alta do espaço de endereço.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, capacity, and access right.">Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryAccessor" /> com o buffer especificado, o deslocamento, a capacidade e o direito de acesso.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">O buffer que conterá o acessador.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">O byte no qual o acessador é iniciado.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">O tamanho, em bytes, da memória a ser alocada.</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">O tipo de acesso permitido à memória. O padrão é <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> mais <paramref name="capacity" /> é maior que <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> ou <paramref name="capacity" /> é menor que zero.
-ou-
<paramref name="access" /> não é um valor de enumeração <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> mais <paramref name="capacity" /> encapsularia a extremidade alta do espaço de endereço.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanRead">
      <summary vsli:raw="Determines whether the accessor is readable.">Determina se o acessador é legível.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is readable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o acessador for legível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanWrite">
      <summary vsli:raw="Determines whether the accessory is writable.">Determina se o acessório é gravável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is writable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o acessador for gravável; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.Capacity">
      <summary vsli:raw="Gets the capacity of the accessor.">Obtém a capacidade do acessador.</summary>
      <returns vsli:raw="The capacity of the accessor.">A capacidade do acessador.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.UnmanagedMemoryAccessor" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Sets the initial values for the accessor.">Define os valores iniciais do acessador.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">O buffer que conterá o acessador.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">O byte no qual o acessador é iniciado.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">O tamanho, em bytes, da memória a ser alocada.</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">O tipo de acesso permitido à memória. O padrão é <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> mais <paramref name="capacity" /> é maior que <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> ou <paramref name="capacity" /> é menor que zero.
-ou-
<paramref name="access" /> não é um valor de enumeração <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">
        <paramref name="offset" /> mais <paramref name="capacity" /> encapsularia a extremidade alta do espaço de endereço.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.IsOpen">
      <summary vsli:raw="Determines whether the accessor is currently open by a process.">Determina se o acessador está aberto por um processo no momento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o acessador estiver aberto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)">
      <summary vsli:raw="Reads a structure of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into a provided reference.">Lê uma estrutura do tipo <paramref name="T" /> do acessador em uma referência fornecida.</summary>
      <param name="position" vsli:raw="The position in the accessor at which to begin reading.">A posição no acessador na qual a leitura começará.</param>
      <param name="structure" vsli:raw="The structure to contain the read data.">A estrutura para conter os dados lidos.</param>
      <typeparam name="T" vsli:raw="The type of structure.">O tipo de estrutura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read in a structure of type &lt;paramref name=&quot;T&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;T&quot; /&gt; is a value type that contains one or more reference types.">Não há bytes suficiente após <paramref name="position" /> a serem lidos em uma estrutura do tipo <paramref name="T" />.
-ou-
<see langword="T" /> é um tipo de valor que contém um ou mais tipos de referência.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads structures of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into an array of type &lt;paramref name=&quot;T&quot; /&gt;.">Lê as estruturas do tipo <paramref name="T" /> do acessador em uma matriz do tipo <paramref name="T" />.</summary>
      <param name="position" vsli:raw="The number of bytes in the accessor at which to begin reading.">O número de bytes no acessador no qual a leitura começará.</param>
      <param name="array" vsli:raw="The array to contain the structures read from the accessor.">A matriz para conter as estruturas lidas do acessador.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; in which to place the first copied structure.">O índice em <paramref name="array" /> no qual colocar a primeira estrutura copiada.</param>
      <param name="count" vsli:raw="The number of structures of type &lt;c&gt;T&lt;/c&gt; to read from the accessor.">O número de estruturas de tipo <c>T</c> a serem lidas do acessador.</param>
      <typeparam name="T" vsli:raw="The type of structure.">O tipo de estrutura.</typeparam>
      <returns vsli:raw="The number of structures read into &lt;paramref name=&quot;array&quot; /&gt;. This value can be less than &lt;paramref name=&quot;count&quot; /&gt; if there are fewer structures available, or zero if the end of the accessor is reached.">O número de estruturas lidas no <paramref name="array" />. Esse valor poderá ser menor que <paramref name="count" /> se houver menos estruturas disponíveis ou zero se o final do acessador for atingido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to contain &lt;paramref name=&quot;count&quot; /&gt; of structures (starting from &lt;paramref name=&quot;position&quot; /&gt;).">
        <paramref name="array" /> não é grande o suficiente para conter <paramref name="count" /> de estruturas (começando em <paramref name="position" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)">
      <summary vsli:raw="Reads a Boolean value from the accessor.">Lê um valor booliano do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> ou <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)">
      <summary vsli:raw="Reads a byte value from the accessor.">Lê um valor de byte do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)">
      <summary vsli:raw="Reads a character from the accessor.">Lê um caractere do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)">
      <summary vsli:raw="Reads a decimal value from the accessor.">Lê um valor decimal do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal to read is invalid.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.
-ou-
O decimal a ser lido é inválido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)">
      <summary vsli:raw="Reads a double-precision floating-point value from the accessor.">Lê um valor de ponto flutuante de precisão dupla do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)">
      <summary vsli:raw="Reads a 16-bit integer from the accessor.">Lê um inteiro de 16 bits do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)">
      <summary vsli:raw="Reads a 32-bit integer from the accessor.">Lê um inteiro de 32 bits do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)">
      <summary vsli:raw="Reads a 64-bit integer from the accessor.">Lê um inteiro de 64 bits do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)">
      <summary vsli:raw="Reads an 8-bit signed integer from the accessor.">Lê um inteiro com sinal de 8 bits do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)">
      <summary vsli:raw="Reads a single-precision floating-point value from the accessor.">Lê um valor de ponto flutuante de precisão simples do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)">
      <summary vsli:raw="Reads an unsigned 16-bit integer from the accessor.">Lê um inteiro de 16 bits sem sinal do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)">
      <summary vsli:raw="Reads an unsigned 32-bit integer from the accessor.">Lê um inteiro de 32 bits sem sinal do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)">
      <summary vsli:raw="Reads an unsigned 64-bit integer from the accessor.">Lê um inteiro de 64 bits sem sinal do acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">O número de bytes no acessador em que a leitura começará.</param>
      <returns vsli:raw="The value that was read.">O valor que foi lido.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Não existem bytes suficientes após <paramref name="position" /> para ler um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">O acessador não dá suporte à leitura.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)">
      <summary vsli:raw="Writes a Boolean value into the accessor.">Grava um valor booliano no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)">
      <summary vsli:raw="Writes a byte value into the accessor.">Grava um valor de byte no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)">
      <summary vsli:raw="Writes a character into the accessor.">Grava um caractere no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)">
      <summary vsli:raw="Writes a decimal value into the accessor.">Grava um valor decimal no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal is invalid.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.
-ou-
O decimal é inválido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value into the accessor.">Grava um valor <see langword="Double" /> no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer into the accessor.">Grava um inteiro de 16 bits no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)">
      <summary vsli:raw="Writes a 32-bit integer into the accessor.">Grava um inteiro de 32 bits no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)">
      <summary vsli:raw="Writes a 64-bit integer into the accessor.">Grava um inteiro de 64 bits no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after position to write a value.">Não existem bytes suficientes após a posição para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)">
      <summary vsli:raw="Writes an 8-bit integer into the accessor.">Grava um inteiro de 8 bits no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Single&quot; /&gt; into the accessor.">Grava um <see langword="Single" /> no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)">
      <summary vsli:raw="Writes an unsigned 16-bit integer into the accessor.">Grava um inteiro de 16 bits sem sinal no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)">
      <summary vsli:raw="Writes an unsigned 32-bit integer into the accessor.">Grava um inteiro de 32 bits sem sinal no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)">
      <summary vsli:raw="Writes an unsigned 64-bit integer into the accessor.">Grava um inteiro de 64 bits sem sinal no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Não existem bytes suficientes após <paramref name="position" /> para gravar um valor.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)">
      <summary vsli:raw="Writes a structure into the accessor.">Grava uma estrutura no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="structure" vsli:raw="The structure to write.">A estrutura a ser gravada.</param>
      <typeparam name="T" vsli:raw="The type of structure.">O tipo de estrutura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write a structure of type &lt;paramref name=&quot;T&quot; /&gt;.">Não há bytes suficientes no acessador após <paramref name="position" /> para gravar uma estrutura do tipo <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes structures from an array of type &lt;paramref name=&quot;T&quot; /&gt; into the accessor.">Grava estruturas de uma matriz do tipo <paramref name="T" /> no acessador.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">O número de bytes no acessador no qual a gravação começará.</param>
      <param name="array" vsli:raw="The array to write into the accessor.">A matriz para gravar no acessador.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; to start writing from.">O índice em <paramref name="array" /> do qual iniciar a gravação.</param>
      <param name="count" vsli:raw="The number of structures in &lt;paramref name=&quot;array&quot; /&gt; to write.">O número de estruturas em <paramref name="array" /> a serem gravadas.</param>
      <typeparam name="T" vsli:raw="The type of structure.">O tipo de estrutura.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write the number of structures specified by &lt;paramref name=&quot;count&quot; /&gt;.">Não há bytes suficientes no acessador após <paramref name="position" /> para gravar o número de estruturas especificadas por <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="position" /> é menor que zero ou maior que a capacidade do acessador.
-ou-
<paramref name="offset" /> ou <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">O acessador não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">O acessador foi descartado.</exception>
    </member>
    <member name="T:System.IO.UnmanagedMemoryStream">
      <summary>Fornece acesso aos blocos de memória não gerenciados a partir de código gerenciado.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" />.</summary>
      <exception cref="T:System.Security.SecurityException">O usuário não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando o tamanho da memória e o local especificados.</summary>
      <param name="pointer">Um ponteiro para um local da memória não gerenciado.</param>
      <param name="length">O tamanho da memória a ser usado.</param>
      <exception cref="T:System.Security.SecurityException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="pointer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="length" /> é menor que zero.
-ou-
O <paramref name="length" /> é grande o suficiente para causar um estouro.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando o local, o tamanho da memória, a quantidade total de memória e os valores de acesso ao arquivo.</summary>
      <param name="pointer">Um ponteiro para um local da memória não gerenciado.</param>
      <param name="length">O tamanho da memória a ser usado.</param>
      <param name="capacity">A quantidade total de memória atribuída ao fluxo.</param>
      <param name="access">Um dos valores de <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="pointer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="length" /> é menor que zero.
-ou-
O valor <paramref name="capacity" /> é menor que zero.
-ou-
O valor <paramref name="length" /> é maior que o valor <paramref name="capacity" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> em um buffer seguro com deslocamento e comprimento especificados.</summary>
      <param name="buffer">O buffer que conterá o fluxo de memória não gerenciada.</param>
      <param name="offset">A posição de bytes no buffer na qual o fluxo de memória não gerenciada será iniciado.</param>
      <param name="length">O tamanho do fluxo de memória não gerenciada.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> em um buffer seguro com um deslocamento, tamanho e acesso a arquivos especificados.</summary>
      <param name="buffer">O buffer que conterá o fluxo de memória não gerenciada.</param>
      <param name="offset">A posição de bytes no buffer na qual o fluxo de memória não gerenciada será iniciado.</param>
      <param name="length">O tamanho do fluxo de memória não gerenciada.</param>
      <param name="access">O modo de acesso ao arquivo para o fluxo de memória não gerenciada.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanRead">
      <summary>Obtém um valor que indica se um fluxo oferece suporte à leitura.</summary>
      <returns>
        <see langword="false" /> se o objeto foi criado por um construtor com um parâmetro <paramref name="access" /> que não incluiu a leitura do fluxo e se o fluxo está fechado; caso contrário, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanSeek">
      <summary>Obtém um valor que indica se um fluxo oferece suporte à busca.</summary>
      <returns>
        <see langword="false" /> se o fluxo está fechado; caso contrário, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanWrite">
      <summary>Obtém um valor que indica se um fluxo oferece suporte à gravação.</summary>
      <returns>
        <see langword="false" /> se o objeto foi criado por um construtor com um valor de parâmetro <paramref name="access" /> que dá suporte à gravação ou foi criado por um construtor que não tinha parâmetros ou se o fluxo está fechado; caso contrário, <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Capacity">
      <summary>Obtém o comprimento do fluxo (tamanho) ou a quantidade total de memória atribuída a um fluxo (capacidade).</summary>
      <returns>O tamanho ou a capacidade do fluxo.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.UnmanagedMemoryStream" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Flush">
      <summary>Substitui o método <see cref="M:System.IO.Stream.Flush" /> para que nenhuma ação seja executada.</summary>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Substitui o método <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> para que a operação seja cancelada se especificado, mas nenhuma outra ação seja executada.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> usando um ponteiro para um local de memória não gerenciada.</summary>
      <param name="pointer">Um ponteiro para um local da memória não gerenciado.</param>
      <param name="length">O tamanho da memória a ser usado.</param>
      <param name="capacity">A quantidade total de memória atribuída ao fluxo.</param>
      <param name="access">Um dos valores de <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">O usuário não tem a permissão necessária.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="pointer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="length" /> é menor que zero.
-ou-
O valor <paramref name="capacity" /> é menor que zero.
-ou-
O valor <paramref name="length" /> é grande o suficiente para causar um estouro.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.UnmanagedMemoryStream" /> em um buffer seguro com um deslocamento, tamanho e acesso a arquivos especificados.</summary>
      <param name="buffer">O buffer que conterá o fluxo de memória não gerenciada.</param>
      <param name="offset">A posição de bytes no buffer na qual o fluxo de memória não gerenciada será iniciado.</param>
      <param name="length">O tamanho do fluxo de memória não gerenciada.</param>
      <param name="access">O modo de acesso ao arquivo para o fluxo de memória não gerenciada.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Length">
      <summary>Obtém o comprimento dos dados em um fluxo.</summary>
      <returns>O comprimento dos dados no fluxo.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Position">
      <summary>Obtém ou define a posição atual em um fluxo.</summary>
      <returns>A posição atual no fluxo.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A posição é definida como um valor menor que zero ou a posição é maior que <see cref="F:System.Int32.MaxValue" /> ou resulta em estouro quando adicionada ao ponteiro atual.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.PositionPointer">
      <summary>Obtém ou define um ponteiro de bytes em um fluxo com base na posição atual no fluxo.</summary>
      <returns>Um ponteiro de byte.</returns>
      <exception cref="T:System.IndexOutOfRangeException">A posição atual é maior do que a capacidade do fluxo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A posição que está sendo definida não é uma posição válida no fluxo atual.</exception>
      <exception cref="T:System.IO.IOException">O ponteiro está sendo definido como um valor menor que a posição inicial do fluxo.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo foi inicializado para uso com um <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. A propriedade <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> é válida apenas para fluxos que são inicializados com um ponteiro <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o número de bytes especificado na matriz especificada.</summary>
      <param name="buffer">Quando este método retorna, ele contém a matriz de bytes especificada com os valores entre <paramref name="offset" /> e (<paramref name="offset" /> + <paramref name="count" /> -1) substituídos pelos bytes lidos da fonte atual. Este parâmetro é passado não inicializado.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> no qual será iniciada a leitura de dados no fluxo atual.</param>
      <param name="count">O número máximo de bytes a serem lidos do fluxo atual.</param>
      <returns>O número total de bytes lidos do buffer. Isso poderá ser menor que o número de bytes solicitado se esses muitos bytes não estiverem disponíveis no momento, ou zero (0) se o final do fluxo tiver sido atingido.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.NotSupportedException">A memória subjacente não dá suporte a leitura.
-ou-
A propriedade <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> é definida como <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é definido como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que zero.
-ou-
O parâmetro <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">O comprimento da matriz de buffer menos o parâmetro <paramref name="offset" /> é menor do que o parâmetro <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})">
      <summary>Lê todos os bytes desse fluxo de memória não gerenciado no intervalo especificado de bytes.</summary>
      <param name="destination">Quando esse método é retornado, esse intervalo contém todos os bytes do fluxo de memória não gerenciado.</param>
      <returns>O número total de bytes lidos no destino.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona o número de bytes especificado na matriz especificada.</summary>
      <param name="buffer">O buffer no qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual será iniciada a gravação de dados no fluxo.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os bytes de fluxo de memória não gerenciado na região de memória.</summary>
      <param name="buffer">Quando o método assíncrono é concluído, essa região de memória contém todos os bytes lidos do fluxo de memória não gerenciado.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona e encapsula o número total de bytes lidos no buffer.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadByte">
      <summary>Lê um byte de um fluxo e avança a posição no fluxo em um byte ou retorna -1 caso esteja no final do fluxo.</summary>
      <returns>O byte sem sinal é convertido em um objeto <see cref="T:System.Int32" /> ou -1 se estiver no final do fluxo.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.NotSupportedException">A memória subjacente não dá suporte a leitura.
-ou-
A posição atual está no final do fluxo.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Define a posição atual do fluxo atual como o valor determinado.</summary>
      <param name="offset">O ponto relativo à <c>origem</c> no qual iniciar a busca.</param>
      <param name="loc">Especifica a posição inicial, final ou atual como um ponto de referência para <c>origin</c> usando um valor do tipo <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>A nova posição no fluxo.</returns>
      <exception cref="T:System.IO.IOException">Tentativa de buscar antes do início do fluxo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="offset" /> é maior que o tamanho máximo do fluxo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="loc" /> é inválido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)">
      <summary>Define o comprimento de um fluxo como um valor especificado.</summary>
      <param name="value">O comprimento do fluxo.</param>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.NotSupportedException">A memória subjacente não oferece suporte à gravação.
-ou-
É feita uma tentativa de gravar no fluxo e a propriedade <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> é <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="value" /> especificado excede a capacidade do fluxo.
-ou-
O <paramref name="value" /> especificado é negativo.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Grava um bloco de bytes no fluxo atual usando os dados de um buffer.</summary>
      <param name="buffer">A matriz de bytes da qual copiar bytes para o fluxo atual.</param>
      <param name="offset">O deslocamento do buffer no qual começar a copiar bytes para o fluxo atual.</param>
      <param name="count">O número de bytes a serem gravados no fluxo atual.</param>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.NotSupportedException">A memória subjacente não oferece suporte à gravação.
-ou-
É feita uma tentativa de gravar no fluxo e a propriedade <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> é <see langword="false" />.
-ou-
O valor <paramref name="count" /> é maior que a capacidade do fluxo.
-ou-
A posição está no final da capacidade do fluxo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Um dos parâmetros especificados é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="offset" /> menos o comprimento do parâmetro <paramref name="buffer" /> é menor que o parâmetro <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Grava um bloco de bytes no fluxo de memória não gerenciado atual usando dados do intervalo de bytes fornecido.</summary>
      <param name="source">O intervalo de bytes do qual os bytes serão copiados para o fluxo de memória não gerenciado atual.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Grava uma sequência de bytes no fluxo atual assincronamente, avança a posição atual dentro desse fluxo pelo número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> do qual será iniciada a cópia de bytes no fluxo.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona um intervalo de bytes no fluxo atual, avança a posição atual nesse fluxo até o número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)">
      <summary>Grava um byte na posição atual no fluxo de arquivos.</summary>
      <param name="value">Um valor de bytes gravado no fluxo.</param>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.NotSupportedException">A memória subjacente não oferece suporte à gravação.
-ou-
É feita uma tentativa de gravar no fluxo e a propriedade <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> é <see langword="false" />.
-ou-
A posição atual está no fim da capacidade do fluxo.</exception>
      <exception cref="T:System.IO.IOException">O <paramref name="value" /> fornecido faz com que o fluxo exceda sua capacidade máxima.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IDispatchConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Indica que o valor padrão para o campo ou o parâmetro atribuído é uma instância de <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />, em que <see cref="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject" /> é <see langword="null" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IDispatchConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IDispatchConstantAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.IDispatchConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IDispatchConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute.">Obtém a constante <see langword="IDispatch" /> armazenada nesse atributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IDispatch&quot; /&gt; constant value.">A <see langword="IDispatch" /> constante armazenada neste atributo. Somente <see langword="null" /> é permitido para um <see langword="IDispatch" /> valor constante.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IUnknownConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;. This class cannot be inherited.">Indica que o valor padrão para o campo ou o parâmetro atribuído é uma instância de <see cref="T:System.Runtime.InteropServices.UnknownWrapper" />, em que <see cref="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject" /> é <see langword="null" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IUnknownConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IUnknownConstantAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.IUnknownConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IUnknownConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute.">Obtém a constante <see langword="IUnknown" /> armazenada nesse atributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IUnknown&quot; /&gt; constant value.">A <see langword="IUnknown" /> constante armazenada neste atributo. Somente <see langword="null" /> é permitido para um <see langword="IUnknown" /> valor constante.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <summary vsli:raw="Allows an unmanaged method to call a managed method.">Permite que um método não gerenciado chame um método gerenciado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ArrayWithOffset">
      <summary vsli:raw="Encapsulates an array and an offset within the specified array.">Encapsula uma matriz e um deslocamento dentro da matriz especificada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="array" vsli:raw="A managed array.">Uma matriz gerenciada.</param>
      <param name="offset" vsli:raw="The offset in bytes, of the element to be passed through platform invoke.">O deslocamento, em bytes, do elemento a ser passado pela invocação de plataforma.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than 2 gigabytes (GB).">A matriz é maior que 2 gigabytes (GB).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object matches the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object.">Indica se o objeto especificado corresponde ao objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> atual.</summary>
      <param name="obj" vsli:raw="Object to compare with this instance.">O objeto a ser comparado com essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto corresponde a este <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance.">Indica se o objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> especificado corresponde à instância atual.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with this instance.">Um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> a ser comparado com essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> especificado corresponde à instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetArray">
      <summary vsli:raw="Returns the managed array referenced by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;.">Retorna a matriz gerenciada referenciada por este <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns vsli:raw="The managed array this instance references.">A matriz gerenciada à qual essa instância faz referência.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode">
      <summary vsli:raw="Returns a hash code for this value type.">Retorna um código hash para este tipo de valor.</summary>
      <returns vsli:raw="The hash code for this instance.">O código hash para essa instância.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset">
      <summary vsli:raw="Returns the offset provided when this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; was constructed.">Retorna o deslocamento que foi fornecido quando esse <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> foi construído.</summary>
      <returns vsli:raw="The offset for this instance.">O deslocamento para esta instância.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> especificados têm o mesmo valor.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> a ser comparado com o parâmetro <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> a ser comparado com o parâmetro <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="a" /> for o mesmo que o valor de <paramref name="b" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects no not have the same value.">Determina se dois objetos <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> especificados não têm o mesmo valor.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> a ser comparado com o parâmetro <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> a ser comparado com o parâmetro <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is not the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="a" /> não for o mesmo que o valor de <paramref name="b" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AutomationProxyAttribute">
      <summary vsli:raw="Specifies whether the type should be marshaled using the Automation marshaler or a custom proxy and stub.">Especifica se o tipo deve ter o marshaling realizado usando o marshaler de Automação ou um proxy e stub personalizados.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AutomationProxyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AutomationProxyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.AutomationProxyAttribute" />.</summary>
      <param name="val" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">
        <see langword="true" /> se a classe deve passar por marshaling usando o Marshaler de Automação; <see langword="false" /> se um marshaler de stub de proxy deve ser usado.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.AutomationProxyAttribute.Value">
      <summary vsli:raw="Gets a value indicating the type of marshaler to use.">Obtém um valor que indica o tipo de marshaler a ser usado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">
        <see langword="true" /> se a classe deve passar por marshaling usando o Marshaler de Automação; <see langword="false" /> se um marshaler de stub de proxy deve ser usado.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.BestFitMappingAttribute">
      <summary vsli:raw="Controls whether Unicode characters are converted to the closest matching ANSI characters.">Controla se os caracteres Unicode são convertidos em caracteres ANSI correspondentes mais próximos.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BestFitMappingAttribute&quot; /&gt; class set to the value of the &lt;see cref=&quot;P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping&quot; /&gt; property.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> definida com o valor da propriedade <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />.</summary>
      <param name="BestFitMapping" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para indicar que o mapeamento de melhor ajuste está habilitado; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping">
      <summary vsli:raw="Gets the best-fit mapping behavior when converting Unicode characters to ANSI characters.">Obtém o comportamento de mapeamento de melhor ajuste ao converter caracteres Unicode em caracteres ANSI.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se o mapeamento de melhor ajuste estiver habilitado; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI '?' character.">Habilita ou desabilita a geração de uma exceção em um caractere Unicode não mapeável que é convertido em um caractere "?" ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.BStrWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_BSTR&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Realiza marshaling de dados do tipo <see langword="VT_BSTR" /> de código gerenciado para código não gerenciado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; object.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> com o objeto <see cref="T:System.Object" /> especificado.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">O objeto a ser encapsulado e a ser realizado marshaling como <see langword="VT_BSTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> com o objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">O objeto a ser encapsulado e a ser realizado marshaling como <see langword="VT_BSTR" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BStrWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped &lt;see cref=&quot;T:System.String&quot; /&gt; object to marshal as type &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Obtém o objeto <see cref="T:System.String" /> encapsulado para realizar marshaling como o tipo <see langword="VT_BSTR" />.</summary>
      <returns vsli:raw="The object that is wrapped by &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt;.">O objeto que é encapsulado <see cref="T:System.Runtime.InteropServices.BStrWrapper" />pelo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CallingConvention">
      <summary vsli:raw="Specifies the calling convention required to call methods implemented in unmanaged code.">Especifica a convenção de chamada necessária para chamar os métodos implementados em código não gerenciado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
      <summary vsli:raw="The caller cleans the stack. This enables calling functions with &lt;see langword=&quot;varargs&quot; /&gt;, which makes it appropriate to use for methods that accept a variable number of parameters, such as &lt;see langword=&quot;Printf&quot; /&gt;.">O chamador limpa a pilha. Isso permite chamar funções com <see langword="varargs" />, o que o torna apropriado para usar para métodos que aceitam um número variável de parâmetros, como <see langword="Printf" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.FastCall">
      <summary vsli:raw="This calling convention is not supported.">Não há suporte para essa convenção de chamada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.StdCall">
      <summary vsli:raw="The callee cleans the stack.">O computador chamado limpa a pilha. Essa é a convenção padrão para chamar funções não gerenciadas com a invocação da plataforma.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
      <summary vsli:raw="The first parameter is the &lt;see langword=&quot;this&quot; /&gt; pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.">O primeiro parâmetro é o ponteiro <see langword="this" /> e é armazenado no ECX de registro. Outros parâmetros são enviados por push na pilha. Esta convenção de chamada é usada para chamar métodos em classes exportadas de uma DLL não gerenciada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Winapi">
      <summary vsli:raw="This member is not actually a calling convention, but instead uses the default platform calling convention.">Este membro não é realmente uma convenção de chamada, mas usa a convenção de chamada da plataforma padrão. Por exemplo, no Windows o padrão é <see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" /> e no Windows CE.NET é <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceAttribute">
      <summary vsli:raw="Indicates the type of class interface to be generated for a class exposed to COM, if an interface is generated at all.">Indica o tipo de interface de classe a ser gerado para uma classe exposta ao COM, se uma interface for de fato gerada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration value.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> com o valor de enumeração <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> especificado.</summary>
      <param name="classInterfaceType" vsli:raw="Describes the type of interface that is generated for a class.">Descreve o tipo de interface que é gerado para uma classe.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration member.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> com o membro de enumeração <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> especificado.</summary>
      <param name="classInterfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; values that describes the type of interface that is generated for a class.">Um dos valores <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> que descreve o tipo de interface que é gerado para uma classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">Obtém o valor <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> que descreve que tipo de interface deverá ser gerado para a classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">O <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> valor que descreve qual tipo de interface deve ser gerado para a classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceType">
      <summary vsli:raw="Identifies the type of class interface that is generated for a class.">Identifica o tipo de interface de classe que é gerado para uma classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
      <summary vsli:raw="&lt;para&gt;Indicates that the class only supports late binding for COM clients. A &lt;see langword=&quot;dispinterface&quot; /&gt; for the class is automatically exposed to COM clients on request. The type library produced by Tlbexp.exe (Type Library Exporter) does not contain type information for the &lt;see langword=&quot;dispinterface&quot; /&gt; in order to prevent clients from caching the DISPIDs of the interface. The &lt;see langword=&quot;dispinterface&quot; /&gt; does not exhibit the versioning problems described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; because clients can only late-bind to the interface.&lt;/para&gt;&lt;para&gt;This is the default setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.&lt;/para&gt;">Indica que a classe só dá suporte à associação tardia para clientes COM. Um <see langword="dispinterface" /> para a classe é exposto automaticamente aos clientes COM na solicitação. A biblioteca de tipos produzida por Tlbexp.exe (Exportador da Biblioteca de Tipos) não contém informações de tipo para o <see langword="dispinterface" /> para evitar que os clientes armazenem em cache os DISPIDs da interface. O <see langword="dispinterface" /> não apresenta os problemas de controle de versão descritos em <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> porque os clientes podem apenas fazer a associação tardia com a interface.
Essa é a configuração padrão para <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
      <summary vsli:raw="Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using &lt;see langword=&quot;AutoDual&quot; /&gt; is strongly discouraged because of the versioning limitations described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.">Indica que uma interface de classe dupla é automaticamente gerada para a classe e exposta a COM. Informações de tipo são geradas para a interface de classe e publicadas na biblioteca de tipos. Usar <see langword="AutoDual" /> não é recomendável devido a restrições de controle de versão descritas em <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.None">
      <summary vsli:raw="&lt;para&gt;Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the &lt;see langword=&quot;IDispatch&quot; /&gt; interface. This is the recommended setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;. Using &lt;see langword=&quot;ClassInterfaceType.None&quot; /&gt; is the only way to expose functionality through interfaces implemented explicitly by the class.&lt;/para&gt;&lt;para&gt;Tlbexp.exe (Type Library Exporter) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. In .NET Framework 2.0 and later versions, you can specify the default interface exposed to COM by using the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes &lt;see langword=&quot;_Object&quot; /&gt; as the default interface if neither the class nor its base classes implement interfaces.&lt;/para&gt;">Indica que nenhuma interface de classe é gerada para a classe. Se nenhuma interface for implementada explicitamente, a classe só poderá fornecer acesso de associação tardia por meio da interface <see langword="IDispatch" />. Essa é a configuração recomendada para <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />. Usar <see langword="ClassInterfaceType.None" /> é a única maneira de expor a funcionalidade por meio de interfaces explicitamente implementadas pela classe.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CoClassAttribute">
      <summary vsli:raw="Specifies the class identifier of a coclass imported from a type library.">Especifica o identificador de classe de coclass importado de uma biblioteca de tipos.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CoClassAttribute&quot; /&gt; with the class identifier of the original coclass.">Inicializa a nova instância do <see cref="T:System.Runtime.InteropServices.CoClassAttribute" /> com o identificador de classe de do coclass original.</summary>
      <param name="coClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class identifier of the original coclass.">Um <see cref="T:System.Type" /> que contém o identificador de classe do coclass original.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
      <summary vsli:raw="Gets the class identifier of the original coclass.">Obtém o identificador de classe do coclass original.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the class identifier of the original coclass.">Um <see cref="T:System.Type" /> que contém o identificador de classe da coclasse original.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAliasNameAttribute">
      <summary vsli:raw="Indicates the COM alias for a parameter or field type.">Indica o alias COM de um parâmetro ou tipo de campo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAliasNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAliasNameAttribute&quot; /&gt; class with the alias for the attributed field or parameter.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComAliasNameAttribute" /> com o alias do parâmetro ou do campo atribuído.</summary>
      <param name="alias" vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">O alias do campo ou do parâmetro, como encontrado na biblioteca de tipos quando ela foi importada.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAliasNameAttribute.Value">
      <summary vsli:raw="Gets the alias for the field or parameter as found in the type library when it was imported.">Obtém o alias do campo ou do parâmetro, como encontrado na biblioteca de tipos quando ela foi importada.</summary>
      <returns vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">O alias do campo ou do parâmetro, como encontrado na biblioteca de tipos quando ela foi importada.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAwareEventInfo">
      <summary vsli:raw="Permits late-bound registration of an event handler.">Permite o registro de associação tardia de um manipulador de eventos.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; class by using the specified type and a name of the event on the type.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> usando o tipo especificado e um nome do evento no tipo.</summary>
      <param name="type" vsli:raw="The type of object.">O tipo de objeto.</param>
      <param name="eventName" vsli:raw="The name of an event on &lt;paramref name=&quot;type&quot; /&gt;.">O nome de um evento em <paramref name="type" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Attaches an event handler to a COM object.">Anexa um manipulador de eventos a um objeto COM.</summary>
      <param name="target" vsli:raw="The target object that the event delegate should bind to.">O objeto de destino ao qual o delegado de evento deve ser associado.</param>
      <param name="handler" vsli:raw="The event delegate.">O delegado do evento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
      <summary vsli:raw="Gets the attributes for this event.">Obtém os atributos desse evento.</summary>
      <returns vsli:raw="The read-only attributes for this event.">Os atributos somente leitura para este evento.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
      <summary vsli:raw="Gets the class that declares this member.">Obtém a classe que declara esse membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object for the class that declares this member.">O objeto <see cref="T:System.Type" /> para a classe que declara esse membro.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
      <summary vsli:raw="Gets the method that was used to add an event handler delegate to the event source.">Obtém o método que foi usado para adicionar um delegado de manipulador de eventos à origem do evento.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para retornar métodos não públicos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to add an event handler delegate to the event source.">O método que foi usado para adicionar um delegado de manipulador de eventos à origem do evento.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> é <see langword="true" /> e o método usado para adicionar um delegado de manipulador de eventos é não público, mas o chamador não tem permissão para refletir nos métodos não públicos.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.">Quando substituído em uma classe derivada, obtém uma matriz que contém todos os atributos personalizados aplicados a esse membro.</summary>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.">Uma matriz que contém todos os atributos personalizados ou uma que não tem elementos se nenhum atributo tiver sido definido.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context.">Esse membro pertence a um tipo carregado no contexto somente reflexão. Confira Como carregar assemblies no contexto somente de reflexão.</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Um tipo de atributo personalizado não pode ser carregado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.">Quando substituído em uma classe derivada, obtém uma matriz que contém todos os atributos personalizados do tipo especificado aplicados a esse membro.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for. Only attributes that are assignable to this type can be returned.">O tipo de atributo a ser pesquisado. Somente os atributos que podem ser atribuídos a esse tipo podem ser retornados.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.">Uma matriz que contém todos os atributos personalizados de um tipo especificado, ou uma matriz que não tem elementos se nenhum atributo tiver sido definido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;attributeType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attributeType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context">Esse membro pertence a um tipo carregado no contexto somente reflexão. Confira Como Carregar assemblies no contexto somente de reflexão</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Um tipo de atributo personalizado não pode ser carregado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects for the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> para o <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> atual.</summary>
      <returns vsli:raw="A generic list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects representing data about the attributes that have been applied to the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Uma lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> atual.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)">
      <summary vsli:raw="Returns the public or non-public methods that have been associated with an event in metadata.">Retorna os métodos públicos ou não públicos que foram associados um evento em metadados.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para incluir os métodos não públicos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An array representing the methods that have been associated with the event in metadata. If there are no such methods, an empty array is returned.">Uma matriz representando os métodos que foram associados ao evento em metadados. Se não há nenhum desses métodos, uma matriz vazia é retornada.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, returns the method that was called when the event was raised.">Quando substituído em uma classe derivada, retorna o método que foi chamado quando o evento foi gerado.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para retornar métodos não públicos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The object that was called when the event was raised.">O objeto que foi chamado quando o evento foi acionado.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> é <see langword="true" /> e o método usado para adicionar um delegado de manipulador de eventos é não público, mas o chamador não tem permissão para refletir nos métodos não públicos.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, retrieves the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object for removing a method of the event.">Quando substituído em uma classe derivada, recupera o objeto <see cref="T:System.Reflection.MethodInfo" /> para remover um método do evento.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para retornar métodos não públicos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to remove an event handler delegate from the event source.">O método que foi usado para remover um delegado de manipulador de eventos da origem do evento.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">
        <paramref name="nonPublic" /> é <see langword="true" /> e o método usado para adicionar um delegado de manipulador de eventos é não público, mas o chamador não tem permissão para refletir nos métodos não públicos.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
      <summary vsli:raw="Indicates whether one or more instances of the specified attribute are applied to this member.">Indica se uma ou mais instâncias do atributo especificado será aplicada a esse membro.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for.">O tipo de atributo a ser pesquisado.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified attribute has been applied to this member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo especificado tiver sido aplicado a este membro; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken">
      <summary vsli:raw="Gets the metadata token associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Obtém o token de metadados associado ao objeto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> atual.</summary>
      <returns vsli:raw="A 32-bit Integer that represents the metadata token.">Um inteiro de 32 bits que representa o token de metadados.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Module">
      <summary vsli:raw="Gets the module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Obtém o módulo associado ao objeto <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> atual.</summary>
      <returns vsli:raw="The module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">O módulo associado ao objeto atual <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> .</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
      <summary vsli:raw="Gets the name of the current member.">Obtém o nome do membro atual.</summary>
      <returns vsli:raw="The name of this member.">O nome desse membro.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
      <summary vsli:raw="Gets the class object that was used to initialize this instance.">Obtém o objeto de classe que foi usado para inicializar esta instância.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that was used to initialize the current object.">O <see cref="T:System.Type" /> objeto que foi usado para inicializar o objeto atual.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Detaches an event handler from a COM object.">Desanexa um manipulador de eventos de um objeto COM.</summary>
      <param name="target" vsli:raw="The target object that the event delegate is bound to.">O objeto de destino ao qual o delegado do evento está associado.</param>
      <param name="handler" vsli:raw="The event delegate.">O delegado do evento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The event does not have a public &lt;see langword=&quot;remove&quot; /&gt; accessor.">O evento não tem um acessador <see langword="remove" /> público.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The handler that was passed in cannot be used.">O manipulador passado não pode ser usado.</exception>
      <exception cref="T:System.Reflection.TargetException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; and the event is not static.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; is not declared on the target.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch &lt;see cref=&quot;T:System.Exception&quot; /&gt; instead.">No .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture <see cref="T:System.Exception" /> em vez disso.  
  

            
  
 O parâmetro <paramref name="target" /> é <see langword="null" /> e o evento não é estático.  
  
- ou - 
O <see cref="T:System.Reflection.EventInfo" /> não está declarado no destino.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The caller does not have access permission to the member.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.MemberAccessException&quot; /&gt;, instead.">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.MemberAccessException" />.  
  

            
  
 O chamador não tem permissão de acesso ao membro.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute">
      <summary vsli:raw="Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.">Indica a um cliente COM que todas as classes na versão atual de um assembly são compatíveis com as classes em uma versão anterior do assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComCompatibleVersionAttribute&quot; /&gt; class with the major version, minor version, build, and revision numbers of the assembly.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute" /> com os números da versão principal, da versão secundária, de build e de revisão do assembly.</summary>
      <param name="major" vsli:raw="The major version number of the assembly.">O número de versão principal do assembly.</param>
      <param name="minor" vsli:raw="The minor version number of the assembly.">O número de versão secundária do assembly.</param>
      <param name="build" vsli:raw="The build number of the assembly.">O número de build do assembly.</param>
      <param name="revision" vsli:raw="The revision number of the assembly.">O número de revisão do assembly.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber">
      <summary vsli:raw="Gets the build number of the assembly.">Obtém o número de build do assembly.</summary>
      <returns vsli:raw="The build number of the assembly.">O número de build do assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the assembly.">Obtém o número de versão principal do assembly.</summary>
      <returns vsli:raw="The major version number of the assembly.">O número de versão principal do assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the assembly.">Obtém o número de versão secundária do assembly.</summary>
      <returns vsli:raw="The minor version number of the assembly.">O número de versão secundária do assembly.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber">
      <summary vsli:raw="Gets the revision number of the assembly.">Obtém o número de revisão do assembly.</summary>
      <returns vsli:raw="The revision number of the assembly.">O número de revisão do assembly.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComConversionLossAttribute">
      <summary vsli:raw="Indicates that information was lost about a class or interface when it was imported from a type library to an assembly.">Indica que informações sobre uma classe ou interface foram perdidas quando foram importadas de uma biblioteca de tipos para um assembly.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComConversionLossAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComConversionLossAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see langword="ComConversionLossAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <summary vsli:raw="Specifies a default interface to expose to COM. This class cannot be inherited.">Especifica uma interface padrão para expor ao COM. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; object as the default interface exposed to COM.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute" /> com o objeto <see cref="T:System.Type" /> especificado como a interface padrão exposta ao COM.</summary>
      <param name="defaultInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value indicating the default interface to expose to COM.">Um valor <see cref="T:System.Type" /> que indica a interface padrão a ser exposta ao COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">Obtém o objeto <see cref="T:System.Type" /> que especifica a interface padrão a ser exposta ao COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">O <see cref="T:System.Type" /> objeto que especifica a interface padrão para expor ao com.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <summary vsli:raw="Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.">Identifica a interface de origem e a classe que implementa os métodos da interface do evento é gerado quando uma coclass é importada de uma biblioteca de tipos COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComEventInterfaceAttribute&quot; /&gt; class with the source interface and event provider class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> com a interface de origem e a classe do provedor especificados.</summary>
      <param name="SourceInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the original source interface from the type library. COM uses this interface to call back to the managed class.">Um <see cref="T:System.Type" /> que contém a interface de origem original da biblioteca de tipos. COM usa essa interface para fazer o retorno de chamada para a classe gerenciada.</param>
      <param name="EventProvider" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">Um <see cref="T:System.Type" /> que contém a classe que implementa os métodos da interface do evento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
      <summary vsli:raw="Gets the class that implements the methods of the event interface.">Obtém a classe que implementa os métodos da interface do evento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">Um <see cref="T:System.Type" /> que contém a classe que implementa os métodos da interface do evento.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
      <summary vsli:raw="Gets the original source interface from the type library.">Obtém a interface de origem original da biblioteca de tipos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the source interface.">Um <see cref="T:System.Type" /> que contém a interface de origem.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventsHelper">
      <summary vsli:raw="Provides methods that enable .NET delegates that handle events to be added and removed from COM objects.">Fornece métodos que permitem que os delegados do .NET Framework que tratam os eventos sejam adicionados e removidos dos objetos COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the invocation list of events originating from a COM object.">Adiciona um delegado à lista de invocação de eventos provenientes de um objeto COM.</summary>
      <param name="rcw" vsli:raw="The COM object that triggers the events the caller would like to respond to.">O objeto COM que dispara os eventos a que o chamador gostaria de responder.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">O identificador da interface de origem usada pelo objeto COM para disparar eventos.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">O identificador de expedição do método na interface de origem.</param>
      <param name="d" vsli:raw="The delegate to invoke when the COM event is fired.">O delegado a ser invocado quando o evento COM é acionado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the invocation list of events originating from a COM object.">Remove um delegado da lista de invocação de eventos provenientes de um objeto COM.</summary>
      <param name="rcw" vsli:raw="The COM object the delegate is attached to.">O objeto COM a que o delegado está anexado.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">O identificador da interface de origem usada pelo objeto COM para disparar eventos.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">O identificador de expedição do método na interface de origem.</param>
      <param name="d" vsli:raw="The delegate to remove from the invocation list.">O delegado a ser removido da lista de invocação.</param>
      <returns vsli:raw="The delegate that was removed from the invocation list.">Um delegado que foi removido da lista de invocação.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.COMException">
      <summary vsli:raw="The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.">A exceção é lançada quando um HRESULT não reconhecido retorna de uma chamada de método COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with default values.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.COMException" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.COMException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data.">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that supplies the contextual information about the source or destination.">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que fornece as informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.COMException" /> com uma mensagem especificada.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.COMException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message and error code.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.COMException" /> com uma mensagem e um código de erro especificados.</summary>
      <param name="message" vsli:raw="The message that indicates the reason the exception occurred.">A mensagem que indica o motivo pelo qual a exceção ocorreu.</param>
      <param name="errorCode" vsli:raw="The error code (HRESULT) value associated with this exception.">O valor do código de erro (HRESULT) associado a essa exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.ToString">
      <summary vsli:raw="Converts the contents of the exception to a string.">Converte o conteúdo da exceção em uma cadeia de caracteres.</summary>
      <returns vsli:raw="A string containing the &lt;see cref=&quot;P:System.Exception.HResult&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;, and &lt;see cref=&quot;P:System.Exception.StackTrace&quot; /&gt; properties of the exception.">Uma cadeia de caracteres que contém as propriedades <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> e <see cref="P:System.Exception.StackTrace" /> da exceção.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComImportAttribute">
      <summary vsli:raw="Indicates that the attributed type was previously defined in COM.">Indica que o tipo de atributo foi definido anteriormente na COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComImportAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.">Inicializa uma nova instância do <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComInterfaceType">
      <summary vsli:raw="Identifies how to expose an interface to COM.">Identifica como expor uma interface a COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual">
      <summary vsli:raw="Indicates that the interface is exposed to COM as a dual interface, which enables both early and late binding. &lt;see cref=&quot;F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual&quot; /&gt; is the default value.">Indica que a interface é exposta a COM como uma interface dupla, que habilita a associação antecipada e tardia. <see cref="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual" /> é o valor padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a dispinterface, which enables late binding only.">Indica que a interface é exposta a COM como uma dispinterface, que habilita somente a associação tardia.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIInspectable">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a Windows Runtime interface.">Indica que uma interface é exposta a COM como uma interface Tempo de Execução do Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown">
      <summary vsli:raw="Indicates that an interface is exposed to COM as an interface that is derived from IUnknown, which enables only early binding.">Indica que uma interface é exposta a COM como uma interface derivada de IUnknown, o que habilita somente a associação antecipada.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComMemberType">
      <summary vsli:raw="Describes the type of a COM member.">Descreve o tipo de um membro de COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.Method">
      <summary vsli:raw="The member is a normal method.">O membro é um método normal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropGet">
      <summary vsli:raw="The member gets properties.">O membro obtém propriedades.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropSet">
      <summary vsli:raw="The member sets properties.">O membro define propriedades.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you register an assembly for use from COM; this enables the execution of user-written code during the registration process.">Especifica o método a ser chamado quando você registra um assembly para ser usado de COM. Isso habilita a execução de código escrito pelo usuário durante o processo de registro.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComRegisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <summary vsli:raw="Identifies a list of interfaces that are exposed as COM event sources for the attributed class.">Identifica uma lista de interfaces que são expostas como origens de evento COM para a classe atribuída.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the name of the event source interface.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> com o nome da interface de origem do evento.</summary>
      <param name="sourceInterfaces" vsli:raw="A null-delimited list of fully qualified event source interface names.">Uma lista delimitada por valores nulos de nomes totalmente qualificados da interface de origem do evento.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the type to use as a source interface.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> com o tipo a ser usado como interface de origem.</summary>
      <param name="sourceInterface" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> com os tipos a serem usados como interfaces de origem.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">O <see cref="T:System.Type" /> da interface de origem padrão.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inicializa uma nova instância da classe <see langword="ComSourceInterfacesAttribute" /> com os tipos a serem usados como interfaces de origem.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">O <see cref="T:System.Type" /> da interface de origem padrão.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> com os tipos a serem usados como interfaces de origem.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">O <see cref="T:System.Type" /> da interface de origem padrão.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
      <param name="sourceInterface4" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">O <see cref="T:System.Type" /> da interface de origem.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
      <summary vsli:raw="Gets the fully qualified name of the event source interface.">Obtém o nome totalmente qualificado da interface de origem do evento.</summary>
      <returns vsli:raw="The fully qualified name of the event source interface.">O nome totalmente qualificado da interface de origem do evento.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary vsli:raw="Specifies the requested behavior when setting up an advise sink or a caching connection with an object.">Especifica o comportamento solicitado ao configurar um coletor de aviso ou uma conexão de armazenamento em cache com um objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary vsli:raw="For data advisory connections, assures accessibility to data.">Para conexões de consultoria de dados, garanta a acessibilidade aos dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary vsli:raw="For data advisory connections (&lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;), this flag requests the data object not to send data when it calls &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">Para conexões de consultoria de dados (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> ou <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />), esse sinalizador solicita que o objeto de dados não envie dados quando ele chamar <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary vsli:raw="Requests that the object make only one change notification or cache update before deleting the connection.">Solicita que o objeto faça apenas uma notificação de alteração ou atualização de cache antes de excluir a conexão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary vsli:raw="Requests that the object not wait for the data or view to change before making an initial call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; (for data or view advisory connections) or updating the cache (for cache connections).">Solicita que o objeto não espere os dados ou a exibição mudarem antes de fazer uma chamada inicial para <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (para conexões de consultoria de exibição ou dados) ou atualizar o cache (para conexões de cache).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary vsli:raw="This value is used by DLL object applications and object handlers that perform the drawing of their objects.">Esse valor é usado por aplicativos de objeto DLL e manipuladores de objeto que executam o desenho de seus objetos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary vsli:raw="Synonym for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN&quot; /&gt;, which is used more often.">Sinônimo de <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, que é usado com mais frequência.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary vsli:raw="For cache connections, this flag updates the cached representation only when the object containing the cache is saved.">Para conexões de cache, esse sinalizador atualiza a representação armazenada em cache apenas quando o objeto que contém o cache é salvo.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <summary vsli:raw="Stores the parameters that are used during a moniker binding operation.">Armazena os parâmetros que são usados durante uma operação de associação de moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct">
      <summary vsli:raw="Specifies the size, in bytes, of the &lt;see langword=&quot;BIND_OPTS&quot; /&gt; structure.">Especifica o tamanho, em bytes, da estrutura <see langword="BIND_OPTS" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline">
      <summary vsli:raw="Indicates the amount of time (clock time in milliseconds, as returned by the &lt;see langword=&quot;GetTickCount&quot; /&gt; function) that the caller specified to complete the binding operation.">Indica a quantidade de tempo (tempo de relógio, em milissegundos, conforme retornado pela função <see langword="GetTickCount" />) que o chamador especificou para concluir a operação de associação.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags">
      <summary vsli:raw="Controls aspects of moniker binding operations.">Controla os aspectos das operações de associação de moniker.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode">
      <summary vsli:raw="Represents flags that should be used when opening the file that contains the object identified by the moniker.">Representa sinalizadores que devem ser usados ao abrir o arquivo que contém o objeto identificado pelo moniker.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BINDPTR">
      <summary vsli:raw="Contains a pointer to a bound-to &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure, &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure, or an &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Contém um ponteiro para uma estrutura associada a <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, a <see cref="T:System.Runtime.InteropServices.VARDESC" /> ou a uma interface <see langword="ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure.">Representa um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp">
      <summary vsli:raw="Represents a pointer to an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeComp&quot; /&gt; interface.">Representa um ponteiro para uma interface <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure.">Representa um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
      <summary vsli:raw="Identifies the calling convention used by a method described in a METHODDATA structure.">Identifica a convenção de chamada usada por um método descrito em uma estrutura de METHODDATA.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
      <summary vsli:raw="Indicates that the C declaration (CDECL) calling convention is used for a method.">Indica que a convenção de chamada CDECL (declaração C) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.">Indica que a convenção de chamada MACPASCAL (Macintosh Pascal) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
      <summary vsli:raw="Indicates the end of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.CALLCONV&quot; /&gt; enumeration.">Indica o fim da enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.">Indica que a convenção de chamada CDECL MPW (Workbench de programadores Macintosh) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.">Indica que a convenção de chamada PASCAL MPW (Workbench de programadores Macintosh) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
      <summary vsli:raw="Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.">Indica que a convenção de chamada MSCPASCAL (MSC Pascal) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
      <summary vsli:raw="Indicates that the Pascal calling convention is used for a method.">Indica que a convenção de chamada Pascal é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
      <summary vsli:raw="This value is reserved for future use.">Este valor está reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
      <summary vsli:raw="Indicates that the standard calling convention (STDCALL) is used for a method.">Indica que a convenção de chamada STDCALL (Padrão) é usada para um método.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
      <summary vsli:raw="Indicates that the standard SYSCALL calling convention is used for a method.">Indica que a convenção de chamada SYSCALL padrão é usada para um método.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <summary vsli:raw="Describes a connection that exists to a given connection point.">Descreve uma conexão existente para um ponto de conexão específico.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie">
      <summary vsli:raw="Represents a connection token that is returned from a call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;.">Representa um token de conexão que é retornado de uma chamada para <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk">
      <summary vsli:raw="Represents a pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on a connected advisory sink. The caller must call &lt;see langword=&quot;IUnknown::Release&quot; /&gt; on this pointer when the &lt;see langword=&quot;CONNECTDATA&quot; /&gt; structure is no longer needed.">Representa um ponteiro para a interface <see langword="IUnknown" /> em um coletor de consultoria conectado. O chamador deve chamar <see langword="IUnknown::Release" /> nesse ponteiro quando a estrutura <see langword="CONNECTDATA" /> não é mais necessária.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary vsli:raw="Specifies the direction of the data flow in the &lt;paramref name=&quot;dwDirection&quot; /&gt; parameter of the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; method. This determines the formats that the resulting enumerator can enumerate.">Especifica a direção do fluxo de dados no parâmetro <paramref name="dwDirection" /> do método <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />. Isso determina os formatos que o enumerador resultante pode enumerar.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">Solicita que <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> forneça um enumerador para os formatos que podem ser especificados em <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Solicita que <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> forneça um enumerador para os formatos que podem ser especificados em <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DESCKIND">
      <summary vsli:raw="Identifies the type description being bound to.">Identifica a descrição do tipo associado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_FUNCDESC">
      <summary vsli:raw="Indicates that a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure was returned.">Indica que uma estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> foi retornada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary vsli:raw="Indicates that an &lt;see langword=&quot;IMPLICITAPPOBJ&quot; /&gt; was returned.">Indica que um <see langword="IMPLICITAPPOBJ" /> foi retornado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_MAX">
      <summary vsli:raw="Indicates an end-of-enumeration marker.">Indica um marcador de fim de enumeração.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_NONE">
      <summary vsli:raw="Indicates that no match was found.">Indica que nenhuma correspondência foi encontrada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_TYPECOMP">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;TYPECOMP&quot; /&gt; was returned.">Indica que um <see langword="TYPECOMP" /> foi retornado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_VARDESC">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;VARDESC&quot; /&gt; was returned.">Indica que um <see langword="VARDESC" /> foi retornado.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <summary vsli:raw="Contains the arguments passed to a method or property by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Contém os argumentos passados para um método ou uma propriedade pelo <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cArgs">
      <summary vsli:raw="Represents the count of arguments.">Representa a contagem de argumentos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cNamedArgs">
      <summary vsli:raw="Represents the count of named arguments.">Representa a contagem de argumentos nomeados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgdispidNamedArgs">
      <summary vsli:raw="Represents the dispatch IDs of named arguments.">Representa as IDs de expedição de argumentos nomeados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgvarg">
      <summary vsli:raw="Represents a reference to the array of arguments.">Representa uma referência para a matriz de argumentos.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary vsli:raw="Specifies the desired data or view aspect of the object when drawing or getting data.">Especifica os dados desejados ou o aspecto de exibição do objeto ao desenhar ou obter dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary vsli:raw="A representation of an object that lets that object be displayed as an embedded object inside a container. This value is typically specified for compound document objects. The presentation can be provided for the screen or printer.">Uma representação de um objeto que permite que esse objeto seja exibido como um objeto inserido dentro de um contêiner. Geralmente, esse valor é especificado para objetos de documento composto. A apresentação pode ser fornecida para a tela ou impressora.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary vsli:raw="A representation of an object on the screen as though it were printed to a printer using the Print command from the File menu. The described data may represent a sequence of pages.">Uma representação de um objeto na tela como se fosse imprimível em uma impressora usando o comando Imprimir do menu Arquivo. Os dados descritos podem representar uma sequência de páginas.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary vsli:raw="An iconic representation of an object.">Uma representação icônica de um objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary vsli:raw="A thumbnail representation of an object that lets that object be displayed in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color (recommended), device-independent bitmap potentially wrapped in a metafile.">Uma representação em miniatura de um objeto que permite que esse objeto seja exibido em uma ferramenta de navegação. A miniatura é aproximadamente um bitmap independente de dispositivo de 120 por 120 pixels, 16 cores (recomendado) potencialmente encapsulado em um meta-arquivo.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <summary vsli:raw="Contains the type description and process transfer information for a variable, function, or a function parameter.">Contém a descrição do tipo e informações de transferência de processo para uma variável, função ou um parâmetro de função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.desc">
      <summary vsli:raw="Contains information about an element.">Contém informações sobre um elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION">
      <summary vsli:raw="Contains information about an element.">Contém informações sobre um elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.idldesc">
      <summary vsli:raw="Contains information for remoting the element.">Contém informações para comunicação remota com o elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.paramdesc">
      <summary vsli:raw="Contains information about the parameter.">Contém informações sobre o parâmetro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.tdesc">
      <summary vsli:raw="Identifies the type of the element.">Identifica o tipo de um elemento.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <summary vsli:raw="Describes the exceptions that occur during &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Descreve as exceções que ocorrem durante <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrDescription">
      <summary vsli:raw="Describes the error intended for the customer.">Descreve o erro voltado para o cliente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrHelpFile">
      <summary vsli:raw="Contains the fully-qualified drive, path, and file name of a Help file that contains more information about the error.">Contém a unidade totalmente qualificada, o caminho e o nome do arquivo de Ajuda contendo mais informações sobre o erro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrSource">
      <summary vsli:raw="Indicates the name of the source of the exception. Typically, this is an application name.">Indica o nome da origem da exceção. Normalmente, isso é um nome de aplicativo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.dwHelpContext">
      <summary vsli:raw="Indicates the Help context ID of the topic within the Help file.">Indica a ID do contexto de Ajuda do tópico no arquivo de Ajuda.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pfnDeferredFillIn">
      <summary vsli:raw="Represents a pointer to a function that takes an &lt;see cref=&quot;T:System.Runtime.InteropServices.EXCEPINFO&quot; /&gt; structure as an argument and returns an HRESULT value. If deferred fill-in is not desired, this field is set to &lt;see langword=&quot;null&quot; /&gt;.">Representa um ponteiro para uma função que usa uma estrutura <see cref="T:System.Runtime.InteropServices.EXCEPINFO" /> como um argumento e retorna um valor HRESULT. Se preenchimento adiado não for desejado, esse campo será definido como <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pvReserved">
      <summary vsli:raw="This field is reserved; it must be set to &lt;see langword=&quot;null&quot; /&gt;.">Este campo é reservado e deve ser definido como <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.scode">
      <summary vsli:raw="A return value describing the error.">Um valor retornado que descreve o erro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wCode">
      <summary vsli:raw="Represents an error code identifying the error.">Representa um código de erro que identifica o erro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wReserved">
      <summary vsli:raw="This field is reserved; it must be set to 0.">Este campo é reservado e deve ser definido como 0.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FILETIME">
      <summary vsli:raw="Represents the number of 100-nanosecond intervals since January 1, 1601. This structure is a 64-bit value.">Representa o número de intervalos de 100 nanossegundos desde 1º de janeiro de 1601. Essa estrutura é um valor de 64 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwHighDateTime">
      <summary vsli:raw="Specifies the high 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Especifica os 32 bits altos do <see langword="FILETIME" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwLowDateTime">
      <summary vsli:raw="Specifies the low 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Especifica os 32 bits baixos do <see langword="FILETIME" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary vsli:raw="Represents a generalized Clipboard format.">Representa um formato generalizado de área de transferência.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary vsli:raw="Specifies the particular clipboard format of interest.">Especifica o formato da área de transferência específico de interesse.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration constants that indicates how much detail should be contained in the rendering.">Especifica uma das constantes de enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> que indica o nível de detalhes que a renderização deve conter.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary vsli:raw="Specifies part of the aspect when the data must be split across page boundaries.">Especifica a parte do aspecto de quando os dados devem ser divididos em limites de página.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary vsli:raw="Specifies a pointer to a &lt;see langword=&quot;DVTARGETDEVICE&quot; /&gt; structure containing information about the target device that the data is being composed for.">Especifica um ponteiro para uma estrutura <see langword="DVTARGETDEVICE" /> que contém informações sobre o dispositivo de destino para os quais os dados estão sendo compostos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration constants, which indicates the type of storage medium used to transfer the object's data.">Especifica uma das constantes de enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> que indica o tipo de mídia de armazenamento usado para transferir os dados do objeto.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <summary vsli:raw="Defines a function description.">Define uma descrição da função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.callconv">
      <summary vsli:raw="Specifies the calling convention of a function.">Especifica a convenção de chamada de uma função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParams">
      <summary vsli:raw="Counts the total number of parameters.">Conta o número total de parâmetros.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParamsOpt">
      <summary vsli:raw="Counts the optional parameters.">Conta os parâmetros opcionais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cScodes">
      <summary vsli:raw="Counts the permitted return values.">Conta os valor retornados permitidos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.elemdescFunc">
      <summary vsli:raw="Contains the return type of the function.">Contém o tipo de retorno da função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.funckind">
      <summary vsli:raw="Specifies whether the function is virtual, static, or dispatch-only.">Especifica se a função é virtual, estática ou somente de expedição.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.invkind">
      <summary vsli:raw="Specifies the type of a property function.">Especifica o tipo de uma função de propriedade.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgelemdescParam">
      <summary vsli:raw="Indicates the array of &lt;see cref=&quot;F:System.Runtime.InteropServices.ELEMDESC&quot; /&gt;.">Indica o tamanho de <see cref="F:System.Runtime.InteropServices.FUNCDESC.cParams" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgscode">
      <summary vsli:raw="Stores the count of errors a function can return on a 16-bit system.">Armazena a contagem de erros de que uma função pode retornar em um sistema de 16 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.memid">
      <summary vsli:raw="Identifies the function member ID.">Identifica a ID de membro da função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.oVft">
      <summary vsli:raw="Specifies the offset in the VTBL for &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL&quot; /&gt;.">Especifica o deslocamento no VTBL para <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.wFuncFlags">
      <summary vsli:raw="Indicates the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; of a function.">Indica o <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> de uma função.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a function.">Identifica as constantes que definem as propriedades de uma função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary vsli:raw="The function that supports data binding.">A função que dá suporte à associação de dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary vsli:raw="The function that best represents the object. Only one function in a type can have this attribute.">A função que melhor representa o objeto. Apenas uma função em um tipo pode ter este atributo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found, and is flagged as an accessor function for an element of the default collection, a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Permite uma otimização em que o compilador procura um membro chamado "xyz" no tipo de "abc". Se esse membro for encontrado e marcado como uma função de acessador de um elemento da coleção padrão, uma chamada será gerada para essa função de membro. Permitido em membros em dispinterfaces e interfaces; não é permitida em módulos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE&quot; /&gt; must also be set.">A função que é exibida ao usuário como associável. <see cref="F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE" /> também deve ser definido.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">A função não deve ser exibida para o usuário, embora ele exista e seja associável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="Mapped as individual bindable properties.">Mapeado como propriedades associáveis individuais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">A propriedade aparece em um Pesquisador de Objetos, mas não em um navegador de propriedades.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Marca a interface como tendo comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the call is allowed to set the property.">Quando definido, qualquer chamada para um método que define os resultados da propriedade primeiro em uma chamada para <see langword="IPropertyNotifySink::OnRequestEdit" />. A implementação de <see langword="OnRequestEdit" /> determina se a chamada tem permissão para definir a propriedade.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary vsli:raw="The function should not be accessible from macro languages. This flag is intended for system-level functions or functions that type browsers should not display.">A função não deve ser acessível de linguagens de macro. Esse sinalizador é destinado a funções no nível de sistema ou a funções que navegadores de tipo não devem exibir.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary vsli:raw="The function returns an object that is a source of events.">A função retorna um objeto que é uma origem de eventos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">O membro de informações de tipo é o membro padrão para exibição na interface do usuário.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;. If an error occurs during the function, the caller can call &lt;see langword=&quot;GetLastError&quot; /&gt; to retrieve the error code.">A função dá suporte a <see langword="GetLastError" />. Se ocorrer um erro durante a função, o chamador poderá chamar <see langword="GetLastError" /> para recuperar o código de erro.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <summary vsli:raw="Defines how to access a function.">Define como acessar uma função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_DISPATCH">
      <summary vsli:raw="The function can be accessed only through &lt;see langword=&quot;IDispatch&quot; /&gt;.">A função pode ser acessada somente por meio de <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_NONVIRTUAL">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">A função é acessada pelo endereço <see langword="static" /> e aceita um ponteiro <see langword="this" /> implícito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary vsli:raw="The function is accessed through the virtual function table (VTBL), and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">A função é acessada pela VTBL (tabela de função virtual) e usa um ponteiro <see langword="this" /> implícito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_STATIC">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and does not take an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">A função é acessada pelo endereço <see langword="static" /> e não aceita um ponteiro <see langword="this" /> implícito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_VIRTUAL">
      <summary vsli:raw="The function is accessed in the same way as &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL&quot; /&gt;, except the function has an implementation.">A função é acessada da mesma forma que <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL" />, exceto pelo fato de que a função tem uma implementação.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;IAdviseSink&quot; /&gt; interface.">Fornece uma definição gerenciada da interface <see langword="IAdviseSink" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has changed from the running state to the loaded state.  This method is called by a server.">Notifica todos os coletores de supervisão registrados de que o objeto mudou do estado de execução para o estado carregado.  Este método é chamado por um servidor.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Notifies all data objects currently registered advisory sinks that data in the object has changed.">Notifica todos os objetos de dados de coletores de supervisão atualmente registrados de que os dados no objeto mudaram.</summary>
      <param name="format" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt;, passed by reference, which describes the format, target device, rendering, and storage information of the calling data object.">Um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que descreve as informações de formato, dispositivo de destino, renderização e armazenamento do objeto de dados de chamada.</param>
      <param name="stgmedium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, which defines the storage medium (global memory, disk file, storage object, stream object, Graphics Device Interface (GDI) object, or undefined) and ownership of that medium for the calling data object.">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passada por referência, que define a mídia de armazenamento (memória global, arquivo de disco, o objeto de armazenamento, objeto de fluxo, objeto de GDI [Graphics Device Interface] ou indefinido) e a propriedade de mídia para o objeto de dados de chamada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been renamed. This method is called by a server.">Notifica os coletores de supervisão registrados de que o objeto foi renomeado. Este método é chamado por um servidor.</summary>
      <param name="moniker" vsli:raw="A pointer to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on the new full moniker of the object.">Um ponteiro para a interface <see langword="IMoniker" /> no novo moniker completo do objeto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been saved. This method is called by a server.">Notifica os coletores de supervisão registrados de que o objeto foi salvo. Este método é chamado por um servidor.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary vsli:raw="Notifies an object's registered advisory sinks that its view has changed. This method is called by a server.">Notifica os coletores de supervisão registrados de um objeto de que sua exibição mudou. Este método é chamado por um servidor.</summary>
      <param name="aspect" vsli:raw="The aspect, or view, of the object. Contains a value taken from the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration.">O aspecto ou a exibição do objeto. Contém um valor obtido da enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />.</param>
      <param name="index" vsli:raw="The portion of the view that has changed. Currently, only -1 is valid.">A parte da exibição que mudou. Atualmente, somente -1 é válido.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IBindCtx">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IBindCtx" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Enumerates the strings that are the keys of the internally maintained table of contextual object parameters.">Enumera as cadeias de caracteres que são as chaves da tabela de parâmetros de objeto contextuais mantida internamente.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the object parameter enumerator. This parameter is passed uninitialized.">Quando este método retorna, contém uma referência ao enumerador de parâmetro de objeto. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Returns the current binding options stored in the current bind context.">Retorna as opções de associação atuais armazenadas no contexto de associação atual.</summary>
      <param name="pbindopts" vsli:raw="A pointer to the structure to receive the binding options.">Um ponteiro para a estrutura que receberá as opções de associação.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <summary vsli:raw="Looks up the given key in the internally maintained table of contextual object parameters and returns the corresponding object, if one exists.">Pesquisa a chave especificada na tabela de parâmetros de objeto contextuais mantida internamente e retorna o objeto correspondente, se houver.</summary>
      <param name="pszKey" vsli:raw="The name of the object to search for.">O nome do objeto a ser pesquisado.</param>
      <param name="ppunk" vsli:raw="When this method returns, contains the object interface pointer. This parameter is passed uninitialized.">Quando este método retorna, contém o ponteiro de interface do objeto. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
      <summary vsli:raw="Returns access to the Running Object Table (ROT) relevant to this binding process.">Retorna o acesso à ROT (Running Object Table) relevante a esse processo de associação.</summary>
      <param name="pprot" vsli:raw="When this method returns, contains a reference to the Running Object Table (ROT). This parameter is passed uninitialized.">Quando este método retorna, contém uma referência à ROT (Running Object Table). Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)">
      <summary vsli:raw="Registers the passed object as one of the objects that has been bound during a moniker operation and that should be released when the operation is complete.">Registra o objeto passado como um dos objetos que foi associado durante uma operação de moniker e que deve ser liberado quando a operação é concluída.</summary>
      <param name="punk" vsli:raw="The object to register for release.">O objeto a ser registrado para liberação.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <summary vsli:raw="Registers the specified object pointer under the specified name in the internally maintained table of object pointers.">Registra o ponteiro de objeto especificado sob o nome informado na tabela de ponteiros do objeto mantida internamente.</summary>
      <param name="pszKey" vsli:raw="The name to register &lt;paramref name=&quot;punk&quot; /&gt; with.">O nome com o qual registrar <paramref name="punk" />.</param>
      <param name="punk" vsli:raw="The object to register.">O objeto a ser registrado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects">
      <summary vsli:raw="Releases all the objects currently registered with the bind context by using the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)&quot; /&gt; method.">Libera todos os objetos atualmente registrados com o contexto de associação usando o método <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)">
      <summary vsli:raw="Removes the object from the set of registered objects that need to be released.">Remove o objeto do conjunto de objetos registrados que precisam ser liberados.</summary>
      <param name="punk" vsli:raw="The object to unregister for release.">O objeto que terá o registro de liberação cancelado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
      <summary vsli:raw="Revokes the registration of the object currently found under the specified key in the internally maintained table of contextual object parameters, if that key is currently registered.">Revoga o registro do objeto atualmente encontrado na chave especificada da tabela de parâmetros de objeto contextuais mantida internamente, se tal chave estiver registrada no momento.</summary>
      <param name="pszKey" vsli:raw="The key to unregister.">A chave cujo registro será cancelado.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the specified key was successfully removed from the table; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se a chave especificada tiver sido removida com sucesso da tabela; caso contrário, um valor <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Stores a block of parameters in the bind context. These parameters will apply to later &lt;see langword=&quot;UCOMIMoniker&quot; /&gt; operations that use this bind context.">Armazena um bloco de parâmetros no contexto de associação. Esses parâmetros se aplicarão posteriormente a operações <see langword="UCOMIMoniker" /> que usam este contexto de associação.</summary>
      <param name="pbindopts" vsli:raw="The structure containing the binding options to set.">A estrutura que contém as opções de associação a serem definidas.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IConnectionPoint" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)">
      <summary vsli:raw="Establishes an advisory connection between the connection point and the caller's sink object.">Estabelece uma conexão de consultoria entre o ponto de conexão e o objeto do coletor do chamador.</summary>
      <param name="pUnkSink" vsli:raw="A reference to the sink to receive calls for the outgoing interface managed by this connection point.">Referência ao coletor para receber chamadas para a interface de saída gerenciada por esse ponto de conexão.</param>
      <param name="pdwCookie" vsli:raw="When this method returns, contains the connection cookie. This parameter is passed uninitialized.">Quando este método retorna, ele contém o cookie de conexão. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates an enumerator object for iteration through the connections that exist to this connection point.">Cria um objeto enumerador para iteração por meio de conexões existentes nesse ponto de conexão.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém o enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary vsli:raw="Returns the IID of the outgoing interface managed by this connection point.">Retorna o IID da interface de saída gerenciada por esse ponto de conexão.</summary>
      <param name="pIID" vsli:raw="When this parameter returns, contains the IID of the outgoing interface managed by this connection point. This parameter is passed uninitialized.">Quando esse parâmetro retorna, ele contém o IID da interface de saída gerenciada por esse ponto de conexão. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface pointer to the connectable object that conceptually owns this connection point.">Recupera o ponteiro de interface <see langword="IConnectionPointContainer" /> do objeto conectável que tem esse ponto de conexão conceitualmente.</summary>
      <param name="ppCPC" vsli:raw="When this parameter returns, contains the connectable object's &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface. This parameter is passed uninitialized.">Quando este parâmetro retorna, ele contém a interface <see langword="IConnectionPointContainer" /> do objeto conectável. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Unadvise(System.Int32)">
      <summary vsli:raw="Terminates an advisory connection previously established through the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">Encerra uma conexão de consultoria estabelecida anteriormente por meio do método <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
      <param name="dwCookie" vsli:raw="The connection cookie previously returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">O cookie de conexão retornado anteriormente do método <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IConnectionPointContainer" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates an enumerator of all the connection points supported in the connectable object, one connection point per IID.">Cria um enumerador de todos os pontos de conexão com suporte no objeto conectável, um ponto de conexão por IID.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the interface pointer of the enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém o ponteiro de interface do enumerador. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
      <summary vsli:raw="Asks the connectable object if it has a connection point for a particular IID, and if so, returns the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface pointer to that connection point.">Pergunta ao o objeto conectável se ele tem um ponto de conexão para um IID específico e, nesse caso, retorna o ponteiro de interface <see langword="IConnectionPoint" /> desse ponto de conexão.</summary>
      <param name="riid" vsli:raw="A reference to the outgoing interface IID whose connection point is being requested.">Uma referência para a interface de saída IID cujo ponto de conexão está sendo solicitado.</param>
      <param name="ppCP" vsli:raw="When this method returns, contains the connection point that manages the outgoing interface &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, ele contém o ponto de conexão que gerencia o <paramref name="riid" /> da interface de saída. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IDataObject&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IDataObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary vsli:raw="Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.">Cria uma conexão entre um objeto de dados e um coletor de consultoria. Este método é chamado por um objeto compatível com um coletor de consultoria e o habilita para ser notificado sobre alterações nos dados do objeto.</summary>
      <param name="pFormatetc" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.">Uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passada por referência, que define o formato, dispositivo de destino, aspecto e meio que serão usados para notificações futuras.</param>
      <param name="advf" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; values that specifies a group of flags for controlling the advisory connection.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> que especifica um grupo de sinalizadores para controlar a conexão de consultoria.</param>
      <param name="adviseSink" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface on the advisory sink that will receive the change notification.">Um ponteiro para a interface <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> no coletor de consultoria que receberá a notificação de alteração.</param>
      <param name="connection" vsli:raw="When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)&quot; /&gt;. If this value is zero, the connection was not established. This parameter is passed uninitialized.">Quando esse método retornar, conterá um ponteiro para um token DWORD que identifica esta conexão. É possível usar esse token posteriormente para excluir a conexão de consultoria, passando-o para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se esse valor for zero, a conexão não terá sido estabelecida. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The advisory connection was created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; This method is not implemented on the data object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; The data object does not support change notification.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Este método é compatível com os valores retornados padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY e também com os seguintes:
  Valor 
  Descrição 
  S_OK 
  A conexão de consultoria foi criada.  
  
  E_NOTIMPL 
  Este método não é implementado no objeto de dados.  
  
  DV_E_LINDEX 
  Há um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; no momento, apenas -1 é compatível.  
  
  DV_E_FORMATETC 
  Há um valor inválido para o parâmetro <paramref name="pFormatetc" />.  
  
  OLE_E_ADVISENOTSUPPORTED 
  O objeto de dados não é compatível com a notificação de alteração.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary vsli:raw="Destroys a notification connection that had been previously established.">Destrói um conexão de notificação que tinha sido estabelecida anteriormente.</summary>
      <param name="connection" vsli:raw="A DWORD token that specifies the connection to remove. Use the value returned by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; when the connection was originally established.">Um token DWORD que especifica a conexão a ser removida. Use o valor retornado por <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando a conexão tiver sido estabelecida originalmente.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates an object that can be used to enumerate the current advisory connections.">Cria um objeto que pode ser usado para enumerar as conexões de consultoria atuais.</summary>
      <param name="enumAdvise" vsli:raw="When this method returns, contains an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&quot; /&gt; that receives the interface pointer to the new enumerator object. If the implementation sets &lt;paramref name=&quot;enumAdvise&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;, there are no connections to advisory sinks at this time. This parameter is passed uninitialized.">Quando este método retorna, contém um <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> que recebe o ponteiro de interface para o novo objeto de enumerador. Se a implementação definir <paramref name="enumAdvise" /> como <see langword="null" />, não haverá conexões com coletores de consultoria neste momento. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="This method supports the standard return value E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object is successfully instantiated or there are no connections.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; This object does not support advisory notifications.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Este método é compatível com os valores retornados padrão E_OUTOFMEMORY e também com os seguintes:
  Valor  
  
  Descrição  
  
  S_OK  
  
  A instância do objeto de enumerador foi criada com sucesso ou não há conexões.  
  
  OLE_E_ADVISENOTSUPPORTED  
  
  Este objeto não é compatível com notificações de consultoria.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary vsli:raw="Creates an object for enumerating the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures for a data object. These structures are used in calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Cria um objeto para enumerar as estruturas <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> de um objeto de dados. Essas estruturas são usadas em chamadas a <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> ou <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DATADIR&quot; /&gt; values that specifies the direction of the data.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> que especifica a direção dos dados.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object was successfully created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; The direction specified by the &lt;paramref name=&quot;direction&quot; /&gt; parameter is not supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_S_USEREG&lt;/term&gt;&lt;description&gt; Requests that OLE enumerate the formats from the registry.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Este método é compatível com os valores retornados padrão E_INVALIDARG e E_OUTOFMEMORY e também com os seguintes:
  Valor 
  Descrição 
  S_OK 
  O objeto de enumerador foi criado com êxito.  
  
  E_NOTIMPL 
  A direção especificada pelo parâmetro <paramref name="direction" /> não é compatível.  
  
  OLE_S_USEREG 
  Solicita que a OLE enumere os formatos do registro.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Provides a standard &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that is logically equivalent to a more complex structure. Use this method to determine whether two different &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures would return the same data, removing the need for duplicate rendering.">Fornece uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> padrão logicamente equivalente a uma estrutura mais complexa. Use esse método para determinar se duas estruturas <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> diferentes retornariam os mesmos dados, acabando com a necessidade de renderização duplicada.</summary>
      <param name="formatIn" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored.">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, o meio e o dispositivo de destino que o chamador gostaria de usar para recuperar dados em uma chamada subsequente, como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> não é significativo nesse caso e deve ser ignorado.</param>
      <param name="formatOut" vsli:raw="When this method returns, contains a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that contains the most general information possible for a specific rendering, making it canonically equivalent to &lt;c&gt;formatetcIn&lt;/c&gt;. The caller must allocate this structure and the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)&quot; /&gt; method must fill in the data. To retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;, the caller uses the supplied value of &lt;paramref name=&quot;formatOut&quot; /&gt;, unless the value supplied is &lt;see langword=&quot;null&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the method returns &lt;see langword=&quot;DATA_S_SAMEFORMATETC&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored. This parameter is passed uninitialized.">Quando este método retorna, ele contém um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> com as informações mais gerais possíveis para uma renderização específica, tornando-o canonicamente equivalente a <c>formatetcIn</c>. O chamador deve alocar esta estrutura e o método <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> deve preencher os dados. Para recuperar dados em uma chamada subsequente, como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, o chamador usa o valor fornecido de <paramref name="formatOut" />, a menos que o valor fornecido seja <see langword="null" />. Esse valor será <see langword="null" /> se o método retornar <see langword="DATA_S_SAMEFORMATETC" />. O membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> não é significativo nesse caso e deve ser ignorado. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The returned &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure is different from the one that was passed.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DATA_S_SAMEFORMATETC&lt;/term&gt;&lt;description&gt; The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures are the same and &lt;see langword=&quot;null&quot; /&gt; is returned in the &lt;paramref name=&quot;formatOut&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Este método é compatível com os valores retornados padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY e também com os seguintes:
  Valor 
  Descrição 
  S_OK 
  A estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> retornada é diferente da que foi passada.  
  
  DATA_S_SAMEFORMATETC 
  As estruturas <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> são iguais e <see langword="null" /> é retornado no parâmetro <paramref name="formatOut" />.  
  
  DV_E_LINDEX 
  Há um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; no momento, apenas -1 é compatível.  
  
  DV_E_FORMATETC 
  Há um valor inválido para o parâmetro <paramref name="pFormatetc" />.  
  
  OLE_E_NOTRUNNING 
  O aplicativo não está em execução.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. The &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method, which is called by a data consumer, renders the data described in the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure and transfers it through the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure. The caller then assumes responsibility for releasing the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure.">Obtém dados de um objeto de dados de origem. O método <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, chamado por um consumidor de dados, renderiza os dados descritos na estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> especificada e os transfere por meio da estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> especificada. Em seguida, o chamador assume a responsabilidade por liberar a estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. É possível especificar mais de um meio usando o operador OR booliano, permitindo que o método escolha o melhor meio entre aqueles especificados.</param>
      <param name="medium" vsli:raw="When this method returns, contains a pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that indicates the storage medium containing the returned data through its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed&quot; /&gt; member, and the responsibility for releasing the medium through the value of its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the receiver of the medium is responsible for releasing it; otherwise, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; points to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on the appropriate object so its &lt;see langword=&quot;Release&quot; /&gt; method can be called. The medium must be allocated and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método é retornado, contém um ponteiro para a estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> que indica o meio de armazenamento que contém os dados retornados por meio de seu membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> e a responsabilidade para liberar o meio por meio do valor de seu membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o receptor do meio será responsável pela liberação; caso contrário, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> apontará para a interface <see langword="IUnknown" /> no objeto apropriado para que seu método <see langword="Release" /> possa ser chamado. O meio deve ser alocado e preenchido por <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. This method, which is called by a data consumer, differs from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method in that the caller must allocate and free the specified storage medium.">Obtém dados de um objeto de dados de origem. Esse método, chamado por um consumidor de dados, é diferente do método <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> em que o chamador deve alocar e liberar o meio de armazenamento especificado.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt;, and only the following &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; values are valid: &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL&quot; /&gt;, or &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE&quot; /&gt;.">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. Apenas um meio pode ser especificado em <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> e apenas os seguintes valores <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> são válidos: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> ou <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The caller must also free the medium. The implementation of this method must always supply a value of &lt;see langword=&quot;null&quot; /&gt; for the &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that this parameter points to.">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passado por referência, que define o meio de armazenamento que contém os dados que estão sendo transferidos. O meio deve ser alocado pelo chamador e preenchido pelo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O chamador também deve liberar o meio. A implementação deste método sempre deve fornecer um valor de <see langword="null" /> para o membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> da estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> para a qual que este parâmetro aponta.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Determines whether the data object is capable of rendering the data described in the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure. Objects attempting a paste or drop operation can call this method before calling &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; to get an indication of whether the operation may be successful.">Determina se o objeto de dados é capaz de renderizar os dados descritos na estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Objetos que tentam uma operação de colar ou de soltar podem chamar este método antes de chamar <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> para obter uma indicação se a operação pode ser bem-sucedida.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use for the query.">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, o meio e o dispositivo de destino a serem usados para a consulta.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; A subsequent call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; would probably be successful.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; An invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; An invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_TYMED&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_DVASPECT&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Este método é compatível com os valores retornados padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY e também com os seguintes:
  Valor 
  Descrição 
  S_OK 
  Uma chamada subsequente a <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> provavelmente seria bem-sucedida.  
  
  DV_E_LINDEX 
  Um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; no momento, apenas -1 é compatível.  
  
  DV_E_FORMATETC 
  Um valor inválido para o parâmetro <paramref name="pFormatetc" />.  
  
  DV_E_TYMED 
  Um valor <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> inválido.  
  
  DV_E_DVASPECT 
  Um valor <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> inválido.  
  
  OLE_E_NOTRUNNING 
  O aplicativo não está em execução.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary vsli:raw="Transfers data to the object that implements this method. This method is called by an object that contains a data source.">Transfere dados ao objeto que implementa este método. Este método é chamado por um objeto que contém uma fonte de dados.</summary>
      <param name="formatIn" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.">Uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passada por referência, que define o formato usado pelo objeto de dados ao interpretar os dados contidos no meio de armazenamento.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure, passed by reference, that defines the storage medium in which the data is being passed.">Uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passada por referência, que define o meio de armazenamento no qual os dados estão sendo analisados.</param>
      <param name="release" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the data object called, which implements &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. &lt;see langword=&quot;false&quot; /&gt; to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.">
        <see langword="true" /> para especificar que o objeto de dados chamado, que implementa <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, tem o meio de armazenamento após o retorno da chamada. Isso significa que o objeto de dados deverá liberar o meio depois de ter sido usado por meio da chamada à função <see langword="ReleaseStgMedium" />. <see langword="false" /> para especificar que o chamador retém a propriedade do meio de armazenamento e o objeto de dados chamado usa o meio de armazenamento apenas pela duração da chamada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLDESC">
      <summary vsli:raw="Contains information needed for transferring a structure element, parameter, or function return value between processes.">Contém informações necessárias para transferir um elemento, parâmetro ou valor retornado de função de uma estrutura entre processos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved">
      <summary vsli:raw="Reserved; set to &lt;see langword=&quot;null&quot; /&gt;.">Reservado; definido como <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags">
      <summary vsli:raw="Indicates an &lt;see cref=&quot;T:System.Runtime.InteropServices.IDLFLAG&quot; /&gt; value describing the type.">Indica um valor <see cref="T:System.Runtime.InteropServices.IDLFLAG" /> que descreve o tipo.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Descreve como transferir um elemento de estrutura, parâmetro ou valor retornado da função entre processos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">O parâmetro passa informações do chamador para o computador chamado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">O parâmetro é o identificador de local de um aplicativo cliente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">O parâmetro retorna informações do computador chamado para o chamador.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">O parâmetro é o valor retornado do membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Não especifica se o parâmetro passa ou recebe informações.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnectionPoints&quot; /&gt; interface.">Gerencia a definição da interface <see langword="IEnumConnectionPoints" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Cria um novo enumerador que contém o mesmo estado de enumeração que o atual.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of &lt;see langword=&quot;IConnectionPoint&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de referências <see langword="IConnectionPoint" /> a serem retornadas em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência às conexões enumeradas. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando este método retorna, ele contém uma referência ao número real de conexões enumeradas em <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnections&quot; /&gt; interface.">Gerencia a definição da interface <see langword="IEnumConnections" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Cria um novo enumerador que contém o mesmo estado de enumeração que o atual.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.CONNECTDATA&quot; /&gt; structures to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de estruturas <see cref="T:System.Runtime.InteropServices.CONNECTDATA" /> a serem retornadas em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência às conexões enumeradas. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando este método retorna, ele contém uma referência ao número real de conexões enumeradas em <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumFORMATETC&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IEnumFORMATETC" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Cria um novo enumerador que contém o mesmo estado de enumeração que o enumerador atual.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de referências <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> a serem retornadas em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência às referências de <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> enumeradas. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao número real de referências enumeradas em <paramref name="rgelt" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">Um HRESULT com o valor <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumMoniker&quot; /&gt; interface.">Gerencia a definição da interface <see langword="IEnumMoniker" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Cria um novo enumerador que contém o mesmo estado de enumeração que o atual.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of monikers to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de monikers a serem retornados em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated monikers. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência aos monikers enumerados. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of monikers enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando este método retorna, ele contém uma referência ao número real de monikers enumerados em <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumSTATDATA&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IEnumSTATDATA" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Cria um novo enumerador que contém o mesmo estado de enumeração que o enumerador atual.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de referências <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> a serem retornadas em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência às referências de <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> enumeradas. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this parameter returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">Quando este parâmetro retorna, ele contém uma referência ao número real de referências enumeradas em <paramref name="rgelt" />. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">Um HRESULT com o valor <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumString">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumString&quot; /&gt; interface.">Gerencia a definição da interface <see langword="IEnumString" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Cria um novo enumerador que contém o mesmo estado de enumeração que o atual.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao enumerador recém-criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of strings to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">O número de cadeias de caracteres a serem retornadas em <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated strings. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência às cadeias de caracteres enumeradas. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of strings enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Quando este método retorna, ele contém uma referência ao número real de cadeias de caracteres enumeradas em <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumVARIANT&quot; /&gt; interface.">Gerencia a definição da interface <see langword="IEnumVARIANT" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Cria um novo enumerador que contém o mesmo estado de enumeração que o atual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT&quot; /&gt; reference to the newly created enumerator.">Uma referência <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT" /> ao enumerador recém-criado.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Recupera um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to return in &lt;c&gt;rgelt&lt;/c&gt;.">O número de elementos a serem retornados em <c>rgelt</c>.</param>
      <param name="rgVar" vsli:raw="When this method returns, contains a reference to the enumerated elements. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência aos elementos enumerados. Este parâmetro é passado não inicializado.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of elements enumerated in &lt;c&gt;rgelt&lt;/c&gt;.">Quando este método retorna, ele contém uma referência ao número real de elementos enumerados em <c>rgelt</c>.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o parâmetro <paramref name="pceltFetched" /> for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Redefine a sequência de enumeração para o início.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">Um HRESULT com o valor <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Ignora um número especificado de itens na sequência de enumeração.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">O número de elementos a serem ignorados na enumeração.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">
        <see langword="S_OK" /> se o número de elementos ignorados for igual ao parâmetro <paramref name="celt" />; caso contrário, <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMoniker">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IMoniker&quot; /&gt; interface, with COM functionality from &lt;see langword=&quot;IPersist&quot; /&gt; and &lt;see langword=&quot;IPersistStream&quot; /&gt;.">Fornece a definição gerenciada da interface <see langword="IMoniker" />, com a funcionalidade COM de <see langword="IPersist" /> e <see langword="IPersistStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Uses the moniker to bind to the object that it identifies.">Usa o moniker para se associar ao objeto identificado por ele.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used in this binding operation.">Uma referência à interface <see langword="IBindCtx" /> no objeto de contexto de associação usada nessa operação de associação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Uma referência ao moniker à esquerda do moniker atual, caso o moniker faça parte de um moniker de composição.</param>
      <param name="riidResult" vsli:raw="The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies.">O IID (identificador de interface) da interface que o cliente pretende usar para se comunicar com o objeto identificado pelo moniker.</param>
      <param name="ppvResult" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riidResult&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método é retornado, contém uma referência à interface solicitada por <paramref name="riidResult" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Retrieves an interface pointer to the storage that contains the object identified by the moniker.">Recupera um ponteiro de interface para o armazenamento que contém o objeto identificado pelo moniker.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used during this binding operation.">Uma referência à interface <see langword="IBindCtx" /> no objeto de contexto de associação usada durante essa operação de associação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Uma referência ao moniker à esquerda do moniker atual, caso o moniker faça parte de um moniker de composição.</param>
      <param name="riid" vsli:raw="The interface identifier (IID) of the storage interface requested.">O IID (identificador de interface) da interface de armazenamento solicitada.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método é retornado, contém uma referência à interface solicitada por <paramref name="riid" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Creates a new moniker based on the common prefix that this moniker shares with another moniker.">Cria um novo moniker com base no prefixo comum que esse moniker compartilha com outro moniker.</summary>
      <param name="pmkOther" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on another moniker to compare with the current moniker for a common prefix.">Uma referência à interface <see langword="IMoniker" /> em outro moniker a ser comparada com o moniker atual para um prefixo comum.</param>
      <param name="ppmkPrefix" vsli:raw="When this method returns, contains the moniker that is the common prefix of the current moniker and &lt;paramref name=&quot;pmkOther&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método retorna, ele contém o moniker que é o prefixo comum do moniker atual e <paramref name="pmkOther" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Combines the current moniker with another moniker, creating a new composite moniker.">Combina o moniker atual com outro moniker, criando um novo moniker de composição.</summary>
      <param name="pmkRight" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on a moniker to append to the end of the current moniker.">Uma referência à interface <see langword="IMoniker" /> em um moniker a ser acrescentada ao final do moniker atual.</param>
      <param name="fOnlyIfNotGeneric" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the caller requires a nongeneric composition. The operation proceeds only if &lt;paramref name=&quot;pmkRight&quot; /&gt; is a moniker class that the current moniker can combine with in some way other than forming a generic composite. &lt;see langword=&quot;false&quot; /&gt; to indicate that the method can create a generic composite if necessary.">
        <see langword="true" /> para indicar que o chamador requer uma composição não genérica. A operação continuará somente se <paramref name="pmkRight" /> for uma classe moniker com a qual o moniker atual poderá combinar de alguma maneira que não seja formando uma composição genérica. <see langword="false" /> para indicar que o método pode criar uma composição genérica, se necessário.</param>
      <param name="ppmkComposite" vsli:raw="When this method returns, contains a reference to the resulting composite moniker. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao moniker de composição resultante. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.">Fornece um ponteiro a um enumerador que pode enumerar os componentes de um moniker de composição.</summary>
      <param name="fForward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate the monikers from left to right. &lt;see langword=&quot;false&quot; /&gt; to enumerate from right to left.">
        <see langword="true" /> para enumerar os monikers da esquerda para a direita. <see langword="false" /> para enumerar da direita para esquerda.</param>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains a reference to the enumerator object for the moniker. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao objeto enumerador do moniker. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Recupera o CLSID (identificador de classe) de um objeto.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains the CLSID. This parameter is passed uninitialized.">Quando este método retorna, ele contém o CLSID. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
      <summary vsli:raw="Gets the display name, which is a user-readable representation of the current moniker.">Obtém o nome de exibição, que é uma representação legível para o usuário do moniker atual.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this operation.">Uma referência ao contexto de associação a ser usado nessa operação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Uma referência ao moniker à esquerda do moniker atual, caso o moniker faça parte de um moniker de composição.</param>
      <param name="ppszDisplayName" vsli:raw="When this method returns, contains the display name string. This parameter is passed uninitialized.">Quando este método retorna, ele contém a cadeia de caracteres do nome de exibição. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)">
      <summary vsli:raw="Returns the size, in bytes, of the stream needed to save the object.">Retorna o tamanho em bytes do fluxo necessário para salvar o objeto.</summary>
      <param name="pcbSize" vsli:raw="When this method returns, contains a &lt;see langword=&quot;long&quot; /&gt; value indicating the size, in bytes, of the stream needed to save this object. This parameter is passed uninitialized.">Quando esse método retorna, ele contém um valor <see langword="long" /> que indica o tamanho em bytes do fluxo necessário para salvar esse objeto. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Provides a number representing the time that the object identified by the current moniker was last changed.">Fornece um número que representa a hora em que o objeto identificado pelo moniker atual foi alterado pela última vez.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Uma referência ao contexto de associação a ser usado nessa operação de associação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Uma referência ao moniker à esquerda do moniker atual, caso o moniker faça parte de um moniker de composição.</param>
      <param name="pFileTime" vsli:raw="When this method returns, contains the time of the last change. This parameter is passed uninitialized.">Quando este método retorna, ele contém a hora da última alteração. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)">
      <summary vsli:raw="Calculates a 32-bit integer using the internal state of the moniker.">Calcula um inteiro de 32 bits usando o estado interno do moniker.</summary>
      <param name="pdwHash" vsli:raw="When this method returns, contains the hash value for this moniker. This parameter is passed uninitialized.">Quando esse método retorna, ele contém o valor de hash desse moniker. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Provides a moniker that, when composed to the right of the current moniker or one of similar structure, composes to nothing.">Fornece um moniker que, quando composto à direita do moniker atual ou de uma estrutura semelhante, compõe com nada.</summary>
      <param name="ppmk" vsli:raw="When this method returns, contains a moniker that is the inverse of the current moniker. This parameter is passed uninitialized.">Quando esse método retorna, ele contém o moniker que é o inverso do moniker atual. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty">
      <summary vsli:raw="Checks the object for changes since it was last saved.">Verifica se há alterações no objeto desde que foi salvo pela última vez.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the object has changed; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se o objeto tiver sido alterado; caso contrário, um valor <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Compares the current moniker with a specified moniker and indicates whether they are identical.">Compara o moniker atual com um moniker especificado e indica se eles são idênticos.</summary>
      <param name="pmkOtherMoniker" vsli:raw="A reference to the moniker to use for comparison.">Uma referência ao moniker a ser usado para comparação.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the monikers are identical; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se os identificadores forem idênticos, caso contrário, um valor <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the object that is identified by the current moniker is currently loaded and running.">Determina se o objeto identificado pelo moniker atual está sendo carregado e executado no momento.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Uma referência ao contexto de associação a ser usado nessa operação de associação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker if the current moniker is part of a composite.">Uma referência ao moniker à esquerda do moniker atual, caso o moniker atual faça parte de uma composição.</param>
      <param name="pmkNewlyRunning" vsli:raw="A reference to the moniker most recently added to the Running Object Table (ROT).">Uma referência ao moniker adicionado mais recentemente à ROT (Tabela de Objetos em Execução).</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is running; an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is not running; or an &lt;see langword=&quot;E_UNEXPECTED&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se o moniker estiver em execução, um valor <see langword="S_FALSE" /><see langword="HRESULT" /> se o moniker não estiver em execução ou um valor <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)">
      <summary vsli:raw="Indicates whether this moniker is of one of the system-supplied moniker classes.">Indica se esse moniker é de uma das classes moniker fornecidas pelo sistema.</summary>
      <param name="pdwMksys" vsli:raw="When this method returns, contains a pointer to an integer that is one of the values from the &lt;see langword=&quot;MKSYS&quot; /&gt; enumeration, and refers to one of the COM moniker classes. This parameter is passed uninitialized.">Quando esse método retorna, ele contém um ponteiro para um inteiro que é um dos valores da enumeração <see langword="MKSYS" /> e faz referência a uma das classes COM do moniker. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is a system moniker; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se o moniker for um moniker de sistema, caso contrário, um valor <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
      <summary vsli:raw="Initializes an object from the stream where it was previously saved.">Inicializa um objeto do fluxo de onde ele foi salvo anteriormente.</summary>
      <param name="pStm" vsli:raw="The stream that the object is loaded from.">O fluxo do qual o objeto é carregado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Reads as many characters of the specified display name as the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)&quot; /&gt; understands and builds a moniker corresponding to the portion read.">Lê o máximo de caracteres do nome de exibição especificado que o <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" /> entende e cria um moniker correspondente à parte lida.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Uma referência ao contexto de associação a ser usado nessa operação de associação.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker that has been built from the display name up to this point.">Uma referência ao moniker que foi criado do nome de exibição até este ponto.</param>
      <param name="pszDisplayName" vsli:raw="A reference to the string containing the remaining display name to parse.">Uma referência à cadeia de caracteres que contém o nome de exibição restante a ser analisado.</param>
      <param name="pchEaten" vsli:raw="When this method returns, contains the number of characters that were consumed in parsing &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, ele contém o número de caracteres que foram consumidos na análise de <paramref name="pszDisplayName" />. Este parâmetro é passado não inicializado.</param>
      <param name="ppmkOut" vsli:raw="When this method returns, contains a reference to the moniker that was built from &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método retorna, ele contém uma referência ao moniker criado de <paramref name="pszDisplayName" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Returns a reduced moniker, which is another moniker that refers to the same object as the current moniker but can be bound with equal or greater efficiency.">Retorna um moniker reduzido, que é outro moniker que se refere ao mesmo objeto do moniker atual, mas pode ser associado com eficiência igual ou maior.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context to use in this binding operation.">Uma referência à interface <see langword="IBindCtx" /> no contexto de associação a ser usada nessa operação de associação.</param>
      <param name="dwReduceHowFar" vsli:raw="A value that specifies how far the current moniker should be reduced.">Um valor que especifica o quanto o moniker atual deve ser reduzido.</param>
      <param name="ppmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker.">Uma referência ao moniker à esquerda do moniker atual.</param>
      <param name="ppmkReduced" vsli:raw="When this method returns, contains a reference to the reduced form of the current moniker, which can be &lt;see langword=&quot;null&quot; /&gt; if an error occurs or if the current moniker is reduced to nothing. This parameter is passed uninitialized.">Quando esse método retorna, ele contém uma referência à forma reduzida do moniker atual, que pode ser <see langword="null" /> se ocorrer um erro ou se o moniker atual for reduzido a nada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Supplies a moniker that, when appended to the current moniker (or one with a similar structure), yields the specified moniker.">Fornece um moniker que, quando acrescentado ao moniker atual (ou uma com uma estrutura semelhante), gera o moniker especificado.</summary>
      <param name="pmkOther" vsli:raw="A reference to the moniker to which a relative path should be taken.">Uma referência ao moniker em que um caminho relativo deve ser adotado.</param>
      <param name="ppmkRelPath" vsli:raw="When this method returns, contains a reference to the relative moniker. This parameter is passed uninitialized.">Quando este método retorna, ele contém uma referência ao moniker relativo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
      <summary vsli:raw="Saves an object to the specified stream.">Salva um objeto no fluxo especificado.</summary>
      <param name="pStm" vsli:raw="The stream to which the object is saved.">O fluxo no qual o objeto é salvo.</param>
      <param name="fClearDirty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to clear the modified flag after the save is complete; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para limpar o sinalizador modificado após a conclusão do salvamento, caso contrário, <see langword="false" /></param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <summary vsli:raw="Defines the attributes of an implemented or inherited interface of a type.">Define os atributos de uma interface implementada ou herdada de um tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULT">
      <summary vsli:raw="The interface or dispinterface represents the default for the source or sink.">A interface ou dispinterface representa o padrão para a origem ou o coletor.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULTVTABLE">
      <summary vsli:raw="Sinks receive events through the virtual function table (VTBL).">Coletores recebem eventos pela VTBL (tabela de funções virtuais).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FRESTRICTED">
      <summary vsli:raw="The member should not be displayed or programmable by users.">O membro não deve ser exibido nem programável por usuários.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FSOURCE">
      <summary vsli:raw="This member of a coclass is called rather than implemented.">Este membro de uma coclass é chamado em vez de implementado.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <summary vsli:raw="Specifies how to invoke a function by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Especifica como invocar uma função por <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_FUNC">
      <summary vsli:raw="The member is called using a normal function invocation syntax.">O membro é chamado usando uma sintaxe de invocação de função normal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary vsli:raw="The function is invoked using a normal property access syntax.">A função é invocada usando uma sintaxe de acesso de propriedade normal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary vsli:raw="The function is invoked using a property value assignment syntax.">A função é invocada usando uma sintaxe de atribuição de valor da propriedade.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary vsli:raw="The function is invoked using a property reference assignment syntax.">A função é invocada usando uma sintaxe de atribuição de referência de propriedade.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IPersistFile">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IPersistFile&quot; /&gt; interface, with functionality from &lt;see langword=&quot;IPersist&quot; /&gt;.">Fornece a definição gerenciada da interface <see langword="IPersistFile" />, com a funcionalidade de <see langword="IPersist" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Recupera o CLSID (identificador de classe) de um objeto.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência ao CLSID. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
      <summary vsli:raw="Retrieves either the absolute path to the current working file of the object or, if there is no current working file, the default file name prompt of the object.">Recupera o caminho absoluto para o arquivo de trabalho atual do objeto ou, se não houver um arquivo de trabalho atual, o prompt de nome de arquivo padrão do objeto.</summary>
      <param name="ppszFileName" vsli:raw="When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt). This parameter is passed uninitialized.">Quando retorna, este método contém o endereço de um ponteiro para uma cadeia de caracteres terminada em zero que contém o caminho para o arquivo atual ou o prompt de nome de arquivo padrão (por exemplo, *.txt). Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty">
      <summary vsli:raw="Checks an object for changes since it was last saved to its current file.">Verifica se há alterações no objeto desde que foi salvo no arquivo atual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the file has changed since it was last saved; &lt;see langword=&quot;S_FALSE&quot; /&gt; if the file has not changed since it was last saved.">
        <see langword="S_OK" /> se o arquivo foi alterado desde que foi salvo pela última vez; <see langword="S_FALSE" /> se o arquivo não foi alterado desde que foi salvo pela última vez.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
      <summary vsli:raw="Opens the specified file and initializes an object from the file contents.">Abre o arquivo especificado e inicializa um objeto do conteúdo do arquivo.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to open.">Uma cadeia de caracteres terminada em zero que contém o caminho absoluto do arquivo a ser aberto.</param>
      <param name="dwMode" vsli:raw="A combination of values from the &lt;see langword=&quot;STGM&quot; /&gt; enumeration to indicate the access mode in which to open &lt;paramref name=&quot;pszFileName&quot; /&gt;.">Uma combinação de valores da enumeração <see langword="STGM" /> para indicar o modo de acesso para abrir <paramref name="pszFileName" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
      <summary vsli:raw="Saves a copy of the object into the specified file.">Salva uma cópia do objeto no arquivo especificado.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to which the object is saved.">Uma cadeia terminada em zero que contém o caminho absoluto do arquivo no qual o objeto é salvo.</param>
      <param name="fRemember" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to used the &lt;paramref name=&quot;pszFileName&quot; /&gt; parameter as the current working file; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> a ser usado com o parâmetro <paramref name="pszFileName" /> como o arquivo de trabalho atual; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
      <summary vsli:raw="Notifies the object that it can write to its file.">Notifica o objeto de que ele pode gravar no seu arquivo.</summary>
      <param name="pszFileName" vsli:raw="The absolute path of the file where the object was previously saved.">O caminho absoluto do arquivo em que o objeto foi salvo anteriormente.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IRunningObjectTable&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="IRunningObjectTable" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Enumerates the objects currently registered as running.">Enumera os objetos registrados atualmente como em execução.</summary>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains the new enumerator for the Running Object Table (ROT). This parameter is passed uninitialized.">Quando retorna, este método contém o novo enumerador para a ROT (tabela de objetos em execução). Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
      <summary vsli:raw="Returns the registered object if the supplied object name is registered as running.">Retorna o objeto registrado se o nome do objeto fornecido for registrado como em execução.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Uma referência ao moniker a ser pesquisado na ROT (tabela de objetos em execução).</param>
      <param name="ppunkObject" vsli:raw="When this method returns, contains the requested running object. This parameter is passed uninitialized.">Quando retorna, este método contém o objeto em execução solicitado. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Um valor <see langword="HRESULT" /> que indica o êxito ou a falha da operação.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Searches for this moniker in the Running Object Table (ROT) and reports the recorded time of change, if present.">Pesquisa esse moniker na ROT (tabela de objetos em execução) e relata o tempo registrado da alteração, se houver.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Uma referência ao moniker a ser pesquisado na ROT (tabela de objetos em execução).</param>
      <param name="pfiletime" vsli:raw="When this object returns, contains the objects last change time. This parameter is passed uninitialized.">Quando retorna, esse objeto contém a hora da última alteração do objeto. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Um valor <see langword="HRESULT" /> que indica o êxito ou a falha da operação.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the specified moniker is currently registered in the Running Object Table (ROT).">Determina se o moniker especificado está registrado atualmente na ROT (tabela de objetos em execução).</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Uma referência ao moniker a ser pesquisado na ROT (tabela de objetos em execução).</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Um valor <see langword="HRESULT" /> que indica o êxito ou a falha da operação.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Notes the time that a particular object changed so &lt;see langword=&quot;IMoniker::GetTimeOfLastChange&quot; /&gt; can report an appropriate change time.">Anota a hora em que um determinado objeto foi alterado, para que <see langword="IMoniker::GetTimeOfLastChange" /> possa relatar uma hora de alteração adequada.</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry of the changed object.">A entrada da ROT (tabela de objetos em execução) do objeto alterado.</param>
      <param name="pfiletime" vsli:raw="A reference to the object's last change time.">Uma referência a hora da última alteração do objeto.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Registers that the supplied object has entered the running state.">Registra que o objeto fornecido entrou no estado de execução.</summary>
      <param name="grfFlags" vsli:raw="Specifies whether the Running Object Table's (ROT) reference to &lt;paramref name=&quot;punkObject&quot; /&gt; is weak or strong, and controls access to the object through its entry in the ROT.">Especifica se a referência de ROT (Tabela de Objetos em Execução) à <paramref name="punkObject" /> é fraca ou forte e controla o acesso ao objeto por meio de sua entrada na ROT.</param>
      <param name="punkObject" vsli:raw="A reference to the object being registered as running.">Uma referência ao objeto que está sendo registrado como em execução.</param>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker that identifies &lt;paramref name=&quot;punkObject&quot; /&gt;.">Uma referência ao moniker que identifica <paramref name="punkObject" />.</param>
      <returns vsli:raw="A value that can be used to identify this ROT entry in subsequent calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)&quot; /&gt;.">Um valor que pode ser usado para identificar essa entrada da ROT nas chamadas subsequentes a <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)" /> ou <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)">
      <summary vsli:raw="Unregisters the specified object from the Running Object Table (ROT).">Cancela o registro do objeto especificado da ROT (tabela de objetos em execução).</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry to revoke.">A entrada da ROT (tabela de objetos em execução) a ser revogada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IStream">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IStream&quot; /&gt; interface, with &lt;see langword=&quot;ISequentialStream&quot; /&gt; functionality.">Fornece a definição gerenciada da interface <see langword="IStream" />, com a funcionalidade <see langword="ISequentialStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
      <summary vsli:raw="Creates a new stream object with its own seek pointer that references the same bytes as the original stream.">Cria um novo objeto de fluxo com seu próprio ponteiro de busca que faz referência aos mesmos bytes do fluxo original.</summary>
      <param name="ppstm" vsli:raw="When this method returns, contains the new stream object. This parameter is passed uninitialized.">Quando retorna, este método contém o novo objeto de fluxo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)">
      <summary vsli:raw="Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.">Garante que todas as alterações feitas em um objeto de fluxo, que esteja aberto no modo de transação, sejam refletidas no armazenamento pai.</summary>
      <param name="grfCommitFlags" vsli:raw="A value that controls how the changes for the stream object are committed.">Um valor que controla como as alterações no objeto de fluxo são confirmadas.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.">Copia um número especificado de bytes do ponteiro de busca atual no fluxo para o ponteiro de busca atual em outro fluxo.</summary>
      <param name="pstm" vsli:raw="A reference to the destination stream.">Uma referência ao fluxo de destino.</param>
      <param name="cb" vsli:raw="The number of bytes to copy from the source stream.">O número de bytes a serem copiados do fluxo de origem.</param>
      <param name="pcbRead" vsli:raw="On successful return, contains the actual number of bytes read from the source.">No retorno bem-sucedido, contém o número real de bytes lidos da origem.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the destination.">No retorno bem-sucedido, contém o número real de bytes gravados no destino.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Restricts access to a specified range of bytes in the stream.">Restringe o acesso a um intervalo especificado de bytes no fluxo.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">O deslocamento de byte para o início do intervalo.</param>
      <param name="cb" vsli:raw="The length of the range, in bytes, to restrict.">O comprimento do intervalo, em bytes, a ser restringido.</param>
      <param name="dwLockType" vsli:raw="The requested restrictions on accessing the range.">As restrições solicitadas no acesso ao intervalo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.">Lê um número especificado de bytes do objeto de fluxo na memória, iniciando no ponteiro de busca atual.</summary>
      <param name="pv" vsli:raw="When this method returns, contains the data read from the stream. This parameter is passed uninitialized.">Quando este método for retornado, ele conterá os dados lidos do fluxo. Este parâmetro é passado não inicializado.</param>
      <param name="cb" vsli:raw="The number of bytes to read from the stream object.">O número de bytes a serem lidos do objeto de fluxo.</param>
      <param name="pcbRead" vsli:raw="A pointer to a &lt;see langword=&quot;ULONG&quot; /&gt; variable that receives the actual number of bytes read from the stream object.">Um ponteiro para uma variável <see langword="ULONG" /> que recebe o número real de bytes lidos do objeto de fluxo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Revert">
      <summary vsli:raw="Discards all changes that have been made to a transacted stream since the last &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)&quot; /&gt; call.">Descarta todas as alterações feitas em um fluxo transacionado desde a última chamada <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)">
      <summary vsli:raw="Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.">Altera o ponteiro de busca para um novo local relativo ao início do fluxo, ao final do fluxo ou ao ponteiro de busca atual.</summary>
      <param name="dlibMove" vsli:raw="The displacement to add to &lt;paramref name=&quot;dwOrigin&quot; /&gt;.">O deslocamento a ser adicionado ao <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin" vsli:raw="The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.">A origem a ser buscada. A origem pode ser o início do arquivo, ponteiro de busca atual ou o fim do arquivo.</param>
      <param name="plibNewPosition" vsli:raw="On successful return, contains the offset of the seek pointer from the beginning of the stream.">No retorno bem-sucedido, contém o deslocamento do ponteiro de busca do início do fluxo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)">
      <summary vsli:raw="Changes the size of the stream object.">Altera o tamanho do objeto de fluxo.</summary>
      <param name="libNewSize" vsli:raw="The new size of the stream as a number of bytes.">O novo tamanho do fluxo como um número de bytes.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.STATSTG&quot; /&gt; structure for this stream.">Recupera a estrutura <see cref="T:System.Runtime.InteropServices.STATSTG" /> desse fluxo.</summary>
      <param name="pstatstg" vsli:raw="When this method returns, contains a &lt;see langword=&quot;STATSTG&quot; /&gt; structure that describes this stream object. This parameter is passed uninitialized.">Quando retorna, este método contém uma estrutura <see langword="STATSTG" /> que descreve este objeto de fluxo. Este parâmetro é passado não inicializado.</param>
      <param name="grfStatFlag" vsli:raw="Members in the &lt;see langword=&quot;STATSTG&quot; /&gt; structure that this method does not return, thus saving some memory allocation operations.">Membros da estrutura <see langword="STATSTG" /> que esse método não retorna, economizando operações de alocação de memória.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Removes the access restriction on a range of bytes previously restricted with the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)&quot; /&gt; method.">Remove a restrição de acesso em um intervalo de bytes anteriormente restringido com o método <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">O deslocamento de byte para o início do intervalo.</param>
      <param name="cb" vsli:raw="The length, in bytes, of the range to restrict.">O comprimento, em bytes, do intervalo a ser restringido.</param>
      <param name="dwLockType" vsli:raw="The access restrictions previously placed on the range.">As restrições de acesso colocadas anteriormente no intervalo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a specified number of bytes into the stream object starting at the current seek pointer.">Grava um número especificado de bytes no objeto de fluxo, iniciando no ponteiro de busca atual.</summary>
      <param name="pv" vsli:raw="The buffer to write this stream to.">O buffer no qual gravar esse fluxo.</param>
      <param name="cb" vsli:raw="The number of bytes to write to the stream.">O número de bytes a ser gravado no fluxo.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;, this method does not provide the actual number of bytes written.">No retorno bem-sucedido, contém o número real de bytes gravados no objeto de fluxo. Se o chamador define esse ponteiro como <see cref="F:System.IntPtr.Zero" />, esse método não fornece o número real de bytes gravados.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeComp">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="ITypeComp" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
      <summary vsli:raw="Maps a name to a member of a type, or binds global variables and functions contained in a type library.">Mapeia um nome de um membro de um tipo ou associa variáveis globais e funções contidas em uma biblioteca de tipos.</summary>
      <param name="szName" vsli:raw="The name to bind.">O nome a ser associado.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; computed by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Um valor de hash para <paramref name="szName" /> computado por <see langword="LHashValOfNameSys" />.</param>
      <param name="wFlags" vsli:raw="A flags word containing one or more of the invoke flags defined in the &lt;see langword=&quot;INVOKEKIND&quot; /&gt; enumeration.">Uma palavra de sinalizadores que contém um ou mais dos sinalizadores de invocação definidos na enumeração <see langword="INVOKEKIND" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to the type description that contains the item to which it is bound, if a &lt;see langword=&quot;FUNCDESC&quot; /&gt; or &lt;see langword=&quot;VARDESC&quot; /&gt; was returned. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência à descrição de tipo que contém o item ao qual ele está associado, se um <see langword="FUNCDESC" /> ou <see langword="VARDESC" /> foi retornado. Este parâmetro é passado não inicializado.</param>
      <param name="pDescKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;DESCKIND&quot; /&gt; enumerator that indicates whether the name bound-to is a &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;TYPECOMP&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência a um enumerador <see langword="DESCKIND" /> que indica se o nome associado é um <see langword="VARDESC" />, <see langword="FUNCDESC" /> ou <see langword="TYPECOMP" />. Este parâmetro é passado não inicializado.</param>
      <param name="pBindPtr" vsli:raw="When this method returns, contains a reference to the bound-to &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;ITypeComp&quot; /&gt; interface. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência à interface <see langword="VARDESC" />, <see langword="FUNCDESC" /> ou <see langword="ITypeComp" /> associada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Binds to the type descriptions contained within a type library.">Associa-se às descrições de tipo contidas em uma biblioteca de tipos.</summary>
      <param name="szName" vsli:raw="The name to bind.">O nome a ser associado.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; determined by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Um valor de hash para <paramref name="szName" /> determinado por <see langword="LHashValOfNameSys" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeInfo&quot; /&gt; of the type to which &lt;paramref name=&quot;szName&quot; /&gt; was bound. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência a um <see langword="ITypeInfo" /> do tipo ao qual <paramref name="szName" /> foi associado. Este parâmetro é passado não inicializado.</param>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeComp&quot; /&gt; variable. This parameter is passed uninitialized.">Quando retorna, este método contém uma referência a uma variável <see langword="ITypeComp" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <summary vsli:raw="Provides the managed definition of the Component Automation ITypeInfo interface.">Fornece a definição gerenciada da interface ITypeInfo de automação de componente.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Recupera os endereços de funções estáticas ou variáveis, como aquelas definidas em uma DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">A ID do membro do endereço do membro <see langword="static" /> a ser recuperada.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> que especifica se o membro é uma propriedade e, nesse caso, o tipo.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao membro <see langword="static" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Cria uma nova instância de um tipo que descreve uma classe de componente (coclass).</summary>
      <param name="pUnkOuter" vsli:raw="The object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">O objeto que atua como a <see langword="IUnknown" /> controladora.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">A IID da interface que o chamador usa para se comunicar com o objeto resultante.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao objeto criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Recupera a biblioteca de tipos que contém essa descrição de tipo e seu índice dentro dessa biblioteca de tipos.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao índice da descrição de tipo na biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Recupera uma descrição ou especificação de um ponto de entrada de uma função em uma DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">A ID da função de membro cuja descrição de entrada da DLL será retornada.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> que especifica o tipo de membro identificado por <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Se não for <see langword="null" />, a função definirá <paramref name="pBstrDllName" /> para um <see langword="BSTR" /> que contém o nome da DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Se não for <see langword="null" />, a função definirá <c>lpbstrName</c> para um <see langword="BSTR" /> que contém o nome do ponto de entrada.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Se não for <see langword="null" /> e a função for definida por um ordinal, então, <c>lpwOrdinal</c> está definido para apontar para o ordinal.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Recupera a cadeia de caracteres de documentação, o nome e o caminho completos do arquivo de Ajuda e a ID de contexto do tópico da Ajuda de uma descrição de tipo especificada.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">A ID do membro cuja documentação será retornada.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome do método do item. Este parâmetro é passado não inicializado.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando este método é retornado, contém a cadeia de caracteres de documentação do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao contexto de Ajuda associado ao item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome totalmente qualificado do arquivo de Ajuda. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Recupera a estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> que contém informações sobre uma função especificada.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">O índice da descrição da função a ser retornado.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a uma estrutura <see langword="FUNCDESC" /> que descreve a função especificada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Mapeia entre nomes e IDs de membro e nomes e IDs de parâmetro.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Uma matriz de nomes a ser mapeada.</param>
      <param name="cNames" vsli:raw="The count of names to map.">A contagem de nomes a serem mapeados.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a uma matriz na qual os mapeamentos de nome são colocados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Recupera o valor <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> para uma interface ou interface base implementada em uma descrição de tipo.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">O índice da interface base ou da interface implementada.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à enumeração <see langword="IMPLTYPEFLAGS" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Recupera informações de marshaling.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">A ID de membro que indica quais informações de marshaling são necessárias.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à cadeia de caracteres <see langword="opcode" /> usada no marshaling de campos da estrutura descrita pela descrição de tipo referenciada ou retorna <see langword="null" /> se não há nenhuma informação a ser retornada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Recupera a variável com a ID do membro especificada (ou o nome da propriedade ou método e seus parâmetros) que corresponde à ID da função especificada.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">A ID do membro cujo nome (ou nomes) é retornado.</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome (ou os nomes) associado ao membro. Este parâmetro é passado não inicializado.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">O comprimento da matriz <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">Quando este método é retornado, contém o número de nomes na matriz <paramref name="rgBstrNames" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions if a type description references other type descriptions.">Recupera as descrições de tipo referenciadas se uma descrição de tipo referencia outras descrições de tipo.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Um identificador para a descrição do tipo referenciado a ser retornado.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">Quando este método é retornado, contém a descrição de tipo referenciada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types if a type description describes a COM class.">Recupera a descrição de tipo dos tipos de interface implementados se uma descrição de tipo descreve uma classe COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">O índice do tipo implementado cujo identificador é retornado.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a um identificador para a interface implementada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Recupera uma estrutura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> que contém os atributos da descrição de tipo.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à estrutura que contém os atributos desta descrição de tipo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Recupera a interface <see langword="ITypeComp" /> da descrição de tipo, o que permite a um compilador do cliente associar os membros da descrição de tipo.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface of the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à interface <see langword="ITypeComp" /> da biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Recupera uma estrutura <see langword="VARDESC" /> que descreve a variável especificada.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">O índice da descrição da variável a ser retornado.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à estrutura <see langword="VARDESC" /> que descreve a variável especificada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Invoca um método ou acessa uma propriedade de um objeto que implementa a interface descrita pela descrição do tipo.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Uma referência à interface descrita por esta descrição de tipo.</param>
      <param name="memid" vsli:raw="A value that identifies the interface member.">Um valor que identifica o membro de interface.</param>
      <param name="wFlags" vsli:raw="Flags that describe the context of the invoke call.">Sinalizadores que descrevem o contexto da chamada invoke.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Uma referência a uma estrutura que contém uma matriz de argumentos, uma matriz de DISPIDs para argumentos nomeados e contagens do número de elementos em cada matriz.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Uma referência ao local em que o resultado será armazenado. Se <paramref name="wFlags" /> especificar <see langword="DISPATCH_PROPERTYPUT" /> ou <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> será ignorado. Definido como <see langword="null" /> se nenhum resultado for desejado.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Um ponteiro para uma estrutura de informações de exceção, que é preenchida somente se <see langword="DISP_E_EXCEPTION" /> é retornado.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index within &lt;c&gt;rgvarg&lt;/c&gt; of the argument with the incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error. This parameter is passed uninitialized.">Se <see langword="Invoke" /> retornar <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indicará o índice em <c>rgvarg</c> do argumento com o tipo incorreto. Se mais de um argumento retornar um erro, <paramref name="puArgErr" /> indicará somente o primeiro argumento com um erro. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="FUNCDESC" /> a ser liberada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="TYPEATTR" /> a ser liberada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see langword="VARDESC" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="VARDESC" /> a ser liberada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeInfo2&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="ITypeInfo2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Recupera os endereços de funções estáticas ou variáveis, como aquelas definidas em uma DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">A ID do membro do endereço do membro <see langword="static" /> a ser recuperada.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> que especifica se o membro é uma propriedade e, nesse caso, o tipo.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao membro <see langword="static" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Cria uma nova instância de um tipo que descreve uma classe de componente (coclass).</summary>
      <param name="pUnkOuter" vsli:raw="An object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">Um objeto que atua como a <see langword="IUnknown" /> controladora.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">A IID da interface que o chamador usa para se comunicar com o objeto resultante.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao objeto criado. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Obtém todos os itens de dados personalizados para a biblioteca.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" />, que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllFuncCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data from the specified function.">Obtém todos os dados personalizados da função especificada.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">O índice da função para o qual obter os dados personalizados.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" />, que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllImplTypeCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data for the specified implementation type.">Obtém todos os dados personalizados para o tipo de implementação especificado.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">O índice do tipo de implementação para os dados personalizados.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt; which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" /> que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all of the custom data for the specified function parameter.">Obtém todos os dados personalizados para o parâmetro de função especificado.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">O índice da função para o qual obter os dados personalizados.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">O índice do parâmetro desta função para o qual obter os dados personalizados.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" />, que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllVarCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets the variable for the custom data.">Obtém a variável para os dados personalizados.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">O índice da variável para o qual obter os dados personalizados.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" />, que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Recupera a biblioteca de tipos que contém essa descrição de tipo e seu índice dentro dessa biblioteca de tipos.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao índice da descrição de tipo na biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Obtém os dados personalizados.</summary>
      <param name="guid" vsli:raw="The GUID used to identify the data.">O GUID usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando este método é retornado, ele contém um <see langword="Object" /> que especifica o local em que colocar os dados recuperados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Recupera uma descrição ou especificação de um ponto de entrada de uma função em uma DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">A ID da função de membro cuja descrição de entrada da DLL será retornada.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> que especifica o tipo de membro identificado por <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Se não for <see langword="null" />, a função definirá <paramref name="pBstrDllName" /> para um <see langword="BSTR" /> que contém o nome da DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Se não for <see langword="null" />, a função definirá <c>lpbstrName</c> para um <see langword="BSTR" /> que contém o nome do ponto de entrada.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Se não for <see langword="null" /> e a função for definida por um ordinal, então, <c>lpwOrdinal</c> está definido para apontar para o ordinal.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Recupera a cadeia de caracteres de documentação, o nome e o caminho completos do arquivo de Ajuda e a ID de contexto do tópico da Ajuda de uma descrição de tipo especificada.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">A ID do membro cuja documentação será retornada.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome do método do item. Este parâmetro é passado não inicializado.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando este método é retornado, contém a cadeia de caracteres de documentação do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao contexto de Ajuda associado ao item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome totalmente qualificado do arquivo de Ajuda. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Recupera a cadeia de caracteres de documentação, o nome e o caminho completos do arquivo de Ajuda, o contexto de localização a ser usado e a ID de contexto para o tópico da Ajuda da biblioteca no arquivo de Ajuda.</summary>
      <param name="memid" vsli:raw="The member identifier for the type description.">O identificador de membro para a descrição do tipo.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém um <see langword="BSTR" /> que contém o nome do item especificado. Se o chamador não precisar o nome do item, <paramref name="pbstrHelpString" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém o contexto de localização da Ajuda. Se o chamador não precisar do contexto da Ajuda, <paramref name="pdwHelpStringContext" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the fully qualified name of the file containing the DLL used for the Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém um <see langword="BSTR" /> que contém o nome totalmente qualificado do arquivo que contém a DLL usada para o arquivo de Ajuda. Se o chamador não precisar do nome do arquivo, <paramref name="pbstrHelpStringDll" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data from the specified function.">Obtém os dados personalizados da função especificada.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">O índice da função para o qual obter os dados personalizados.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">O GUID usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specified where to put the data. This parameter is passed uninitialized.">Quando este método é retornado, contém um <see langword="Object" /> que especifica o local em que colocar os dados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Recupera a estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> que contém informações sobre uma função especificada.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">O índice da descrição da função a ser retornado.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a uma estrutura <see langword="FUNCDESC" /> que descreve a função especificada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known DISPID, where the member name is not known (for example, when binding to a default member).">Associa a um membro específico com base em um DISPID conhecido, no qual o nome do membro não é conhecido (por exemplo, na associação a um membro padrão).</summary>
      <param name="memid" vsli:raw="The member identifier.">O identificador de membro.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by memid.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" /> que especifica o tipo de membro identificado por memid.</param>
      <param name="pFuncIndex" vsli:raw="When this method returns, contains an index into the function. This parameter is passed uninitialized.">Quando este método é retornado, contém um índice na função. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Mapeia entre nomes e IDs de membro e nomes e IDs de parâmetro.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Uma matriz de nomes a ser mapeada.</param>
      <param name="cNames" vsli:raw="The count of names to map.">A contagem de nomes a serem mapeados.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a uma matriz na qual os mapeamentos de nome são colocados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the implementation type of the custom data.">Obtém o tipo de implementação dos dados personalizados.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">O índice do tipo de implementação para os dados personalizados.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">O GUID usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando este método é retornado, ele contém um <see langword="Object" /> que especifica o local em que colocar os dados recuperados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Recupera o valor <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> para uma interface ou interface base implementada em uma descrição de tipo.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">O índice da interface base ou da interface implementada.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à enumeração <see langword="IMPLTYPEFLAGS" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Recupera informações de marshaling.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">A ID de membro que indica quais informações de marshaling são necessárias.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à cadeia de caracteres <see langword="opcode" /> usada no marshaling de campos da estrutura descrita pela descrição de tipo referenciada ou retorna <see langword="null" /> se não há nenhuma informação a ser retornada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Recupera a variável com a ID do membro especificada (ou o nome da propriedade ou método e seus parâmetros) que corresponde à ID da função especificada.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">A ID do membro cujo nome (ou nomes) é retornado.</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">Quando este método é retornado, contém o nome (ou os nomes) associado ao membro. Este parâmetro é passado não inicializado.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">O comprimento da matriz <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">Quando este método é retornado, contém o número de nomes na matriz <paramref name="rgBstrNames" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the specified custom data parameter.">Obtém o parâmetro de dados personalizado especificado.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">O índice da função para o qual obter os dados personalizados.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">O índice do parâmetro desta função para o qual obter os dados personalizados.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">O GUID usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando este método é retornado, ele contém um <see langword="Object" /> que especifica o local em que colocar os dados recuperados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions, if a type description references other type descriptions.">Recupera as descrições de tipo referenciadas se uma descrição de tipo referencia outras descrições de tipo.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Um identificador para a descrição do tipo referenciado a ser retornado.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">Quando este método é retornado, contém a descrição de tipo referenciada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types, if a type description describes a COM class.">Recupera a descrição de tipo dos tipos de interface implementados se uma descrição de tipo descreve uma classe COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">O índice do tipo implementado cujo identificador é retornado.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a um identificador para a interface implementada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Recupera uma estrutura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> que contém os atributos da descrição de tipo.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à estrutura que contém os atributos desta descrição de tipo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Recupera a interface <see langword="ITypeComp" /> da descrição de tipo, o que permite a um compilador do cliente associar os membros da descrição de tipo.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; of the containing type library. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência ao <see langword="ITypeComp" /> da biblioteca de tipos contida. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeFlags(System.Int32@)">
      <summary vsli:raw="Returns the type flags without any allocations. This method returns a &lt;see langword=&quot;DWORD&quot; /&gt; type flag, which expands the type flags without growing the &lt;see langword=&quot;TYPEATTR&quot; /&gt; (type attribute).">Retorna os sinalizadores de tipo sem nenhuma alocação. Este método retorna um sinalizador de tipo <see langword="DWORD" />, que expande os sinalizadores de tipo sem aumentar o <see langword="TYPEATTR" /> (atributo de tipo).</summary>
      <param name="pTypeFlags" vsli:raw="When this method returns, contains a &lt;see langword=&quot;DWORD&quot; /&gt; reference to a &lt;see langword=&quot;TYPEFLAG&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência <see langword="DWORD" /> a um <see langword="TYPEFLAG" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration quickly, without doing any allocations.">Retorna a enumeração <see langword="TYPEKIND" /> rapidamente, sem fazer nenhuma alocação.</summary>
      <param name="pTypeKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência a uma enumeração <see langword="TYPEKIND" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the variable for the custom data.">Obtém a variável para os dados personalizados.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">O índice da variável para o qual obter os dados personalizados.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">O GUID usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando este método é retornado, ele contém um <see langword="Object" /> que especifica o local em que colocar os dados recuperados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Recupera uma estrutura <see langword="VARDESC" /> que descreve a variável especificada.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">O índice da descrição da variável a ser retornado.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">Quando este método é retornado, contém uma referência à estrutura <see langword="VARDESC" /> que descreve a variável especificada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarIndexOfMemId(System.Int32,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known &lt;see langword=&quot;DISPID&quot; /&gt;, where the member name is not known (for example, when binding to a default member).">Associa a um membro específico com base em um <see langword="DISPID" /> conhecido, no qual o nome do membro não é conhecido (por exemplo, na associação a um membro padrão).</summary>
      <param name="memid" vsli:raw="The member identifier.">O identificador de membro.</param>
      <param name="pVarIndex" vsli:raw="When this method returns, contains an index of &lt;paramref name=&quot;memid&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém um índice do <paramref name="memid" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Invoca um método ou acessa uma propriedade de um objeto que implementa a interface descrita pela descrição do tipo.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Uma referência à interface descrita por esta descrição de tipo.</param>
      <param name="memid" vsli:raw="Identifier of the interface member.">Identificador do membro de interface.</param>
      <param name="wFlags" vsli:raw="Flags describing the context of the invoke call.">Sinalizadores que descrevem o contexto da chamada invoke.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Uma referência a uma estrutura que contém uma matriz de argumentos, uma matriz de DISPIDs para argumentos nomeados e contagens do número de elementos em cada matriz.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Uma referência ao local em que o resultado será armazenado. Se <paramref name="wFlags" /> especificar <see langword="DISPATCH_PROPERTYPUT" /> ou <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> será ignorado. Definido como <see langword="null" /> se nenhum resultado for desejado.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Um ponteiro para uma estrutura de informações de exceção, que é preenchida somente se <see langword="DISP_E_EXCEPTION" /> é retornado.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index of the argument with incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error.">Se <see langword="Invoke" /> retornar <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indicará o índice do argumento com o tipo incorreto. Se mais de um argumento retornar um erro, <paramref name="puArgErr" /> indicará somente o primeiro argumento com um erro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="FUNCDESC" /> a ser liberada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="TYPEATTR" /> a ser liberada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Libera uma estrutura <see langword="VARDESC" /> retornada anteriormente pelo método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Uma referência à estrutura <see langword="VARDESC" /> a ser liberada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeLib&quot; /&gt; interface.">Fornece a definição gerenciada da interface <see langword="ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Localiza as ocorrências de uma descrição de tipo em uma biblioteca de tipos.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for. This is an in/out parameter.">O nome a ser procurado. Este é um parâmetro de entrada/saída.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Um valor de hash para acelerar a pesquisa, calculado pela função <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> for 0, um valor será computado.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém uma matriz de ponteiros para as descrições de tipo que contêm o nome especificado em <paramref name="szNameBuf" />. Este parâmetro é passado não inicializado.</param>
      <param name="rgMemId" vsli:raw="An array of the &lt;see langword=&quot;MEMBERID&quot; /&gt; 's of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. Cannot be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz do <see langword="MEMBERID" /> dos itens encontrados; <paramref name="rgMemId" /> [i] é o <see langword="MEMBERID" /> que indexa na descrição de tipo especificada pelo <paramref name="ppTInfo" /> [i]. Não pode ser <see langword="null" />.</param>
      <param name="pcFound" vsli:raw="On entry, indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">Na entrada, indica o número de instâncias a serem pesquisadas. Por exemplo, <paramref name="pcFound" /> = 1 pode ser chamado para localizar a primeira ocorrência. A pesquisa é interrompida quando uma instância é encontrada.
Na saída, indica o número de instâncias que foram encontradas. Se os valores <see langword="in" /> e <see langword="out" /> de <paramref name="pcFound" /> forem idênticos, poderá haver mais descrições de tipo que contêm o nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera a cadeia de caracteres de documentação da biblioteca, o nome e o caminho completos do arquivo de Ajuda e o identificador de contexto do tópico de Ajuda da biblioteca no arquivo de Ajuda.</summary>
      <param name="index" vsli:raw="The index of the type description whose documentation is to be returned.">O índice da descrição de tipo cuja documentação deve ser retornada.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that represents the name of the specified item. This parameter is passed uninitialized.">Quando retorna, este método contém uma cadeia de caracteres que representa o nome do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains a string that represents the documentation string for the specified item. This parameter is passed uninitialized.">Quando retorna, este método contém uma cadeia de caracteres que representa a cadeia de caracteres de documentação do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">Quando retorna, este método contém o identificador de contexto de Ajuda associado ao item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that represents the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando retorna, este método contém uma cadeia de caracteres que representa o nome totalmente qualificado do arquivo de Ajuda. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera a estrutura que contém os atributos da biblioteca.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">Quando este método retorna, contém uma estrutura com os atributos da biblioteca. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Permite que um compilador de cliente associe-se a uma biblioteca de tipos, variáveis, constantes e funções globais.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an instance of a &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém uma instância de uma instância <see langword="ITypeComp" /> para este <see langword="ITypeLib" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Recupera a descrição de tipo especificada na biblioteca.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">O índice da interface <see langword="ITypeInfo" /> a ser retornado.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém um <see langword="ITypeInfo" /> que descreve o tipo referenciado por <paramref name="index" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Retorna o número de descrições de tipo na biblioteca de tipos.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">O número de descrições de tipo na biblioteca de tipos.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Recupera a descrição de tipo que corresponde ao GUID especificado.</summary>
      <param name="guid" vsli:raw="The IID of the interface or CLSID of the class whose type info is requested.">O IID da interface ou a CLSID da classe cujas informações de tipo são solicitadas.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">Quando retorna, este método contém a interface <see langword="ITypeInfo" /> solicitada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera o tipo de uma descrição de tipo.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">O índice da descrição de tipo da biblioteca de tipo.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">Quando este método retorna, contém uma referência à enumeração <see langword="TYPEKIND" /> para a descrição do tipo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica se uma cadeia de caracteres passada contém o nome de um tipo ou membro descrito na biblioteca.</summary>
      <param name="szNameBuf" vsli:raw="The string to test. This is an in/out parameter.">A cadeia de caracteres a ser testada. Este é um parâmetro de entrada/saída.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">O valor de hash de <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="szNameBuf" /> for encontrado na biblioteca de tipos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Libera a estrutura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originalmente obtida do método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">A estrutura <see langword="TLIBATTR" /> a ser liberada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;ITypeLib2&quot; /&gt; interface.">Fornece uma definição gerenciada da interface <see langword="ITypeLib2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Localiza as ocorrências de uma descrição de tipo em uma biblioteca de tipos.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for.">O nome a ser procurado.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Um valor de hash para acelerar a pesquisa, calculado pela função <see langword="LHashValOfNameSys" />. Se <paramref name="lHashVal" /> for 0, um valor será computado.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém uma matriz de ponteiros para as descrições de tipo que contêm o nome especificado em <paramref name="szNameBuf" />. Este parâmetro é passado não inicializado.</param>
      <param name="rgMemId" vsli:raw="When this method returns, contains an array of the &lt;see langword=&quot;MEMBERID&quot; /&gt;s of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando esse método é retornado, ele contém uma matriz dos <see langword="MEMBERID" />s dos itens encontrados; <paramref name="rgMemId" /> [i] é o <see langword="MEMBERID" /> que indexa na descrição de tipo especificada pelo <paramref name="ppTInfo" /> [i]. O parâmetro não pode ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <param name="pcFound" vsli:raw="On entry, a value, passed by reference, that indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">Na entrada, um valor, passado por referência, que indica quantas instâncias procurar. Por exemplo, <paramref name="pcFound" /> = 1 pode ser chamado para localizar a primeira ocorrência. A pesquisa é interrompida quando uma instância é encontrada.
Na saída, indica o número de instâncias que foram encontradas. Se os valores <see langword="in" /> e <see langword="out" /> de <paramref name="pcFound" /> forem idênticos, poderá haver mais descrições de tipo que contêm o nome.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Obtém todos os itens de dados personalizados para a biblioteca.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Um ponteiro para <see langword="CUSTDATA" />, que contém todos os itens de dados personalizados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Obtém os dados personalizados.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; , passed by reference, that is used to identify the data.">Um <see cref="T:System.Guid" />, passado por referência, que é usado para identificar os dados.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an object that specifies where to put the retrieved data. This parameter is passed uninitialized.">Quando este método é retornado, contém um objeto que especifica o local em que colocar os dados recuperados. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera a cadeia de caracteres de documentação da biblioteca, o nome e o caminho completos do arquivo de Ajuda e o identificador de contexto do tópico de Ajuda da biblioteca no arquivo de Ajuda.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned.">Um índice da descrição de tipo cuja documentação deve ser retornada.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that specifies the name of the specified item. This parameter is passed uninitialized.">Quando este método retorna, contém uma cadeia de caracteres que especifica o nome do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">Quando este método é retornado, contém a cadeia de caracteres de documentação do item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">Quando retorna, este método contém o identificador de contexto de Ajuda associado ao item especificado. Este parâmetro é passado não inicializado.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that specifies the fully qualified name of the Help file. This parameter is passed uninitialized.">Quando este método retorna, contém uma cadeia de caracteres que especifica o nome totalmente qualificado do arquivo de Ajuda. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Recupera a cadeia de caracteres de documentação da biblioteca, o nome e o caminho completos do arquivo de Ajuda, o contexto de localização a ser usado e a ID de contexto para o tópico da Ajuda da biblioteca no arquivo de Ajuda.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned; if &lt;paramref name=&quot;index&quot; /&gt; is -1, the documentation for the library is returned.">Um índice da descrição do tipo cuja documentação deve ser retornada; se <paramref name="index" /> for -1, a documentação para a biblioteca será retornada.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a BSTR that specifies the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, contém um BSTR que especifica o nome do item especificado. Se o chamador não precisar o nome do item, <paramref name="pbstrHelpString" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método é retornado, contém o contexto de localização da Ajuda. Se o chamador não precisar do contexto da Ajuda, <paramref name="pdwHelpStringContext" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a BSTR that specifies the fully qualified name of the file containing the DLL used for Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, contém um BSTR que especifica o nome totalmente qualificado do arquivo que contém a DLL usada para o arquivo de Ajuda. Se o chamador não precisar do nome do arquivo, <paramref name="pbstrHelpStringDll" /> poderá ser <see langword="null" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera a estrutura que contém os atributos da biblioteca.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">Quando este método retorna, contém uma estrutura com os atributos da biblioteca. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibStatistics(System.IntPtr,System.Int32@)">
      <summary vsli:raw="Returns statistics about a type library that are required for efficient sizing of hash tables.">Retorna estatísticas sobre uma biblioteca de tipos que são necessárias para o dimensionamento eficiente das tabelas de hash.</summary>
      <param name="pcUniqueNames" vsli:raw="A pointer to a count of unique names. If the caller does not need this information, set to &lt;see langword=&quot;null&quot; /&gt;.">Um ponteiro para uma contagem de nomes exclusivos. Se o chamador não precisar de informações, definido como <see langword="null" />.</param>
      <param name="pcchUniqueNames" vsli:raw="When this method returns, contains a pointer to a change in the count of unique names. This parameter is passed uninitialized.">Quando este método retorna, contém um ponteiro para uma alteração na contagem de nomes exclusivos. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Permite que um compilador de cliente associe-se a uma biblioteca de tipos, variáveis, constantes e funções globais.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">Quando este método retorna, contém uma instância <see langword="ITypeComp" /> para este <see langword="ITypeLib" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Recupera a descrição de tipo especificada na biblioteca.</summary>
      <param name="index" vsli:raw="An index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">Um índice da interface <see langword="ITypeInfo" /> a ser retornado.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">Quando retorna, este método contém um <see langword="ITypeInfo" /> que descreve o tipo referenciado por <paramref name="index" />. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Retorna o número de descrições de tipo na biblioteca de tipos.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">O número de descrições de tipo na biblioteca de tipos.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Recupera a descrição de tipo que corresponde ao GUID especificado.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt;, passed by reference, that represents the IID of the &lt;see langword=&quot;CLSID&quot; /&gt; interface of the class whose type info is requested.">O <see cref="T:System.Guid" />, passado por referência, que representa o IID da interface de <see langword="CLSID" /> da classe cujas informações de tipo são solicitadas.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">Quando retorna, este método contém a interface <see langword="ITypeInfo" /> solicitada. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera o tipo de uma descrição de tipo.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">O índice da descrição de tipo da biblioteca de tipo.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">Quando este método retorna, contém uma referência à enumeração <see langword="TYPEKIND" /> para a descrição do tipo. Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica se uma cadeia de caracteres passada contém o nome de um tipo ou membro descrito na biblioteca.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">A cadeia de caracteres a ser testada.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">O valor de hash de <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="szNameBuf" /> for encontrado na biblioteca de tipos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Libera a estrutura <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originalmente obtida do método <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">A estrutura <see langword="TLIBATTR" /> a ser liberada.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <summary vsli:raw="Defines flags that apply to type libraries.">Define os sinalizadores que se aplicam às bibliotecas de tipos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary vsli:raw="The type library describes controls and should not be displayed in type browsers intended for nonvisual objects.">A biblioteca de tipos descreve controles e não deve ser exibida em navegadores de tipo destinados a objetos não visuais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary vsli:raw="The type library exists in a persisted form on disk.">A biblioteca de tipos existe de maneira persistente no disco.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary vsli:raw="The type library should not be displayed to users, although its use is not restricted. The type library should be used by controls. Hosts should create a new type library that wraps the control with extended properties.">A biblioteca de tipos não deve ser exibida aos usuários, embora seu uso não seja restrito. A biblioteca de tipos deve ser usada por controles. Hosts devem criar uma nova biblioteca de tipos que encapsule o controle com propriedades estendidas.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary vsli:raw="The type library is restricted, and should not be displayed to users.">A biblioteca de tipos é restrita e não deve ser exibida aos usuários.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <summary vsli:raw="Contains information about how to transfer a structure element, parameter, or function return value between processes.">Contém informações sobre como transferir um elemento de estrutura, parâmetro ou valor retornado da função entre processos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.lpVarValue">
      <summary vsli:raw="Represents a pointer to a value that is being passed between processes.">Representa um ponteiro para um valor que está sendo passado entre processos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.wParamFlags">
      <summary vsli:raw="Represents bitmask values that describe the structure element, parameter, or return value.">Representa os valores de máscara de bits que descrevem o elemento, o parâmetro ou o valor retornado da estrutura.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Descreve como transferir um elemento de estrutura, parâmetro ou valor retornado da função entre processos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASCUSTDATA">
      <summary vsli:raw="The parameter has custom data.">O parâmetro tem dados personalizados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASDEFAULT">
      <summary vsli:raw="The parameter has default behaviors defined.">O parâmetro tem comportamentos padrão definidos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">O parâmetro passa informações do chamador para o computador chamado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">O parâmetro é o identificador de local de um aplicativo cliente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOPT">
      <summary vsli:raw="The parameter is optional.">O parâmetro é opcional.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">O parâmetro retorna informações do computador chamado para o chamador.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">O parâmetro é o valor retornado do membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Não especifica se o parâmetro passa ou recebe informações.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STATDATA&quot; /&gt; structure.">Fornece a definição gerenciada da estrutura <see langword="STATDATA" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; enumeration value that determines when the advisory sink is notified of changes in the data.">Representa o valor de enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> que determina quando o coletor de consultoria será notificado de alterações nos dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface that will receive change notifications.">Representa a interface <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> que receberá as notificações de alteração.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary vsli:raw="Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.">Representa o token que identifica exclusivamente a conexão de consultoria. Este token é retornado pelo método que configura a conexão de consultoria.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure.">Representa a estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> para os dados de interesse do coletor de avisos. O coletor de avisos recebe a notificação de alterações nos dados especificados por essa estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATSTG">
      <summary vsli:raw="Contains statistical information about an open storage, stream, or byte-array object.">Contém informações estatísticas sobre um objeto livre de armazenamento, fluxo ou de matriz de bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.atime">
      <summary vsli:raw="Specifies the last access time for this storage, stream, or byte array.">Especifica a hora do último acesso para este armazenamento, fluxo ou matriz de bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.cbSize">
      <summary vsli:raw="Specifies the size, in bytes, of the stream or byte array.">Especifica o tamanho, em bytes, da matriz de bytes ou fluxo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.clsid">
      <summary vsli:raw="Indicates the class identifier for the storage object.">Indica o identificador de classe do objeto de armazenamento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.ctime">
      <summary vsli:raw="Indicates the creation time for this storage, stream, or byte array.">Indica a hora de criação desse armazenamento, fluxo ou matriz de bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfLocksSupported">
      <summary vsli:raw="Indicates the types of region locking supported by the stream or byte array.">Indica os tipos de bloqueio de região com suporte do fluxo ou da matriz de bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfMode">
      <summary vsli:raw="Indicates the access mode that was specified when the object was opened.">Indica o modo de acesso especificado quando o objeto foi aberto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfStateBits">
      <summary vsli:raw="Indicates the current state bits of the storage object (the value most recently set by the &lt;see langword=&quot;IStorage::SetStateBits&quot; /&gt; method).">Indica os bits do estado atual do objeto de armazenamento (o valor definido mais recentemente pelo método <see langword="IStorage::SetStateBits" />).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.mtime">
      <summary vsli:raw="Indicates the last modification time for this storage, stream, or byte array.">Indica a hora da última modificação desse armazenamento, fluxo ou matriz de bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName">
      <summary vsli:raw="Represents a pointer to a null-terminated string containing the name of the object described by this structure.">Representa um ponteiro para uma cadeia de caracteres de terminação nula que contém o nome do objeto descrito por essa estrutura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.reserved">
      <summary vsli:raw="Reserved for future use.">Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.type">
      <summary vsli:raw="Indicates the type of storage object, which is one of the values from the &lt;see langword=&quot;STGTY&quot; /&gt; enumeration.">Indica o tipo do objeto de armazenamento que é um dos valores da enumeração <see langword="STGTY" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STGMEDIUM&quot; /&gt; structure.">Fornece a definição gerenciada da estrutura <see langword="STGMEDIUM" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary vsli:raw="Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses default procedures to release the storage; otherwise, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Representa um ponteiro para uma instância de interface que permite ao processo de envio controlar a maneira como o armazenamento é liberado quando o processo de recebimento chama a função <see langword="ReleaseStgMedium" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, <see langword="ReleaseStgMedium" /> usará procedimentos padrão para liberar o armazenamento; caso contrário, <see langword="ReleaseStgMedium" /> usará a interface <see langword="IUnknown" /> especificada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary vsli:raw="Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration.">Especifica o tipo de meio de armazenamento. As rotinas de marshaling e unmarshaling usam este valor para determinar qual membro de união foi usado. Este valor deve ser um dos elementos da enumeração <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary vsli:raw="Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.">Representa um identificador, cadeia de caracteres ou ponteiro de interface que o processo de recebimento pode usar para acessar os dados que estão sendo transferidos.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.SYSKIND">
      <summary vsli:raw="Identifies the target operating system platform.">Identifica a plataforma do sistema operacional de destino.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_MAC">
      <summary vsli:raw="The target operating system for the type library is Apple Macintosh. By default, all data fields are aligned on even-byte boundaries.">O sistema operacional de destino para a biblioteca de tipos é Apple Macintosh. Por padrão, todos os campos de dados são alinhados em limites de byte pares.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN16">
      <summary vsli:raw="The target operating system for the type library is 16-bit Windows systems. By default, data fields are packed.">O sistema operacional de destino da biblioteca de tipos são sistemas de 16 bits do Windows. Por padrão, os campos de dados são compactados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN32">
      <summary vsli:raw="The target operating system for the type library is 32-bit Windows systems. By default, data fields are naturally aligned (for example, 2-byte integers are aligned on even-byte boundaries; 4-byte integers are aligned on quad-word boundaries, and so on).">O sistema operacional de destino da biblioteca de tipos são sistemas de 32 bits do Windows. Por padrão, os campos de dados são alinhados naturalmente (por exemplo, inteiros de 2 bytes são alinhados em limites de byte pares; inteiros de 4 bytes são alinhados em limites de palavra quádrupla e assim por diante).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN64">
      <summary vsli:raw="The target operating system for the type library is 64-bit Windows systems.">O sistema operacional de destino da biblioteca de tipos são sistemas de 64 bits do Windows.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;TYMED&quot; /&gt; structure.">Fornece a definição gerenciada da estrutura <see langword="TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary vsli:raw="The storage medium is an enhanced metafile. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteEnhMetaFile&quot; /&gt; to delete the bitmap.">A mídia de armazenamento é um metarquivo avançado. Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o processo de destino deverá usar o <see langword="DeleteEnhMetaFile" /> para excluir o bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary vsli:raw="The storage medium is a disk file identified by a path. If the &lt;see langword=&quot;STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;OpenFile&quot; /&gt; to delete the file.">A mídia de armazenamento é um arquivo de disco identificado por um caminho. Se o membro <see langword="STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o processo de destino deverá usar o <see langword="OpenFile" /> para excluir o arquivo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary vsli:raw="The storage medium is a Graphics Device Interface (GDI) component (HBITMAP). If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteObject&quot; /&gt; to delete the bitmap.">A mídia de armazenamento é um componente de GDI (Graphics Device Interface) (HBITMAP). Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o processo de destino deverá usar o <see langword="DeleteObject" /> para excluir o bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary vsli:raw="The storage medium is a global memory handle (HGLOBAL). Allocate the global handle with the GMEM_SHARE flag. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;GlobalFree&quot; /&gt; to release the memory.">A mídia de armazenamento é um identificador de memória global (HGLOBAL). Aloca o identificador global com o sinalizador GMEM_SHARE. Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o processo de destino deverá usar o <see langword="GlobalFree" /> para liberar a memória.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary vsli:raw="The storage medium is a storage component identified by an &lt;see langword=&quot;IStorage&quot; /&gt; pointer. The data is in the streams and storages contained by this &lt;see langword=&quot;IStorage&quot; /&gt; instance. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStorage::Release&quot; /&gt; to release the storage component.">A mídia de armazenamento é um componente de armazenamento identificado por um ponteiro <see langword="IStorage" />. Os dados estão no fluxos e armazenamentos contidos por essa instância <see langword="IStorage" />. Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> não for <see langword="null" />, o processo de destino deverá usar o <see langword="IStorage::Release" /> para liberar o componente de memória.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary vsli:raw="The storage medium is a stream object identified by an &lt;see langword=&quot;IStream&quot; /&gt; pointer. Use &lt;see langword=&quot;ISequentialStream::Read&quot; /&gt; to read the data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStream::Release&quot; /&gt; to release the stream component.">A mídia de armazenamento é um objeto de fluxo identificado por um ponteiro <see langword="IStream" />. Usa <see langword="ISequentialStream::Read" /> para ler os dados. Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> não for <see langword="null" />, o processo de destino deverá usar o <see langword="IStream::Release" /> para liberar o componente de fluxo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary vsli:raw="The storage medium is a metafile (HMETAFILE). Use the Windows or WIN32 functions to access the metafile's data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteMetaFile&quot; /&gt; to delete the bitmap.">A mídia de armazenamento é um metarquivo (HMETAFILE). Usa as funções do Windows ou WIN32 para acessar os dados do metarquivo. Se o membro <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> for <see langword="null" />, o processo de destino deverá usar o <see langword="DeleteMetaFile" /> para excluir o bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary vsli:raw="No data is being passed.">Nenhum dado está sendo passado.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <summary vsli:raw="Contains attributes of a &lt;see langword=&quot;UCOMITypeInfo&quot; /&gt;.">Contém atributos de um <see langword="UCOMITypeInfo" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbAlignment">
      <summary vsli:raw="Specifies the byte alignment for an instance of this type.">Especifica o alinhamento de bytes para uma instância desse tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeInstance">
      <summary vsli:raw="The size of an instance of this type.">O tamanho de uma instância desse tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeVft">
      <summary vsli:raw="The size of this type's virtual method table (VTBL).">O tamanho da tabela de método virtual desse tipo (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cFuncs">
      <summary vsli:raw="Indicates the number of functions on the interface this structure describes.">Indica o número de funções na interface que essa estrutura descreve.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cImplTypes">
      <summary vsli:raw="Indicates the number of implemented interfaces on the interface this structure describes.">Indica o número de interfaces implementadas na interface que essa estrutura descreve.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cVars">
      <summary vsli:raw="Indicates the number of variables and data fields on the interface described by this structure.">Indica o número de variáveis e campos de dados na interface descrita por essa estrutura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.dwReserved">
      <summary vsli:raw="Reserved for future use.">Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.guid">
      <summary vsli:raw="The GUID of the type information.">O GUID das informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.idldescType">
      <summary vsli:raw="IDL attributes of the described type.">Os atributos IDL do tipo descrito.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lcid">
      <summary vsli:raw="Locale of member names and documentation strings.">Local dos nomes de membro e cadeias de caracteres de documentação.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lpstrSchema">
      <summary vsli:raw="Reserved for future use.">Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.MEMBER_ID_NIL">
      <summary vsli:raw="A constant used with the &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidConstructor&quot; /&gt; and &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidDestructor&quot; /&gt; fields.">Uma constante usada com os campos <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidConstructor" /> e <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidDestructor" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidConstructor">
      <summary vsli:raw="ID of constructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">ID do construtor ou <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, se não houver.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidDestructor">
      <summary vsli:raw="ID of destructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">ID do destruidor ou <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, se não houver.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.tdescAlias">
      <summary vsli:raw="If &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.typekind&quot; /&gt; == &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS&quot; /&gt;, specifies the type for which this type is an alias.">Se <see cref="F:System.Runtime.InteropServices.TYPEATTR.typekind" /> == <see cref="F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS" /> especificar o tipo para o qual esse tipo é um alias.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.typekind">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEKIND&quot; /&gt; value describing the type this information describes.">Um valor <see cref="T:System.Runtime.InteropServices.TYPEKIND" /> que descreve o tipo que essas informações descrevem.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMajorVerNum">
      <summary vsli:raw="Major version number.">Número de versão principal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMinorVerNum">
      <summary vsli:raw="Minor version number.">Número de versão secundária.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wTypeFlags">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; value describing this information.">Um valor <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> que descreve essas informações.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <summary vsli:raw="Describes the type of a variable, return type of a function, or the type of a function parameter.">Descreve o tipo de uma variável, o tipo de retorno de uma função ou o tipo de um parâmetro de função.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.lpValue">
      <summary vsli:raw="If the variable is &lt;see langword=&quot;VT_SAFEARRAY&quot; /&gt; or &lt;see langword=&quot;VT_PTR&quot; /&gt;, the &lt;see langword=&quot;lpValue&quot; /&gt; field contains a pointer to a &lt;see langword=&quot;TYPEDESC&quot; /&gt; that specifies the element type.">Se a variável for <see langword="VT_SAFEARRAY" /> ou <see langword="VT_PTR" />, o campo <see langword="lpValue" /> conterá um ponteiro para um <see langword="TYPEDESC" /> que especifica o tipo de elemento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.vt">
      <summary vsli:raw="Indicates the variant type for the item described by this &lt;see langword=&quot;TYPEDESC&quot; /&gt;.">Indica o tipo de variante do item descrito por este <see langword="TYPEDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <summary vsli:raw="Defines the properties and attributes of a type description.">Define as propriedades e os atributos de uma descrição de tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary vsli:raw="The class supports aggregation.">A classe oferece suporte à agregação.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Uma descrição de tipo que descreve um objeto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Instâncias do tipo podem ser criadas por <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary vsli:raw="The type is a control from which other types will be derived and should not be displayed to users.">O tipo é um controle do qual outros tipos serão derivados e não deve ser exibido aos usuários.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly. This flag is computed; there is no Object Description Language for the flag.">Indica que a interface deriva de <see langword="IDispatch" />, direta ou indiretamente. Esse sinalizador é computado, não há uma linguagem ODL para o sinalizador.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and VTBL binding.">A interface fornece o <see langword="IDispatch" /> e a associação VTBL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary vsli:raw="The type should not be displayed to browsers.">O tipo não deve ser exibido para os navegadores.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary vsli:raw="The type is licensed.">O tipo é licenciado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary vsli:raw="The interface cannot add members at run time.">A interface não pode adicionar membros em tempo de execução.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including VTBL binding support. Setting dual on an interface sets both this flag and the  &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL&quot; /&gt;. This flag is not allowed on dispinterfaces.">Os tipos usados na interface são totalmente compatíveis com a Automação, incluindo o suporte da associação VTBL. Configuração dupla em uma interface define dois este sinalizador e o <see cref="F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL" />. Este sinalizador não é permitido em dispinterfaces.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">O tipo é predefinido. O aplicativo cliente deve criar automaticamente uma única instância do objeto que tem esse atributo. O nome da variável que aponta para o objeto é o mesmo que o nome de classe do objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary vsli:raw="Indicates that the interface will be using a proxy/stub dynamic link library. This flag specifies that the type library proxy should not be unregistered when the type library is unregistered.">Indica que a interface usará uma biblioteca de vínculo dinâmico de proxy/stub. Este sinalizador especifica que o proxy da biblioteca de tipos não deve ter o registro cancelado quando a biblioteca de tipos não está registrada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">O objeto oferece suporte a <see langword="IConnectionPointWithDefault" /> e tem comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary vsli:raw="Should not be accessible from macro languages. This flag is intended for system-level types or types that type browsers should not display.">Não deve ser acessível de linguagens de macro. Esse sinalizador é destinado a tipos no nível de sistema ou a tipos que navegadores de tipo não devem exibir.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking children, which is the reverse of the default behavior.">Indica a interfaces base devem ser verificados para resolução de nomes antes de verificar filhos, que é o inverso do comportamento padrão.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <summary vsli:raw="Specifies various types of data and functions.">Especifica os vários tipos de dados e funções.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ALIAS">
      <summary vsli:raw="A type that is an alias for another type.">Um tipo que é um alias de outro tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_COCLASS">
      <summary vsli:raw="A set of implemented components interfaces.">Um conjunto de interfaces de componentes implementados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_DISPATCH">
      <summary vsli:raw="A set of methods and properties that are accessible through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;. By default, dual interfaces return &lt;see langword=&quot;TKIND_DISPATCH&quot; /&gt;.">Um conjunto de métodos e propriedades que são acessíveis por meio de <see langword="IDispatch::Invoke" />. Por padrão, as interfaces duplas retornam <see langword="TKIND_DISPATCH" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ENUM">
      <summary vsli:raw="A set of enumerators.">Um conjunto de enumeradores.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_INTERFACE">
      <summary vsli:raw="A type that has virtual functions, all of which are pure.">Um tipo que tem funções virtuais, que são todas puras.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MAX">
      <summary vsli:raw="End-of-enumeration marker.">Marcador de fim de enumeração.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MODULE">
      <summary vsli:raw="A module that can have only static functions and data (for example, a DLL).">Um módulo que pode ter apenas funções estáticas e dados (por exemplo, uma DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_RECORD">
      <summary vsli:raw="A structure with no methods.">Uma estrutura sem métodos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_UNION">
      <summary vsli:raw="A union of all members that have an offset of zero.">Uma união de todos os membros que têm um deslocamento zero.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <summary vsli:raw="Identifies a particular type library and provides localization support for member names.">Identifica uma biblioteca de tipo específica e dá suporte à localização para nomes de membros.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.guid">
      <summary vsli:raw="Represents a globally unique library ID of a type library.">Representa uma ID de biblioteca global exclusivo de uma biblioteca de tipos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.lcid">
      <summary vsli:raw="Represents a locale ID of a type library.">Representa uma identificação de localidade de uma biblioteca de tipos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.syskind">
      <summary vsli:raw="Represents the target hardware platform of a type library.">Representa a plataforma de hardware de destino de uma biblioteca de tipos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wLibFlags">
      <summary vsli:raw="Represents library flags.">Representa os sinalizadores de biblioteca.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMajorVerNum">
      <summary vsli:raw="Represents the major version number of a type library.">Representa o número de versão principal de uma biblioteca de tipos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMinorVerNum">
      <summary vsli:raw="Represents the minor version number of a type library.">Representa o número de versão secundária de uma biblioteca de tipos.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC">
      <summary vsli:raw="Describes a variable, constant, or data member.">Descreve um membro de dados, constante ou variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.desc">
      <summary vsli:raw="Contains information about a variable.">Contém informações sobre uma variável.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION">
      <summary vsli:raw="Contains information about a variable.">Contém informações sobre uma variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue">
      <summary vsli:raw="Describes a symbolic constant.">Descreve uma constante simbólica.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst">
      <summary vsli:raw="Indicates the offset of this variable within the instance.">Indica o deslocamento dessa variável dentro da instância.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.elemdescVar">
      <summary vsli:raw="Contains the variable type.">Contém o tipo de variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.lpstrSchema">
      <summary vsli:raw="This field is reserved for future use.">Este campo é reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.memid">
      <summary vsli:raw="Indicates the member ID of a variable.">Indica a ID de membro de uma variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.varkind">
      <summary vsli:raw="Defines how to marshal a variable.">Define como realizar marshaling de uma variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.wVarFlags">
      <summary vsli:raw="Defines the properties of a variable.">Define as propriedades de uma variável.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a variable.">Identifica as constantes que definem as propriedades de uma variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FBINDABLE">
      <summary vsli:raw="The variable supports data binding.">A variável dá suporte à associação de dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in type information can have this attribute.">A variável é a única propriedade que melhor representa o objeto. Apenas uma variável em informações de tipo pode ter esse atributo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Permite uma otimização em que o compilador procura um membro chamado "xyz" no tipo de "abc". Se esse membro for encontrado e marcado como uma função de acessador de um elemento da coleção padrão, uma chamada será gerada para essa função de membro. Permitido em membros em dispinterfaces e interfaces; não é permitida em módulos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary vsli:raw="The variable is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE&quot; /&gt; must also be set.">A variável é exibida para o usuário como associável. <see cref="F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE" /> também deve ser definido.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FHIDDEN">
      <summary vsli:raw="The variable should not be displayed to the user in a browser, although it exists and is bindable.">A variável não deve ser exibida para o usuário em um navegador, embora ela exista e seja associável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">A variável é mapeada como propriedades vinculáveis individuais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">A variável é exibida em um Pesquisador de Objetos, mas não em um navegador de propriedades.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREADONLY">
      <summary vsli:raw="Assignment to the variable should not be allowed.">Atribuição à variável não deve ser permitida.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Marca a interface como tendo comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any attempt to directly change the property results in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the change is accepted.">Quando definido, qualquer tentativa de alterar diretamente os resultados da propriedade em uma chamada para <see langword="IPropertyNotifySink::OnRequestEdit" />. A implementação de <see langword="OnRequestEdit" /> determina se a alteração é aceita.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary vsli:raw="The variable should not be accessible from macro languages. This flag is intended for system-level variables or variables that you do not want type browsers to display.">A variável não deve ser acessível das linguagens de macro. Esse sinalizador destina-se a variáveis de nível de sistema ou variáveis que você não deseja que os navegadores de tipo para exibam.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FSOURCE">
      <summary vsli:raw="The variable returns an object that is a source of events.">A variável retorna um objeto que é uma origem de eventos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary vsli:raw="The variable is the default display in the user interface.">A variável é a exibição padrão na interface do usuário.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARKIND">
      <summary vsli:raw="Defines the kind of variable.">Define o tipo de variável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_CONST">
      <summary vsli:raw="The &lt;see langword=&quot;VARDESC&quot; /&gt; structure describes a symbolic constant. There is no memory associated with it.">A estrutura <see langword="VARDESC" /> descreve uma constante simbólica. Não há nenhuma memória associada a ela.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_DISPATCH">
      <summary vsli:raw="The variable can be accessed only through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">A variável pode ser acessada somente com <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_PERINSTANCE">
      <summary vsli:raw="The variable is a field or member of the type. It exists at a fixed offset within each instance of the type.">A variável é um campo ou membro do tipo. Ela existe em um deslocamento fixo dentro de cada instância do tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_STATIC">
      <summary vsli:raw="There is only one instance of the variable.">Há apenas uma instância da variável.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you unregister an assembly for use from COM; this allows for the execution of user-written code during the unregistration process.">Especifica o método a ser chamado quando você cancela o registro de um assembly para uso de COM. Isso possibilita a execução de código escrito pelo usuário durante o processo de cancelamento do registro.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CurrencyWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_CY&quot; /&gt;.">Encapsula objetos que o empacotador deve realizar marshaling como um <see langword="VT_CY" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> com o <see langword="Decimal" /> a ser encapsulado e que terá marshaling como o tipo <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">O parâmetro <see langword="Decimal" /> a ser encapsulado e ter marshaling como <see langword="VT_CY" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" /> com o objeto que contém o <see langword="Decimal" /> a ser encapsulado e que terá marshaling como o tipo <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">O objeto que contém o <see langword="Decimal" /> a ser encapsulado e ter marshaling como <see langword="VT_CY" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; type.">O parâmetro <paramref name="obj" /> não é um tipo <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Obtém o objeto encapsulado para realizar marshaling como o tipo <see langword="VT_CY" />.</summary>
      <returns vsli:raw="The wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">O objeto encapsulado a ser empacotado como <see langword="VT_CY" />tipo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method's IUnknown::QueryInterface calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">Indica se as chamadas de IUnknown::QueryInterface do método <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> podem usar a interface <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Allow">
      <summary vsli:raw="IUnknown::QueryInterface method calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface. When you use this value, the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method overload functions like the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)&quot; /&gt; overload.">As chamadas do método IUnknown::QueryInterface podem usar a interface <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />. Quando você usa esse valor, a sobrecarga do método <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> funciona como a sobrecarga <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Ignore">
      <summary vsli:raw="IUnknown::QueryInterface method calls should ignore the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">As chamadas do método IUnknown::QueryInterface devem ignorar a interface <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <summary vsli:raw="Provides return values for the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method.">Fornece valores retornados para o método <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Failed">
      <summary vsli:raw="The interface for a specific interface ID is not available. In this case, the returned interface is &lt;see langword=&quot;null&quot; /&gt;. E_NOINTERFACE is returned to the caller of IUnknown::QueryInterface.">A interface para uma ID de interface específica não está disponível. Nesse caso, a interface retornada é <see langword="null" />. E_NOINTERFACE é retornado ao chamador de IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled">
      <summary vsli:raw="The interface pointer that is returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method can be used as the result of IUnknown::QueryInterface.">O ponteiro de interface retornado do método <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" /> pode ser usado como o resultado de IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled">
      <summary vsli:raw="The custom &lt;see langword=&quot;QueryInterface&quot; /&gt; was not used. Instead, the default implementation of IUnknown::QueryInterface should be used.">O <see langword="QueryInterface" /> personalizado não foi usado. Em vez disso, a implementação padrão de IUnknown::QueryInterface deve ser usada.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultCharSetAttribute">
      <summary vsli:raw="Specifies the value of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; enumeration. This class cannot be inherited.">Especifica o valor da enumeração <see cref="T:System.Runtime.InteropServices.CharSet" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultCharSetAttribute.#ctor(System.Runtime.InteropServices.CharSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultCharSetAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DefaultCharSetAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.CharSet" /> especificado.</summary>
      <param name="charSet" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; values.">Um dos valores de <see cref="T:System.Runtime.InteropServices.CharSet" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultCharSetAttribute.CharSet">
      <summary vsli:raw="Gets the default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">Obtém o valor padrão de <see cref="T:System.Runtime.InteropServices.CharSet" /> para qualquer chamada para <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</summary>
      <returns vsli:raw="The default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">O valor padrão de <see cref="T:System.Runtime.InteropServices.CharSet" /> para qualquer chamada para <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Especifica os caminhos que são usados para procurar DLLs que fornecem funções para invocações de plataforma.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; class, specifying the paths to use when searching for the targets of platform invokes.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />, especificando os caminhos a serem usados ao pesquisar os destinos de invocações de plataforma.</summary>
      <param name="paths" vsli:raw="A bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Uma combinação bit a bit dos valores de enumeração que especifica os caminhos que a função <c>LoadLibraryEx</c> pesquisa durante invocações de plataforma.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
      <summary vsli:raw="Gets a bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Obtém uma combinação bit a bit dos valores de enumeração que especifica os caminhos que a função <c>LoadLibraryEx</c> pesquisa durante invocações de plataforma.</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify search paths for platform invokes.">Uma combinação de bits de valores de enumeração que especifica caminhos de pesquisa para invocações de plataforma.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary vsli:raw="Sets the default value of a parameter when called from a language that supports default parameters. This class cannot be inherited.">Define o valor padrão de um parâmetro, quando chamado de uma linguagem que dá suporte a parâmetros padrão. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultParameterValueAttribute&quot; /&gt; class with the default value of a parameter.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> com o valor padrão de um parâmetro.</summary>
      <param name="value" vsli:raw="An object that represents the default value of a parameter.">Um objeto que representa o valor padrão de um parâmetro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary vsli:raw="Gets the default value of a parameter.">Obtém o valor padrão de um parâmetro.</summary>
      <returns vsli:raw="An object that represents the default value of a parameter.">Um objeto que representa o valor padrão de um parâmetro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispatchWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_DISPATCH&quot; /&gt;.">Encapsula objetos que o empacotador deve realizar marshaling como um <see langword="VT_DISPATCH" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispatchWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt; class with the object being wrapped.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DispatchWrapper" /> com o objeto sendo encapsulado.</summary>
      <param name="obj" vsli:raw="The object to be wrapped and converted to &lt;see cref=&quot;F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH&quot; /&gt;.">O objeto a ser encapsulado e convertido em <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a class or an array.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;obj&quot; /&gt; does not support &lt;see langword=&quot;IDispatch&quot; /&gt;.">
        <paramref name="obj" /> não é uma classe ou uma matriz.
- ou -
<paramref name="obj" /> não dá suporte a <see langword="IDispatch" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter was marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;obj&quot; /&gt; parameter inherits from a type marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.">O parâmetro <paramref name="obj" /> foi marcado com um atributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> que foi passado um valor de <see langword="false" />.
- ou -
O parâmetro <paramref name="obj" /> herda do tipo marcado com um atributo <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" /> que foi passado um valor de <see langword="false" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">Obtém o objeto encapsulado pelo <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">O objeto encapsulado pelo <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispIdAttribute">
      <summary vsli:raw="Specifies the COM dispatch identifier (DISPID) of a method, field, or property.">Especifica o identificador de distribuição (DISPID) COM de um método, campo ou propriedade.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispIdAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DispIdAttribute&quot; /&gt; class with the specified DISPID.">Inicializa uma nova instância da classe <see langword="DispIdAttribute" /> com o DISPID especificado.</summary>
      <param name="dispId" vsli:raw="The DISPID for the member.">O DISPID para o membro.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DispIdAttribute.Value">
      <summary vsli:raw="Gets the DISPID for the member.">Obtém DISPID para o membro.</summary>
      <returns vsli:raw="The DISPID for the member.">O DISPID para o membro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportAttribute">
      <summary vsli:raw="Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.">Indica que o método atribuído é exposto por uma DLL (biblioteca de vínculo dinâmico) não gerenciada como um ponto de entrada estático.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt; class with the name of the DLL containing the method to import.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> com o nome da DLL que contém o método a ser importado.</summary>
      <param name="dllName" vsli:raw="The name of the DLL that contains the unmanaged method. In .NET Framework, this can include an assembly display name, if the DLL is included in an assembly.">O nome da DLL que contém o método não gerenciado. Isso pode incluir um nome de exibição do assembly se a DLL estiver incluída em um assembly.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Habilita ou desabilita o comportamento de mapeamento mais adequado ao converter caracteres Unicode em caracteres ANSI.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention">
      <summary vsli:raw="Indicates the calling convention of an entry point.">Indica a convenção de chamada de um ponto de entrada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method and controls name mangling.">Indica como realizar marshaling de parâmetros de cadeia de caracteres para o método e a desconfiguração de nome de controles.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
      <summary vsli:raw="Indicates the name or ordinal of the DLL entry point to be called.">Indica o nome ou o ordinal do ponto de entrada DLL a ser chamado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling">
      <summary vsli:raw="Controls whether the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.CharSet&quot; /&gt; field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.">Controla se o campo <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> faz com que a Common Language Runtime pesquise uma DLL não gerenciada quanto a nomes de ponto de entrada diferentes daquele especificado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig">
      <summary vsli:raw="Indicates whether unmanaged methods that have &lt;see langword=&quot;HRESULT&quot; /&gt; return values are directly translated or whether &lt;see langword=&quot;HRESULT&quot; /&gt; return values are automatically converted to exceptions.">Indica se os métodos não gerenciados que têm valores retornados <see langword="HRESULT" /> ou <see langword="retval" /> são traduzidos diretamente ou se os valores retornados <see langword="HRESULT" /> e <see langword="retval" /> são convertidos automaticamente para exceções.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee sets an error (&lt;see langword=&quot;SetLastError&quot; /&gt; on Windows or &lt;see langword=&quot;errno&quot; /&gt; on other platforms) before returning from the attributed method.">Indica se o computador chamado chama a função de API do Windows <see langword="SetLastError" /> antes de retornar do método atribuído.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Habilita ou desabilita a geração de uma exceção em um caractere Unicode não mapeável que é convertido em um caractere "?" ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
      <summary vsli:raw="Gets the name of the DLL file that contains the entry point.">Obtém o nome do arquivo DLL que contém o ponto de entrada.</summary>
      <returns vsli:raw="The name of the DLL file that contains the entry point.">O nome do arquivo DLL que contém o ponto de entrada.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportResolver">
      <summary vsli:raw="Provides a delegate used to resolve native libraries via callback.">Fornece um delegado usado para resolver bibliotecas nativas por meio de retorno de chamada.</summary>
      <param name="libraryName" vsli:raw="The native library to resolve.">A biblioteca nativa a ser resolvida.</param>
      <param name="assembly" vsli:raw="The assembly requesting the resolution.">O assembly que solicita a resolução.</param>
      <param name="searchPath" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the PInvoke, if any. Otherwise, the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the assembly, if any. Otherwise &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> no PInvoke, se houver. Caso contrário, o <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> no assembly, se houver. Caso contrário, <see langword="null" />.</param>
      <returns vsli:raw="The handle for the loaded native library on success, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; on failure.">O identificador da biblioteca nativa carregada em caso de êxito ou <see cref="F:System.IntPtr.Zero" /> em caso de falha.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportSearchPath">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Especifica os caminhos que são usados para procurar DLLs que fornecem funções para invocações de plataforma.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory">
      <summary vsli:raw="Include the application directory in the DLL search path.">Inclua o diretório de aplicativo no caminho de pesquisa DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory">
      <summary vsli:raw="When searching for assembly dependencies, include the directory that contains the assembly itself, and search that directory first. When used in Native AOT and single-file deployment models, the application's installation directory is considered the &quot;assembly directory&quot; and is searched.">Ao procurar as dependências do assembly, incluir o diretório que contém o assembly pesquisar o diretório primeiro. Esse valor é usado pelo .NET Framework, antes que os caminhos são passados para a função Win32 LoadLibraryEx.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior">
      <summary vsli:raw="Search the application directory, and then call the Win32 LoadLibraryEx function with the &lt;c&gt;LOAD_WITH_ALTERED_SEARCH_PATH&lt;/c&gt; flag. This value is ignored if any other value is specified. Operating systems that do not support the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; attribute use this value, and ignore other values.">Pesquisar o diretório de aplicativo e, em seguida, chamar a função Win32 LoadLibraryEx com o sinalizador <c>LOAD_WITH_ALTERED_SEARCH_PATH</c>. Esse valor será ignorado se qualquer outro valor for especificado. Sistemas operacionais que não dão suporte a atributo <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> usam esse valor e ignoram os outros valores.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories">
      <summary vsli:raw="Include the application directory, the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory, and user directories in the DLL search path.">Incluir o diretório de aplicativo, o diretório de <see langword="%WinDir%\System32" /> e diretórios de usuário no caminho de pesquisa DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.System32">
      <summary vsli:raw="Include the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory in the DLL search path.">Incluir o diretório de <see langword="%WinDir%\System32" /> no caminho de pesquisa DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies">
      <summary vsli:raw="Search for the dependencies of a DLL in the folder where the DLL is located before searching other folders.">Pesquisar as dependências de uma DLL na pasta em que a DLL está localizada antes de pesquisar outras pastas.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories">
      <summary vsli:raw="Include any path that was explicitly added to the process-wide search path by using the Win32 &lt;c&gt;AddDllDirectory&lt;/c&gt; function.">Incluir qualquer caminho que tenha sido explicitamente adicionado ao caminho de pesquisa de todo o processo usando a função Win32 <c>AddDllDirectory</c>.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ErrorWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_ERROR&quot; /&gt;.">Encapsula objetos que o empacotador deve realizar marshaling como um <see langword="VT_ERROR" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT that corresponds to the exception supplied.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> com o HRESULT que corresponde à exceção fornecida.</summary>
      <param name="e" vsli:raw="The exception to be converted to an error code.">A exceção a ser convertida em um código de erro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT of the error.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> com o HRESULT do erro.</summary>
      <param name="errorCode" vsli:raw="The HRESULT of the error.">O HRESULT do erro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with an object containing the HRESULT of the error.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> com um objeto contendo o HRESULT do erro.</summary>
      <param name="errorCode" vsli:raw="The object containing the HRESULT of the error.">Um objeto que contém o HRESULT do erro.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;errorCode&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">O parâmetro <paramref name="errorCode" /> não é um tipo <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode">
      <summary vsli:raw="Gets the error code of the wrapper.">Obtém o código de erro do wrapper.</summary>
      <returns vsli:raw="The HRESULT of the error.">O HRESULT do erro.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.GuidAttribute">
      <summary vsli:raw="Supplies an explicit &lt;see cref=&quot;T:System.Guid&quot; /&gt; when an automatic GUID is undesirable.">Fornece um <see cref="T:System.Guid" /> explícito quando um GUID automático for indesejável.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.GuidAttribute&quot; /&gt; class with the specified GUID.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.GuidAttribute" /> com o GUID especificado.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; to be assigned.">O <see cref="T:System.Guid" /> a ser atribuído.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">Obtém o <see cref="T:System.Guid" /> da classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">O <see cref="T:System.Guid" /> da classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary vsli:raw="Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.">Rastreia identificadores pendentes e força uma coleta de lixo quando é atingido o limite especificado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name and a threshold at which to begin handle collection.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> usando um nome e um limite no qual iniciar a coleta de identificadores.</summary>
      <param name="name" vsli:raw="A name for the collector. This parameter allows you to name collectors that track handle types separately.">Um nome para o coletor. Esse parâmetro permite que você nomeie os coletores que acompanham os tipos de identificador separadamente.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Um valor que especifica o ponto em que as coletas devem começar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.">O parâmetro <paramref name="initialThreshold" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.HandleCollector" /> usando um nome, um limite no qual iniciar a coleta de identificadores e um limite no qual a coleta de identificadores deve ocorrer.</summary>
      <param name="name" vsli:raw="A name for the collector.  This parameter allows you to name collectors that track handle types separately.">Um nome para o coletor.  Esse parâmetro permite que você nomeie os coletores que acompanham os tipos de identificador separadamente.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Um valor que especifica o ponto em que as coletas devem começar.</param>
      <param name="maximumThreshold" vsli:raw="A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.">Um valor que especifica o ponto em que as coletas devem ocorrer. Isso deve ser definido como o número máximo de identificadores disponíveis.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than 0.">O parâmetro <paramref name="initialThreshold" /> é menor que 0.
- ou -
O parâmetro <paramref name="maximumThreshold" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than the &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter.">O parâmetro <paramref name="maximumThreshold" /> é menor do que o parâmetro <paramref name="initialThreshold" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary vsli:raw="Increments the current handle count.">Incrementa a contagem de identificadores atual.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">A propriedade <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> é menor que 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary vsli:raw="Gets the number of handles collected.">Obtém o número de identificadores coletados.</summary>
      <returns vsli:raw="The number of handles collected.">O número de identificadores coletados.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections should begin.">Obtém um valor que especifica o ponto em que as coletas devem começar.</summary>
      <returns vsli:raw="A value that specifies the point at which collections should begin.">Um valor que especifica o ponto em que as coletas devem começar.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections must occur.">Obtém um valor que especifica o ponto em que as coletas devem ocorrer.</summary>
      <returns vsli:raw="A value that specifies the point at which collections must occur.">Um valor que especifica o ponto em que as coletas devem ocorrer.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; object.">Obtém o nome de um objeto <see cref="T:System.Runtime.InteropServices.HandleCollector" />.</summary>
      <returns vsli:raw="This &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Name&quot; /&gt; property allows you to name collectors that track handle types separately.">Essa <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> propriedade permite que você nomeie os coletores que controlam os tipos de identificadores separadamente.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary vsli:raw="Decrements the current handle count.">Decrementa a contagem de identificadores atual.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">A propriedade <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> é menor que 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleRef">
      <summary vsli:raw="Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.">Encapsula um objeto gerenciado que contém um identificador para um recurso que é passado para código não gerenciado usando a invocação de plataforma.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; class with the object to wrap and a handle to the resource used by unmanaged code.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.HandleRef" /> com o objeto a encapsular e um identificador para o recurso usado pelo código não gerenciado.</summary>
      <param name="wrapper" vsli:raw="A managed object that should not be finalized until the platform invoke call returns.">Retorna um objeto gerenciado que não deve ser finalizado até o retorno da chamada de invocação de plataforma.</param>
      <param name="handle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that indicates a handle to a resource.">Um <see cref="T:System.IntPtr" /> que indica um identificador de um recurso.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Handle">
      <summary vsli:raw="Gets the handle to a resource.">Obtém o identificador de um recurso.</summary>
      <returns vsli:raw="The handle to a resource.">O identificador para um recurso.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
      <summary vsli:raw="Returns the handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Retorna o identificador de um recurso do objeto <see cref="T:System.Runtime.InteropServices.HandleRef" /> especificado.</summary>
      <param name="value" vsli:raw="The object that needs a handle.">O objeto que precisa de um identificador.</param>
      <returns vsli:raw="The handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">O identificador para um recurso do objeto <see cref="T:System.Runtime.InteropServices.HandleRef" /> especificado.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
      <summary vsli:raw="Returns the internal integer representation of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Retorna a representação de número inteiro interna de um <see cref="T:System.Runtime.InteropServices.HandleRef" /> objeto.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object to retrieve an internal integer representation from.">Um objeto <see cref="T:System.Runtime.InteropServices.HandleRef" /> do qual recuperar uma representação de número inteiro interna.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Um objeto <see cref="T:System.IntPtr" /> que representa um objeto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Wrapper">
      <summary vsli:raw="Gets the object holding the handle to a resource.">Obtém o objeto que contém o identificador de um recurso.</summary>
      <returns vsli:raw="The object holding the handle to a resource.">O objeto que contém o identificador de um recurso.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomAdapter">
      <summary vsli:raw="Provides a way for clients to access the actual object, rather than the adapter object handed out by a custom marshaler.">Fornece uma maneira para que os clientes acessem o objeto real, em vez do objeto adaptador entregue por um marshaler personalizado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomAdapter.GetUnderlyingObject">
      <summary vsli:raw="Provides access to the underlying object wrapped by a custom marshaler.">Fornece acesso ao objeto subjacente encapsulado por um marshaler personalizado.</summary>
      <returns vsli:raw="The object contained by the adapter object.">O objeto contido pelo objeto do adaptador.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomFactory">
      <summary vsli:raw="Enables users to write activation code for managed objects that extend &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt;.">Permite que usuários gravem o código de ativação para os objetos gerenciados que estendem <see cref="T:System.MarshalByRefObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified type.">Cria uma nova instância do tipo especificado.</summary>
      <param name="serverType" vsli:raw="The type to activate.">O tipo a ativar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt; associated with the specified type.">Um <see cref="T:System.MarshalByRefObject" /> associado ao tipo especificado.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomMarshaler">
      <summary vsli:raw="Provides custom wrappers for handling method calls.">Fornece wrappers personalizados para manipular chamadas de método.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
      <summary vsli:raw="Performs necessary cleanup of the managed data when it is no longer needed.">Executa a limpeza necessária dos dados gerenciados quando eles não forem mais necessários.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be destroyed.">O objeto gerenciado a ser destruído.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary vsli:raw="Performs necessary cleanup of the unmanaged data when it is no longer needed.">Executa a limpeza necessária dos dados não gerenciados quando eles não forem mais necessários.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be destroyed.">Um ponteiro para os dados não gerenciados a serem destruídos.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
      <summary vsli:raw="Returns the size of the native data to be marshaled.">Retorna o tamanho dos dados nativos cujo marshaling deve ser realizado.</summary>
      <returns vsli:raw="The size, in bytes, of the native data.">O tamanho, em bytes, dos dados nativos.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
      <summary vsli:raw="Converts the managed data to unmanaged data.">Converte os dados gerenciados em dados não gerenciados.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be converted.">O objeto gerenciado a ser convertido.</param>
      <returns vsli:raw="A pointer to the COM view of the managed object.">Um ponteiro para a exibição COM do objeto gerenciado.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary vsli:raw="Converts the unmanaged data to managed data.">Converte os dados não gerenciados em dados gerenciados.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be wrapped.">Um ponteiro para os dados não gerenciados a serem encapsulados.</param>
      <returns vsli:raw="An object that represents the managed view of the COM data.">Um objeto que representa a exibição gerenciada dos dados COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomQueryInterface">
      <summary vsli:raw="Enables developers to provide a custom, managed implementation of the IUnknown::QueryInterface(REFIID riid, void **ppvObject) method.">Habilita os desenvolvedores a fornecerem uma implementação personalizada gerenciada do método IUnknown::QueryInterface(REFIID riid, void **ppvObject).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Returns an interface according to a specified interface ID.">Retorna uma interface de acordo com uma ID de interface especificada.</summary>
      <param name="iid" vsli:raw="The GUID of the requested interface.">O GUID da interface solicitada.</param>
      <param name="ppv" vsli:raw="A reference to the requested interface, when this method returns.">Uma referência à interface solicitada, quando esse método é retornado.</param>
      <returns vsli:raw="One of the enumeration values that indicates whether a custom implementation of IUnknown::QueryInterface was used.">Um dos valores de enumeração que indica se uma implementação personalizada de IUnknown:: QueryInterface foi usada.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
      <summary vsli:raw="Indicates that the types defined within an assembly were originally defined in a type library.">Indica que os tipos definidos dentro de um assembly foram originalmente definidos em uma biblioteca de tipos.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute&quot; /&gt; class with the name of the original type library file.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute" /> com o nome do arquivo de biblioteca de tipo original.</summary>
      <param name="tlbFile" vsli:raw="The location of the original type library file.">A localização do arquivo de biblioteca de tipo original.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.Value">
      <summary vsli:raw="Gets the name of the original type library file.">Obtém o nome do arquivo de biblioteca de tipos original.</summary>
      <returns vsli:raw="The name of the original type library file.">O nome do arquivo de biblioteca de tipos original.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InterfaceTypeAttribute">
      <summary vsli:raw="Indicates whether a managed interface is dual, dispatch-only, or &lt;see langword=&quot;IUnknown&quot; /&gt; -only when exposed to COM.">Indica se uma interface gerenciada é dupla, somente de expedição ou somente de <see langword="IUnknown" /> quando exposta à COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> com o membro de enumeração <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> especificado.</summary>
      <param name="interfaceType" vsli:raw="Describes how the interface should be exposed to COM clients.">Descreve como a interface deve ser exposta a clientes COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> com o membro de enumeração <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> especificado.</summary>
      <param name="interfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; values that describes how the interface should be exposed to COM clients.">Um dos valores <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> que descreve como a interface deve ser exposta a clientes COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">Obtém o valor <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> que descreve como a interface deve ser exposta a COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">O <see cref="T:System.Runtime.InteropServices.ComInterfaceType" /> valor que descreve como a interface deve ser exposta a com.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidComObjectException">
      <summary vsli:raw="The exception thrown when an invalid COM object is used.">A exceção lançada quando um objeto COM inválido é usado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with default properties.">Inicializa uma nova instância da <see langword="InvalidComObjectException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;COMException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see langword="COMException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with a message.">Inicializa uma nova instância da <see langword="InvalidComObjectException" /> com uma mensagem.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidComObjectException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.InvalidComObjectException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <summary vsli:raw="The exception thrown by the marshaler when it encounters an argument of a variant type that can not be marshaled to managed code.">A exceção gerada pelo marshaler quando este encontra um argumento de um tipo variante que não pode ter o marshaling realizado no código gerenciado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with default values.">Inicializa uma nova instância da classe <see langword="InvalidOleVariantTypeException" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see langword="InvalidOleVariantTypeException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with a specified message.">Inicializa uma nova instância da classe <see langword="InvalidOleVariantTypeException" /> com uma mensagem especificada.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidOleVariantTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.LCIDConversionAttribute">
      <summary vsli:raw="Indicates that a method's unmanaged signature expects a locale identifier (LCID) parameter.">Indica que a assinatura não gerenciada do método espera um parâmetro LCID (identificador de localidade).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.LCIDConversionAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;LCIDConversionAttribute&quot; /&gt; class with the position of the LCID in the unmanaged signature.">Inicializa uma nova instância da classe <see langword="LCIDConversionAttribute" /> com a posição do LCID na assinatura não gerenciada.</summary>
      <param name="lcid" vsli:raw="Indicates the position of the LCID argument in the unmanaged signature, where 0 is the first argument.">Indica a posição do argumento LCID na assinatura não gerenciada, em que 0 é o primeiro argumento.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.LCIDConversionAttribute.Value">
      <summary vsli:raw="Gets the position of the LCID argument in the unmanaged signature.">Obtém a posição do argumento LCID na assinatura não gerenciada.</summary>
      <returns vsli:raw="The position of the LCID argument in the unmanaged signature, where 0 is the first argument.">A posição do argumento LCID na assinatura não gerenciada, em que 0 é o primeiro argumento.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
      <summary vsli:raw="Provides support for user customization of interop stubs in managed-to-COM interop scenarios.">Dá suporte para personalização do usuário de stubs de interoperabilidade em cenários de interoperabilidade gerenciada para COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute&quot; /&gt; class with the specified class type and method name.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> com o nome do método e o tipo de classe especificados.</summary>
      <param name="classType" vsli:raw="The class that contains the required stub method.">A classe que contém o método de stub necessário.</param>
      <param name="methodName" vsli:raw="The name of the stub method.">O nome do método de stub.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;methodName&quot; /&gt; cannot be found.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method is not static or non-generic.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method's parameter list does not match the expected parameter list for the stub.">Não foi possível localizar <paramref name="methodName" />.
- ou -
O método é não estático ou não genérico.
- ou -
A lista de parâmetros do método não corresponde à lista de parâmetros esperados para o stub.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.">A interface que contém o método de interoperabilidade gerenciado não tem acesso ao método de stub porque o método de stub tem acessibilidade privada ou protegida ou porque há um problema de segurança.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType">
      <summary vsli:raw="Gets the class that contains the required stub method.">Obtém a classe que contém o método de stub necessário.</summary>
      <returns vsli:raw="The class that contains the customized interop stub.">A classe que contém o stub de interoperabilidade personalizado.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName">
      <summary vsli:raw="Gets the name of the stub method.">Obtém o nome do método de stub.</summary>
      <returns vsli:raw="The name of a customized interop stub.">O nome de um stub de interoperabilidade personalizado.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Marshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.">Fornece um conjunto de métodos para alocar a memória não gerenciada, copiando os blocos de memória não gerenciada e convertendo tipos gerenciados em não gerenciados, bem como outros diversos métodos usados ao interagir com código não gerenciado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
      <summary vsli:raw="Increments the reference count on the specified interface.">Incrementa a contagem de referência na interface especificada.</summary>
      <param name="pUnk" vsli:raw="The interface reference count to increment.">A contagem de referência da interface a ser incrementada.</param>
      <returns vsli:raw="The new value of the reference count on the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">O novo valor da contagem de referência no parâmetro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
      <summary vsli:raw="Allocates a block of memory of specified size from the COM task memory allocator.">Aloca um bloco de memória do tamanho especificado do alocador de memória de tarefas COM.</summary>
      <param name="cb" vsli:raw="The size of the block of memory to be allocated.">O tamanho do bloco de memória a ser alocado.</param>
      <returns vsli:raw="An integer representing the address of the block of memory allocated. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Um inteiro que representa o endereço do bloco de memória alocada. Essa memória deve ser liberada com <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Não há memória suficiente para atender à solicitação.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the specified number of bytes.">Aloca memória de memória não gerenciada do processo usando o número de bytes especificado.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">O número necessário de bytes na memória.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Um ponteiro para a memória recém-alocada. Essa memória deve ser liberada usando o método <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Não há memória suficiente para atender à solicitação.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.">Aloca memória de memória não gerenciada do processo usando o ponteiro para o número de bytes especificado.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">O número necessário de bytes na memória.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Um ponteiro para a memória recém-alocada. Essa memória deve ser liberada usando o método <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Não há memória suficiente para atender à solicitação.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
      <summary vsli:raw="Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.">Indica se RCWs (Runtime Callable Wrappers) de qualquer contexto estão disponíveis para limpeza.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any RCWs available for cleanup; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se houver algum RCW disponível para limpeza; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
      <summary vsli:raw="Gets an interface pointer identified by the specified moniker.">Obtém um ponteiro de interface identificado pelo moniker especificado.</summary>
      <param name="monikerName" vsli:raw="The moniker corresponding to the desired interface pointer.">O moniker correspondente para o ponteiro de interface desejado.</param>
      <returns vsli:raw="An object containing a reference to the interface pointer identified by the &lt;paramref name=&quot;monikerName&quot; /&gt; parameter. A moniker is a name, and in this case, the moniker is defined by an interface.">Um objeto que contém uma referência para o ponteiro de interface identificado pelo parâmetro <paramref name="monikerName" />. Um moniker é um nome e, nesse caso, o moniker é definido por uma interface.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="An unrecognized HRESULT was returned by the unmanaged &lt;see langword=&quot;BindToMoniker&quot; /&gt; method.">Um HRESULT não reconhecido foi retornado pelo método <see langword="BindToMoniker" /> não gerenciado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
      <summary vsli:raw="Changes the strength of an object's COM Callable Wrapper (CCW) handle.">Altera a intensidade do identificador CCW (COM Callable Wrapper) de um objeto.</summary>
      <param name="otp" vsli:raw="The object whose CCW holds a reference counted handle. The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.">O objeto cujo CCW contém um identificador contado de referência. O identificador será forte se a contagem de referência no CCW for maior que zero; caso contrário, será fraca.</param>
      <param name="fIsWeak" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to change the strength of the handle on the &lt;paramref name=&quot;otp&quot; /&gt; parameter to weak, regardless of its reference count; &lt;see langword=&quot;false&quot; /&gt; to reset the handle strength on &lt;paramref name=&quot;otp&quot; /&gt; to be reference counted.">
        <see langword="true" /> para alterar a intensidade do identificador no parâmetro <paramref name="otp" /> para fraca, independentemente de sua contagem de referência; <see langword="false" /> para redefinir a intensidade do identificador em <paramref name="otp" /> para ter contagem de referência.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
      <summary vsli:raw="Notifies the runtime to clean up all Runtime Callable Wrappers (RCWs) allocated in the current context.">Notifica o tempo de execução para limpar todos os RCWs (Runtime Callable Wrappers) alocados no contexto atual.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.">Copia os dados de uma matriz de inteiro sem sinal unidimensional de 8 bits para um ponteiro de memória não gerenciado.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.">Copia os dados de uma matriz de caracteres gerenciada unidimensional para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.">Copia os dados de uma matriz de número de ponto flutuante de precisão dupla unidimensional gerenciada para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.">Copia os dados de uma matriz de inteiro com sinal unidimensional de 16 bits para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.">Copia os dados de uma matriz unidimensional de inteiro com sinal de 32 bits para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.">Copia os dados de uma matriz de inteiro com sinal unidimensional de 64 bits para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.">Copia os dados de um ponteiro de memória não gerenciada para uma matriz gerenciada de inteiro sem sinal de 8 bits.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed character array.">Copia os dados de um ponteiro de memória não gerenciada em uma matriz gerenciada de caracteres.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.">Copia os dados de um ponteiro de memória não gerenciada para uma matriz de número de ponto flutuante de precisão dupla gerenciada.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.">Copia os dados de um ponteiro de memória não gerenciada em uma matriz gerenciada de inteiro com sinal de 16 bits.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.">Copia os dados de um ponteiro de memória não gerenciado em uma matriz gerenciada de inteiro com sinal de 32 bits.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.">Copia os dados de um ponteiro de memória não gerenciada em uma matriz gerenciada de inteiro com sinal de 64 bits.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array.">Copia os dados de um ponteiro de memória não gerenciada em uma matriz gerenciada <see cref="T:System.IntPtr" />.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.">Copia os dados de um ponteiro de memória não gerenciada para uma matriz de número de ponto flutuante de precisão simples gerenciada.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">O ponteiro de memória do qual copiar.</param>
      <param name="destination" vsli:raw="The array to copy to.">A matriz para a qual copiar.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">O índice baseado em zero na matriz de destino em que a cópia deve iniciar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array to an unmanaged memory pointer.">Copia os dados de uma matriz gerenciada unidimensional <see cref="T:System.IntPtr" /> para um ponteiro de memória não gerenciado.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.">Copia os dados de uma matriz de número de ponto flutuante de precisão simples unidimensional gerenciada para um ponteiro de memória não gerenciada.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">A matriz unidimensional a ser copiada.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">O índice baseado em zero na matriz de origem em que a cópia deve iniciar.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">O ponteiro de memória para o qual copiar.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">O número de elementos da matriz a copiar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> e <paramref name="length" /> não são válidos.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> ou <paramref name="length" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
      <summary vsli:raw="Aggregates a managed object with the specified COM object.">Agrega um objeto gerenciado com o objeto COM especificado.</summary>
      <param name="pOuter" vsli:raw="The outer &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">O ponteiro <see langword="IUnknown" /> externo.</param>
      <param name="o" vsli:raw="An object to aggregate.">Um objeto a agregar.</param>
      <returns vsli:raw="The inner &lt;see langword=&quot;IUnknown&quot; /&gt; pointer of the managed object.">O ponteiro <see langword="IUnknown" /> interno do objeto gerenciado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> é um objeto Tempo de Execução do Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Aggregates a managed object of the specified type with the specified COM object.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Agrega um objeto gerenciado do tipo especificado com o objeto COM especificado.</summary>
      <param name="pOuter" vsli:raw="The outer IUnknown pointer.">O ponteiro IUnknown externo.</param>
      <param name="o" vsli:raw="The managed object to aggregate.">O objeto gerenciado a agregar.</param>
      <typeparam name="T" vsli:raw="The type of the managed object to aggregate.">O tipo do objeto gerenciado a ser agregado.</typeparam>
      <returns vsli:raw="The inner IUnknown pointer of the managed object.">O ponteiro IUnknown interno do objeto gerenciado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> é um objeto Tempo de Execução do Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
      <summary vsli:raw="Wraps the specified COM object in an object of the specified type.">Encapsula o objeto COM indicado em um objeto do tipo especificado.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">O objeto a ser encapsulado.</param>
      <param name="t" vsli:raw="The type of wrapper to create.">O tipo de wrapper a criar.</param>
      <returns vsli:raw="The newly wrapped object that is an instance of the desired type.">O objeto encapsulado recém-encapsulado é uma instância do tipo desejado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">
        <paramref name="t" /> deve derivar de <see langword="__ComObject" />.
- ou -
<paramref name="t" /> é um tipo Tempo de Execução do Windows.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="t" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the destination type because it does not support all required interfaces.">
        <paramref name="o" /> não pode ser convertido no tipo de destino porque ele não dá suporte a todas as interfaces necessárias.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Wraps the specified COM object in an object of the specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Encapsula o objeto COM indicado em um objeto do tipo especificado.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">O objeto a ser encapsulado.</param>
      <typeparam name="T" vsli:raw="The type of object to wrap.">O tipo de objeto a ser encapsulado.</typeparam>
      <typeparam name="TWrapper" vsli:raw="The type of object to return.">O tipo de objeto a ser retornado.</typeparam>
      <returns vsli:raw="The newly wrapped object.">O objeto recém-encapsulado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;typeparamref name=&quot;T&quot; /&gt; is a Windows Runtime type.">
        <typeparamref name="T" /> deve derivar de <see langword="__ComObject" />.
- ou -
<typeparamref name="T" /> é um tipo Tempo de Execução do Windows.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the &lt;paramref name=&quot;TWrapper&quot; /&gt; because it does not support all required interfaces.">
        <paramref name="o" /> não pode ser convertido no <paramref name="TWrapper" /> porque ele não dá suporte a todas as interfaces necessárias.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Frees all substructures that the specified unmanaged memory block points to.">Libera todas as subestruturas para as quais o bloco de memória não gerenciada especificado aponta.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <param name="structuretype" vsli:raw="Type of a formatted class. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Tipo de uma classe formatada. Isso fornece as informações de layout necessárias para excluir o buffer no parâmetro <paramref name="ptr" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">
        <paramref name="structureType" /> tem um layout automático. Use explícito ou sequencial no seu lugar.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Frees all substructures of a specified type that the specified unmanaged memory block points to.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Libera todas as subestruturas de um tipo especificado para as quais o bloco de memória não gerenciado especificado aponta.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <typeparam name="T" vsli:raw="The type of the formatted structure. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">O tipo da estrutura formatada. Isso fornece as informações de layout necessárias para excluir o buffer no parâmetro <paramref name="ptr" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">
        <typeparamref name="T" /> tem um layout automático. Use explícito ou sequencial no seu lugar.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
      <summary vsli:raw="Releases all references to a Runtime Callable Wrapper (RCW) by setting its reference count to 0.">Libera todas as referências a um RCW (Runtime Callable Wrapper) definindo sua contagem de referência como 0.</summary>
      <param name="o" vsli:raw="The RCW to be released.">O RCW a ser liberado.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with the &lt;paramref name=&quot;o&quot; /&gt; parameter, which is 0 (zero) if the release is successful.">O novo valor da contagem de referência do RCW associado ao parâmetro <paramref name="o" />, que será 0 (zero) se a versão for bem-sucedida.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">O <paramref name="o" /> não é um objeto COM válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a &lt;see langword=&quot;BSTR&quot; /&gt; using the COM SysFreeString function.">Libera um <see langword="BSTR" /> usando a função SysFreeString do COM.</summary>
      <param name="ptr" vsli:raw="The address of the BSTR to be freed.">O endereço do BSTR a ser liberado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
      <summary vsli:raw="Frees a block of memory allocated by the unmanaged COM task memory allocator.">Libera um bloco de memória alocado pelo alocador de memória de tarefa COM não gerenciado.</summary>
      <param name="ptr" vsli:raw="The address of the memory to be freed.">O endereço da memória a ser liberada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
      <summary vsli:raw="Frees memory previously allocated from the unmanaged memory of the process.">Libera memória anteriormente alocada da memória não gerenciada do processo.</summary>
      <param name="hglobal" vsli:raw="The handle returned by the original matching call to &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">O identificador retornado pela chamada original correspondente para <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
      <summary vsli:raw="Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).">Retorna o GUID (identificador global exclusivo) para o tipo especificado ou gera um GUID usando o algoritmo usado pelo Exportador da Biblioteca de Tipos (Tlbexp.exe).</summary>
      <param name="type" vsli:raw="The type to generate a GUID for.">O tipo para o qual gerar um GUID.</param>
      <returns vsli:raw="An identifier for the specified type.">Um identificador para o tipo especificado.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
      <summary vsli:raw="Returns a programmatic identifier (ProgID) for the specified type.">Retorna um ProgID (identificador programático) para o tipo especificado.</summary>
      <param name="type" vsli:raw="The type to get a ProgID for.">O tipo para o qual obter um ProgID.</param>
      <returns vsli:raw="The ProgID of the specified type.">O ProgID do tipo especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a class that can be create by COM. The class must be public, have a public parameterless constructor, and be COM visible.">O parâmetro <paramref name="type" /> não é uma classe que pode ser criada por COM. A classe precisa ser pública, ter um construtor público sem parâmetros e estar visível no COM.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is enabled by default.">Retorna um ponteiro para uma interface IUnknown que representa a interface especificada no objeto especificado. O acesso à interface de consulta personalizada é habilitada por padrão.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">O objeto que fornece a interface.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">O tipo de interface solicitado.</param>
      <returns vsli:raw="The interface pointer that represents the specified interface for the object.">O ponteiro da interface que representa a interface especificada para o objeto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">O parâmetro <typeparamref name="T" /> não é uma interface.
- ou -
O tipo não é visível para COM.
- ou -
O parâmetro <typeparamref name="T" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the requested interface.">O parâmetro <paramref name="o" /> não dá suporte à interface solicitada.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="o" /> é <see langword="null" />.
- ou -
O parâmetro <typeparamref name="T" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is controlled by the specified customization mode.">Retorna um ponteiro para uma interface IUnknown que representa a interface especificada no objeto especificado. O acesso à interface de consulta personalizada é controlado pelo modo de personalização especificado.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">O objeto que fornece a interface.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">O tipo de interface solicitado.</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to apply an &lt;see langword=&quot;IUnknown::QueryInterface&quot; /&gt; customization that is supplied by an &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt;.">Um dos valores de enumeração que indica se é necessário aplicar uma personalização <see langword="IUnknown::QueryInterface" /> fornecida por um <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</param>
      <returns vsli:raw="The interface pointer that represents the interface for the object.">O ponteiro de interface que representa a interface para o objeto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">O parâmetro <typeparamref name="T" /> não é uma interface.
- ou -
O tipo não é visível para COM.
- ou -
O parâmetro <typeparamref name="T" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object &lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">O objeto <paramref name="o" /> não dá suporte à interface solicitada.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="o" /> é <see langword="null" />.
- ou -
O parâmetro <typeparamref name="T" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns a pointer to an IUnknown interface that represents the specified interface on an object of the specified type. Custom query interface access is enabled by default.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Retorna um ponteiro para uma interface IUnknown que representa a interface especificada em um objeto do tipo especificado. O acesso à interface de consulta personalizada é habilitada por padrão.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">O objeto que fornece a interface.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;o&quot; /&gt;.">O tipo de <paramref name="o" />.</typeparam>
      <typeparam name="TInterface" vsli:raw="The type of interface to return.">O tipo de interface a ser retornado.</typeparam>
      <returns vsli:raw="The interface pointer that represents the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">O ponteiro de interface que representa a interface <paramref name="TInterface" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TInterface&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is an open generic type.">O parâmetro <paramref name="TInterface" /> não é uma interface.
- ou -
O tipo não é visível para COM.
- ou -
O parâmetro <typeparamref name="T" /> é um tipo genérico aberto.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">O parâmetro <paramref name="o" /> não dá suporte à interface <paramref name="TInterface" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="o" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
      <summary vsli:raw="Retrieves data that is referenced by the specified key from the specified COM object.">Recupera os dados que são referenciados pela chave especificada do objeto COM especificado.</summary>
      <param name="obj" vsli:raw="The COM object that contains the data that you want.">O objeto COM que contém os dados que você deseja.</param>
      <param name="key" vsli:raw="The key in the internal hash table of &lt;paramref name=&quot;obj&quot; /&gt; to retrieve the data from.">A chave na tabela de hash interna do <paramref name="obj" /> da qual recuperar os dados.</param>
      <returns vsli:raw="The data represented by the &lt;paramref name=&quot;key&quot; /&gt; parameter in the internal hash table of the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Os dados representados pelo parâmetro <paramref name="key" /> na tabela de hash interna do parâmetro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> é <see langword="null" />.
- ou -
<paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> não é um objeto COM.
- ou -
<paramref name="obj" /> é um objeto Tempo de Execução do Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
      <summary vsli:raw="Converts an unmanaged function pointer to a delegate.">Converte um ponteiro de função não gerenciada em um delegado.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to be converted.">O ponteiro de função não gerenciada a ser convertido.</param>
      <param name="t" vsli:raw="The type of the delegate to be returned.">O tipo do delegado a ser retornado.</param>
      <returns vsli:raw="A delegate instance that can be cast to the appropriate delegate type.">Uma instância de delegado que pode ser convertida para o tipo de delegado apropriado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is not a delegate or is generic.">O parâmetro <paramref name="t" /> não é um delegado ou é genérico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="ptr" /> é <see langword="null" />.
- ou -
O parâmetro <paramref name="t" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an unmanaged function pointer to a delegate of a specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Converte um ponteiro de função não gerenciada em um delegado de um tipo especificado.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to convert.">O ponteiro de função não gerenciada a ser convertido.</param>
      <typeparam name="TDelegate" vsli:raw="The type of the delegate to return.">O tipo do delegado a ser retornado.</typeparam>
      <returns vsli:raw="A instance of the specified delegate type.">Uma instância do tipo de delegado especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TDelegate&quot; /&gt; generic parameter is not a delegate, or it is an open generic type.">O parâmetro genérico <paramref name="TDelegate" /> não é um delegado ou é um tipo genérico aberto.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="ptr" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
      <summary vsli:raw="Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.">Recupera o último slot na tabela de função virtual (v-table ou VTBL) de um tipo quando exposto ao COM.</summary>
      <param name="t" vsli:raw="A type that represents an interface or class.">Um tipo que representa uma interface ou classe.</param>
      <returns vsli:raw="The last VTBL slot of the interface when exposed to COM. If the &lt;paramref name=&quot;t&quot; /&gt; parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.">O último slot VTBL da interface quando exposto ao COM. Se o parâmetro <paramref name="t" /> for uma classe, o slot VTBL retornado será o último slot na interface gerada da classe.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
      <summary vsli:raw="Retrieves a code that identifies the type of the exception that occurred.">Recupera um código que identifica o tipo da exceção ocorrido.</summary>
      <returns vsli:raw="The type of the exception.">O tipo da exceção.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Converte o código de erro HRESULT especificado em um objeto <see cref="T:System.Exception" /> correspondente.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">O HRESULT a ser convertido.</param>
      <returns vsli:raw="An object that represents the converted HRESULT, or &lt;see langword=&quot;null&quot; /&gt; if the HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Um objeto que representa o HRESULT convertido ou <see langword="null" /> se o valor de HRESULT não representar um código de erro (por exemplo, <see langword="S_OK" /> ou <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, with additional error information passed in an IErrorInfo interface for the exception object.">Converte o código de erro HRESULT especificado em um objeto <see cref="T:System.Exception" /> correspondente, com informações de erro adicionais passadas em uma interface IErrorInfo para o objeto de exceção.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">O HRESULT a ser convertido.</param>
      <param name="errorInfo" vsli:raw="A pointer to the &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface and construct the exception just from the error code.">Um ponteiro para a interface <see langword="IErrorInfo" /> que fornece mais informações sobre o erro. Você pode especificar <c>IntPtr(0)</c> para usar a interface <see langword="IErrorInfo" /> atual ou <c>IntPtr(-1)</c> para ignorar a interface <see langword="IErrorInfo" /> atual e construir a exceção apenas do código de erro.</param>
      <returns vsli:raw="An object that represents the converted HRESULT and information obtained from &lt;paramref name=&quot;errorInfo&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if an HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Um objeto que representa o HRESULT convertido e informações obtidas de <paramref name="errorInfo" /> ou <see langword="null" /> se um valor HRESULT não representar um código de erro (por exemplo, <see langword="S_OK" /> ou <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
      <summary vsli:raw="Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.">Recupera uma descrição independente de computador de uma exceção e as informações sobre o estado que existia para o thread quando ocorreu a exceção.</summary>
      <returns vsli:raw="A pointer to an EXCEPTION_POINTERS structure.">Um ponteiro para uma estrutura EXCEPTION_POINTERS.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
      <summary vsli:raw="Converts a delegate into a function pointer that is callable from unmanaged code.">Converte um delegado em um ponteiro de função que pode ser chamado do código não gerenciado.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">O delegado a ser passado para código não gerenciado.</param>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Um valor que pode ser passado para código não gerenciado, que, por sua vez, pode ser usado para chamar o delegado subjacente gerenciado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">O parâmetro <paramref name="d" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Converte um delegado de um tipo especificado em um ponteiro de função que pode ser chamado do código não gerenciado.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">O delegado a ser passado para código não gerenciado.</param>
      <typeparam name="TDelegate" vsli:raw="The type of delegate to convert.">O tipo de delegado para converter.</typeparam>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Um valor que pode ser passado para código não gerenciado, que, por sua vez, pode ser usado para chamar o delegado subjacente gerenciado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">O parâmetro <paramref name="d" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
      <summary vsli:raw="Returns the instance handle (HINSTANCE) for the specified module.">Retorna o identificador de instância (HINSTANCE) do módulo especificado.</summary>
      <param name="m" vsli:raw="The module whose HINSTANCE is desired.">O módulo cujo HINSTANCE é desejado.</param>
      <returns vsli:raw="The HINSTANCE for &lt;paramref name=&quot;m&quot; /&gt;; or -1 if the module does not have an HINSTANCE.">O HINSTANCE de <paramref name="m" />; ou -1 se o módulo não tiver um HINSTANCE.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="m" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
      <summary vsli:raw="Converts the specified exception to an HRESULT.">Converte a exceção especificada para um HRESULT.</summary>
      <param name="e" vsli:raw="The exception to convert to an HRESULT.">A exceção que será convertida em um HRESULT.</param>
      <returns vsli:raw="The HRESULT mapped to the supplied exception.">O HRESULT mapeado para a exceção fornecida.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
      <summary vsli:raw="Returns the HRESULT corresponding to the last error incurred by Win32 code executed using &lt;see cref=&quot;T:System.Runtime.InteropServices.Marshal&quot; /&gt;.">Retorna o HRESULT que corresponde ao último erro incorrido pelo código Win32 executado usando <see cref="T:System.Runtime.InteropServices.Marshal" />.</summary>
      <returns vsli:raw="The HRESULT corresponding to the last Win32 error code.">O HRESULT que corresponde ao último código de erro Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
      <summary vsli:raw="Returns an IDispatch interface from a managed object.">Retorna uma interface IDispatch de um objeto gerenciado.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IDispatch&quot; /&gt; interface is requested.">O objeto cuja interface <see langword="IDispatch" /> é solicitada.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">O ponteiro <see langword="IDispatch" /> para o parâmetro <paramref name="o" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">
        <paramref name="o" /> não dá suporte à interface solicitada.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
      <summary vsli:raw="Returns an IUnknown interface from a managed object.">Retorna uma interface IUnknown de um objeto gerenciado.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IUnknown&quot; /&gt; interface is requested.">O objeto cuja interface <see langword="IUnknown" /> é solicitada.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">O ponteiro <see langword="IUnknown" /> para o parâmetro <paramref name="o" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
      <summary vsli:raw="Returns the error code returned by the last unmanaged function that was called using platform invoke that has the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.SetLastError&quot; /&gt; flag set.">Retorna o código de erro retornado pela última função não gerenciada chamada com a invocação da plataforma que tem o sinalizador <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> definido.</summary>
      <returns vsli:raw="The last error code set by a call to the Win32 SetLastError function.">O último código de erro definido por uma chamada para a função SetLastError do Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
      <summary vsli:raw="Converts an object to a COM VARIANT.">Converte um objeto em um COM VARIANT.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">O objeto para o qual obter um COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Um ponteiro que receberá o VARIANT que corresponde ao parâmetro <paramref name="obj" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is an instance of a generic type.">O parâmetro <paramref name="obj" /> é uma instância de um tipo genérico.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an object of a specified type to a COM VARIANT.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Converte um objeto de um tipo especificado em uma VARIANTE do COM.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">O objeto para o qual obter um COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Um ponteiro que receberá o VARIANT que corresponde ao parâmetro <paramref name="obj" />.</param>
      <typeparam name="T" vsli:raw="The type of the object to convert.">O tipo do objeto a ser convertido.</typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its IUnknown interface.">Retorna uma instância de um tipo que representa um objeto COM de um ponteiro para sua interface IUnknown.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Um ponteiro para a interface <see langword="IUnknown" />.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Um objeto que representa o objeto COM não gerenciado especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pUnk&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">
        <paramref name="pUnk" /> é <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
      <summary vsli:raw="Converts a COM VARIANT to an object.">Converte um COM VARIANT em um objeto.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Um ponteiro para um COM VARIANT.</param>
      <returns vsli:raw="An object that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Um objeto que corresponde ao parâmetro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> não é um tipo VARIANT válido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">
        <paramref name="pSrcNativeVariant" /> tem um tipo sem suporte.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a COM VARIANT to an object of a specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Converte uma VARIANTE do COM em um objeto de um tipo especificado.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Um ponteiro para um COM VARIANT.</param>
      <typeparam name="T" vsli:raw="The type to which to convert the COM VARIANT.">O tipo para o qual converter a variante COM.</typeparam>
      <returns vsli:raw="An object of the specified type that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Um objeto do tipo especificado que corresponde ao parâmetro <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> não é um tipo VARIANT válido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">
        <paramref name="pSrcNativeVariant" /> tem um tipo sem suporte.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
      <summary vsli:raw="Converts an array of COM VARIANTs to an array of objects.">Converte uma matriz de VARIANTEs do COM em uma matriz de objetos.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Um ponteiro para o primeiro elemento de uma matriz de VARIANTES do COM.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">A contagem de VARIANTES COM em <paramref name="aSrcNativeVariant" />.</param>
      <returns vsli:raw="An object array that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Uma matriz de objetos que corresponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> é um número negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an array of COM VARIANTs to an array of a specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Converte uma matriz de VARIANTEs do COM em uma matriz de um tipo especificado.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Um ponteiro para o primeiro elemento de uma matriz de VARIANTES do COM.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">A contagem de VARIANTES COM em <paramref name="aSrcNativeVariant" />.</param>
      <typeparam name="T" vsli:raw="The type of the array to return.">O tipo da matriz a ser retornada.</typeparam>
      <returns vsli:raw="An array of &lt;typeparamref name=&quot;T&quot; /&gt; objects that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Uma matriz de objetos <typeparamref name="T" /> que corresponde a <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> é um número negativo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
      <summary vsli:raw="Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.">Obtém o primeiro slot na tabela de função virtual (v-table ou VTBL) que contém os métodos definidos pelo usuário.</summary>
      <param name="t" vsli:raw="A type that represents an interface or a class.">Um tipo que representa uma interface ou uma classe.</param>
      <returns vsli:raw="The first VTBL slot that contains user-defined methods. The first slot is 3 if the interface is based on IUnknown, and 7 if the interface is based on IDispatch.">O primeiro slot VTBL que contém os métodos definidos pelo usuário. O primeiro slot será 3 se a interface for baseada em IUnknown e 7, se a interface for baseada em IDispatch.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not visible from COM.">
        <paramref name="t" /> não é visível do COM.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
      <summary vsli:raw="Returns a managed object of a specified type that represents a COM object.">Retorna um objeto gerenciado de um tipo especificado que representa um objeto COM.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface of the unmanaged object.">Um ponteiro para a interface <see langword="IUnknown" /> do objeto não gerenciado.</param>
      <param name="t" vsli:raw="The type of the requested managed class.">O tipo da classe gerenciada solicitada.</param>
      <returns vsli:raw="An instance of the class corresponding to the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the requested unmanaged COM object.">Uma instância da classe correspondente ao objeto <see cref="T:System.Type" /> que representa o objeto COM não gerenciado solicitado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not attributed with &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">
        <paramref name="t" /> não está atribuído com <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.
- ou -
<paramref name="t" /> é um tipo Tempo de Execução do Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
      <summary vsli:raw="Returns the type associated with the specified class identifier (CLSID).">Retorna o tipo associado ao CLSID (identificador de classe) especificado.</summary>
      <param name="clsid" vsli:raw="The CLSID of the type to return.">O CLSID do tipo a ser retornado.</param>
      <returns vsli:raw="&lt;see langword=&quot;System.__ComObject&quot; /&gt; regardless of whether the CLSID is valid.">
        <see langword="System.__ComObject" /> independentemente do CLSID ser válido.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
      <summary vsli:raw="Retrieves the name of the type represented by an ITypeInfo object.">Recupera o nome do tipo representado por um objeto ITypeInfo.</summary>
      <param name="typeInfo" vsli:raw="An object that represents an &lt;see langword=&quot;ITypeInfo&quot; /&gt; pointer.">Um objeto que representa um ponteiro <see langword="ITypeInfo" />.</param>
      <returns vsli:raw="The name of the type that the &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter points to.">O nome do tipo para o qual o parâmetro <paramref name="typeInfo" /> aponta.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="typeInfo" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Creates a unique Runtime Callable Wrapper (RCW) object for a given IUnknown interface.">Cria um único objeto RCW (Runtime Callable Wrapper) para determinada interface IUnknown.</summary>
      <param name="unknown" vsli:raw="A managed pointer to an &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Um ponteiro gerenciado para uma interface <see langword="IUnknown" />.</param>
      <returns vsli:raw="A unique RCW for the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Um RCW exclusivo para a interface <see langword="IUnknown" /> especificada.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
      <summary vsli:raw="Indicates whether a specified object represents a COM object.">Indica se um objeto especificado representa um objeto COM.</summary>
      <param name="o" vsli:raw="The object to check.">O objeto a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;o&quot; /&gt; parameter is a COM type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o parâmetro <paramref name="o" /> for um tipo COM; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
      <summary vsli:raw="Indicates whether a type is visible to COM clients.">Indica se um tipo é visível para clientes do COM.</summary>
      <param name="t" vsli:raw="The type to check for COM visibility.">O tipo para verificar se há visibilidade do COM.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type is visible to COM; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo for visível para COM; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
      <summary vsli:raw="Returns the field offset of the unmanaged form of the managed class.">Retorna o deslocamento de campo do formulário não gerenciado da classe gerenciada.</summary>
      <param name="t" vsli:raw="A value type or formatted reference type that specifies the managed class. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; to the class.">Um tipo de valor ou tipo de referência formatada que especifica a classe gerenciada. Você deve aplicar o <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> à classe.</param>
      <param name="fieldName" vsli:raw="The field within the &lt;paramref name=&quot;t&quot; /&gt; parameter.">O campo dentro do parâmetro <paramref name="t" />.</param>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">O deslocamento, em bytes, para o parâmetro <paramref name="fieldName" /> dentro da classe especificada que é declarado pela invocação de plataforma.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The class cannot be exported as a structure or the field is nonpublic. Beginning with the .NET Framework version 2.0, the field may be private.">A classe não pode ser exportada, visto que uma estrutura ou o campo é confidencial. A partir do .NET Framework versão 2.0, o campo pode ser privado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="t" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the field offset of the unmanaged form of a specified managed class.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Retorna o deslocamento de campo do formulário não gerenciado de uma classe gerenciada especificada.</summary>
      <param name="fieldName" vsli:raw="The name of the field in the &lt;paramref name=&quot;T&quot; /&gt; type.">O nome do campo no tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A managed value type or formatted reference type. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; attribute to the class.">Um tipo de valor gerenciado ou tipo de referência formatado. Você deve aplicar o atributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> à classe.</typeparam>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">O deslocamento, em bytes, para o parâmetro <paramref name="fieldName" /> dentro da classe especificada que é declarado pela invocação de plataforma.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
      <summary vsli:raw="Executes one-time method setup tasks without calling the method.">Executa tarefas de configuração de método de uso único sem chamar o método.</summary>
      <param name="m" vsli:raw="The method to be checked.">O método a ser verificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="m" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object.">O parâmetro <paramref name="m" /> não é um objeto <see cref="T:System.Reflection.MethodInfo" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
      <summary vsli:raw="Performs a pre-link check for all methods on a class.">Executa uma verificação de pré-vínculo para todos os métodos em uma classe.</summary>
      <param name="c" vsli:raw="The class whose methods are to be checked.">A classe cujos métodos devem ser verificados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;c&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="c" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
      <summary vsli:raw="Copies all characters up to the first null character from an unmanaged ANSI or UTF-8 string to a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, and widens each character to UTF-16.">Copia todos os caracteres até o primeiro caractere nulo de uma cadeia de caracteres ANSI não gerenciada para um <see cref="T:System.String" /> gerenciado e amplia cada caractere ANSI para Unicode.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">O endereço do primeiro caractere da cadeia de caracteres não gerenciada.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string. If &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns a null string.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres ANSI não gerenciada. Se <paramref name="ptr" /> for <see langword="null" />, o método retornará uma cadeia de caracteres nula.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, copies a specified number of characters from an unmanaged ANSI or UTF-8 string into it, and widens each character to UTF-16.">Aloca um <see cref="T:System.String" /> gerenciado, copia um número especificado de caracteres de uma cadeia de caracteres ANSI não gerenciada para ele e amplia cada caractere ANSI para Unicode.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">O endereço do primeiro caractere da cadeia de caracteres não gerenciada.</param>
      <param name="len" vsli:raw="The byte count of the input string to copy.">O número de bytes da cadeia de caracteres de entrada a ser copiado.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres ANSI nativa se o valor do parâmetro <paramref name="ptr" /> não for <see langword="null" />; caso contrário, esse método retornará <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">
        <paramref name="len" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from a string stored in unmanaged memory into it.">Aloca um <see cref="T:System.String" /> gerenciado e copia todos os caracteres até o primeiro caractere nulo de uma cadeia de caracteres armazenada na memória não gerenciada para ele.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Para plataformas Unicode, o endereço do primeiro caractere Unicode.
- ou -
Para plataformas ANSI, o endereço do primeiro caractere ANSI.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres não gerenciada, se o valor do <paramref name="ptr" /> parâmetro não é <see langword="null" />; caso contrário, esse método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies the specified number of characters from a string stored in unmanaged memory into it.">Aloca um <see cref="T:System.String" /> gerenciado e copia para ele o número especificado de caracteres de uma cadeia de caracteres armazenada na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Para plataformas Unicode, o endereço do primeiro caractere Unicode.
- ou -
Para plataformas ANSI, o endereço do primeiro caractere ANSI.</param>
      <param name="len" vsli:raw="The number of characters to copy.">O número de caracteres a serem copiados.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres nativa se o valor do parâmetro <paramref name="ptr" /> não for <see langword="null" />; caso contrário, esse método retornará <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">
        <paramref name="len" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a binary string (BSTR) stored in unmanaged memory into it.">Aloca um <see cref="T:System.String" /> gerenciado e copia para ele uma BSTR (cadeia de caracteres binária) armazenada na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">O endereço do primeiro caractere da cadeia de caracteres não gerenciada.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string.">Uma cadeia de caracteres gerenciada que contém uma cópia da cadeia de caracteres não gerenciada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; equals &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">
        <paramref name="ptr" /> é igual a <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from an unmanaged Unicode string into it.">Aloca uma <see cref="T:System.String" /> gerenciada e copia para ela todos os caracteres até o primeiro caractere nulo de uma cadeia de caracteres Unicode não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">O endereço do primeiro caractere da cadeia de caracteres não gerenciada.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres não gerenciada, se o valor do <paramref name="ptr" /> parâmetro não é <see langword="null" />; caso contrário, esse método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a specified number of characters from an unmanaged Unicode string into it.">Aloca uma <see cref="T:System.String" /> gerenciada e copia nela um número especificado de caracteres de uma cadeia de caracteres Unicode não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">O endereço do primeiro caractere da cadeia de caracteres não gerenciada.</param>
      <param name="len" vsli:raw="The number of Unicode characters to copy.">O número de caracteres Unicode a ser copiado.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Uma cadeia de caracteres gerenciada que mantém uma cópia da cadeia de caracteres não gerenciada, se o valor do <paramref name="ptr" /> parâmetro não é <see langword="null" />; caso contrário, esse método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
      <param name="byteLen" vsli:raw="The number of bytes to copy." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a managed object.">Realizar o marshaling de dados de um bloco de memória não gerenciado para um objeto gerenciado.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied. This must be an instance of a formatted class.">O objeto para o qual os dados serão copiados. Isso deve ser uma instância de uma classe formatada.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; Structure is a boxed value type.">O layout da estrutura não é sequencial nem explícito.
- ou -
Estrutura é um tipo de valor demarcado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.">Realiza marshal de dados de um bloco não gerenciado de memória para um objeto gerenciado recém-alocado do tipo especificado.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <param name="structureType" vsli:raw="The type of object to be created. This object must represent a formatted class or a structure.">O tipo de objeto a ser criado. Esse objeto deve representar uma classe ou estrutura formatada.</param>
      <returns vsli:raw="A managed object containing the data pointed to by the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Um objeto gerenciado que contém os dados apontados pelo parâmetro <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;structureType&quot; /&gt; parameter layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;structureType&quot; /&gt; parameter is a generic type definition.">O layout do parâmetro <paramref name="structureType" /> não é sequencial ou explícito.
- ou -
O parâmetro <paramref name="structureType" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="structureType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;paramref name=&quot;structureType&quot; /&gt; does not have an accessible parameterless constructor.">A classe especificada por <paramref name="structureType" /> não tem um construtor sem parâmetros acessível.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Realiza marshaling de dados de um bloco não gerenciado de memória para um objeto gerenciado recém-alocado do tipo especificado por um parâmetro de tipo genérico.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <typeparam name="T" vsli:raw="The type of the object to which the data is to be copied. This must be a formatted class or a structure.">O tipo do objeto para o qual os dados serão copiados. Isso deve ser uma classe formatada ou uma estrutura.</typeparam>
      <returns vsli:raw="A managed object that contains the data that the &lt;paramref name=&quot;ptr&quot; /&gt; parameter points to.">Um objeto gerenciado que contém os dados que o parâmetro <paramref name="ptr" /> aponta.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The layout of &lt;typeparamref name=&quot;T&quot; /&gt; is not sequential or explicit.">O layout do <typeparamref name="T" /> não é sequencial nem explícito.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;typeparamref name=&quot;T&quot; /&gt; does not have an accessible parameterless constructor.">A classe especificada por <typeparamref name="T" /> não tem um construtor sem parâmetros acessível.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a managed object of the specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Realiza marshaling de dados de um bloco não gerenciado de memória para um objeto gerenciado do tipo especificado.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Um ponteiro para um bloco não gerenciado de memória.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied.">O objeto para o qual os dados serão copiados.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;structure&quot; /&gt;. This must be a formatted class.">O tipo de <paramref name="structure" />. Isso deve ser uma classe formatada.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.">O layout da estrutura não é sequencial nem explícito.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Requests a pointer to a specified interface from a COM object.">Solicita um ponteiro para uma interface especificada de um objeto COM.</summary>
      <param name="pUnk" vsli:raw="The interface to be queried.">A interface a ser consultada.</param>
      <param name="iid" vsli:raw="The interface identifier (IID) of the requested interface.">O IID (identificador de interface) da interface solicitada.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the returned interface.">Quando este método retorna, ele contém uma referência à interface retornada.</param>
      <returns vsli:raw="An HRESULT that indicates the success or failure of the call.">Um HRESULT que indica o êxito ou falha da chamada.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
      <summary vsli:raw="Reads a single byte from unmanaged memory.">Lê um único byte da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">O endereço na memória não gerenciada do qual ler.</param>
      <returns vsli:raw="The byte read from unmanaged memory.">O byte lido da memória não gerenciada.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Lê um único byte em um determinado deslocamento (ou índice) de memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">O endereço básico na memória não gerenciada no qual a leitura será realizada.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">O byte lido da memória não gerenciada em um determinado deslocamento.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Lê um único byte em um determinado deslocamento (ou índice) de memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">O endereço básico em memória não gerenciada do objeto de origem.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">O byte lido da memória não gerenciada em um determinado deslocamento.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
      <summary vsli:raw="Reads a 16-bit signed integer from unmanaged memory.">Lê um inteiro com sinal de 16 bits da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">O endereço na memória não gerenciada do qual ler.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory.">O inteiro com sinal de 16 bits da memória não gerenciada.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 16 bits em um determinado deslocamento da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">O endereço básico na memória não gerenciada no qual a leitura será realizada.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">O inteiro com sinal de 16 bits lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 16 bits em um determinado deslocamento da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">O endereço básico em memória não gerenciada do objeto de origem.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">O inteiro com sinal de 16 bits lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
      <summary vsli:raw="Reads a 32-bit signed integer from unmanaged memory.">Lê um inteiro com sinal de 32 bits da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">O endereço na memória não gerenciada do qual ler.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">O inteiro com sinal de 32 bits da memória não gerenciada.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 32 bits em um deslocamento fornecido na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">O endereço básico na memória não gerenciada no qual a leitura será realizada.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">O inteiro com sinal de 32 bits da memória não gerenciada.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 32 bits em um deslocamento fornecido na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">O endereço básico em memória não gerenciada do objeto de origem.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory at the given offset.">O inteiro com sinal de 32 bits lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
      <summary vsli:raw="Reads a 64-bit signed integer from unmanaged memory.">Lê um inteiro com sinal de 64 bits da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">O endereço na memória não gerenciada do qual ler.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory.">O inteiro com sinal de 64 bits da memória não gerenciada.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 64 bits em um determinado deslocamento da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">O endereço básico na memória não gerenciada no qual a leitura será realizada.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">O inteiro com sinal de 64 bits lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Lê um inteiro com sinal de 64 bits em um determinado deslocamento da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">O endereço básico em memória não gerenciada do objeto de origem.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">O inteiro com sinal de 64 bits lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
      <summary vsli:raw="Reads a processor native-sized integer from unmanaged memory.">Lê um inteiro de tamanho nativo de processador da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">O endereço na memória não gerenciada do qual ler.</param>
      <returns vsli:raw="The integer read from unmanaged memory. A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.">O inteiro lido da memória não gerenciada. Um inteiro de 32 bits é retornado em computadores de 32 bits e um inteiro de 64 bits é retornado em computadores de 64 bits.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer at a given offset from unmanaged memory.">Lê um inteiro de tamanho nativo de processador em um determinado deslocamento da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">O endereço básico na memória não gerenciada no qual a leitura será realizada.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">O inteiro lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer from unmanaged memory.">Lê um inteiro dimensionado nativo do processador da memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">O endereço básico em memória não gerenciada do objeto de origem.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Um deslocamento de byte adicional, adicionado ao parâmetro <paramref name="ptr" /> antes de ler.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">O inteiro lido da memória não gerenciada no deslocamento especificado.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Redimensiona um bloco de memória alocado anteriormente com <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Um ponteiro para a memória alocada com <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block.">O novo tamanho do bloco alocado.</param>
      <returns vsli:raw="An integer representing the address of the reallocated block of memory. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Um inteiro que representa o endereço do bloco de memória realocado. Essa memória deve ser liberada com <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Não há memória suficiente para atender à solicitação.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Redimensiona um bloco de memória alocado anteriormente com <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Um ponteiro para a memória alocada com <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block. This is not a pointer; it is the byte count you are requesting, cast to type &lt;see cref=&quot;T:System.IntPtr&quot; /&gt;. If you pass a pointer, it is treated as a size.">O novo tamanho do bloco alocado. Este não é um ponteiro; é a contagem de bytes que você está solicitando, convertido para tipo <see cref="T:System.IntPtr" />. Se você transmitir um ponteiro, ele será tratado como um tamanho.</param>
      <returns vsli:raw="A pointer to the reallocated memory. This memory must be released using &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt;.">Um ponteiro para a memória realocada. Essa memória deve ser liberada usando <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Não há memória suficiente para atender à solicitação.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
      <summary vsli:raw="Decrements the reference count on the specified interface.">Diminui a contagem de referência na interface especificada.</summary>
      <param name="pUnk" vsli:raw="The interface to release.">A interface a ser liberada.</param>
      <returns vsli:raw="The new value of the reference count on the interface specified by the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">O novo valor da contagem de referência na interface especificada pelo parâmetro <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
      <summary vsli:raw="Decrements the reference count of the Runtime Callable Wrapper (RCW) associated with the specified COM object.">Diminui a contagem de referência do RCW (Runtime Callable Wrapper) associado ao objeto COM especificado.</summary>
      <param name="o" vsli:raw="The COM object to release.">O objeto COM a ser liberado.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with &lt;paramref name=&quot;o&quot; /&gt;. This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.">O novo valor da contagem de referência do RCW associado ao <paramref name="o" />. Normalmente, esse valor é zero, pois o RCW mantém apenas uma referência ao objeto COM encapsulado, independentemente do número de clientes gerenciados que estejam chamando-o.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">O <paramref name="o" /> não é um objeto COM válido.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="o" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
      <summary vsli:raw="Allocates an unmanaged binary string (BSTR) and copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into it.">Aloca uma BSTR (cadeia de caracteres binária) não gerenciada copia os conteúdos de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para ela.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia o conteúdo de um <see cref="T:System.Security.SecureString" /> gerenciado para a memória não gerenciada, convertendo em formato ANSI durante a cópia.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para uma memória não gerenciada.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">O endereço, na memória não gerenciada, para o qual <paramref name="s" /> foi copiado ou 0, se <paramref name="s" /> for um objeto <see cref="T:System.Security.SecureString" /> cujo tamanho é 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Sets data referenced by the specified key in the specified COM object.">Define os dados referenciados pela chave especificada no objeto COM especificado.</summary>
      <param name="obj" vsli:raw="The COM object in which to store the data.">O objeto COM no qual armazenar os dados.</param>
      <param name="key" vsli:raw="The key in the internal hash table of the COM object in which to store the data.">A chave na tabela de hash interna do objeto COM na qual armazenar os dados.</param>
      <param name="data" vsli:raw="The data to set.">Os dados a serem definidos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data was set successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dados tiverem sido definidos com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> é <see langword="null" />.
- ou -
<paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> não é um objeto COM.
- ou -
<paramref name="obj" /> é um objeto Tempo de Execução do Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
      <summary vsli:raw="Returns the unmanaged size of an object in bytes.">Retorna o tamanho não gerenciado de um objeto em bytes.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">O objeto cujo tamanho deve ser retornado.</param>
      <returns vsli:raw="The size of the specified object in unmanaged code.">O tamanho do objeto especificado em código não gerenciado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="structure" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
      <summary vsli:raw="Returns the size of an unmanaged type in bytes.">Retorna o tamanho de um tipo não gerenciado em bytes.</summary>
      <param name="t" vsli:raw="The type whose size is to be returned.">O tipo cujo tamanho deve ser retornado.</param>
      <returns vsli:raw="The size of the specified type in unmanaged code.">O tamanho do tipo especificado no código não gerenciado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is a generic type definition.">O parâmetro <paramref name="t" /> é uma definição de tipo genérico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="t" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the size of an unmanaged type in bytes.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Retorna o tamanho de um tipo não gerenciado em bytes.</summary>
      <typeparam name="T" vsli:raw="The type whose size is to be returned.">O tipo cujo tamanho deve ser retornado.</typeparam>
      <returns vsli:raw="The size, in bytes, of the type that is specified by the &lt;typeparamref name=&quot;T&quot; /&gt; generic type parameter.">O tamanho, em bytes, do tipo especificado pelo parâmetro de tipo genérico <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the unmanaged size of an object of a specified type in bytes.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Retorna o tamanho não gerenciado de um objeto de um tipo especificado em bytes.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">O objeto cujo tamanho deve ser retornado.</param>
      <typeparam name="T" vsli:raw="The type of the &lt;paramref name=&quot;structure&quot; /&gt; parameter.">O tipo do parâmetro <paramref name="structure" />.</typeparam>
      <returns vsli:raw="The size, in bytes, of the specified object in unmanaged code.">O tamanho, em bytes, do objeto especificado em código não gerenciado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="structure" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
      <summary vsli:raw="Allocates a BSTR and copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into it.">Aloca um BSTR e copia o conteúdo de um <see cref="T:System.String" /> gerenciado para ele.</summary>
      <param name="s" vsli:raw="The managed string to be copied.">A cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="An unmanaged pointer to the &lt;see langword=&quot;BSTR&quot; /&gt;, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is null.">Um ponteiro não gerenciado para o <see langword="BSTR" /> ou 0, se <paramref name="s" /> for nulo.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">O tamanho de <paramref name="s" /> está fora do intervalo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Um inteiro que representa um ponteiro para o bloco de memória alocado na cadeia de caracteres ou 0, se <paramref name="s" /> for <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">O parâmetro <paramref name="s" /> excede o tamanho máximo permitido pelo sistema operacional.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="The allocated memory block, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O bloco de memória alocada ou 0, se <paramref name="s" /> for <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">O tamanho de <paramref name="s" /> está fora do intervalo.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if s is &lt;see langword=&quot;null&quot; /&gt;.">Um inteiro que representa um ponteiro para o bloco de memória alocado na cadeia de caracteres ou 0, se s for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">O parâmetro <paramref name="s" /> excede o tamanho máximo permitido pelo sistema operacional.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)">
      <param name="s" vsli:raw="A managed string to be copied." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para a memória não gerenciada, convertendo em formato ANSI durante a cópia.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O endereço, na memória não gerenciada, para o qual <paramref name="s" /> foi copiado ou 0 se <paramref name="s" /> for <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">O parâmetro <paramref name="s" /> excede o tamanho máximo permitido pelo sistema operacional.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format if required.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para a memória não gerenciada, convertendo para formato ANSI, se necessário.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the string was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O endereço, na memória não gerenciada, para o qual a cadeia de caracteres foi copiada ou 0, se <paramref name="s" /> for <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory.">Copia o conteúdo de um <see cref="T:System.String" /> gerenciado para uma memória não gerenciada.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Uma cadeia de caracteres gerenciada a ser copiada.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O endereço, na memória não gerenciada, para o qual <paramref name="s" /> foi copiado ou 0 se <paramref name="s" /> for <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="The method could not allocate enough native heap memory.">Não foi possível para o método alocar memória suficiente de heap nativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">O parâmetro <paramref name="s" /> excede o tamanho máximo permitido pelo sistema operacional.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
      <summary vsli:raw="Marshals data from a managed object to an unmanaged block of memory.">Realizar o marshaling de dados de um objeto gerenciado para um bloco não gerenciado de memória.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. This object must be a structure or an instance of a formatted class.">Um objeto gerenciado que mantém os dados que terão o marshaling realizado. Este objeto deve ser uma estrutura ou uma instância de uma classe formatada.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Um ponteiro para um bloco não gerenciado de memória, que deve ser alocado antes que este método seja chamado.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">
        <see langword="true" /> para chamar o método <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> no parâmetro <paramref name="ptr" /> antes de esse método copiar os dados. O bloco deve conter dados válidos. Observe que passar <see langword="false" /> quando o bloco de memória já contém dados pode levar a um vazamento de memória.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;structure&quot; /&gt; is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).">
        <paramref name="structure" /> é um tipo de referência que não é uma classe formatada.
- ou -
<paramref name="structure" /> é uma instância de um tipo genérico (somente no .NET Framework 4.5 e versões anteriores).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from a managed object of a specified type to an unmanaged block of memory.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Realiza marshaling de dados de um objeto gerenciado de um tipo especificado para um bloco de memória não gerenciado.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. The object must be a structure or an instance of a formatted class.">Um objeto gerenciado que mantém os dados que terão o marshaling realizado. O objeto deve ser uma estrutura ou uma instância de uma classe formatada.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Um ponteiro para um bloco não gerenciado de memória, que deve ser alocado antes que este método seja chamado.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">
        <see langword="true" /> para chamar o método <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> no parâmetro <paramref name="ptr" /> antes de esse método copiar os dados. O bloco deve conter dados válidos. Observe que passar <see langword="false" /> quando o bloco de memória já contém dados pode levar a um vazamento de memória.</param>
      <typeparam name="T" vsli:raw="The type of the managed object.">O tipo do objeto gerenciado.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.">
        <paramref name="structure" /> é um tipo de referência que não é uma classe formatada.</exception>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
      <summary vsli:raw="Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems. This field is read-only.">Representa o tamanho de caractere padrão do sistema; o padrão é 2 para sistemas Unicode e 1 para sistemas ANSI. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
      <summary vsli:raw="Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system. This field is read-only.">Representa o tamanho máximo de um tamanho DBCS (conjunto de caracteres de byte duplo), em bytes, para o sistema operacional atual. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT value.">Aciona uma exceção com uma valor HRESULT de falha específico.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">O HRESULT correspondente à exceção desejada.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT, based on the specified IErrorInfo interface.">Gera uma exceção com uma falha específica HRESULT com base na interface IErrorInfo especificada.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">O HRESULT correspondente à exceção desejada.</param>
      <param name="errorInfo" vsli:raw="A pointer to the IErrorInfo interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current IErrorInfo interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current IErrorInfo interface and construct the exception just from the error code.">Um ponteiro para a interface IErrorInfo que fornece mais informações sobre o erro. Você pode especificar <c>IntPtr(0)</c> para usar a interface IErrorInfo atual ou <c>IntPtr(-1)</c> para ignorar a interface IErrorInfo atual e construir a exceção com base apenas no código de erro.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
      <summary vsli:raw="Gets the address of the element at the specified index inside the specified array.">Obtém o endereço do elemento no índice especificado na matriz especificada.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">A matriz que contém o elemento desejado.</param>
      <param name="index" vsli:raw="The index in the &lt;paramref name=&quot;arr&quot; /&gt; parameter of the desired element.">O índice no parâmetro <paramref name="arr" /> do elemento desejado.</param>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; inside &lt;paramref name=&quot;arr&quot; /&gt;.">O endereço de <paramref name="index" /> dentro de <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Gets the address of the element at the specified index in an array of a specified type.">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]
Obtém o endereço do elemento no índice especificado em uma matriz de um tipo especificado.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">A matriz que contém o elemento desejado.</param>
      <param name="index" vsli:raw="The index of the desired element in the &lt;paramref name=&quot;arr&quot; /&gt; array.">O índice do elemento desejado na matriz <paramref name="arr" />.</param>
      <typeparam name="T" vsli:raw="The type of the array.">O tipo da matriz.</typeparam>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; in &lt;paramref name=&quot;arr&quot; /&gt;.">O endereço de <paramref name="index" /> em <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory.">Grava um valor de byte único na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Grava um valor de byte único na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">O endereço básico na memória não gerenciada no qual gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Grava um valor de byte único na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
      <summary vsli:raw="Writes a character as a 16-bit integer value to unmanaged memory.">Grava um caractere como um valor inteiro de 16 bits na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer value to unmanaged memory.">Grava um valor inteiro de 16 bits na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 16 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in the native heap to write to.">O endereço básico no heap nativo no qual gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value into unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 16 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">O endereço básico na memória não gerenciada no qual gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 16 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 16 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory.">Grava um valor inteiro com sinal de 32 bits na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value into unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 32 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">O endereço básico na memória não gerenciada no qual gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 32 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 64 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write.">O endereço básico na memória não gerenciada a gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory.">Grava um valor inteiro com sinal de 64 bits na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Grava um valor inteiro com sinal de 64 bits na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native-sized integer value to unmanaged memory at a specified offset.">Grava um valor de inteiro de tamanho nativo de processador na memória não gerenciada em um deslocamento especificado.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">O endereço básico na memória não gerenciada no qual gravar.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value into unmanaged memory.">Grava um valor de inteiro de tamanho nativo de processador na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">O endereço a ser gravado na memória não gerenciada.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> não é um formato reconhecido.
- ou -
<paramref name="ptr" /> é <see langword="null" />.
- ou -
<paramref name="ptr" /> é inválido.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value to unmanaged memory.">Grava um valor de inteiro de tamanho nativo de processador na memória não gerenciada.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">O endereço básico em memória não gerenciada do objeto de destino.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Um deslocamento de byte adicional, que é adicionado para o parâmetro <paramref name="ptr" /> antes de gravar.</param>
      <param name="val" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">O endereço básico (<paramref name="ptr" />) e o deslocamento de byte (<paramref name="ofs" />) produz um endereço nulo ou inválido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">
        <paramref name="ptr" /> é um objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Esse método não aceita parâmetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a BSTR pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)&quot; /&gt; method.">Libera um ponteiro BSTR que foi alocado usando o método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the &lt;see langword=&quot;BSTR&quot; /&gt; to free.">O endereço do <see langword="BSTR" /> a ser liberado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)&quot; /&gt; method.">Libera um ponteiro de cadeia de caracteres não gerenciado alocado usando o método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">O endereço da cadeia de caracteres não gerenciada a liberar.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)&quot; /&gt; method.">Libera um ponteiro de cadeia de caracteres não gerenciado alocado usando o método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">O endereço da cadeia de caracteres não gerenciada a liberar.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)">
      <param name="s" vsli:raw="The address of the unmanaged string to free." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)&quot; /&gt; method.">Libera um ponteiro de cadeia de caracteres não gerenciado alocado usando o método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">O endereço da cadeia de caracteres não gerenciada a liberar.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)&quot; /&gt; method.">Libera um ponteiro de cadeia de caracteres não gerenciado alocado usando o método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">O endereço da cadeia de caracteres não gerenciada a liberar.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalAsAttribute">
      <summary vsli:raw="Indicates how to marshal the data between managed and unmanaged code.">Indica como realizar marshaling de dados entre código gerenciado e não gerenciado.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> especificado.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">O valor com o qual deve ser realizado o marshalling dos dados.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; enumeration member.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> com o membro de enumeração <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> especificado.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">O valor com o qual deve ser realizado o marshalling dos dados.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
      <summary vsli:raw="Specifies the element type of the unmanaged &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.LPArray&quot; /&gt; or &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.ByValArray&quot; /&gt;.">Especifica o tipo de elemento do <see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /> não gerenciado ou <see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
      <summary vsli:raw="Specifies the parameter index of the unmanaged &lt;see langword=&quot;iid_is&quot; /&gt; attribute used by COM.">Especifica o índice do parâmetro do atributo <see langword="iid_is" /> não gerenciado usado por COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
      <summary vsli:raw="Provides additional information to a custom marshaler.">Fornece informações adicionais para um marshaler personalizado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
      <summary vsli:raw="Specifies the fully qualified name of a custom marshaler.">Especifica o nome totalmente qualificado de um marshaler personalizado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
      <summary vsli:raw="Implements &lt;see cref=&quot;F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&quot; /&gt; as a type.">Implementa <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> como um tipo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
      <summary vsli:raw="Indicates the element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica o tipo de elemento de <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
      <summary vsli:raw="Indicates the user-defined element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica o tipo de elemento definido pelo usuário do <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
      <summary vsli:raw="Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.">Indica o número de elementos na matriz de comprimento fixo ou o número de caracteres (não em bytes) em uma cadeia de caracteres a importar.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
      <summary vsli:raw="Indicates the zero-based parameter that contains the count of array elements, similar to &lt;see langword=&quot;size_is&quot; /&gt; in COM.">Indica o parâmetro baseado em zero que contém a contagem de elementos da matriz, semelhante a <see langword="size_is" /> em COM.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">Obtém o valor <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> como o qual deve ser realizado o mashal dos dados.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">O <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> valor como os dados serão empacotados como.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalDirectiveException">
      <summary vsli:raw="The exception that is thrown by the marshaler when it encounters a &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; it does not support.">A exceção que é lançada pelo marshaler quando este encontra um <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> ao qual não oferece suporte.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with default properties.">Inicializa uma nova instância da classe <see langword="MarshalDirectiveException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see langword="MarshalDirectiveException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see langword="MarshalDirectiveException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that specifies the reason for the exception.">A mensagem de erro que especifica a razão da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalDirectiveException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.MarshalDirectiveException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.NativeLibrary">
      <summary vsli:raw="Provides APIs for managing native libraries.">Fornece APIs para gerenciar bibliotecas nativas.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)">
      <summary vsli:raw="Frees a loaded library with the specified OS handle, or takes no action if the input handle is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">Liberará uma biblioteca carregada com o identificador de SO especificado ou não executará nenhuma ação se o identificador de entrada for <see cref="F:System.IntPtr.Zero" />.</summary>
      <param name="handle" vsli:raw="The native library OS handle to be freed.">O identificador de SO da biblioteca nativa a ser liberado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)">
      <summary vsli:raw="Gets the address of an exported symbol.">Obtém o endereço de um símbolo exportado.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">O identificador de SO da biblioteca nativa.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">O nome do símbolo exportado.</param>
      <returns vsli:raw="The address of the symbol.">O endereço do símbolo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> ou <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.EntryPointNotFoundException" vsli:raw="The symbol is not found.">O símbolo não é encontrado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)">
      <summary vsli:raw="Provides a simple API for loading a native library that wraps the OS loader and uses default flags.">Fornece uma API de exemplo para carregar uma biblioteca nativa que encapsula o carregador do sistema operacional e usa sinalizadores padrão.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">O nome da biblioteca nativa a ser carregada.</param>
      <returns vsli:raw="The OS handle for the loaded native library.">O identificador de SO da biblioteca nativa carregada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> é <see langword="null" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">A biblioteca não pode ser encontrada.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">A biblioteca não é válida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
      <summary vsli:raw="Provides a high-level API for loading a native library.">Fornece uma API de alto nível para carregar uma biblioteca nativa.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">O nome da biblioteca nativa a ser carregada.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">O assembly que está carregando a biblioteca nativa.</param>
      <param name="searchPath" vsli:raw="The search path.">O caminho de pesquisa.</param>
      <returns vsli:raw="The OS handle for the loaded library.">O identificador de SO da biblioteca carregada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryName&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryName" /> ou <paramref name="assembly" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> não é um <see langword="RuntimeAssembly" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">A biblioteca não pode ser encontrada.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">A biblioteca não é válida.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)">
      <summary vsli:raw="Sets a callback for resolving native library imports from an assembly.">Define um retorno de chamada para resolver importações de biblioteca nativa de um assembly.</summary>
      <param name="assembly" vsli:raw="The assembly for which the resolver is registered.">O assembly para o qual o resolvedor está registrado.</param>
      <param name="resolver" vsli:raw="The resolver callback to register.">O retorno de chamada do resolvedor a ser registrado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; or &lt;paramref name=&quot;resolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> ou paramref name="resolver" /&gt; é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A resolver is already set for this assembly.">Um resolvedor já foi definido para este assembly.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)">
      <summary vsli:raw="Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.">Obtém o endereço de um símbolo exportado e retorna um valor que indica se a chamada do método foi bem-sucedida.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">O identificador de SO da biblioteca nativa.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">O nome do símbolo exportado.</param>
      <param name="address" vsli:raw="When the method returns, contains the symbol address, if it exists.">Quando o método for retornado, conterá o endereço do símbolo, se existir.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the address of the exported symbol was found successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o método foi retornado com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> ou <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)">
      <summary vsli:raw="Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.">Fornece uma API simples para carregar uma biblioteca nativa e retorna um valor que indica se a operação foi bem-sucedida.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">O nome da biblioteca nativa a ser carregada.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">Quando o método é retornado, o identificador de SO da biblioteca nativa carregada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a biblioteca nativa foi carregada com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)">
      <summary vsli:raw="Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.">Fornece uma API de alto nível que carrega uma biblioteca nativa e retorna um valor que indica se a operação foi bem-sucedida.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">O nome da biblioteca nativa a ser carregada.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">O assembly que está carregando a biblioteca nativa.</param>
      <param name="searchPath" vsli:raw="The search path.">O caminho de pesquisa.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">Quando o método é retornado, o identificador de SO da biblioteca nativa carregada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a operação de carregamento foi bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="libraryPath" /> ou <paramref name="assembly" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> não é um <see langword="RuntimeAssembly" />.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.OptionalAttribute">
      <summary vsli:raw="Indicates that a parameter is optional.">Indica que um parâmetro é opcional.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OptionalAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;OptionalAttribute&quot; /&gt; class with default values.">Inicializa uma nova instância da classe <see langword="OptionalAttribute" /> com valores padrão.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PreserveSigAttribute">
      <summary vsli:raw="Indicates that the HRESULT signature transformation that takes place during COM interop calls should be suppressed.">Indica que o HRESULT ou a transformação de assinatura de <see langword="retval" /> que ocorre durante as chamadas de interoperabilidade COM deve ser suprimida.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PreserveSigAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
      <summary vsli:raw="Indicates that the attributed assembly is a primary interop assembly.">Indica que o assembly atribuído é um assembly de interoperabilidade primário.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute&quot; /&gt; class with the major and minor version numbers of the type library for which this assembly is the primary interop assembly.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute" /> com os números de versão primária e secundária da biblioteca de tipos para a qual este assembly é o assembly de interoperabilidade primário.</summary>
      <param name="major" vsli:raw="The major version of the type library for which this assembly is the primary interop assembly.">A versão principal da biblioteca de tipos para a qual este assembly é o assembly de interoperabilidade primário.</param>
      <param name="minor" vsli:raw="The minor version of the type library for which this assembly is the primary interop assembly.">A versão secundária da biblioteca de tipos para a qual este assembly é o assembly de interoperabilidade primário.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library for which this assembly is the primary interop assembly.">Obtém o número de versão principal da biblioteca de tipos para a qual este assembly é o assembly de interoperabilidade primário.</summary>
      <returns vsli:raw="The major version number of the type library for which this assembly is the primary interop assembly.">O número de versão principal da biblioteca de tipos para a qual esse assembly é o assembly de interoperabilidade primário.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library for which this assembly is the primary interop assembly.">Obtém o número de versão secundária da biblioteca de tipos para a qual este assembly é o assembly de interoperabilidade primário.</summary>
      <returns vsli:raw="The minor version number of the type library for which this assembly is the primary interop assembly.">O número de versão secundária da biblioteca de tipos para a qual esse assembly é o assembly de interoperabilidade primário.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ProgIdAttribute">
      <summary vsli:raw="Allows the user to specify the ProgID of a class.">Permite que o usuário especifique o ProgID de uma classe.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ProgIdAttribute&quot; /&gt; with the specified ProgID.">Inicializa uma nova instância do <see langword="ProgIdAttribute" /> com a ProgID especificada.</summary>
      <param name="progId" vsli:raw="The ProgID to be assigned to the class.">A ProgID a ser atribuída à classe.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
      <summary vsli:raw="Gets the ProgID of the class.">Obtém a ProgID da classe.</summary>
      <returns vsli:raw="The ProgID of the class.">O ProgID da classe.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeEnvironment">
      <summary vsli:raw="Provides a collection of &lt;see langword=&quot;static&quot; /&gt; methods that return information about the common language runtime environment.">Fornece uma coleção de métodos <see langword="static" /> que retornam informações sobre o ambiente de Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.FromGlobalAccessCache(System.Reflection.Assembly)">
      <summary vsli:raw="Tests whether the specified assembly is loaded in the global assembly cache.">Testa se o assembly especificado é carregado no cache de assembly global.</summary>
      <param name="a" vsli:raw="The assembly to test.">O assembly a ser testado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the assembly is loaded in the global assembly cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o assembly for carregado no cache de assembly global; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeDirectory">
      <summary vsli:raw="Returns the directory where the common language runtime is installed.">Retorna o diretório no qual o Common Language Runtime está instalado.</summary>
      <returns vsli:raw="A string that contains the path to the directory where the common language runtime is installed.">Uma cadeia de caracteres que contém o caminho para o diretório no qual o Common Language Runtime está instalado.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(System.Guid,System.Guid)">
      <summary vsli:raw="Returns the specified interface on the specified class.">Retorna a interface especificada na classe especificada.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">O identificador da classe desejada.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">O identificador da interface desejado.</param>
      <returns vsli:raw="An unmanaged pointer to the requested interface.">Um ponteiro não gerenciado para a interface solicitada.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Falha IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsObject(System.Guid,System.Guid)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Retorna uma instância de um tipo que representa um objeto COM de um ponteiro para sua interface <see langword="IUnknown" />.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">O identificador da classe desejada.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">O identificador da interface desejado.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Um objeto que representa o objeto COM não gerenciado especificado.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Falha IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetSystemVersion">
      <summary vsli:raw="Gets the version number of the common language runtime that's running the current process.">Obtém o número de versão do Common Language Runtime que executa o processo atual.</summary>
      <returns vsli:raw="A string containing the version number of the common language runtime.">Uma cadeia de caracteres que contém o número de versão do Common Language Runtime.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile">
      <summary vsli:raw="Gets the path to the system configuration file.">Obtém o caminho para o arquivo de configuração do sistema.</summary>
      <returns vsli:raw="The path to the system configuration file.">O caminho para o arquivo de configuração do sistema.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <summary vsli:raw="The exception thrown when the rank of an incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the rank specified in the managed signature.">A exceção gerada quando a classificação de um <see langword="SAFEARRAY" /> de entrada não corresponde à classificação especificada na assinatura gerenciada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Inicializa uma nova instância da classe <see langword="SafeArrayTypeMismatchException" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see langword="SafeArrayTypeMismatchException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayRankMismatchException&quot; /&gt; class with the specified message.">Inicializa uma nova instância da classe <see langword="SafeArrayRankMismatchException" /> com a mensagem especificada.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayRankMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SafeArrayRankMismatchException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <summary vsli:raw="The exception thrown when the type of the incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the type specified in the managed signature.">A exceção gerada quando o tipo de <see langword="SAFEARRAY" /> de entrada não corresponde ao tipo especificado na assinatura gerenciada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Inicializa uma nova instância da classe <see langword="SafeArrayTypeMismatchException" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see langword="SafeArrayTypeMismatchException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with the specified message.">Inicializa uma nova instância da classe <see langword="SafeArrayTypeMismatchException" /> com a mensagem especificada.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayTypeMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeBuffer">
      <summary>Fornece um buffer de memória controlado que pode ser usado para leitura e gravação. Tentativas de acessar a memória fora do buffer controlado (falhas e estouros) geram exceções.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> e especifica se o identificador do buffer deve ser liberado com confiança.</summary>
      <param name="ownsHandle">
        <see langword="true" /> para liberar de forma confiável o identificador durante a fase de finalização; <see langword="false" /> para impedir a liberação confiável (não recomendado).</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
      <summary>Obtém um ponteiro de um objeto <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> para um bloco de memória.</summary>
      <param name="pointer">Um ponteiro de bytes, transmitido pela referência, para receber o ponteiro de dentro do objeto <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. É necessário definir esse ponteiro como <see langword="null" /> antes de chamar este método.</param>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
      <summary>Obtém o tamanho do buffer, em bytes.</summary>
      <returns>O número de bytes no buffer de memória.</returns>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
      <summary>Especifica o tamanho de alocação do buffer de memória usando o número especificado de elementos e o tamanho do elemento. É necessário chamar esse método antes de usar a instância <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">O número de elementos no buffer.</param>
      <param name="sizeOfEachElement">O tamanho de cada elemento no buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> é menor que zero.
-ou-
<paramref name="sizeOfEachElement" /> é menor que zero.
-ou-
<paramref name="numElements" /> multiplicado por <paramref name="sizeOfEachElement" /> é maior que o espaço de endereço disponível.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
      <summary>Define o tamanho de alocação da região de memória em bytes. É necessário chamar esse método antes de usar a instância <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numBytes">O número de bytes no buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numBytes" /> é menor que zero.
-ou-
<paramref name="numBytes" /> é maior que o espaço de endereço disponível.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
      <summary>Define o tamanho de alocação da região de memória especificando o número dos tipos de valor. É necessário chamar esse método antes de usar a instância <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">O número de elementos do tipo de valor para o qual a memória será alocada.</param>
      <typeparam name="T">O tipo de valor para o qual alocar memória.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="numElements" /> é menor que zero.
-ou-
<paramref name="numElements" /> multiplicado pelo tamanho de cada elemento é maior que o espaço de endereço disponível.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
      <summary>Lê um tipo de valor na memória no deslocamento especificado.</summary>
      <param name="byteOffset">O local do qual o tipo de valor será lido. Talvez seja necessário considerar problemas de alinhamento.</param>
      <typeparam name="T">O tipo de valor a ser lido.</typeparam>
      <returns>O tipo de valor que foi lido na memória.</returns>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Lê o número de tipos de valor especificado do início da memória no deslocamento e os grava no início de uma matriz no índice.</summary>
      <param name="byteOffset">O local do qual a leitura será iniciada.</param>
      <param name="array">A matriz de saída na qual gravar.</param>
      <param name="index">O local na matriz de saída no qual começar a gravação.</param>
      <param name="count">O número de tipos de valor a serem lidos da matriz de entrada e a serem gravados na matriz de saída.</param>
      <typeparam name="T">O tipo de valor a ser lido.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento da matriz menos o índice é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
      <summary>Libera um ponteiro que foi obtido pelo método <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
      <summary>Grava um tipo de valor na memória no local determinado.</summary>
      <param name="byteOffset">O local no qual a gravação será iniciada. Talvez seja necessário considerar problemas de alinhamento.</param>
      <param name="value">O valor a ser gravado.</param>
      <typeparam name="T">O tipo de valor a ser gravado.</typeparam>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Grava o número de tipos de valor especificado em um local de memória lendo bytes começando do local especificado na matriz de entrada.</summary>
      <param name="byteOffset">O local na memória no qual gravar.</param>
      <param name="array">A matriz de entrada.</param>
      <param name="index">O deslocamento na matriz da qual a leitura será iniciada.</param>
      <param name="count">O número de tipos de valor a serem gravados.</param>
      <typeparam name="T">O tipo de valor a ser gravado.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">O comprimento da matriz de entrada menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> não foi chamado.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.SEHException">
      <summary vsli:raw="Represents structured exception handling (SEH) errors.">Representa erros de SEH (Manipulação de Exceção Estruturada).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SEHException" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class from serialization data.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SEHException" /> dos dados de serialização.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified message.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SEHException" /> com uma mensagem especificada.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">A mensagem que indica o motivo da exceção.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.SEHException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.CanResume">
      <summary vsli:raw="Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.">Indica se a exceção pode ser recuperada e se o código pode continuar do ponto no qual a exceção foi gerada.</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;, because resumable exceptions are not implemented.">Sempre <see langword="false" />, pois exceções retomáveis não são implementadas.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary vsli:raw="Replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.">Substitui o marshaler free-thread padrão do CLR (Common Language Runtime) pelo marshaler OLE STA padrão.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.StandardOleMarshalObject&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
      <summary vsli:raw="Provides support for type equivalence.">Dá suporte à equivalência de tipo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class.">Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class with the specified scope and identifier.">Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> com o escopo especificado e o identificador.</summary>
      <param name="scope" vsli:raw="The first type equivalence string.">A primeira cadeia de caracteres de equivalência de tipo.</param>
      <param name="identifier" vsli:raw="The second type equivalence string.">A segunda cadeia de caracteres de equivalência de tipo.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;identifier&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Obtém o valor do parâmetro <paramref name="identifier" /> que foi passado ao construtor <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;identifier&quot; /&gt; parameter.">O valor do parâmetro <paramref name="identifier" /> do construtor.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;scope&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Obtém o valor do parâmetro <paramref name="scope" /> que foi passado ao construtor <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;scope&quot; /&gt; parameter.">O valor do parâmetro <paramref name="scope" /> do construtor.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; that were originally imported for this method from the COM type library.">Contém o <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> que foi originalmente importado para esse método da biblioteca de tipos COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see langword="TypeLibFuncAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> para o método atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Runtime.InteropServices.TypeLibFuncFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see langword="TypeLibFuncAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> para o método atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibFuncAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">Obtém o valor <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> para este método.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">O <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> valor deste método.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see langword=&quot;FUNCFLAGS&quot; /&gt; in the COM type library from where this method was imported.">Descreve as configurações originais do <see langword="FUNCFLAGS" /> na biblioteca de tipos COM da qual esse método foi importado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable">
      <summary vsli:raw="The function that supports data binding.">A função que dá suporte à associação de dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultBind">
      <summary vsli:raw="The function that best represents the object. Only one function in a type information can have this attribute.">A função que melhor representa o objeto. Apenas uma função em uma informação de tipo pode ter esse atributo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Permite uma otimização em que o compilador procura um membro chamado "xyz" no tipo "abc". Se esse membro for encontrado e marcado como uma função de acessador de um elemento da coleção padrão, uma chamada será gerada para essa função de membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDisplayBind">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable&quot; /&gt; must also be set.">A função que é exibida ao usuário como associável. <see cref="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable" /> também deve ser definido.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FHidden">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">A função não deve ser exibida para o usuário, embora ele exista e seja associável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FImmediateBind">
      <summary vsli:raw="The function is mapped as individual bindable properties.">A função é mapeada como propriedades vinculáveis individuais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FNonBrowsable">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">A propriedade aparece em um Pesquisador de Objetos, mas não em um navegador de propriedades.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Marca a interface como tendo comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRequestEdit">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;.">Quando definido, qualquer chamada para um método que define os resultados da propriedade primeiro em uma chamada para <see langword="IPropertyNotifySink::OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Esse sinalizador é destinado a funções no nível de sistema ou a funções que navegadores de tipo não devem exibir.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FSource">
      <summary vsli:raw="The function returns an object that is a source of events.">A função retorna um objeto que é uma origem de eventos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUiDefault">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">O membro de informações de tipo é o membro padrão para exibição na interface do usuário.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUsesGetLastError">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;.">A função dá suporte a <see langword="GetLastError" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibImportClassAttribute">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Type&quot; /&gt; exclusively uses an interface. This class cannot be inherited.">Especifica qual <see cref="T:System.Type" /> usa exclusivamente uma interface. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibImportClassAttribute&quot; /&gt; class specifying the &lt;see cref=&quot;T:System.Type&quot; /&gt; that exclusively uses an interface.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute" />, especificando o <see cref="T:System.Type" /> que usa exclusivamente uma interface.</summary>
      <param name="importClass" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">O objeto <see cref="T:System.Type" /> que usa exclusivamente uma interface.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibImportClassAttribute.Value">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Obtém o nome de um objeto <see cref="T:System.Type" /> que usa exclusivamente uma interface.</summary>
      <returns vsli:raw="The name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">O nome de um <see cref="T:System.Type" /> objeto que usa exclusivamente uma interface.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; that were originally imported for this type from the COM type library.">Contém o <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> que foi originalmente importado para esse tipo da biblioteca de tipos COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see langword="TypeLibTypeAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> para o tipo atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Runtime.InteropServices.TypeLibTypeFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see langword="TypeLibTypeAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> para o tipo atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">Obtém o valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> desse tipo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> para esse tipo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; in the COM type library from which the type was imported.">Descreve as configurações originais do <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> na biblioteca de tipos COM da qual esse tipo foi importado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAggregatable">
      <summary vsli:raw="The class supports aggregation.">A classe oferece suporte à agregação.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAppObject">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Uma descrição de tipo que descreve um objeto <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Instâncias do tipo podem ser criadas por <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FControl">
      <summary vsli:raw="The type is a control from which other types will be derived, and should not be displayed to users.">O tipo é um controle do qual outros tipos serão derivados e não deve ser exibido aos usuários.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly.">Indica que a interface deriva de <see langword="IDispatch" />, direta ou indiretamente.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDual">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and V-table binding.">A interface fornece <see langword="IDispatch" /> e a associação de tabela V.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FHidden">
      <summary vsli:raw="The type should not be displayed to browsers.">O tipo não deve ser exibido para os navegadores.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FLicensed">
      <summary vsli:raw="The type is licensed.">O tipo é licenciado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FNonExtensible">
      <summary vsli:raw="The interface cannot add members at run time.">A interface não pode adicionar membros em tempo de execução.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including vtable binding support.">Os tipos usados na interface são totalmente compatíveis com a Automação, incluindo o suporte da associação vtable.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FPreDeclId">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">O tipo é predefinido. O aplicativo cliente deve criar automaticamente uma única instância do objeto que tem esse atributo. O nome da variável que aponta para o objeto é o mesmo que o nome de classe do objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReplaceable">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">O objeto oferece suporte a <see langword="IConnectionPointWithDefault" /> e tem comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level types or types that type browsers should not display.">Esse sinalizador é destinado a tipos no nível de sistema ou a tipos que navegadores de tipo não devem exibir.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReverseBind">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking child interfaces. This is the reverse of the default behavior.">Indica que a resolução de nome das interfaces base deve ser verificada antes da verificação das interfaces filhas. Esse é o inverso do comportamento padrão.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; that were originally imported for this field from the COM type library.">Contém o <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> que foi originalmente importado para esse campo da biblioteca de tipos COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> para o campo atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Runtime.InteropServices.TypeLibVarFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> com o valor <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> especificado.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">O valor <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> para o campo atribuído como encontrado na biblioteca de tipos do qual foi importado.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVarAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">Obtém o valor <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> desse campo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">O <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> valor deste campo.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; in the COM type library from which the variable was imported.">Descreve as configurações originais do <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> na biblioteca de tipos COM de que a variável foi importada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable">
      <summary vsli:raw="The variable supports data binding.">A variável dá suporte à associação de dados.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultBind">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in a type info can have this value.">A variável é a única propriedade que melhor representa o objeto. Apenas uma variável em informações de tipo pode ter esse valor.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Permite uma otimização em que o compilador procura um membro chamado "xyz" no tipo "abc". Se esse membro for encontrado e marcado como uma função de acessador de um elemento da coleção padrão, uma chamada será gerada para essa função de membro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDisplayBind">
      <summary vsli:raw="The variable is displayed as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable&quot; /&gt; must also be set.">A variável é exibida como associável. <see cref="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable" /> também deve ser definido.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FHidden">
      <summary vsli:raw="The variable should not be displayed in a browser, though it exists and is bindable.">A variável não deve ser exibida em um navegador, embora ela exista e seja associável.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FImmediateBind">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">A variável é mapeada como propriedades vinculáveis individuais.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FNonBrowsable">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">A variável é exibida em um Pesquisador de Objetos, mas não em um navegador de propriedades.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReadOnly">
      <summary vsli:raw="Assignment to the variable should not be allowed.">Atribuição à variável não deve ser permitida.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Marca a interface como tendo comportamentos padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRequestEdit">
      <summary vsli:raw="Indicates that the property supports the COM &lt;see langword=&quot;OnRequestEdit&quot; /&gt; notification.">Indica que a propriedade oferece suporte à notificação COM <see langword="OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Esse sinalizador é destinado a funções no nível de sistema ou a funções que navegadores de tipo não devem exibir.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FSource">
      <summary vsli:raw="The variable returns an object that is a source of events.">A variável retorna um objeto que é uma origem de eventos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FUiDefault">
      <summary vsli:raw="The default display in the user interface.">A exibição padrão na interface do usuário.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVersionAttribute">
      <summary vsli:raw="Specifies the version number of an exported type library.">Especifica o número de versão de uma biblioteca de tipos exportada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVersionAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVersionAttribute&quot; /&gt; class with the major and minor version numbers of the type library.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" /> com os números da versão primária e secundária da biblioteca de tipos.</summary>
      <param name="major" vsli:raw="The major version number of the type library.">O número de versão principal da biblioteca de tipos.</param>
      <param name="minor" vsli:raw="The minor version number of the type library.">O número de versão secundária da biblioteca de tipos.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library.">Obtém o número de versão principal da biblioteca de tipos.</summary>
      <returns vsli:raw="The major version number of the type library.">O número de versão principal da biblioteca de tipos.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library.">Obtém o número de versão secundária da biblioteca de tipos.</summary>
      <returns vsli:raw="The minor version number of the type library.">O número de versão secundária da biblioteca de tipos.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnknownWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_UNKNOWN&quot; /&gt;.">Encapsula objetos que o empacotador deve realizar marshaling como um <see langword="VT_UNKNOWN" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt; class with the object to be wrapped.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.UnknownWrapper" /> com o objeto a ser encapsulado.</summary>
      <param name="obj" vsli:raw="The object being wrapped.">O objeto que está sendo encapsulado.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject">
      <summary vsli:raw="Gets the object contained by this wrapper.">Obtém o objeto contido por esse wrapper.</summary>
      <returns vsli:raw="The wrapped object.">O objeto encapsulado.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <summary vsli:raw="Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.">Controla o comportamento de marshaling de uma assinatura do delegado passado como um ponteiro de função não gerenciada de ou para código não gerenciado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&quot; /&gt; class with the specified calling convention.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute" /> com convenção de chamada especificada.</summary>
      <param name="callingConvention" vsli:raw="The specified calling convention.">A convenção de chamada especificada.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Habilita ou desabilita o comportamento de mapeamento mais adequado ao converter caracteres Unicode em caracteres ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention">
      <summary vsli:raw="Gets the value of the calling convention.">Obtém o valor da convenção de chamada.</summary>
      <returns vsli:raw="The value of the calling convention specified by the &lt;see cref=&quot;M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)&quot; /&gt; constructor.">O valor da Convenção de chamada especificada pelo <see cref="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)" /> Construtor.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method, and controls name mangling.">Indica como realizar marshaling de parâmetros de cadeia de caracteres para o método e a desconfiguração de nome de controles.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee calls the &lt;see langword=&quot;SetLastError&quot; /&gt; Windows API function before returning from the attributed method.">Indica se o computador chamado chama a função de API do Windows <see langword="SetLastError" /> antes de retornar do método atribuído.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Habilita ou desabilita a geração de uma exceção em um caractere Unicode não mapeável que é convertido em um caractere "?" ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedType">
      <summary>Identifica como realizar marshaling de parâmetros ou campos para código não gerenciado.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
      <summary>Uma cadeia de caracteres ANSI que é um byte único com tamanho prefixado. Use esse membro no tipo de dados <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
      <summary>Um tipo dinâmico que determina o tipo de um objeto em tempo de execução e realiza marshaling do objeto como esse tipo. Esse membro é válido apenas para métodos de invocação de plataforma.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Bool">
      <summary>Um valor booliano de quatro bytes (<see langword="true" /> != 0, <see langword="false" /> = 0). Esse é o tipo BOOL Win32.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.BStr">
      <summary>Uma cadeia de caracteres Unicode que é um byte duplo com tamanho prefixado. Use esse membro, que é a cadeia de caracteres padrão em COM, no tipo de dados <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
      <summary>Quando a propriedade <see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /> estiver definida como <see langword="ByValArray" />, o campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> deve ser definido para indicar o número de elementos na matriz. O campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /> pode conter, opcionalmente, o <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> dos elementos da matriz quando for necessário diferenciar entre os tipos de cadeia de caracteres. Use esse <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> somente em uma matriz cujos elementos aparecem como campos em uma estrutura.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
      <summary>Usado para matrizes de caracteres em linha e de comprimento fixo que aparecem em uma estrutura. Os tipos <see langword="ByValTStr" /> se comportam como cadeias de caracteres de tamanho fixo e estilo C dentro de uma estrutura (por exemplo, <c>char s[5]</c>). O tipo de caractere usado com <see langword="ByValTStr" /> é determinado pelo argumento <see cref="T:System.Runtime.InteropServices.CharSet" /> do atributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> aplicado à estrutura contida. Sempre use o campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> para indicar o tamanho da matriz.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Currency">
      <summary>Um tipo de moeda. Usado em um <see cref="T:System.Decimal" /> para realizar marshaling do valor decimal como um tipo de moeda COM em vez de como um <see langword="Decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
      <summary>Especifica a classe do realizador de marshaling personalizado quando usado com o campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> ou <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" />. O campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /> pode ser usado para passar informações adicionais para o realizador de marshaling personalizado. Você pode usar esse membro em qualquer tipo de referência. Esse membro é válido somente para parâmetros e valores retornado. Ele não pode ser usado em campos.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Error">
      <summary>Um tipo nativo associado a um <see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /> ou a um <see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" />, e que faz com que o parâmetro seja exportado como um HRESULT na biblioteca de tipos exportada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
      <summary>Um inteiro que pode ser usado como um ponteiro de função de estilo C. Use esse membro em um tipo de dados <see cref="T:System.Delegate" /> ou em um tipo que herda de um <see cref="T:System.Delegate" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.HString">
      <summary>Uma cadeia de caracteres Tempo de Execução do Windows. Use esse membro no tipo de dados <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I1">
      <summary>Um inteiro de um byte com sinal. Use esse membro para transformar um valor booliano em um byte, estilo C <see langword="bool" /> (<see langword="true" /> = 1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I2">
      <summary>Um inteiro de dois bytes com sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I4">
      <summary>Um inteiro de quatro bytes com sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I8">
      <summary>Um inteiro de oito bytes com sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
      <summary>Um ponteiro COM <see langword="IDispatch" /> (<see langword="Object" /> no Microsoft Visual Basic 6.0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
      <summary>Um ponteiro de interface Tempo de Execução do Windows. Use esse membro no tipo de dados <see cref="T:System.Object" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Interface">
      <summary>Um ponteiro de interface COM. O <see cref="T:System.Guid" /> da interface é obtido dos metadados da classe. Use este membro para especificar o tipo exato de interface ou o tipo de interface padrão se você aplicá-lo a uma classe. Esse membro produz o mesmo comportamento que <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> quando você o aplica ao tipo de dados <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
      <summary>Um ponteiro COM <see langword="IUnknown" />. Use esse membro no tipo de dados <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
      <summary>Um ponteiro para o primeiro elemento da matriz de estilo C. Ao realizar marshaling do código gerenciado para código não gerenciado, o comprimento da matriz é determinado pelo comprimento da matriz gerenciado. Ao realizar o marshaling do código não gerenciado para o código gerenciado, o tamanho da matriz é determinado pelos campos <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> e <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" />, seguidos opcionalmente pelo tipo não gerenciado dos elementos dentro da matriz quando é necessário diferenciar entre os tipos de cadeia de caracteres.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
      <summary>Uma cadeia de caracteres ANSI terminada em nulo e byte único. Use esse membro nos tipos de dados <see cref="T:System.String" /> e <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
      <summary>Um ponteiro para uma estrutura de estilo C que você usa para realizar marshaling de classes formatadas gerenciadas. Esse membro é válido apenas para métodos de invocação de plataforma.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
      <summary>Uma cadeia de caracteres dependente de plataforma: ANSI no Windows 98 e Unicode no Windows NT e Windows XP. Esse valor tem suporte apenas para invocação de plataforma e não para interoperabilidade COM, pois não há suporte para a exportação de uma cadeia de caracteres do tipo <see langword="LPTStr" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
      <summary>Um ponteiro para uma cadeia de caracteres codificada em UTF-8.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
      <summary>Uma cadeia de caracteres ANSI terminada em nulo e dois bytes. Não é possível usar o valor <see langword="LPWStr" /> com uma cadeia de caracteres não gerenciada, a menos que a cadeia de caracteres tenha sido criada usando a função <see langword="CoTaskMemAlloc" /> não gerenciada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R4">
      <summary>Um número de ponto flutuante de quatro bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R8">
      <summary>Um número de ponto flutuante de oito bytes.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
      <summary>Um <see langword="SafeArray" />, que é uma matriz autodescritiva que leva o tipo, a classificação e os limites dos dados de matriz associada. Usar esse membro com o campo <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" /> para substituir o tipo de elemento padrão.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Struct">
      <summary>Uma VARIANTE, que é usada para realizar marshaling em classes formatadas gerenciadas e tipos de valor.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
      <summary>Um inteiro com sinal dependente de plataforma: 4 bytes em Windows de 32 bits, 8 bytes no Windows de 64 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
      <summary>Um inteiro sem sinal dependente de plataforma: 4 bytes em Windows de 32 bits, 8 bytes no Windows de 64 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
      <summary>Uma cadeia de caracteres <see langword="char" /> dependente de plataforma com tamanho prefixado: ANSI no Windows 98, Unicode no Windows NT. Você usa raramente esse membro semelhante a BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U1">
      <summary>Um inteiro de um byte sem sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U2">
      <summary>Um inteiro de dois bytes sem sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U4">
      <summary>Um inteiro de quatro bytes sem sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U8">
      <summary>Um inteiro de oito bytes sem sinal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
      <summary>Um tipo VARIANT_BOOL de dois bytes e definido por OLE (<see langword="true" /> = -1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
      <summary>Um valor que permite que o Visual Basic altere uma cadeia de caracteres no código não gerenciado e reflita os resultados no código gerenciado. Esse valor só tem suporte para invocação de plataforma.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VarEnum">
      <summary vsli:raw="Indicates how to marshal the array elements when an array is marshaled from managed to unmanaged code as a &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Indica como realizar marshaling dos elementos da matriz quando uma matriz passa por marshaling do código gerenciado para não gerenciado como um <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;SAFEARRAY&quot; /&gt; pointer.">Indica um ponteiro <see langword="SAFEARRAY" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB">
      <summary vsli:raw="Indicates length prefixed bytes.">Indica os bytes prefixados do comprimento.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB_OBJECT">
      <summary vsli:raw="Indicates that a blob contains an object.">Indica que um blob contém um objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BOOL">
      <summary vsli:raw="Indicates a Boolean value.">Indica um valor booliano.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BSTR">
      <summary vsli:raw="Indicates a BSTR string.">Indica uma cadeia de caracteres BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BYREF">
      <summary vsli:raw="Indicates that a value is a reference.">Indica que um valor é uma referência.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CARRAY">
      <summary vsli:raw="Indicates a C style array.">Indica uma matriz de estilo C.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CF">
      <summary vsli:raw="Indicates the clipboard format.">Indica o formato da área de transferência.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CLSID">
      <summary vsli:raw="Indicates a class ID.">Indica uma ID de classe.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CY">
      <summary vsli:raw="Indicates a currency value.">Indica um valor de moeda.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DATE">
      <summary vsli:raw="Indicates a DATE value.">Indica um valor DATE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;decimal&quot; /&gt; value.">Indica um valor <see langword="decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IDispatch&quot; /&gt; pointer.">Indica um ponteiro <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_EMPTY">
      <summary vsli:raw="Indicates that a value was not specified.">Indica que não foi especificado um valor.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ERROR">
      <summary vsli:raw="Indicates an SCODE.">Indica um SCODE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_FILETIME">
      <summary vsli:raw="Indicates a FILETIME value.">Indica um valor FILETIME.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_HRESULT">
      <summary vsli:raw="Indicates an HRESULT.">Indica um ponteiro HRESULT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;char&quot; /&gt; value.">Indica um valor <see langword="char" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I2">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;short&quot; /&gt; integer.">Indica um inteiro <see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;long&quot; /&gt; integer.">Indica um inteiro <see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I8">
      <summary vsli:raw="Indicates a 64-bit integer.">Indica um inteiro de 64 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_INT">
      <summary vsli:raw="Indicates an integer value.">Indica um valor inteiro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPSTR">
      <summary vsli:raw="Indicates a null-terminated string.">Indica uma cadeia de caracteres terminada em nulo.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPWSTR">
      <summary vsli:raw="Indicates a wide string terminated by &lt;see langword=&quot;null&quot; /&gt;.">Indica uma cadeia de caracteres larga terminada por <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_NULL">
      <summary vsli:raw="Indicates a null value, similar to a null value in SQL.">Indica um valor nulo, semelhante a um valor nulo no SQL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_PTR">
      <summary vsli:raw="Indicates a pointer type.">Indica um tipo de ponteiro.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;float&quot; /&gt; value.">Indica um valor <see langword="float" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R8">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;double&quot; /&gt; value.">Indica um valor <see langword="double" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_RECORD">
      <summary vsli:raw="Indicates a user defined type.">Indica um tipo definido pelo usuário.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_SAFEARRAY">
      <summary vsli:raw="Indicates a SAFEARRAY. Not valid in a VARIANT.">Indica um SAFEARRAY. Inválido em uma VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORAGE">
      <summary vsli:raw="Indicates that the name of a storage follows.">Indica que o nome de um armazenamento segue.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORED_OBJECT">
      <summary vsli:raw="Indicates that a storage contains an object.">Indica que um armazenamento contém um objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAM">
      <summary vsli:raw="Indicates that the name of a stream follows.">Indica que o nome de um fluxo segue.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAMED_OBJECT">
      <summary vsli:raw="Indicates that a stream contains an object.">Indica que um fluxo contém um objeto.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;byte&quot; /&gt;.">Indica um <see langword="byte" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI2">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;short&quot; /&gt;.">Indica um <see langword="unsigned" /><see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI4">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt;.">Indica um <see langword="unsigned" /><see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI8">
      <summary vsli:raw="Indicates an 64-bit unsigned integer.">Indica um inteiro sem sinal de 64 bits.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UINT">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt; integer value.">Indica um valor inteiro <see langword="unsigned" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">Indica um ponteiro <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_USERDEFINED">
      <summary vsli:raw="Indicates a user defined type.">Indica um tipo definido pelo usuário.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VARIANT">
      <summary vsli:raw="Indicates a VARIANT &lt;see langword=&quot;far&quot; /&gt; pointer.">Indica um ponteiro <see langword="far" /> VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VECTOR">
      <summary vsli:raw="Indicates a simple, counted array.">Indica uma matriz simples contada.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VOID">
      <summary vsli:raw="Indicates a C style &lt;see langword=&quot;void&quot; /&gt;.">Indica um estilo C <see langword="void" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VariantWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_VARIANT | VT_BYREF&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Realiza marshaling de dados do tipo <see langword="VT_VARIANT | VT_BYREF" /> de código gerenciado para código não gerenciado. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter.">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> do parâmetro <see cref="T:System.Object" /> especificado.</summary>
      <param name="obj" vsli:raw="The object to marshal.">O objeto a se realizar marshaling.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">Obtém o objeto encapsulado pelo objeto <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">O objeto encapsulado pelo <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> objeto.</returns>
    </member>
    <member name="T:System.Security.SecureString">
      <summary vsli:raw="Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed. This class cannot be inherited.">Representa o texto que deve ser mantido como confidencial, como excluindo-o da memória do computador quando ele não for mais necessário. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.SecureString.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this instance.">Ocorreu um erro ao proteger ou ao desproteger o valor dessa instância.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Não há suporte para esta operação nesta plataforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class from a subarray of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.  &#xA;  &#xA; This constructor is not CLS-compliant. The CLS-compliant alternative is &lt;see cref=&quot;M:System.Security.SecureString.#ctor&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.SecureString" /> de uma submatriz de objetos <see cref="T:System.Char" />.
Este construtor não é compatível com CLS. A alternativa compatível com CLS é <see cref="M:System.Security.SecureString.#ctor" />.</summary>
      <param name="value" vsli:raw="A pointer to an array of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.">Um ponteiro para uma matriz de objetos <see cref="T:System.Char" />.</param>
      <param name="length" vsli:raw="The number of elements of &lt;paramref name=&quot;value&quot; /&gt; to include in the new instance.">O número de elementos de <paramref name="value" /> a ser incluído na nova instância.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than 65,536.">
        <paramref name="length" /> é menor que zero ou maior que 65.536.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Não há suporte para esta operação nesta plataforma.</exception>
    </member>
    <member name="M:System.Security.SecureString.AppendChar(System.Char)">
      <summary vsli:raw="Appends a character to the end of the current secure string.">Acrescenta um caractere ao final da cadeia de caracteres segura atual.</summary>
      <param name="c" vsli:raw="A character to append to this secure string.">Um caractere para acrescentar a essa cadeia de caracteres segura.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Essa cadeia de caracteres segura é somente leitura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Performing this operation would make the length of this secure string greater than 65,536 characters.">Executar esta operação fará com que o tamanho dessa cadeia de caracteres segura seja maior que 65.536 caracteres.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
    </member>
    <member name="M:System.Security.SecureString.Clear">
      <summary vsli:raw="Deletes the value of the current secure string.">Exclui o valor da cadeia de caracteres segura atual.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Essa cadeia de caracteres segura é somente leitura.</exception>
    </member>
    <member name="M:System.Security.SecureString.Copy">
      <summary vsli:raw="Creates a copy of the current secure string.">Cria uma cópia da cadeia de caracteres segura atual.</summary>
      <returns vsli:raw="A duplicate of this secure string.">Uma cópia dessa cadeia de caracteres segura.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
    </member>
    <member name="M:System.Security.SecureString.Dispose">
      <summary vsli:raw="Releases all resources used by the current &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object.">Libera todos os recursos usados pelo objeto <see cref="T:System.Security.SecureString" /> atual.</summary>
    </member>
    <member name="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
      <summary vsli:raw="Inserts a character in this secure string at the specified index position.">Insere um caractere nesta cadeia de caracteres segura na posição de índice especificada.</summary>
      <param name="index" vsli:raw="The index position where parameter &lt;paramref name=&quot;c&quot; /&gt; is inserted.">A posição do índice em que o parâmetro <paramref name="c" /> é inserido.</param>
      <param name="c" vsli:raw="The character to insert.">O caractere a ser inserido.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Essa cadeia de caracteres segura é somente leitura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than the length of this secure string.  &#xA;  &#xA; -or-  &#xA;  &#xA; Performing this operation would make the length of this secure string greater than 65,536 characters.">
        <paramref name="index" /> é menor que zero ou maior que o comprimento dessa cadeia de caracteres segura.
- ou -
Executar esta operação fará com que o tamanho dessa cadeia de caracteres segura seja maior que 65.536 caracteres.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
    </member>
    <member name="M:System.Security.SecureString.IsReadOnly">
      <summary vsli:raw="Indicates whether this secure string is marked read-only.">Indica se essa cadeia de caracteres segura é marcada como somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this secure string is marked read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se essa cadeia de caracteres segura for marcada como somente leitura; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
    </member>
    <member name="P:System.Security.SecureString.Length">
      <summary vsli:raw="Gets the number of characters in the current secure string.">Obtém o número de caracteres na cadeia de caracteres atual.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects in this secure string.">O número de <see cref="T:System.Char" /> objetos nesta cadeia de caracteres segura.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
    </member>
    <member name="M:System.Security.SecureString.MakeReadOnly">
      <summary vsli:raw="Makes the text value of this secure string read-only.">Torna o valor de texto da cadeia de caracteres segura em somente leitura.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
    </member>
    <member name="M:System.Security.SecureString.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the character at the specified index position from this secure string.">Remove o caractere na posição de índice especificada dessa cadeia de caracteres segura.</summary>
      <param name="index" vsli:raw="The index position of a character in this secure string.">A posição de índice de um caractere nessa cadeia de caracteres segura.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Essa cadeia de caracteres segura é somente leitura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">
        <paramref name="index" /> é menor que zero ou maior ou igual ao tamanho dessa cadeia de caracteres segura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
    </member>
    <member name="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
      <summary vsli:raw="Replaces the existing character at the specified index position with another character.">Substitui o caractere existente na posição de índice especificada por outro caractere.</summary>
      <param name="index" vsli:raw="The index position of an existing character in this secure string.">A posição de índice de um caractere existente nessa cadeia de caracteres segura</param>
      <param name="c" vsli:raw="A character that replaces the existing character.">Um caractere que substitui o caractere existente.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Essa cadeia de caracteres segura já foi descartada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Essa cadeia de caracteres segura é somente leitura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">
        <paramref name="index" /> é menor que zero ou maior ou igual ao tamanho dessa cadeia de caracteres segura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Ocorreu um erro ao proteger ou desproteger o valor dessa cadeia de caracteres segura.</exception>
    </member>
    <member name="T:System.Security.SecureStringMarshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.">Fornece uma coleção de métodos para alocar a memória não gerenciada e copiar os blocos de memória não gerenciada.</summary>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para um bloco de memória alocado do alocador de tarefas COM não gerenciado.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Copia o conteúdo de um <see cref="T:System.Security.SecureString" /> gerenciado para a memória não gerenciada, convertendo em formato ANSI durante a cópia.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">O endereço, na memória não gerenciada, para o qual o parâmetro <paramref name="s" /> foi copiado ou 0 se um objeto nulo foi fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Copia o conteúdo de um objeto <see cref="T:System.Security.SecureString" /> gerenciado para uma memória não gerenciada.</summary>
      <param name="s" vsli:raw="The managed object to copy.">O objeto gerenciado a se copiar.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">O endereço, na memória não gerenciada, para o qual <paramref name="s" /> foi copiado ou 0, se <paramref name="s" /> for um objeto <see cref="T:System.Security.SecureString" /> cujo tamanho é 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O computador atual não está executando o Windows 2000 Service Pack 3 ou posterior.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Memória insuficiente.</exception>
    </member>
  </members>
</doc>