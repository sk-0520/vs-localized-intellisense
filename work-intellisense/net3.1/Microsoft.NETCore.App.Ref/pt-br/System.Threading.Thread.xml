<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">Encapsula um slot de memória para armazenar dados locais. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">Garante que os recursos são liberados e outras operações de limpeza são executadas quando o coletor de lixo recupera o objeto <see cref="T:System.LocalDataStoreSlot" />.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica o estado de apartment de um <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">O <see cref="T:System.Threading.Thread" /> vai criar e inserir um Multi-Threaded Apartment.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">O <see cref="T:System.Threading.Thread" /> vai criar e inserir um Single-Threaded Apartment.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">A propriedade <see cref="P:System.Threading.Thread.ApartmentState" /> não foi definida.</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">Fornece métodos para configurar e capturar a pilha compactada no thread atual. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">Captura a pilha compactada do thread atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">Um objeto <see cref="T:System.Threading.CompressedStack" />.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">Cria uma cópia da pilha compactada atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">Um objeto <see cref="T:System.Threading.CompressedStack" /> que representa a pilha compactada atual.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">Obtém a pilha compactada para o thread atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">Um <see cref="T:System.Threading.CompressedStack" /> para o thread atual.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">Um chamador na cadeia de chamadas não tem permissão para acessar o código não gerenciado.
- ou -
A solicitação para <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> falhou.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">Define o objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com as informações lógicas do contexto necessárias para recriar uma instância deste contexto de execução.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com informações de serialização.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">A estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que representa o contexto de destino da serialização.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">Executa um método na pilha compactada especificada no thread atual.</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">
        <see cref="T:System.Threading.CompressedStack" /> ao dataset.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">Um <see cref="T:System.Threading.ContextCallback" /> que representa o método a ser executado no contexto de segurança especificado.</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">O objeto a ser passado para o método de retorno de chamada.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Representa o método que é executado em um <see cref="T:System.Threading.Thread" />.</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">Um objeto que contém dados para o procedimento de thread.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">Cria e controla um thread, define sua prioridade e obtém seu status.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Thread" />, especificando um delegado que permite que um objeto seja passado para o thread quando o thread for iniciado.</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">Um delegado que representa os métodos a serem invocados quando esse thread começar a ser executado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Thread" />, especificando um delegado que permite que um objeto seja passado para o thread quando o thread é iniciado e especificando o tamanho máximo da pilha para o thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Um delegado <see cref="T:System.Threading.ParameterizedThreadStart" /> que representa os métodos a serem invocados quando esse thread começar a ser executado.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">O tamanho máximo da pilha, em bytes, a ser usado pelo thread ou 0 para usar o tamanho de pilha máximo padrão especificado no cabeçalho do executável.
Importante   Para um código parcialmente confiável, <paramref name="maxStackSize" /> será ignorado se for maior que o tamanho da pilha padrão. Nenhuma exceção é lançada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Thread" /> .</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Um delegado <see cref="T:System.Threading.ThreadStart" /> que representa os métodos a serem invocados quando esse thread começar a ser executado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="start" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Thread" />, especificando o tamanho máximo da pilha do thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Um delegado <see cref="T:System.Threading.ThreadStart" /> que representa os métodos a serem invocados quando esse thread começar a ser executado.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">O tamanho máximo da pilha, em bytes, a ser usado pelo thread ou 0 para usar o tamanho de pilha máximo padrão especificado no cabeçalho do executável.
Importante   Para um código parcialmente confiável, <paramref name="maxStackSize" /> será ignorado se for maior que o tamanho da pilha padrão. Nenhuma exceção é lançada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">Gera um <see cref="T:System.Threading.ThreadAbortException" /> no thread no qual ele é invocado, para iniciar o processo de encerramento do thread. Geralmente, a chamada a esse método termina o thread.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">O chamador não tem a permissão necessária.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">O thread que está sendo anulado está suspenso no momento.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">Gera um <see cref="T:System.Threading.ThreadAbortException" /> no thread no qual ele é invocado, para iniciar o processo de término do thread e ao mesmo tempo fornecer informações de exceção sobre o término do thread. Geralmente, a chamada a esse método termina o thread.</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">Um objeto que contém informações específicas do aplicativo, como estado, que podem ser usadas pelo thread que está sendo anulado.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">O chamador não tem a permissão necessária.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">O thread que está sendo anulado está suspenso no momento.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Aloca um slot de dados sem nome em todos os threads. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">O slot de dados nomeado alocado em todos os threads.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Aloca um slot de dados nomeado em todos os threads. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">O nome do slot de dados a ser alocado.</param>
      <returns vsli:raw="The allocated named data slot on all threads.">O slot de dados nomeado alocado em todos os threads.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">Já existe um slot de dados nomeado com o nome especificado.</exception>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">Obtém ou define o estado de apartment desse thread.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">Um dos valores de <see cref="T:System.Threading.ApartmentState" />. O valor inicial é <see langword="Unknown" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">É feita uma tentativa de definir esta propriedade para um estado que não é um estado de apartment válido (um estado diferente de <see langword="STA" /> (single-threaded apartment) ou <see langword="MTA" /> (multithreaded apartment)).</exception>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">Notifica um host que a execução está prestes a entrar em uma região de código em que os efeitos de uma exceção sem tratamento ou anulação de thread podem comprometer outras tarefas no domínio do aplicativo.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">Notifica um host de que o código gerenciado está prestes a executar instruções que dependem da identidade do thread atual do sistema operacional físico.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">Obtém ou define a cultura do thread atual.</summary>
      <returns vsli:raw="An object that represents the culture for the current thread.">Um objeto que representa a cultura do thread atual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">A propriedade é definida como <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Somente .NET Core: não há suporte para leitura ou gravação da cultura de um thread a partir de outro thread.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">Obtém ou define a entidade de segurança atual do thread (para segurança baseada em função).</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">Um valor <see cref="T:System.Security.Principal.IPrincipal" /> que representa o contexto de segurança.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">O chamador não tem a permissão necessária para definir a entidade de segurança.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">Obtém o thread em execução no momento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">Um <see cref="T:System.Threading.Thread" /> que é a representação do thread em execução no momento.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">Obtém ou define a cultura atual usada pelo Gerenciador de Recursos para procurar recursos específicos da cultura em tempo de execução.</summary>
      <returns vsli:raw="An object that represents the current culture.">Um objeto que representa a cultura atual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">A propriedade é definida como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">A propriedade é definida como um nome de cultura não pode ser usado para localizar um arquivo de recurso. Nomes de arquivos de recursos devem incluir somente letras, números, hifens ou sublinhados.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Somente .NET Core: não há suporte para leitura ou gravação da cultura de um thread a partir de outro thread.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">Desativa a limpeza automática de RCWs (Runtime Callable Wrappers) para o thread atual.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">Notifica um host de que a execução está prestes a entrar em uma região de código na qual os efeitos de uma exceção sem tratamento ou anulação de thread estão limitados à tarefa atual.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">Notifica um host que o código gerenciado terminou de executar as instruções que dependem da identidade do thread do sistema operacional físico atual.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">Obtém um objeto <see cref="T:System.Threading.ExecutionContext" /> que contém informações sobre os diversos contextos do thread atual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">Um objeto <see cref="T:System.Threading.ExecutionContext" /> que consolida as informações de contexto para o thread atual.</returns>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">Garante que os recursos são liberados e outras operações de limpeza são executadas quando o coletor de lixo recupera o objeto <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Elimina a associação entre um nome e um slot em todos os threads do processo. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">O nome do slot de dados a ser liberado.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">Retorna um valor <see cref="T:System.Threading.ApartmentState" /> que indica o estado do apartment.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">Um dos valores <see cref="T:System.Threading.ApartmentState" /> que indica o estado do apartment do thread gerenciado. O padrão é <see cref="F:System.Threading.ApartmentState.Unknown" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">Retorna um objeto <see cref="T:System.Threading.CompressedStack" /> que pode ser usado para capturar a pilha do thread atual.</summary>
      <returns>Nenhum.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">Em todos os casos.</exception>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId">
      <summary vsli:raw="Gets an ID used to indicate on which processor the current thread is executing.">Obtém uma ID usada para indicar em qual processador o thread atual está sendo executado.</summary>
      <returns vsli:raw="An integer representing the cached processor ID.">Um inteiro que representa a ID de processador armazenada em cache.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Recupera o valor do slot especificado no thread atual, no domínio atual do thread atual. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">O <see cref="T:System.LocalDataStoreSlot" /> do qual o valor deve ser obtido.</param>
      <returns vsli:raw="The retrieved value.">O valor recuperado.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">Retorna o domínio atual no qual o thread atual está em execução.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">Um <see cref="T:System.AppDomain" /> que representa o domínio de aplicativo atual do thread em execução.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">Retorna um identificador de domínio do aplicativo exclusivo.</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">Um inteiro com sinal de 32 bits que identifica exclusivamente o domínio do aplicativo.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">Retorna um código hash para o thread atual.</summary>
      <returns vsli:raw="An integer hash code value.">Um valor inteiro de código hash.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Pesquisa um slot de dados nomeado. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the local data slot.">O nome do slot de dados local.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">Um <see cref="T:System.LocalDataStoreSlot" /> alocado para este thread.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">Interrompe um thread que está no estado de thread <see cref="F:System.Threading.ThreadState.WaitSleepJoin" />.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">O chamador não tem o <see cref="T:System.Security.Permissions.SecurityPermission" /> apropriado.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">Obtém um valor que indica o status de execução do thread atual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse thread foi iniciado e não foi terminado normalmente ou foi anulado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">Obtém ou define um valor que indica se um thread é ou não um thread de segundo plano.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse thread for um thread de segundo plano ou for se tornar um; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">O thread está inativo.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">Obtém um valor que indica se um thread pertence ao pool de threads gerenciados ou não.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse thread pertence ao pool de threads gerenciados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">Bloqueia o thread de chamada até que o thread representado por essa instância termine, enquanto continua a executar COM padrão e o bombeamento de <see langword="SendMessage" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">O chamador tentou ingressar em um thread que está no estado <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">O thread é interrompido enquanto espera.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloqueia o thread de chamada até que o thread representado por essa instância termine ou até que o tempo especificado tenha decorrido, enquanto continua executando o COM padrão e o bombeamento de SendMessage.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">O número de milissegundos para espera pelo encerramento do thread.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> se o thread tiver sido encerrado; <see langword="false" /> se o thread não tiver sido encerrado depois que o tempo especificado pelo parâmetro <paramref name="millisecondsTimeout" /> tiver decorrido.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">O valor de <paramref name="millisecondsTimeout" /> será negativo e não será igual a <see cref="F:System.Threading.Timeout.Infinite" /> em milissegundos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">O thread não foi iniciado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" /> é menor que -1 (Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">O thread foi interrompido enquanto espera.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloqueia o thread de chamada até que o thread representado por essa instância termine ou até que o tempo especificado tenha decorrido, enquanto continua executando o COM padrão e o bombeamento de SendMessage.</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">Um <see cref="T:System.TimeSpan" /> definido como a quantidade de tempo de espera até a conclusão do thread.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> se o thread tiver sido encerrado; <see langword="false" /> se o thread não tiver sido encerrado depois que o período especificado pelo parâmetro <paramref name="timeout" /> tiver decorrido.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">O valor de <paramref name="timeout" /> será negativo e não será igual a <see cref="F:System.Threading.Timeout.Infinite" /> em milissegundos, ou será maior que <see cref="F:System.Int32.MaxValue" /> milissegundos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">O chamador tentou ingressar em um thread que está no estado <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">Obtém um identificador exclusivo para o thread gerenciado atual.</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">Um inteiro que representa um identificador exclusivo para esse thread gerenciado.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">Sincroniza o acesso à memória da seguinte maneira: o processador que executa o thread atual não pode reorganizar as instruções de forma que os acessos à memória antes da chamada a <see cref="M:System.Threading.Thread.MemoryBarrier" /> sejam executados após os acessos de memória que seguem a chamada a <see cref="M:System.Threading.Thread.MemoryBarrier" />.</summary>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">Obtém ou define o nome do thread.</summary>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">Uma cadeia de caracteres que contém o nome do thread, ou <see langword="null" />, se nenhum nome foi definido.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">Foi solicitada uma operação de conjuntos, mas a propriedade <see langword="Name" /> já foi definida.</exception>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">Obtém ou define um valor que indica a prioridade de agendamento de um thread.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">Um dos valores de <see cref="T:System.Threading.ThreadPriority" />. O valor padrão é <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">O thread atingiu um estado final, como <see cref="F:System.Threading.ThreadState.Aborted" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">O valor especificado para uma operação definida não é um valor <see cref="T:System.Threading.ThreadPriority" /> válido.</exception>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">Cancela um <see cref="M:System.Threading.Thread.Abort(System.Object)" /> solicitado para o thread atual.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" /> não foi invocado no thread atual.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">O chamador não tem a permissão de segurança necessária para o thread atual.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">Retoma um thread que foi suspenso.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">O thread não foi iniciado, está inativo ou não está no estado suspenso.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">O chamador não tem o <see cref="T:System.Security.Permissions.SecurityPermission" /> apropriado.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Define o estado do apartment de um thread antes que ele seja iniciado.</summary>
      <param name="state" vsli:raw="The new apartment state.">O novo estado de apartment.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">Somente .NET Core: esse membro não é compatível com as plataformas macOS e Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> não é um estado de apartment válido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">O thread já foi iniciado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">O estado de apartment já foi inicializado.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">Aplica uma <see cref="T:System.Threading.CompressedStack" /> capturada ao thread atual.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">O objeto <see cref="T:System.Threading.CompressedStack" /> a ser aplicado ao thread atual.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">Em todos os casos.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Define os dados no slot especificado no thread em execução no momento, para o domínio atual do thread. Para melhorar o desempenho, use os campos marcados com o atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">O <see cref="T:System.LocalDataStoreSlot" /> no qual definir o valor.</param>
      <param name="data" vsli:raw="The value to be set.">O valor a ser configurado.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">Suspende o thread atual no número especificado de milissegundos.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">O número de milissegundos durante o qual o thread ficará suspenso. Se o valor do argumento <paramref name="millisecondsTimeout" /> for zero, o thread entregará o restante da fração de tempo para qualquer thread de prioridade igual que está pronto para execução. Se não houver nenhum outro thread de prioridade igual pronto para execução, a execução do thread atual não será suspensa.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">O valor de tempo limite é negativo e não é igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">Suspende o thread atual para o período de tempo especificado.</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">A quantidade de tempo para a qual o thread é suspenso. Se o valor do argumento <paramref name="millisecondsTimeout" /> for <see cref="F:System.TimeSpan.Zero" />, o thread entregará o restante de sua fração de tempo a qualquer thread de prioridade igual que esteja pronto para execução. Se não houver nenhum outro thread de prioridade igual pronto para execução, a execução do thread atual não será suspensa.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">O valor de <paramref name="timeout" /> será negativo e não será igual a <see cref="F:System.Threading.Timeout.Infinite" /> em milissegundos, ou será maior que <see cref="F:System.Int32.MaxValue" /> milissegundos.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">Faz com que um thread aguarde o número de vezes definido pelo parâmetro <paramref name="iterations" />.</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">Um inteiro com sinal de 32 bits que define quanto tempo um thread deverá aguardar.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">Faz com que o sistema operacional altere o estado da instância atual para <see cref="F:System.Threading.ThreadState.Running" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">O thread já foi iniciado.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">Não há memória suficiente disponível para iniciar esse thread.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">Faz com que o sistema operacional altere o estado da instância atual para <see cref="F:System.Threading.ThreadState.Running" /> e, opcionalmente, fornece um objeto que contém dados a serem usados pelo método executado pelo thread.</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">Um objeto que contém dados a serem usados pelo método executado pelo thread.</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">O thread já foi iniciado.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">Não há memória suficiente disponível para iniciar esse thread.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">Esse thread foi criado usando um delegado <see cref="T:System.Threading.ThreadStart" /> em vez de um delegado <see cref="T:System.Threading.ParameterizedThreadStart" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">Suspende o thread ou, se o thread já está suspenso, não tem efeito.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Somente .NET Core: esse membro não é compatível.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">O thread não foi iniciado ou está inativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">O chamador não tem o <see cref="T:System.Security.Permissions.SecurityPermission" /> apropriado.</exception>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">Obtém um valor que contém os estados do thread atual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">Um dos valores de <see cref="T:System.Threading.ThreadState" /> que indica o estado do thread atual. O valor inicial é <see cref="F:System.Threading.ThreadState.Unstarted" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Define o estado do apartment de um thread antes que ele seja iniciado.</summary>
      <param name="state" vsli:raw="The new apartment state.">O novo estado de apartment.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o estado de apartment for definido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">Somente .NET Core: esse membro não é compatível com as plataformas macOS e Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> não é um estado de apartment válido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">O thread foi iniciado e encerrado ou a chamada não está sendo realizada do contexto do thread enquanto ele está em execução.</exception>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lê o valor de um campo. O valor é o último gravado por qualquer processador em um computador, independentemente do número de processadores ou do estado do cache do processador.</summary>
      <param name="address" vsli:raw="The field to be read.">O campo a ser lido.</param>
      <returns vsli:raw="The value that was read.">O último valor gravado no campo por qualquer processador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Grava um valor em um campo imediatamente, para que o valor esteja visível para todos os processadores no computador.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">O campo no qual o valor deve ser gravado.</param>
      <param name="value" vsli:raw="The value to be written.">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">Faz com que o thread de chamada conceda a execução para outro thread que está pronto para ser executado no processador atual. O sistema operacional seleciona o thread de recebimento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o sistema operacional execução mudou a execução para outro thread; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">A exceção gerada quando é feita uma chamada para o método <see cref="M:System.Threading.Thread.Abort(System.Object)" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">Obtém um objeto que contém informações específicas ao aplicativo relacionadas à anulação de thread.</summary>
      <returns vsli:raw="An object containing application-specific information.">Um objeto que contém informações específicas do aplicativo.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">Fornece dados para o evento de <see cref="E:System.Windows.Forms.Application.ThreadException" /> .</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">O <see cref="T:System.Exception" /> que ocorreu.</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">Obtém a <see cref="T:System.Exception" /> ocorrida.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">O <see cref="T:System.Exception" /> que ocorreu.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">Representa o método que manipulará o evento <see cref="E:System.Windows.Forms.Application.ThreadException" /> de um <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Threading.ThreadExceptionEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">A exceção gerada quando um <see cref="T:System.Threading.Thread" /> é interrompido enquanto está em um estado de espera.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadInterruptedException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadInterruptedException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadInterruptedException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadInterruptedException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica a prioridade de agendamento de um <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">O <see cref="T:System.Threading.Thread" /> pode ser agendado depois dos threads com a prioridade <see langword="Highest" /> e antes deles com a <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">O <see cref="T:System.Threading.Thread" /> pode ser agendado depois dos threads com a prioridade <see langword="Normal" /> e antes deles com a <see langword="Lowest" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">O <see cref="T:System.Threading.Thread" /> pode ser agendado antes dos threads com qualquer outra prioridade.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">O <see cref="T:System.Threading.Thread" /> pode ser agendado depois dos threads com qualquer outra prioridade.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">O <see cref="T:System.Threading.Thread" /> pode ser agendado depois dos threads com a prioridade <see langword="AboveNormal" /> e antes deles com a <see langword="BelowNormal" />. Os threads têm a prioridade <see langword="Normal" /> por padrão.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Representa o método que é executado em um <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">A exceção gerada quando uma falha ocorre em um thread gerenciado depois que o thread do sistema operacional subjacente tiver sido iniciado, mas antes que o thread esteja pronto para executar o código do usuário.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica os estados de execução de um <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">O estado do thread inclui <see cref="F:System.Threading.ThreadState.AbortRequested" /> e agora o thread está inativo, mas seu estado ainda não foi alterado para <see cref="F:System.Threading.ThreadState.Stopped" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">O método <see cref="M:System.Threading.Thread.Abort(System.Object)" /> foi invocado no thread, mas o thread ainda não recebeu o <see cref="T:System.Threading.ThreadAbortException" /> pendente que tentará encerrá-lo.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">O thread está sendo executado como um thread em segundo plano, em vez de um thread de primeiro plano. Esse estado é controlado pela configuração da propriedade <see cref="P:System.Threading.Thread.IsBackground" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">O thread foi iniciado e ainda não foi interrompido.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">O thread foi interrompido.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">O thread está sendo solicitado a parar. Isso é somente para uso interno.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">O thread foi suspenso.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">O thread está sendo solicitado a suspender.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">O método <see cref="M:System.Threading.Thread.Start" /> não foi invocado no thread.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">O thread está bloqueado. Isso pode ser o resultado de chamar <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> ou <see cref="M:System.Threading.Thread.Join" />, solicitar um bloqueio (por exemplo, chamando <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> ou <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />) ou esperar em um objeto de sincronização de thread como <see cref="T:System.Threading.ManualResetEvent" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">A exceção que é lançada quando um <see cref="T:System.Threading.Thread" /> está em um <see cref="P:System.Threading.Thread.ThreadState" /> inválido para a chamada de método.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadStateException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadStateException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadStateException" /> com uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadStateException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
  </members>
</doc>