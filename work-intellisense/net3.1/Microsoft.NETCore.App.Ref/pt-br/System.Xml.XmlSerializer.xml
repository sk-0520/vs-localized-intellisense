<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Especifica várias opções a serem usadas ao gerar tipos .NET para uso com um serviço Web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Habilita a vinculação de dados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Cria eventos para a invocação assíncrona dos métodos Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Cria métodos de Início e Fim para a invocação assíncrona dos métodos Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Gera o código de serialização explicitamente ordenado conforme especificado por meio da propriedade <see langword="Order" /> dos atributos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Representa tipos primitivos por propriedades.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Representa tipos primitivos por campos e tipos primitivos por tipos de namespace <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Fornece métodos estáticos para converter o texto de entrada em nomes de entidades de código.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Produz uma cadeia de caracteres em minúsculas concatenadas de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Uma versão em minúsculas concatenadas da cadeia de caracteres de parâmetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Produz uma cadeia de caracteres em Pascal case de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Uma versão em Pascal case da cadeia de caracteres de parâmetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Gera um nome de entidade de código válido de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Uma cadeia de caracteres que pode ser usada como identificador de código, como o nome de um parâmetro de método.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Mantém um grupo de nomes para entidades de código relacionadas ou mapeamentos de tipo gerados pela infraestrutura de serialização de XML do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e determina se os identificadores de código diferenciam maiúsculas de minúsculas.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os identificadores diferenciarem maiúsculas de minúsculas; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Adiciona uma entidade de código ou um mapeamento de tipos nomeado ao escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Um nome que é usado para indexar a entidade de código.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">As informações de entidade de código ou mapeamento de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Impede que um nome especificado seja usado dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Um nome que não estará disponível dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Adiciona uma entidade de código ou um mapeamento de tipos nomeado ao escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, garantindo que o nome seja exclusivo dentro do escopo.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Um nome de candidato que é usado para indexar a entidade de código.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">As informações de entidade de código ou mapeamento de tipos.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">O valor do parâmetro identificador ou uma cadeia de caracteres modificada se houver uma colisão de nomes.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Remove todas as entidades de código ou mapeamentos de tipos, incluindo seus nomes, do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Determina se um nome especificado já está sendo usado no escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">O nome a ser verificado para uso dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o nome já estiver sendo usado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Garante que a entrada tenha as maiúsculas e minúsculas corretas, modificando o nome de acordo com o valor da propriedade <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">O nome que possivelmente será modificado.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Uma cadeia de caracteres que é igual ao o identificador de entrada ou tem a maiúscula ou minúscula da primeira letra modificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Determina se o nome de entrada está em conflito com outro nome dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e, em caso afirmativo, gera uma cadeia de caracteres modificada.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">O nome a ser modificado se já não for exclusivo.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">O valor do parâmetro identificador ou uma cadeia de caracteres modificada se houver uma colisão de nomes.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Remove do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> a entidade de código ou o mapeamento de tipos identificado pelo nome da entrada.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">O nome da entidade de código ou as informações de mapeamento de tipos a serem removidas.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Remove o nome da entrada dos nomes reservados da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Um nome que será disponibilizado dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Retorna uma matriz das entidades de código ou mapeamentos de tipos dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">O tipo de todas as entidades de código ou mapeamentos de tipos para a instância.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Uma matriz das entidades de código ou mapeamentos de tipos que é armazenada pelo objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Obtém ou define um valor que indica se a instância usa minúsculas concatenadas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" />para indicar que a instância usa camel case; <see langword="false" /> para indicar que a instância usa o caso do Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Descreve o contexto em que um conjunto de esquemas é associado às entidades de código do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.ImportContext" /> para os identificadores de código fornecidos, com a opção de compartilhamento de tipo fornecida.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">As entidades de código às quais o contexto se aplica.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Um valor <see cref="T:System.Boolean" /> que determina se tipos personalizados são compartilhados entre esquemas.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Obtém um valor que determina se tipos personalizados são compartilhados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se os tipos personalizados forem compartilhados entre o esquema; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Obtém um conjunto de entidades de código às quais o contexto se aplica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">Um <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica as entidades de código às quais o contexto se aplica.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Obtém uma coleção de avisos que são gerados durante a importação de descrições de entidade de código.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">Um <see cref="T:System.Collections.Specialized.StringCollection" /> que contém avisos que foram gerados ao importar as descrições de entidade de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Estabelece uma propriedade <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> para uso pela infraestrutura do .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Obtém ou define se o espaço em branco e valores de atributo são normalizados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se os valores de atributos de espaço em branco forem normalizados; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Obtém ou define como o espaço em branco é tratado durante a análise de XML.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Um membro da <see cref="T:System.Xml.WhitespaceHandling" /> enumeração que descreve como o ritmo dos brancos é tratado durante a análise de XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Descreve um importador de esquema.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Especifica que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar o membro de classe como um atributo SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> usando o valor especificado como o nome do atributo XML.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">O nome do atributo XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtém ou define o nome do atributo XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">O nome do atributo XML. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtém ou define o tipo de dados XSD (Linguagem de Definição de Esquema XML) do atributo SOAP gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XML Schema data type.">Um tipo de dados de esquema XML.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">O tipo de dados de esquema XML que você especificou não pode ser mapeado para o tipo de dados .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Obtém ou define o namespace de XML do atributo XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">O namespace de XML do atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Permite substituir os atributos aplicados a propriedades, campos e classes quando se utiliza um <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar ou desserializar um objeto como codificado em SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> contidos pelo <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. O parâmetro <paramref name="type" /> especifica o objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="member" /> especifica o nome de um membro que é substituído.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">O <see cref="T:System.Type" /> do objeto a ser substituído.</param>
      <param name="member" vsli:raw="The name of the member to override.">O nome do membro a ser substituído.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> a uma coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">O <see cref="T:System.Type" /> do objeto que será substituído.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Obtém o objeto associado ao tipo especificado (classe base).</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Obtém o objeto associado ao tipo especificado (classe base). O parâmetro <paramref name="member" /> especifica o membro da classe base que é substituído.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">A classe base <see cref="T:System.Type" /> associada com a coleção de atributos que você deseja substituir.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">O nome do membro substituído que especifica o <see cref="T:System.Xml.Serialization.SoapAttributes" /> a ser retornado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Representa uma coleção de objetos de atributos que controlam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa métodos SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> usando o tipo personalizado especificado.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Qualquer objeto que implementa a interface <see cref="T:System.Reflection.ICustomAttributeProvider" />, como a classe <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Obtém ou define a propriedade <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> a ser substituída.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">Um <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que substitui o comportamento <see cref="T:System.Xml.Serialization.XmlSerializer" /> do quando o membro é serializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtém ou define o valor padrão de um atributo ou elemento XML.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Um objeto que representa o valor padrão de um elemento ou atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Obtém ou define um <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a ser substituído.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">O <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a ser substituído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma enumeração SOAP.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Obtém ou define um valor que especifica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou propriedade como XML SOAP codificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o campo ou propriedade não for serializada por <see cref="T:System.Xml.Serialization.XmlSerializer" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Obtém ou define um objeto que instrui o <see cref="T:System.Xml.Serialization.XmlSerializer" /> sobre como serializar um tipo de objeto no XML de codificação SOAP.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">Um <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> que substitui um <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> aplicado a uma declaração de classe ou é aplicado a uma declaração de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Especifica que o valor do membro público seja serializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> como um elemento XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> e especifica o nome do elemento XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">O nome do elemento XML do membro serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Obtém ou define o tipo de dados XSD (Linguagem de Definição de Esquema XML) do elemento XML gerado.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Um dos tipos de dados de Esquema XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtém ou define o nome do elemento XML gerado.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">O nome do elemento XML gerado. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro que tem o atributo <see langword="xsi:null" /> definido como "1".</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Controla como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> usando o nome do elemento especificado.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Obtém ou define o valor gerado em um documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma enumeração ou o valor reconhecido quando ele desserializa o membro da enumeração.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">O valor gerado em um documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa a enumeração ou o valor reconhecido quando desserializa o membro de enumeração.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Instrui <see cref="T:System.Xml.Serialization.XmlSerializer" /> para não serializar o campo público ou o valor da propriedade pública de leitura/gravação.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Permite que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconheça um tipo ao serializar ou desserializar um objeto como XML de SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> usando o tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the object to include.">O tipo de objeto a ser incluído.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Obtém ou define o tipo do objeto a ser usado ao serializar ou desserializar um objeto.</summary>
      <returns vsli:raw="The type of the object to include.">O tipo de objeto a ser incluído.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Gera mapeamentos para mensagens codificadas em SOAP das informações do método de serviço Web ou tipos do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando um namespace de XML padrão para mapeamentos de tipo importado.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando substituições para a serialização de XML.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Um objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que substitui a maneira como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos mapeados usando a codificação SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando substituições de serialização de XML e um namespace de XML padrão.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Um objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que substitui a maneira como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos mapeados usando a codificação SOAP.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para indicar que um desserializador gerado deve verificar o nome qualificado esperado do elemento wrapper; caso contrário, <see langword="false" />. O valor desse parâmetro é relevante apenas se o valor do parâmetro <paramref name="hasWrapperElement" /> é <see langword="true" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para indicar que um desserializador gerado deve verificar o nome qualificado esperado do elemento wrapper; caso contrário, <see langword="false" />. O valor desse parâmetro é relevante apenas se o valor do parâmetro <paramref name="hasWrapperElement" /> é <see langword="true" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Um dos valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Gera um mapeamento para um elemento de esquema XML para um tipo do .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Gera um mapeamento para um elemento de esquema XML para um tipo do .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">O namespace de XML padrão a ser usado.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Coloca os mapeamentos para um tipo no contexto da instância <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para uso posterior, quando os métodos de importação são invocados.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">O tipo do .NET Framework para o qual se salvam as informações de mapeamento de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Coloca os mapeamentos de tipos derivados no contexto da instância <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para uso posterior, quando os métodos de importação são invocados.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Um objeto de reflexão <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contém atributos personalizados derivados do atributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Representa determinados atributos de um elemento XSD &lt;<see langword="part" />&gt; em um documento WSDL para gerar classes do documento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Obtém ou define um valor que corresponde ao atributo de nome do elemento de parte WSDL.</summary>
      <returns vsli:raw="The element name.">O nome do elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Obtém ou define um valor que corresponde ao atributo de tipo do elemento de parte WSDL.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que corresponde ao tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Controla o esquema gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> quando uma instância da classe é serializada como XML codificado em SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e especifica o nome do tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e especifica o nome e o namespace de XML do tipo.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">O namespace de XML do tipo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Obtém ou define um valor que indica se deve incluir o tipo nos documentos de esquema XML de codificação SOAP.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> incluir o tipo em documentos de esquema XML codificados em SOAP; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtém ou define o namespace do tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">O namespace do tipo XML. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtém ou define o nome do tipo XML.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">O nome do tipo XML. O padrão é o nome da classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Fornece dados para o objeto conhecido, mas não referenciado, encontrado em um fluxo XML de SOAP codificado durante a desserialização.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o" vsli:raw="The unreferenced object.">O objeto não referenciado.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Uma cadeia de caracteres exclusiva usada para identificar o objeto não referenciado.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Obtém a ID do objeto.</summary>
      <returns vsli:raw="The ID of the object.">A ID do objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Obtém o objeto desserializado, mas não referenciado.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">O objeto desserializado, mas não referenciado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> .</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Adiciona um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser adicionado.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> recém-adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Obtém um valor que indica se o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado existe na coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> de seu interesse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Copia toda a coleção para uma matriz unidimensional compatível de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, iniciando no índice especificado da matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">A matriz unidimensional de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que é o destino dos elementos copiados da coleção. A matriz deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Obtém o índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> cujo índice você deseja.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Insere um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> na coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">O índice em que o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> é inserido.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Obtém ou define o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Remove o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado da coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser removido.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Especifica que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro de classe específica como uma matriz de elementos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e especifica o nome do elemento XML gerado na instância de documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Obtém ou define o nome do elemento XML fornecido à matriz serializada.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">O nome do elemento XML da matriz serializada. O padrão é o nome do membro ao qual o <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> é atribuído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Obtém ou define um valor que indica se o nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> é qualificado ou não.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro como uma marca de XML vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Obtém ou define o namespace do elemento XML.</summary>
      <returns vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtém ou define a ordem explícita na qual os elementos são serializados ou desserializados.</summary>
      <returns vsli:raw="The order of the code generation.">A ordem de geração de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Representa um atributo que especifica os tipos derivados que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode colocar em uma matriz serializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o nome do elemento XML gerado no documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">O nome do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o nome do elemento XML gerado no documento XML e o <see cref="T:System.Type" /> que pode ser inserido no documento XML gerado.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">O nome do elemento XML.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">O <see cref="T:System.Type" /> do objeto a ser serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o <see cref="T:System.Type" /> que pode ser inserido na matriz serializada.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">O <see cref="T:System.Type" /> do objeto a ser serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Obtém ou define o tipo de dados XML do elemento XML gerado.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Um tipo de dados XSD (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtém ou define o nome do elemento XML gerado.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">O nome do elemento XML gerado. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Obtém ou define um valor que indica se o nome do elemento XML gerado é qualificado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">A propriedade <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> está definida como <see langword="XmlSchemaForm.Unqualified" /> e um valor <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> está especificado.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro como uma marca de XML vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gerar o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" /> e nenhuma instância será gerada. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Obtém ou define o namespace do elemento XML gerado.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">O namespace do elemento XML gerado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Obtém ou define o nível em uma hierarquia de elementos XML que o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> afeta.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">O índice de base zero de um conjunto de índices em uma matriz de matrizes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Obtém ou define o tipo permitido em uma matriz.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">Um <see cref="T:System.Type" /> que é permitido na matriz.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> .</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Adiciona um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a adicionar à coleção.</param>
      <returns vsli:raw="The index of the added item.">O índice do item adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Determina se a coleção contém o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a coleção contiver o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Copia uma matriz <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> para a coleção, começando em um índice de destino especificado.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">A matriz de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a serem copiados para a coleção.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">O índice no qual os atributos copiados começam.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Retorna o índice de base zero da primeira ocorrência do <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado na coleção ou -1 se o atributo não for encontrado na coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser localizado na coleção.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">O primeiro índice do <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> na coleção ou -1 se o atributo não for encontrado na coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Insere um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> na coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">O índice no qual o atributo é inserido.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Obtém ou define o item no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">O índice de base zero do membro da coleção a ser obtido ou definido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Remove um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da coleção, se existir.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser removido.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Obtém um objeto que representa o atributo XML desconhecido.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Obtém uma lista delimitada por vírgulas de nomes do atributo XML que deve estar em uma instância de documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Uma lista delimitada por vírgulas de nomes de atributo XML. Cada nome está no seguinte formato: <paramref name="namespace" />:.<paramref name="name" /></returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Obtém o número de linha do atributo XML desconhecido.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">O número de linha do atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Obtém a posição na linha do atributo XML desconhecido.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">O número de posição do atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtém o objeto que está sendo desserializado.</summary>
      <returns vsli:raw="The object being deserialized.">O objeto que está sendo desserializado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Representa o método que manipula o <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Permite a substituição de propriedade, campo e atributos de classe quando você usa o <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar ou desserializar um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Adiciona um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído. O parâmetro <paramref name="member" /> especifica o nome de um membro que é substituído.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">O <see cref="T:System.Type" /> do objeto a ser substituído.</param>
      <param name="member" vsli:raw="The name of the member to override.">O nome do membro a ser substituído.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Adiciona um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído pelo objeto <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">O <see cref="T:System.Type" /> do objeto que será substituído.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Obtém o objeto associado ao tipo de classe base especificado.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Obtém o objeto associado ao tipo especificado (classe base). O parâmetro de membro especifica o membro da classe base que é substituído.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">O nome do membro substituído que especifica o <see cref="T:System.Xml.Serialization.XmlAttributes" /> a ser retornado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Representa uma coleção de objetos de atributos que controlam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> e personaliza a maneira como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Uma classe que pode fornecer implementações alternativas dos atributos que controlam a serialização de XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Obtém ou define a propriedade <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituída.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">O <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Obtém a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a serem substituídos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Um objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Um <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Obtém ou define uma coleção de objetos que especificam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os itens inseridos em uma matriz retornada por um campo público ou uma propriedade de leitura/gravação.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Um objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação pública como um atributo XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">Um <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla a serialização de um campo público ou de uma propriedade de leitura/gravação como um atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Obtém ou define um objeto que permite distinguir entre um conjunto de opções.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">Um <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que pode ser aplicado a um membro de classe que é serializado como <see langword="xsi:choice" /> um elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtém ou define o valor padrão de um atributo ou elemento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">Um <see cref="T:System.Object" /> que representa o valor padrão de um atributo ou elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Obtém uma coleção de objetos que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação como um elemento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">Uma <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Um <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Obtém ou define um valor que especifica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa ou não um campo público ou uma propriedade de leitura/gravação pública.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o campo ou propriedade não for serializada por <see cref="T:System.Xml.Serialization.XmlSerializer" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Obtém ou define um valor que especifica se é necessário manter todas as declarações de namespace quando um objeto que contém um membro que retorna um objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> é substituído.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as declarações de namespace precisarem ser mantidas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe como um elemento raiz XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que substitui uma classe atribuída como um elemento raiz XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Obtém ou define um objeto que instrui o <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar um campo público ou propriedade de leitura/gravação pública como texto XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">Um <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que substitui a serialização padrão de uma propriedade pública ou campo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe à qual o <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> foi aplicado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">Um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que substitui um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a uma declaração de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Especifica que o membro pode ser detectado ainda mais usando uma enumeração.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">O nome do membro que retorna a enumeração usada para detectar uma opção.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Obtém ou define o nome do campo que retorna a enumeração a ser usada ao detectar tipos.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">O nome de um campo que retorna uma enumeração.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Contém campos que podem ser usados para passar eventos delegados para um método <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> thread-safe do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> usada pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> para substituir a forma padrão que ele serializa uma classe.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Adiciona um <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser adicionado.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">O índice de base zero do item recém-adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Determina se a coleção contém o objeto especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser procurado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Copia o <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, ou parte dele, para uma matriz unidimensional.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">A matriz <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que contém os elementos copiados.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Obtém o índice do <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> cujo índice está sendo recuperado.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">O índice de base zero do <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Insere um <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> na coleção.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">O índice de base zero no qual o membro é inserido.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtém ou define o elemento no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns vsli:raw="The element at the specified index.">O elemento no índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> não é um índice válido no <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">A propriedade é definida e o <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Remove o objeto especificado da coleção.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser removido da coleção.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Obtém o objeto que representa o elemento XML desconhecido.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">O objeto que representa o elemento XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Obtém uma lista delimitada por vírgulas de nomes do elemento XML que deve estar em uma instância de documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Uma lista delimitada por vírgulas de nomes de elementos XML. Cada nome está no seguinte formato: <paramref name="namespace" />:.<paramref name="name" /></returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtém o número de linha em que o elemento desconhecido foi encontrado se o leitor XML for um <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">O número de linha em que o elemento desconhecido foi encontrado se o leitor de <see cref="T:System.Xml.XmlTextReader" />XML for um; caso contrário,-1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtém o local na linha em que o elemento desconhecido ocorre se o leitor XML for um <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">O número na linha em que o elemento desconhecido ocorre se o leitor de XML for <see cref="T:System.Xml.XmlTextReader" />um; caso contrário,-1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Obtém o objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está desserializando.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">O objeto que está sendo desserializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconheça um tipo quando ele serializa ou desserializa um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">O <see cref="T:System.Type" /> do objeto a ser incluído.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Obtém ou define o tipo do objeto a ser incluído.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">O <see cref="T:System.Type" /> do objeto a ser incluído.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Dá suporte a mapeamentos entre tipos do .NET Framework e tipo de dados do Esquema XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Obtém o nome do elemento mapeado.</summary>
      <returns vsli:raw="The name of the mapped element.">O nome do elemento mapeado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Obtém o namespace do elemento mapeado.</summary>
      <returns vsli:raw="The namespace of the mapped element.">O namespace do elemento mapeado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Define a chave usada para pesquisar o mapeamento.</summary>
      <param name="key" vsli:raw="The lookup key.">A chave de pesquisa.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Obtém o nome do elemento XSD do mapeamento.</summary>
      <returns vsli:raw="The XSD element name.">O nome do elemento XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Especifica se um mapeamento é de leitura, gravação ou ambos.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Métodos de leitura e de gravação são gerados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Métodos de leitura são gerados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Métodos de gravação são gerados.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Mapeia uma entidade de código em um método de serviço Web do .NET Framework para um elemento em uma mensagem de WSDL (linguagem WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Obtém ou define um valor que indica se o tipo do .NET Framework é mapeado para um elemento ou atributo XML de qualquer tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se o tipo for mapeado para um XML qualquer elemento ou atributo; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Obtém um valor que indica se o campo que acompanha o tipo do .NET Framework tem um valor especificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se o campo fornecido tiver um valor especificado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Obtém o nome não qualificado da declaração do elemento XML que se aplica a esse mapeamento.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">O nome não qualificado da declaração de elemento XML que se aplica a esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Obtém o nome do membro de método de serviço Web representado por esse mapeamento.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">O nome do membro do método de serviço Web representado por esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Obtém o namespace de XML que se aplica a esse mapeamento.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">O namespace XML que se aplica a esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Obtém o nome de tipo totalmente qualificado do tipo de .NET Framework para esse mapeamento.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">O nome do tipo totalmente qualificado do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Obtém o nome de tipo do .NET Framework para esse mapeamento.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">O nome do tipo do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Obtém o namespace do tipo do .NET Framework para esse mapeamento.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">O namespace do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Obtém o nome do elemento XML conforme ele aparece no documento de descrição de serviço.</summary>
      <returns vsli:raw="The XML element name.">O nome do elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fornece os mapeamentos entre os métodos do serviço Web do .NET Framework e as mensagens de WSDL (linguagem WSDL) que são definidas para os serviços Web SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Obtém o número de entidades de código do .NET Framework que pertencem a um método de serviço Web para o qual uma mensagem SOAP está sendo mapeada.</summary>
      <returns vsli:raw="The number of mappings in the collection.">O número de mapeamentos na coleção.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Obtém um item que contém informações de mapeamento do tipo interno para uma entidade de código do .NET Framework que pertence a um método do serviço Web que é mapeado para uma mensagem SOAP.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">O índice de mapeamento a ser retornado.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">O <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> solicitado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtém o nome do tipo do .NET Framework que está sendo mapeado para o tipo de dados de um elemento de esquema XML que representa uma mensagem SOAP.</summary>
      <returns vsli:raw="The name of the .NET type.">O nome do tipo de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtém o namespace do tipo do .NET Framework que está sendo mapeado para o tipo de dados de um elemento de esquema XML que representa uma mensagem SOAP.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">O namespace de .NET Framework do mapeamento.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Obtém o número de linha do nó XML desconhecido.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">O número de linha do nó XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Obtém a posição na linha do nó XML desconhecido.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">O número de posição do nó XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Obtém o nome local de XML do nó XML que está sendo desserializado.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">O nome local XML do nó que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Obtém o nome do nó XML que está sendo desserializado.</summary>
      <returns vsli:raw="The name of the node being deserialized.">O nome do nó que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Obtém o URI de namespace associado ao nó XML que está sendo desserializado.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">O URI do namespace que está associado ao nó XML que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Obtém o tipo do nó XML que está sendo desserializado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">O <see cref="T:System.Xml.XmlNodeType" /> que representa o nó XML que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtém o objeto que está sendo desserializado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Obtém o texto do nó XML que está sendo desserializado.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">O texto do nó XML que está sendo desserializado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Gera mapeamentos de declarações de elemento de esquema XML, incluindo partes de mensagem de XSD (definição de esquema XML) literais em um documento de linguagem WSDL, para tipos do .NET Framework ou informações de método de serviço Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando o namespace de XML padrão especificado.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando a serialização de XML especificada.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Um objeto que substitui como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os tipos mapeados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando as substituições de serialização de XML e o namespace de XML padrão especificados.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Um objeto que substitui como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os tipos mapeados.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Gera mapeamentos de tipo interno para obter informações de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> com mapeamentos para as partes do elemento de um definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Retorna os mapeamentos de tipo interno usando as informações de um método de serviço Web e permite que você especifique um nome de elemento XML, namespace de XML e outras opções.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Retorna os mapeamentos de tipo interno usando as informações de um método de serviço Web e permite que você especifique um nome de elemento XML, namespace de XML e outras opções.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o tipo de esquema gerado será marcado com o elemento <see langword="&lt;xs:anyAttribute&gt;" />; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Gera mapeamentos de tipo interno para obter informações de um método de serviço Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o tipo de esquema gerado será marcado com o elemento <see langword="&lt;xs:anyAttribute&gt;" />; caso contrário, <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Um dos valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. O padrão é <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework especificado.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework, usando o namespace e o tipo especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">O namespace de XML padrão a ser usado.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework usando o tipo e o atributo especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Um atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que é aplicado ao tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa um mapeamento de um tipo .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework, usando o tipo, o atributo e o namespace especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Um atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que é aplicado ao tipo.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">O namespace de XML padrão a ser usado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contém o mapeamento do .NET Framework interno de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Inclui mapeamentos de um tipo para uso posterior quando os métodos de importação são invocados.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">O tipo do .NET Framework para o qual se salvam as informações de mapeamento de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Inclui mapeamentos de tipos derivados para uso posterior quando os métodos de importação são invocados.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Uma instância da classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contém os atributos personalizados derivados do atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fornece os mapeamentos entre as entidades de código nos métodos de serviço Web do .NET Framework e o conteúdo das mensagens de linguagem WSDL que são definidos para serviços Web SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> representa um valor retornado do método do serviço Web, em vez de um parâmetro de saída.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se o membro representa um valor de retorno de serviço Web; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Obtém ou define o nome do membro do método de serviço Web para esse mapeamento.</summary>
      <returns vsli:raw="The name of the Web service method.">O nome do método de serviço Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Obtém ou define o tipo da entidade de código de membro do método do serviço Web que é representado por esse mapeamento.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">O <see cref="T:System.Type" /> da entidade de código de membro do método de serviço Web que é representada por esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Obtém ou define um valor que indica que o valor do atributo <c>isNullable</c> da definição do elemento XML correspondente é <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para substituir a <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> Propriedade; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Obtém ou define um <see cref="T:System.Xml.Serialization.SoapAttributes" /> com a coleção de atributos de SOAP que foram aplicados à entidade de código de membro.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que contém os objetos que representam os atributos SOAP aplicados ao membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Obtém ou define um <see cref="T:System.Xml.Serialization.XmlAttributes" /> com a coleção de atributos de <see cref="T:System.Xml.Serialization.XmlSerializer" /> que foram aplicados à entidade de código de membro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos XML que foram aplicados ao código de membro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Habilita iteração em uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">O objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que você deseja iterar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtém o elemento atual na coleção.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> atual na coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Avança o enumerador para o próximo item na coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a movimentação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Obtém o elemento atual na coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">O elemento atual na coleção de <see cref="T:System.Xml.Schema.XmlSchema" /> objetos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Popula objetos <see cref="T:System.Xml.Schema.XmlSchema" /> com declarações de elemento de esquema XML que são encontradas em objetos de mapeamento de tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> à qual declarações do elemento obtidas dos mapeamentos de tipos são adicionadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Exporta um elemento &lt;any&gt; para o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que é identificado pelo namespace especificado.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">O namespace do documento do esquema XML ao qual adicionar um elemento &lt;any&gt;.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Um nome arbitrário atribuído à declaração do elemento &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Adiciona uma declaração do elemento de um objeto ou tipo a uma mensagem SOAP ou um objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém mapeamentos para exportação.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">A cadeia de caracteres “any” com um inteiro anexado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Adiciona uma declaração do elemento ao <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma das partes do elemento de uma definição de mensagem SOAP literal.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Os mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem de linguagem WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Adiciona uma declaração do elemento ao <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma das partes do elemento de uma definição de mensagem SOAP literal e especifica se os elementos circunscritos estão incluídos.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">O mapeamento interno entre um tipo .NET Framework e um elemento de esquema XML.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os elementos do esquema que o circunscrevem devem ser incluídos; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Adiciona uma declaração do elemento ao objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma única parte do elemento de uma definição de mensagem SOAP literal.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Mapeamentos de tipos .NET Framework internos para as partes do elemento de uma definição de mensagem de linguagem WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome XML qualificado da declaração do elemento exportado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Adiciona uma declaração do elemento para um tipo .NET Framework para o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">O mapeamento interno entre um tipo .NET Framework e um elemento de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Gera mapeamentos internos para os tipos de .NET Framework para declarações do elemento do esquema XML, incluindo partes de mensagens XSD literais em um documento WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, obtendo uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representam os esquemas XML usados por mensagens literais de SOAP definidas em um documento WSDL.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> .</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, obtendo uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representa os esquemas XML usados por mensagens literais SOAP, além de classes que estão sendo geradas para associações definidas em um documento de linguagem WSDL.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Um objeto <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Um objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica uma coleção de classes que está sendo gerada para associações definidas em um documento WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Gera informações de mapeamento de tipo interno para uma única parte do elemento literal (SOAP) definido em um documento WSDL.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome do tipo de um elemento para o qual um tipo .NET Framework é gerado.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">O nome do elemento parte no documento WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa o mapeamento de tipo .NET Framework para uma única parte do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Um tipo base para o tipo .NET Framework que é gerado para corresponder ao tipo de um elemento XSD.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa as informações de mapeamento de tipo .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML ou como parte de um documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Um tipo base para o tipo .NET Framework que é gerado para corresponder ao tipo de um elemento XSD.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o tipo correspondente a um elemento XSD pode ser herdado indiretamente do tipo base; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">As informações de mapeamento de tipos .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">O nome do elemento para o qual um mapeamento é gerado.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">O namespace do elemento para o qual um mapeamento será gerado.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Uma matriz de instâncias <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que especifica os membros do elemento para o qual um mapeamento será gerado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém informações de mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Gera informações de mapeamento de tipo interno para uma única parte do elemento de uma mensagem SOAP de uso do literal definida em um documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome da parte da mensagem.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">O mapeamento de tipos .NET Framework para uma definição de mensagem WSDL que contém a parte de um único elemento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Uma matriz do tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica os nomes das partes da mensagem.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa os mapeamentos de tipo .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Uma matriz do tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica os nomes das partes da mensagem.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Um tipo base para todos os tipos do .NET Framework que são gerados para corresponderem às partes da mensagem.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que os tipos correspondentes às partes da mensagem podem ser herdados indiretamente do tipo base; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Os mapeamentos de tipo do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Um objeto <see cref="T:System.Type" /> que especifica um tipo base.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Um objeto <see cref="T:System.Type" /> que especifica um tipo base.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">Um valor <see cref="T:System.Boolean" /> que especifica se o tipo gerado pode herdar indiretamente o <paramref name="baseType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">As informações de mapeamento de tipos .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Representa a coleção de esquemas XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Adiciona um objeto ao fim da coleção.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado à coleção de objetos.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">O índice no qual o <see cref="T:System.Xml.Schema.XmlSchema" /> é adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Adiciona um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa uma referência de assembly à coleção.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">O <see cref="T:System.Uri" /> do objeto do esquema.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">O índice no qual o <see cref="T:System.Xml.Schema.XmlSchema" /> é adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Adiciona uma instância da classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> ao final da coleção.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">O objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> a ser adicionado ao final da coleção.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Adiciona um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa uma referência de assembly à coleção.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Processa os nomes de elemento e de atributo nos esquemas XML e, opcionalmente, valida os esquemas XML.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que especifica o método de retorno de chamada que trata os erros e os avisos durante a validação do esquema XML, se o parâmetro strict estiver definido como <see langword="true" />.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para validar os esquemas XML na coleção usando o método <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> da classe <see cref="T:System.Xml.Serialization.XmlSchemas" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Retorna um valor que indica se a coleção contém um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que pertence ao namespace especificado.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">O namespace do item a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o item for encontrado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Determina se o <see cref="T:System.Xml.Serialization.XmlSchemas" /> contém um esquema específico.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser localizado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se a coleção contém o item especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Copia todo o <see cref="T:System.Xml.Serialization.XmlSchemas" /> para um <see cref="T:System.Array" /> unidimensional compatível, que inicia no índice especificado da matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">O <see cref="T:System.Array" /> unidimensional que é o destino dos esquemas copiados de <see cref="T:System.Xml.Serialization.XmlSchemas" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">Um inteiro de 32 bits que representa o índice na matriz na qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Localiza em um dos esquemas XML um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> do nome e do tipo especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um nome totalmente qualificado com um namespace usado para localizar um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> na coleção.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">O <see cref="T:System.Type" /> do objeto a ser encontrado. Os tipos possíveis incluem: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Uma instância <see cref="T:System.Xml.Schema.XmlSchemaObject" />, como um <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Obtém uma coleção de esquemas que pertencem ao mesmo namespace.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">O namespace dos esquemas a serem recuperados.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Uma implementação <see cref="T:System.Collections.IList" /> que contém os esquemas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Pesquisa o esquema especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser localizado.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">O índice de base zero da primeira ocorrência do valor em todo o <see cref="T:System.Xml.Serialization.XmlSchemas" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Insere um esquema no <see cref="T:System.Xml.Serialization.XmlSchemas" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">O índice de base zero no qual o <paramref name="schema" /> deve ser inserido.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Obtém um valor que indica se os esquemas foram compilados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se os esquemas tiverem sido compilados; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Método estático que determina se o esquema XML especificado contém um atributo <see langword="IsDataSet" /> personalizado definido como <see langword="true" /> ou equivalente.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">O esquema XML no qual verificar se há um atributo <see langword="IsDataSet" /> com um valor <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o esquema especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> no índice especificado.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">O índice do item a ser recuperado.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">O <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Obtém um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado que representa o esquema XML associado ao namespace indicado.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">O namespace do objeto especificado.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Executa processos personalizados adicionais ao limpar o conteúdo da instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Executa os processos personalizados adicionais antes de inserir um novo elemento na instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Executa processos personalizados adicionais ao remover um elemento da instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">O valor do elemento a ser removido em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Executa processos personalizados adicionais antes de definir um valor na instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Remove a primeira ocorrência de um esquema específico do <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser removido.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Retorna um enumerador iterado por meio da coleção de esquemas XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de tipos de dados XML com codificação SOAP que são mapeados para coleções ou enumerações.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">A coleção para a qual a matriz de itens da coleção é copiada.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Uma matriz de itens a serem copiados para a <c>coleção de objetos</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de dados XML com codificação SOAP.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> que contém o objeto a ser corrigido e a matriz de identificadores de cadeia de caracteres que os itens preencherão.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Uma classe abstrata que é a classe base para <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> e <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, e que contém os métodos comuns para ambos os tipos.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de tipos de dados XML não raiz com codificação SOAP.</summary>
      <returns vsli:raw="The object returned by the callback.">O objeto retornado pelo retorno de chamada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Controla a desserialização pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Armazena um objeto que contém um método de retorno de chamada que será chamado, conforme necessário, para preencher as coleções ou enumerações do .NET Framework que são mapeados para matrizes com codificação SOAP ou elementos com codificação SOAP e referências múltiplas.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> e os dados de entrada do método de retorno de chamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Armazena um objeto que contém uma instância de método de retorno de chamada que será chamada, conforme necessária, para preencher os objetos em uma matriz com codificação SOAP.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> e os dados de entrada do método de retorno de chamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Armazena uma implementação do delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> e seus dados de entrada para uma invocação posterior.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">O nome do tipo .NET Framework que está sendo desserializado.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">O namespace do tipo .NET Framework que está sendo desserializado.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">O <see cref="T:System.Type" /> a ser desserializado.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Armazena um objeto que está sendo desserializado de um elemento <see langword="multiRef" /> com codificação SOAP para acesso posterior por meio do método <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">O valor do atributo <see langword="id" /> de um elemento <see langword="multiRef" /> que identifica o elemento.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">O objeto que é desserializado do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Verifica se o desserializador avançou.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">O <see langword="count" /> atual está em um loop while.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">O <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> atual.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">O <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> não avançou.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Remove todas as ocorrências de caracteres de espaço em branco do início e fim da cadeia de caracteres especificada.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">A cadeia de caracteres que terá o espaço em branco filtrado.</param>
      <returns vsli:raw="The trimmed string.">A cadeia de caracteres filtrada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Contém uma instância de delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> e as entradas do método, fornecendo também os parâmetro do método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> com parâmetros para um método de retorno de chamada.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Uma coleção na qual o método de retorno de chamada copia a matriz de itens da coleção.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Uma matriz para a qual o método de retorno de chamada copia uma coleção.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Obtém o método de retorno de chamada que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">O <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> delegado que aponta para o método de retorno de chamada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Obtém o <paramref name="object collection" /> para o método de retorno de chamada.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">A coleção usada para a correção.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Obtém a matriz para a qual o método de retorno de chamada copia uma coleção.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">A matriz na qual o método de retorno de chamada copia uma coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado deve ser abstrato.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">O nome do tipo abstrato.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">O namespace do .NET Framework do tipo abstrato.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Popula um objeto da sua representação XML no local atual do <see cref="T:System.Xml.XmlReader" />, com uma opção de ler o elemento interno.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">O nome local do tipo de dados derivado do esquema XML.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">O namespace do tipo de dados derivado do esquema XML.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">O nome local do tipo de dados do esquema XML base.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">O namespace do tipo de dados base do esquema XML.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">O namespace do tipo derivado do .NET Framework.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">O nome do tipo base do .NET Framework.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado não pode ser instanciado porque o construtor gerará uma exceção de segurança.</summary>
      <param name="typeName" vsli:raw="The name of the type.">O nome do tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado não pode ser instanciado porque não há nenhum construtor disponível.</summary>
      <param name="typeName" vsli:raw="The name of the type.">O nome do tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Cria um <see cref="T:System.InvalidCastException" /> que indica que houve falha na conversão de uma referência explícita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">O <see cref="T:System.Type" /> para o qual não é possível converter um objeto. Esse tipo é incorporado na mensagem de exceção.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Não é possível converter o objeto. Esse objeto é incorporado na mensagem de exceção.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Cria um <see cref="T:System.InvalidCastException" /> que indica que houve falha na conversão de uma referência explícita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">O <see cref="T:System.Type" /> para o qual não é possível converter um objeto. Esse tipo é incorporado na mensagem de exceção.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Não é possível converter o objeto. Esse objeto é incorporado na mensagem de exceção.</param>
      <param name="id" vsli:raw="A string identifier.">Um identificador de cadeia de caracteres.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que não é possível localizar um tipo derivado que é mapeado para um tipo de dados do esquema XML.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">O nome local do tipo de dados do esquema XML mapeado para o tipo derivado não disponível.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">O namespace do tipo de dados do esquema XML que é mapeado para o tipo derivado indisponível.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">O nome completo do tipo base do .NET Framework para o qual não é possível localizar um tipo derivado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que não é possível modificar um tipo de coleção com codificação SOAP e que seus valores não podem ser preenchidos.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">O nome totalmente qualificado do tipo .NET Framework para o qual há um mapeamento.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um valor de enumeração não é válido.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">O valor da enumeração não é válido.</param>
      <param name="enumType" vsli:raw="The enumeration type.">O tipo de enumeração.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que a posição atual do <see cref="T:System.Xml.XmlReader" /> representa um nó XML desconhecido.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo é desconhecido.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome do tipo desconhecido.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Obtém ou define um valor que determina se as cadeias de caracteres XML são convertidas em nomes de tipo .NET Framework válidos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as cadeias de caracteres XML são decodificadas em nomes de tipo de .NET Framework válidos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Obtém o objeto do documento XML no qual o documento XML está sendo desserializado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">Um <see cref="T:System.Xml.XmlDocument" /> que representa os dados de <see cref="T:System.Xml.XmlDocument" /> desserializados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Garante que uma determinada matriz ou uma cópia, seja grande o suficiente para conter um índice especificado.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">O <see cref="T:System.Array" /> que está sendo verificado.</param>
      <param name="index" vsli:raw="The required index.">O índice necessário.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">O <see cref="T:System.Type" /> de elementos da matriz.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">O <see cref="T:System.Array" /> existente, se ele já for grande o suficiente; caso contrário, uma nova matriz maior contendo os elementos da matriz original.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Contém uma instância de delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> e as entradas do método, servindo também como o parâmetro do método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">O objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">O tamanho da matriz de cadeia de caracteres obtida por meio da propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">O objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">A matriz de cadeia de caracteres obtida por meio da propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Obtém o método de retorno de chamada que cria uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">O método de retorno de chamada que cria uma <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> instância do delegado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Obtém ou define uma matriz de chaves para os objetos que pertencem à propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> cujos valores são preenchidos pela implementação do retorno de chamada.</summary>
      <returns vsli:raw="The array of keys.">A matriz de chaves.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Obtém ou define o objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">A origem que contém objetos com valores a serem preenchidos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Preenche os valores de uma matriz com codificação SOAP cujo tipo de dados é mapeado para um tipo de referência do .NET Framework.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Um objeto que contém a matriz cujos valores são preenchidos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtém o comprimento da matriz de codificação SOAP em que o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">O nome local que a matriz deve ter.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">O namespace que a matriz deve ter.</param>
      <returns vsli:raw="The length of the SOAP array.">O tamanho da matriz de SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Determina se o elemento XML em que o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento tem um atributo nulo definido como o valor <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.XmlReader" /> está posicionado sobre um atributo nulo com o valor <see langword="true" /> no momento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Obtém um objeto que está sendo desserializado de um elemento <see langword="multiRef" /> com codificação SOAP e que foi armazenado anteriormente por <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">O valor do atributo <see langword="id" /> de um elemento <see langword="multiRef" /> que identifica o elemento.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Um objeto a ser desserializado de um elemento <see langword="multiRef" /> com codificação SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtém o valor do atributo <see langword="xsi:type" /> do elemento XML no local atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Um nome qualificado XML que indica o tipo de dados de um elemento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Inicializa os métodos de retorno de chamada que populam os objetos que são mapeados para dados XML com codificação SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Armazena os nomes de elementos e atributos em um objeto <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Obtém ou define um valor que deve ser <see langword="true" /> valor retornado para um SOAP 1.1.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" />, se o valor for um valor de retorno.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Determina se um nome de atributo XML indica um namespace de XML.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">O nome de um atributo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o nome do atributo XML indicar um namespace de XML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Define o valor do atributo XML se ele for do tipo <see langword="arrayType" /> do namespace de linguagem WSDL.</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">Um <see cref="T:System.Xml.XmlAttribute" /> que pode ter o tipo <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Faz o <see cref="T:System.Xml.XmlReader" /> ler o nome totalmente qualificado do elemento na posição atual.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">O nome totalmente qualificado do elemento XML atual.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Faz o <see cref="T:System.Xml.XmlReader" /> ler uma marca de fim XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Obtém o objeto <see cref="T:System.Xml.XmlReader" /> que está sendo usado por <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">O <see cref="T:System.Xml.XmlReader" /> que está sendo usado pelo <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtém a contagem atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">A contagem atual de um <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o elemento XML atual se o elemento tiver um atributo nulo com valor verdadeiro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o elemento tem um valor de atributo null="true" e foi lido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o nome totalmente qualificado do elemento em sua posição atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome totalmente qualificado do elemento XML atual; caso contrário, <see langword="null" /> se um valor de atributo nul="true" existir.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler um elemento XML simples, somente de texto que poderia ser <see langword="null" />.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O valor da cadeia de caracteres; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Lê o valor do atributo <see langword="href" /> (atributo <see langword="ref" /> para SOAP 1.2) que é usado para se referir a um elemento XML na codificação SOAP.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor foi lido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Desserializa um objeto de um elemento XML <see langword="multiRef" /> com codificação SOAP.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">O valor do elemento referenciado no documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Desserializa um objeto de um elemento XML <see langword="multiRef" /> com codificação SOAP.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">O namespace do tipo de dados do esquema XML do elemento.</param>
      <returns vsli:raw="The value of the referenced element in the document.">O valor do elemento referenciado no documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Desserializa objetos de elementos <see langword="multiRef" /> com codificação SOAP em uma mensagem SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">O namespace do tipo de dados do esquema XML do elemento.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o nome do elemento também é o nome do tipo de dados do esquema XML; caso contrário, <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">O namespace do tipo de dados do esquema XML do elemento.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Popula um objeto da sua representação XML no local atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Um <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que corresponde à posição atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> com seus membros populados do local do <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Um objeto IXmlSerializable que corresponde à posição atual do XMLReader.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Especifica se o objeto serializável é encapsulado.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Um objeto que implementa a interface IXmlSerializable com seus membros populados do local do XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Produz o resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> acrescentado ao valor de entrada.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Uma cadeia de caracteres que será prefixada ao resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">O resultado da chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> acrescentado ao valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Retorna o resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> da classe <see cref="T:System.Xml.XmlReader" />, com os espaços em branco filtrados, se necessário, e acrescentado ao valor de entrada.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Uma cadeia de caracteres que receberá o acréscimo.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o resultado da operação de leitura deve ser filtrado; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">O resultado da operação de leitura acrescentada ao valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Lê um elemento XML que permite valores nulos (<see langword="xsi:nil = 'true'" />) e retorna um valor <see cref="T:System.Nullable`1" /> genérico.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o tipo de dados simples para o local atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">Um <see cref="T:System.Nullable`1" /> genérico que representa um valor nulo de XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtém o valor do nó XML no qual o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o tipo de dados simples para o local atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">O valor do nó como um tipo de valor do .NET Framework, se o valor for um tipo de dados de esquema XML simples.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler um elemento raiz do documento XML na sua posição atual.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o método deve ler conteúdo somente depois de ler o início do elemento; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">Um <see cref="T:System.Xml.XmlDocument" /> que contém o elemento raiz que foi lido.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o nó XML na posição atual.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para ler o conteúdo somente depois de ler o início do elemento; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">Um <see cref="T:System.Xml.XmlNode" /> que representa o nó XML que foi lido.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Armazena um objeto a ser desserializado de um elemento <see langword="multiRef" /> com codificação SOAP.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">O objeto a ser desserializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtém um assembly gerado dinamicamente pelo nome.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">O nome completo do assembly.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Um <see cref="T:System.Reflection.Assembly" /> gerado dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Garante que uma determinada matriz ou uma cópia, não seja maior que o tamanho especificado.</summary>
      <param name="a" vsli:raw="The array that is being checked.">A matriz que está sendo verificada.</param>
      <param name="length" vsli:raw="The maximum length of the array.">O tamanho máximo da matriz.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">O <see cref="T:System.Type" /> de elementos da matriz.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" /> se <see langword="null" /> para a matriz, se existir para a matriz de entrada, pode ser retornado; caso contrário, uma nova matriz menor.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">O <see cref="T:System.Array" /> existente, se ele já for pequeno o suficiente; caso contrário, uma nova matriz menor contendo os elementos da matriz original até o tamanho de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o valor de cadeia de caracteres na sua posição atual e retorná-lo como uma matriz de bytes de base 64.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> para retornar <see langword="null" />; <see langword="false" /> para retornar uma matriz de bytes de base 64.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Uma matriz de bytes de base 64; caso contrário, <see langword="null" /> se o valor do parâmetro <paramref name="isNull" /> for <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Produz uma matriz de bytes de base 64 com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Uma cadeia de caracteres a ser convertida em uma matriz de bytes de base 64.</param>
      <returns vsli:raw="A base-64 byte array.">Uma matriz de bytes de base 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o valor de cadeia de caracteres na sua posição atual e retorná-lo como uma matriz de bytes hexadecimais.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> para retornar <see langword="null" />; <see langword="false" /> para retornar uma matriz de bytes hexadecimais.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Uma matriz de bytes hexadecimais; caso contrário, <see langword="null" /> se o valor do parâmetro <paramref name="isNull" /> for <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Produz uma matriz de bytes hexadecimais de uma cadeia de caracteres de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Uma cadeia de caracteres para converter em uma matriz de bytes hexadecimais.</param>
      <returns vsli:raw="A hexadecimal byte array.">Uma matriz de bytes hexadecimais.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Produz um objeto <see cref="T:System.Char" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.Char" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Um objeto <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produz um objeto <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Uma cadeia de caracteres a ser convertida em um objeto de classe <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produz um objeto <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Produz um valor de enumeração numérico com base em uma cadeia de caracteres que consiste em identificadores delimitados que representam as constantes da lista de enumerador.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Uma cadeia de caracteres que consiste em identificadores delimitados em que cada identificador representa uma constante da lista de enumeradores de conjunto.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">Um <see cref="T:System.Collections.Hashtable" /> que consiste em identificadores como chaves e as constantes como números integrais.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">O nome do tipo de enumeração.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Um valor longo que consiste no valor de enumeração como uma série de operações <see langword="OR" /> bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Produz um <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres que representa o tempo.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica um nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Um nome XML a ser decodificado.</param>
      <returns vsli:raw="A decoded string.">Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica um nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Um nome XML a ser decodificado.</param>
      <returns vsli:raw="A decoded string.">Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica um nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Um nome XML a ser decodificado.</param>
      <returns vsli:raw="A decoded string.">Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica um nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Um nome XML a ser decodificado.</param>
      <returns vsli:raw="A decoded string.">Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Obtém um <see cref="T:System.Xml.XmlQualifiedName" /> de um nome que pode conter um prefixo.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Um nome que pode conter um prefixo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa um nome XML qualificado pelo namespace.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo em questão.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo em questão.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">O <see cref="T:System.Xml.XmlElement" /> para o qual um evento é acionado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">O <see cref="T:System.Xml.XmlElement" /> para o qual um evento é acionado.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">O objeto que está sendo desserializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object being deserialized.">O objeto que está sendo desserializado.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Uma cadeia de caracteres exclusiva que é usada para identificar o objeto não referenciado, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Delegado que é usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serialização de tipos de dados XML não raiz com codificação SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">O objeto que está sendo serializado.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Representa uma classe abstrata usada para controlar a serialização pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Armazena uma implementação do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> e o tipo ao qual ele se aplica para uma invocação posterior.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">O <see cref="T:System.Type" /> de objetos que são serializados.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">O nome do tipo de objetos que são serializados.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">O namespace do tipo de objetos que são serializados.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Cria um <see cref="T:System.InvalidOperationException" /> que indica um nome inesperado de um elemento que segue uma declaração do elemento <see langword="choice" /> do esquema XML.</summary>
      <param name="value" vsli:raw="The name that is not valid.">O nome que não é válido.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">A declaração do elemento <see langword="choice" /> ao qual o nome pertence.</param>
      <param name="name" vsli:raw="The expected local name of an element.">O nome local esperado de um elemento.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">O namespace esperado de um elemento.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Cria um <see cref="T:System.InvalidOperationException" /> que indica o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que foi aplicado a um membro invalidamente; somente os membros que são do tipo <see cref="T:System.Xml.XmlNode" /> ou derivado de <see cref="T:System.Xml.XmlNode" />, são válidos.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">O objeto que representa o membro inválido.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Cria um <see cref="T:System.InvalidOperationException" /> que indica o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que foi aplicado a um membro invalidamente; somente os membros que são do tipo <see cref="T:System.Xml.XmlNode" /> ou derivado de <see cref="T:System.Xml.XmlNode" />, são válidos.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">O <see cref="T:System.Type" /> que é inválido.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Cria um <see cref="T:System.InvalidOperationException" /> que indica uma falha durante a gravação de uma matriz em que a declaração do elemento <see langword="choice" /> de um esquema XML é aplicada.</summary>
      <param name="type" vsli:raw="The type being serialized.">O tipo que está sendo serializado.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Um nome para a declaração do elemento <see langword="choice" />.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Cria um <see cref="T:System.InvalidOperationException" /> para um valor de enumeração inválido.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Um objeto que representa a enumeração inválida.</param>
      <param name="typeName" vsli:raw="The XML type name.">O nome do tipo XML.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um valor para um elemento XML não corresponde a um tipo de enumeração.</summary>
      <param name="value" vsli:raw="The value that is not valid.">O valor que não é válido.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">O nome do elemento XML com um valor inválido.</param>
      <param name="enumValue" vsli:raw="The valid value.">O valor válido.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que não foi possível processar um elemento XML que deve estar de acordo com a declaração do elemento <see langword="any" /> do esquema XML.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">O elemento XML que não pode ser processado.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo que está sendo serializado não está sendo usado de maneira válida ou se for encontrado inesperadamente.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">O objeto cujo tipo não pode ser serializado.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo que está sendo serializado não está sendo usado de maneira válida ou se for encontrado inesperadamente.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">O tipo que não pode ser serializado.</param>
      <returns vsli:raw="The newly created exception.">A exceção recém-criada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Obtém ou define um valor que indica se o método <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> é usado para gravar um XML válido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> método retornar um nome codificado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Processa uma matriz de bytes de base 64.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Uma matriz <see cref="T:System.Byte" /> de base 64.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">A mesma matriz de bytes que foi passada como um argumento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Produz uma cadeia de caracteres com base em uma matriz de bytes hexadecimais de entrada.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Uma matriz de bytes hexadecimais a ser convertida em uma cadeia de caracteres.</param>
      <returns vsli:raw="The byte array value converted to a string.">O valor da matriz de bytes é convertido em uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Produz uma cadeia de caracteres com base em um <see cref="T:System.Char" /> de entrada.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">Um <see cref="T:System.Char" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">O valor <see cref="T:System.Char" /> convertido em uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produz uma cadeia de caracteres com base em um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Um <see cref="T:System.DateTime" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> que mostra a data, mas não a hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Produz uma cadeia de caracteres com base em um <see cref="T:System.DateTime" /> de entrada.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Um <see cref="T:System.DateTime" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> que mostra a data e a hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Produz uma cadeia de caracteres que consiste em identificadores delimitados que representam os membros de enumeração que foram definidos.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">O valor da enumeração como uma série de operações <see langword="OR" /> bit a bit.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Os valores de nome da enumeração.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Os valores de constantes da enumeração.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Uma cadeia de caracteres que consiste em identificadores delimitados em que cada um representa um membro da lista de enumeradores de conjunto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Usa um valor de enumeração numéricos e os nomes e as constantes da lista de enumeradores para enumeração e retorna uma cadeia de caracteres que consiste em identificadores delimitados que representam os membros de enumeração que foram definidos.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">O valor da enumeração como uma série de operações <see langword="OR" /> bit a bit.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Os valores da enumeração.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">As constantes da enumeração.</param>
      <param name="typeName" vsli:raw="The name of the type.">O nome do tipo</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Uma cadeia de caracteres que consiste em identificadores delimitados, em que cada item é um dos valores definidos pela operação bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produz uma cadeia de caracteres com base em um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">Um <see cref="T:System.DateTime" /> que é convertido em uma cadeia de caracteres.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Uma representação de cadeia de caracteres do objeto <see cref="T:System.DateTime" /> que mostra a hora, mas não a data.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Codifica um nome XML válido substituindo caracteres que não são válidos por sequências de escape.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Uma cadeia de caracteres a ser usada como um nome XML.</param>
      <returns vsli:raw="An encoded string.">Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Codifica um nome local de XML válido substituindo caracteres que não são válidos por sequências de escape.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Uma cadeia de caracteres a ser usada como um nome local XML (não qualificado).</param>
      <returns vsli:raw="An encoded string.">Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Codifica um nome XML.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Um nome XML a ser codificado.</param>
      <returns vsli:raw="An encoded string.">Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Codifica uma sequência delimitada por espaço de nomes XML em um único nome XML.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Uma sequência delimitada por espaço de nomes XML a serem decodificados.</param>
      <returns vsli:raw="An encoded string.">Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Retorna um nome qualificado XML, com caracteres inválidos substituídos pelas sequências de escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o XML a ser gravado.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Um nome qualificado XML com caracteres inválidos substituídos pelas sequências de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Produz uma cadeia de caracteres que pode ser gravada como um nome qualificado XML, com caracteres inválidos substituídos pelas sequências de escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o XML a ser gravado.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para ignorar espaços vazios na cadeia de caracteres; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Um nome qualificado XML com caracteres inválidos substituídos pelas sequências de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Inicializa uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> para serializar os dados XML com codificação SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Obtém ou define uma lista de objetos de nome XML qualificado que contêm os namespaces e prefixos usados para produzir nomes qualificados em documentos XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">Um <see cref="T:System.Collections.ArrayList" /> que contém os namespaces e os pares de prefixo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtém um assembly gerado dinamicamente pelo nome.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">O nome completo do assembly.</param>
      <returns vsli:raw="A dynamically generated assembly.">Um assembly gerado dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Inicializa as referências de objeto somente ao serializar uma mensagem SOAP com codificação SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML que não tem namespace especificado para o seu nome.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">O nome local do atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">O valor do atributo XML como uma matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Instrui o <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML que não tem namespace especificado para o nome.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">O nome local do atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">O nome local do atributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">O namespace do atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">O valor do atributo XML como uma matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Grava um atributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">O nome local do atributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">O namespace do atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Grava um atributo XML em que o prefixo de namespace é fornecido manualmente.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">O prefixo do namespace a ser gravado.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">O nome local do atributo XML.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">O namespace representado pelo prefixo.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Grava um objeto de nó XML dentro do corpo de um elemento XML nomeado.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">O nó XML a ser gravado, possivelmente um filho do elemento XML.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">O nome local do elemento XML pai a ser gravado.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">O namespace do elemento XML pai a ser gravado.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o nó, se for um elemento XML, cumpre uma declaração do elemento <see langword="any" /> de um esquema XML; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um objeto <see cref="T:System.Xml.XmlNode" /> dentro do corpo de um elemento XML nomeado.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">O nó XML a ser gravado, possivelmente um filho do elemento XML.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">O nome local do elemento XML pai a ser gravado.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">O namespace do elemento XML pai a ser gravado.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o nó, se for um elemento XML, cumpre uma declaração do elemento <see langword="any" /> de um esquema XML; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">O nome local do elemento XML a ser gravado sem qualificação de namespace.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">O namespace do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">O nome local do elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">O valor de texto do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Grava um elemento XML cujo corpo está vazio.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Grava um elemento XML cujo corpo está vazio.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Grava uma marca do elemento <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Grava uma marca do elemento <see langword="&lt;closing&gt;" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Grava um atributo <see langword="id" /> que aparece em um elemento <see langword="multiRef" /> de codificação de SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Grava os atributos de declaração de namespace.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Os namespaces de XML a serem declarados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML cujo corpo contém um nome qualificado XML válido. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">O nome qualificado XML para gravar no corpo do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML cujo corpo contém um nome qualificado XML válido. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">O nome qualificado XML para gravar no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava uma matriz de bytes no corpo de um elemento XML. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">A matriz de bytes a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava uma matriz de bytes no corpo de um elemento XML. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">A matriz de bytes a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar o objeto diretamente para o elemento XML em vez de fazer com que o elemento referencie outro que contenha os dados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar o objeto diretamente para o elemento XML em vez de fazer com que o elemento referencie outro que contenha os dados; caso contrário, <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Obtém ou define o <see cref="T:System.Xml.XmlWriter" /> que está sendo usado pelo <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">O <see cref="T:System.Xml.XmlWriter" /> usado pela instância de classe.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Serializa objetos em elementos XML <see langword="multiRef" /> com codificação SOAP em uma mensagem SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Grava um elemento XML de mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">O nome local do elemento de referência que está sendo gravado.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">O namespace do elemento de referência que está sendo gravado.</param>
      <param name="o" vsli:raw="The object being serialized.">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Grava um elemento XML de mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">O nome local do elemento de referência que está sendo gravado.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">O namespace do elemento de referência que está sendo gravado.</param>
      <param name="o" vsli:raw="The object being serialized.">O objeto que está sendo serializado.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Grava um elemento de resultado de SOAP 1.2 RPC com um nome qualificado especificado no corpo.</summary>
      <param name="name" vsli:raw="The local name of the result body.">O nome local do corpo do resultado.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">O namespace do corpo do resultado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Grava um objeto que usa a formatação XML personalizada como um elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que usa a formatação XML personalizada.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto da classe <see cref="T:System.Xml.Serialization.IXmlSerializable" /> for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Instrui o <see cref="T:System.Xml.XmlNode" /> a gravar um objeto que usa a formatação de XML personalizada como um elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que usa a formatação XML personalizada.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> para ignorar a gravação da marca do elemento de abertura; caso contrário, <see langword="false" /> para gravar a marca do elemento de abertura.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Grava a declaração XML se o gravador estiver posicionado no início de um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">O objeto que está sendo serializado como um elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">O objeto que está sendo serializado como um elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">O nome local do elemento XML de gravação.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">O namespace do elemento XML de gravação.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">O objeto que está sendo serializado como um elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contém pares de prefixo e namespace que serão usados no XML gerado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Grava um elemento XML cujo corpo de texto é um valor de um tipo de dados de esquema XML simples.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">O nome local do elemento a ser gravado.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">O namespace do elemento a ser gravado.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">O objeto a ser serializado no corpo do elemento.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o elemento XML especifica explicitamente o tipo de valor do texto usando o atributo <see langword="xsi:type" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Grava uma matriz de bytes de base 64.</summary>
      <param name="value" vsli:raw="The byte array to write.">A matriz de bytes para gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Grava um valor de cadeia de caracteres especificado.</summary>
      <param name="value" vsli:raw="The value of the string to write.">O valor da cadeia de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Grava o <see cref="T:System.Xml.XmlNode" /> especificado como um atributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">O nó XML para gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Grava o objeto <see cref="T:System.Xml.XmlNode" /> especificado como um atributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">O nó XML para gravação.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (ou <see langword="null" />) usado para gerar um valor de nome qualificado para um atributo <see langword="arrayType" /> do namespace WSDL (linguagem WSDL) ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Grava um atributo <see langword="xsi:type" /> para um elemento XML que está sendo serializado em um documento.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">O nome local de um tipo de dados de esquema XML.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">O namespace de um tipo de dados de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Serializa e desserializa objetos de e para documentos XML. O <see cref="T:System.Xml.Serialization.XmlSerializer" /> permite controlar como os objetos são codificados em XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado. Especifica o namespace padrão para todos os elementos XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">O namespace padrão a ser usado para todos os elementos XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em um objeto de um tipo especificado. Se uma propriedade ou um campo retornar uma matriz, o parâmetro <paramref name="extraTypes" /> especificará os objetos que podem ser inseridos na matriz.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">O tipo do objeto a serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo <see cref="T:System.Object" /> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <see cref="T:System.Object" />. Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">O namespace padrão de todos os elementos XML no documento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo <see cref="T:System.Object" /> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <see cref="T:System.Object" />. Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">O namespace padrão de todos os elementos XML no documento XML.</param>
      <param name="location" vsli:raw="The location of the types.">O local dos tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar um documento XML no objeto do tipo especificado. Também especifica a classe a ser usado como o elemento raiz de XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Inicializa uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> usando um objeto que mapeia um tipo para outro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Obtém um valor que indica se este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode desserializar um documento XML especificado.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">Um <see cref="T:System.Xml.XmlReader" /> que aponta para o documento a ser desserializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puder desserializar o objeto ao qual o <see cref="T:System.Xml.XmlReader" /> aponta, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Retorna um objeto usado para ler o documento XML a ser serializado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">Um <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> usado para ler o documento XML.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">Quando substituído em uma classe derivada, retorna um gravador usado para serializar o objeto.</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Uma instância que implementa a classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Desserializa o documento XML contido pelo <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">O <see cref="T:System.IO.Stream" /> que contém o documento XML a ser desserializado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Desserializa o documento XML contido pelo <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">O <see cref="T:System.IO.TextReader" /> que contém o documento XML a ser desserializado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Desserializa o documento XML contido pelo <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">O <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que contém o documento XML a ser desserializado.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Desserializa o documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">O <see cref="T:System.Xml.XmlReader" /> que contém o documento XML a ser desserializado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Desserializa o documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> e estilo de codificação especificados.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">O <see cref="T:System.Xml.XmlReader" /> que contém o documento XML a ser desserializado.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">O estilo de codificação do XML serializado.</param>
      <returns vsli:raw="The deserialized object.">O objeto desserializado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Desserializa o objeto usando os dados contidos pelo <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Uma instância da classe <see cref="T:System.Xml.XmlReader" /> usada para ler o documento.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">A codificação usada.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The object being deserialized.">O objeto que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Desserializa um documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> especificado e permite a substituição de eventos que ocorrem durante a desserialização.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">O <see cref="T:System.Xml.XmlReader" /> que contém o documento a ser desserializado.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Retorna uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> criados com base em uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Uma matriz de <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Retorna uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> de mapeamentos especificados.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">O <see cref="T:System.Type" /> do objeto desserializado.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Retorna uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> criados com base em uma matriz de tipos.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Retorna o nome do assembly que contém uma ou mais versões do <see cref="T:System.Xml.Serialization.XmlSerializer" /> criado especialmente para serializar ou desserializar o tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">O <see cref="T:System.Type" /> que está sendo desserializado.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">O nome do assembly que contém um <see cref="T:System.Xml.Serialization.XmlSerializer" /> para o tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Retorna o nome do assembly que contém o serializador para o tipo especificado no namespace fornecido.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">O <see cref="T:System.Type" /> de seu interesse.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">O namespace do tipo.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">O nome do assembly que contém os serializadores especialmente projetados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">O <see cref="T:System.IO.Stream" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.Stream" /> fornecido que faz referência aos namespaces indicados.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">O <see cref="T:System.IO.Stream" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Serializa o <see cref="T:System.Object" /> especificado, grava o documento XML em um arquivo usando o <see cref="T:System.IO.TextWriter" /> especificado e referencia os namespaces especificados.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contém namespaces para o documento XML gerado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> especificado.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> usado para gravar o documento XML.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Serializa o <see cref="T:System.Object" /> especificado, grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado e referencia os namespaces especificados.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Serializa o objeto especificado, grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado e referencia os namespaces e o estilo de codificação especificados.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">O objeto a ser serializado.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">O estilo de codificação do XML serializado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" />, namespaces XML e a codificação especificados.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">O objeto a ser serializado.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Uma instância do <see langword="XmlSerializerNamespaces" /> que contém namespaces e prefixos a serem usados.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">A codificação usada no documento.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Para mensagens codificadas em SOAP, a base usada para gerar atributos de ID.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um atributo XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um elemento XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um nó XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Ocorre durante a desserialização de um fluxo XML codificado em SOAP, quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um tipo reconhecido que não é usado ou não está referenciado.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Aplicado a um proxy do cliente de serviço Web, permite que você especifique um assembly que contém serializadores personalizados.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> com o nome do assembly especificado.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">O nome simples e não criptografado do assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> com o nome e o local do assembly especificados.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">O nome simples e não criptografado do assembly.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Uma cadeia de caracteres que é o local da URL do assembly.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Obtém ou define o nome do assembly que contém os serializadores para um conjunto específico de tipos.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">O nome simples e não criptografado do assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Obtém ou define o local do assembly que contém os serializadores.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Um local, como um caminho ou URI, que aponta para o assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Cria versões tipadas do <see cref="T:System.Xml.Serialization.XmlSerializer" /> para obter uma serialização mais eficiente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo e o namespace especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">O namespace padrão a ser usado para todos os elementos XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo especificado. Se uma propriedade ou um campo retornar uma matriz, o parâmetro <paramref name="extraTypes" /> especificará os objetos que podem ser inseridos na matriz.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contém campos que substituem o comportamento de serialização padrão.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em instâncias de documento XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contém campos que substituem o comportamento de serialização padrão.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">O namespace padrão de todos os elementos XML no documento XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em instâncias de documento XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">O <see cref="T:System.Type" /> do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro type.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">O namespace padrão de todos os elementos XML no documento XML.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">O caminho que especifica o local dos tipos.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e vice-versa. Especifica o objeto que representa o elemento raiz XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Retorna uma derivação a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que usa um objeto que mapeia um tipo para outro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo mapeado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Define o leitor, o gravador e os métodos para serializadores tipados gerados previamente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Obtém um valor que determina se um tipo pode ser serializado.</summary>
      <param name="type" vsli:raw="The type to be serialized.">O tipo a ser serializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser serializado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Retorna um serializador para o tipo especificado.</summary>
      <param name="type" vsli:raw="The type to be serialized.">O tipo a ser serializado.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Uma instância de um tipo derivado da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Obtém o objeto do leitor XML que é usado pelo serializador.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">Um <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que é usado para ler um documento XML ou fluxo de dados.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Obtém a coleção de métodos que é usada para ler um fluxo de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Um <see cref="T:System.Collections.Hashtable" /> que contém os métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Obtém a coleção de serializadores tipados encontrada no assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">Um <see cref="T:System.Collections.Hashtable" /> que contém os serializadores tipados.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Obtém a coleção de métodos usada para gravar em um fluxo de dados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Um <see cref="T:System.Collections.Hashtable" /> que contém os métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Obtém o objeto do gravador XML para o serializador.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">Um <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que é usado para gravar em um documento ou fluxo de dados XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Significa que o código foi gerado pela infraestrutura de serialização e pode ser reutilizado para melhorar o desempenho, quando esse atributo é aplicado a um assembly.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> para o tipo especificado.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">O tipo que está sendo serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Obtém ou define o namespace CLR (Common Language Runtime) do assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">Um <see cref="T:System.String" /> que contém o namespace de Common Language Runtime (CLR) do assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Obtém ou define a identidade do assembly pai.</summary>
      <returns vsli:raw="The version of the parent assembly.">A versão do assembly pai.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Obtém ou define o tipo no qual o serializador opera.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">O <see cref="T:System.Type" /> a ser serializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Obtém ou define o número de versão do assembly.</summary>
      <returns vsli:raw="The version of the assembly.">A versão do assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Controla o esquema XML que é gerado quando o atributo de destino é serializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> e especifica o nome do tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Obtém ou define um valor que determina se o tipo de esquema resultante é um tipo anônimo XSD.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se o tipo de esquema resultante for um tipo anônimo XSD; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Obtém ou define um valor que indica se deve incluir o tipo nos XML Schema Documents.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para incluir o tipo nos XML Schema Documents, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtém ou define o namespace do tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type.">O namespace do tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtém ou define o nome do tipo XML.</summary>
      <returns vsli:raw="The name of the XML type.">O nome do tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">Contém um mapeamento de um tipo para outro.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">O nome de tipo totalmente qualificado que inclui o namespace (ou namespaces) e o tipo.</summary>
      <returns vsli:raw="The fully qualified type name.">O nome de tipo totalmente qualificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Obtém o nome do tipo do objeto mapeado.</summary>
      <returns vsli:raw="The type name of the mapped object.">O nome do tipo do objeto mapeado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Obtém o nome do elemento XML do objeto mapeado.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">O nome do elemento XML do objeto mapeado. O padrão é o nome da classe do objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Obtém o namespace de XML do objeto mapeado.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">O namespace XML do objeto mapeado. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
  </members>
</doc>