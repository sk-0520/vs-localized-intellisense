<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">Estende as informações de metadados de uma classe adicionando informações de propriedade e atributos definidos em uma classe associada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> usando o tipo especificado.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">O tipo para o qual o provedor de metadados é criado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> usando o tipo de provedor de metadados especificado e o tipo associado.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">O tipo para o qual o provedor de metadados é criado.</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">O tipo associado que contém os metadados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O valor de <paramref name="associatedMetadataType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">Obtém um descritor de tipo para o tipo e o objeto especificados.</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">O tipo de objeto para o qual recuperar o descritor de tipo.</param>
      <param name="instance" vsli:raw="An instance of the type.">Uma instância do tipo.</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">O descritor que fornece metadados para o tipo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">Especifica que um membro de entidade representa uma relação de dados, como uma relação de chave estrangeira.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the association.">O nome da associação.</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">Uma lista separada por vírgulas dos nomes de propriedade dos valores de chave no lado <paramref name="thisKey" /> da associação.</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">Uma lista separada por vírgulas dos nomes de propriedade dos valores de chave no lado <paramref name="otherKey" /> da associação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">Obtém ou define um valor que indica se o membro da associação representa uma chave estrangeira.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a associação representa uma chave estrangeira; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">Obtém nome da associação.</summary>
      <returns vsli:raw="The name of the association.">O nome da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">Obtém os nomes de propriedade dos valores de chave no lado OtherKey da associação.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">Uma lista separada por vírgulas dos nomes de propriedade que representam os valores de chave no lado OtherKey da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Obtém uma coleção de membros de chave individuais especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Uma coleção de membros de chave individuais que são especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">Obtém os nomes de propriedade dos valores de chave no lado ThisKey da associação.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">Uma lista separada por vírgulas dos nomes de propriedade que representam os valores de chave no lado ThisKey da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Obtém uma coleção de membros de chave individuais especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Uma coleção de membros de chave individuais que são especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">Fornece um atributo que compara duas propriedades.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" />.</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">A propriedade a ser comparada com a propriedade atual.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">O nome do campo que causou a falha de validação.</param>
      <returns vsli:raw="The formatted error message.">A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina se um objeto especificado é válido.</summary>
      <param name="value" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">Um objeto que contém informações sobre a solicitação de validação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> for válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">Obtém a propriedade a ser comparada com a propriedade atual.</summary>
      <returns vsli:raw="The other property.">A outra propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">Obtém o nome de exibição da outra propriedade.</summary>
      <returns vsli:raw="The display name of the other property.">O nome de exibição da outra propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtém ou define um valor que indica se o atributo requer contexto de validação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo exigir um contexto de validação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">Especifica que uma propriedade participa de verificações de simultaneidade otimista.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">Especifica que o valor de um campo de dados é um número de cartão de crédito.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">Determina se o número de cartão de crédito especificado é válido.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o número de cartão de crédito é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">Especifica um método de validação personalizado que é usado para validar uma instância de classe ou propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" />.</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">O tipo que contém o método que executa a validação personalizada.</param>
      <param name="method" vsli:raw="The method that performs custom validation.">O método que executa a validação personalizada.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">Formata uma mensagem de erro de validação.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">O nome a ser incluído na mensagem formatada.</param>
      <returns vsli:raw="An instance of the formatted error message.">Uma instância da mensagem de erro formatada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">Obtém o método de validação.</summary>
      <returns vsli:raw="The name of the validation method.">O nome do método de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">Obtém o tipo que executa a validação personalizada.</summary>
      <returns vsli:raw="The type that performs custom validation.">O tipo que executa a validação personalizada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">Representa uma enumeração dos tipos de dados associados com parâmetros e campos de dados.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">Representa um número de cartão de crédito.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">Representa um valor de moeda.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">Representa um tipo de dados personalizado.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">Representa um valor de data.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">Representa um momento no tempo, expresso como uma data e hora do dia.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">Representa um tempo contínuo durante o qual um objeto existe.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">Representa um endereço de email.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">Representa um arquivo HTML.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">Representa uma URL para uma imagem.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">Representa texto de várias linhas.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">Representa um valor de senha.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">Representa um valor de número de telefone.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">Representa um código postal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">Representa o texto que é exibido.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">Representa um valor temporal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">Representa o tipo de dados de upload de arquivo.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">Representa um valor de URL.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">Especifica o nome de um tipo adicional a ser associado a um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> usando o nome do tipo especificado.</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">O nome do tipo a ser associado ao campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> usando o nome do modelo de campo especificado.</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">O nome do modelo de campo personalizado a ser associado ao campo de dados.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">Obtém o nome do modelo de campo personalizado que está associado com o campo de dados.</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">O nome do modelo de campo personalizado que está associado com o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">Obtém o tipo associado ao campo de dados.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">Um dos valores de <see cref="T:System.ComponentModel.DataAnnotations.DataType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">Obtém um formato de exibição do campo de dados.</summary>
      <returns vsli:raw="The data-field display format.">O formato de exibição do campo de dados.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">Retorna o nome do tipo associado ao campo de dados.</summary>
      <returns vsli:raw="The name of the type associated with the data field.">O nome do tipo associado ao campo de dados.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Verifica se o valor do campo de dados é válido.</summary>
      <param name="value" vsli:raw="The data field value to validate.">O valor do campo de dados a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">
        <see langword="true" /> sempre.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">Fornece um atributo de uso geral que permite especificar cadeias de caracteres localizáveis para tipos e membros de classes parciais de entidade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> .</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">Obtém ou define um valor que indica se a interface do usuário deve ser gerada automaticamente para exibir esse campo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a interface do usuário deve ser gerada automaticamente para exibir esse campo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Foi feita uma tentativa de obter o valor da propriedade antes de ela ser definida.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">Obtém ou define um valor que indica se a interface do usuário de filtragem é exibida automaticamente para esse campo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a interface do usuário deve ser gerada automaticamente para exibir a filtragem para esse campo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Foi feita uma tentativa de obter o valor da propriedade antes de ela ser definida.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">Obtém ou define um valor usado para exibir uma descrição na interface do usuário.</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">Um valor usado para exibir uma descrição na interface do usuário.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> se a propriedade tiver sido iniciada, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">Retorna um valor que indica se a interface do usuário deve ser gerada automaticamente para exibir a filtragem para esse campo.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> se a propriedade tiver sido iniciada, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">O localizada descrição, se o <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> foi especificado e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> representa uma chave de recurso; caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> são inicializadas, mas não foi possível encontrar uma propriedade estática pública com um nome que corresponda ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> para a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />.</summary>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">Um valor que será usado para agrupar campos na interface do usuário, se <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> tiver sido inicializado, caso contrário, <see langword="null" />. Se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> representar uma chave de recurso, uma cadeia de caracteres localizada será retornada, caso contrário, uma cadeia de caracteres não localizada será retornada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">Retorna um valor usado para exibição de campo na interface do usuário.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">A cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> são inicializadas, mas não foi possível encontrar uma propriedade estática pública com um nome que corresponda ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> para a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> se ela tiver sido definida, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">A cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">Obtém a cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade de valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">Obtém ou define um valor usado para agrupar campos na interface do usuário.</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">Um valor usado para agrupar campos na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">Obtém ou define um valor usado para exibição na interface do usuário.</summary>
      <returns vsli:raw="A value that is used for display in the UI.">Um valor usado para exibição na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">Obtém ou define o peso da ordem da coluna.</summary>
      <returns vsli:raw="The order weight of the column.">O peso da ordem da coluna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">O getter dessa propriedade foi invocado, mas seu valor não foi definido explicitamente usando o setter.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">Obtém ou define um valor que será usado para definir a marca-d'água para solicitações na interface do usuário.</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">Um valor que será usado para exibir uma marca-d'água na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Obtém ou define o tipo que contém os recursos para as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">O tipo de recurso que contém as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">Obtém ou define um valor que é usado para o rótulo de coluna de grade.</summary>
      <returns vsli:raw="A value that is for the grid column label.">Um valor que é para o rótulo de coluna de grade.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">Especifica a coluna que é exibida na tabela referida como uma coluna de chave estrangeira.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" />, usando a coluna especificada.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">O nome da coluna a ser usada como a coluna de exibição.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> usando as colunas de classificação e de exibição especificadas.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">O nome da coluna a ser usada como a coluna de exibição.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">O nome da coluna a ser usada para classificação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> usando a coluna de exibição, a coluna de classificação e a ordem de classificação especificadas.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">O nome da coluna a ser usada como a coluna de exibição.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">O nome da coluna a ser usada para classificação.</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para classificar em ordem decrescente, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">Obtém o nome da coluna a ser usado como o campo de exibição.</summary>
      <returns vsli:raw="The name of the display column.">O nome da coluna de exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">Obtém o nome da coluna a ser usada para classificação.</summary>
      <returns vsli:raw="The name of the sort column.">O nome da coluna de classificação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">Obtém um valor que indica se deve classificar em ordem crescente ou decrescente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a coluna for classificada em ordem decrescente; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">Especifica como os campos de dados são exibidos e formatados por Dados Dinâmicos do ASP.NET.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">Obtém ou define um valor que indica se a cadeia de caracteres de formatação especificada pela propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> é aplicada ao valor do campo quando o campo de dados está no modo de edição.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a cadeia de caracteres de formatação aplica-se ao valor no campo no modo de edição; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">Obtém ou define um valor que indica se os valores de cadeia de caracteres vazia ("") são convertidos automaticamente em <see langword="null" /> quando o campo de dados é atualizado na fonte de dados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se os valores de cadeia de caracteres vazia forem convertidos automaticamente para <see langword="null" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">Obtém ou define o formato de exibição do valor do campo.</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">Uma cadeia de formatação que especifica o formato de exibição para o valor do campo de dados. O padrão é uma cadeia de caracteres vazia (""), o que indica que nenhuma formatação especial é aplicada ao valor do campo.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">Retorna a cadeia de caracteres de exibição da interface do usuário para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</summary>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">A cadeia de caracteres de exibição da interface do usuário.
Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> não foi especificado, é retornado o valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> foi especificado e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> representa uma chave de recurso dentro desse tipo de recurso, o valor localizado é retornado.
Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> não foram definidos, retorna <see langword="null" />.
.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> estão definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> não pode ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">Obtém ou define um valor que indica se o campo deve ser codificado em HTML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o campo deve ser codificado em HTML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">Obtém ou define o texto exibido em um campo quando o valor do campo é <see langword="null" />.</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">O texto exibido para um campo quando o valor do campo é <see langword="null" />. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">Obtém ou define o <see cref="T:System.Type" /> que contém os recursos para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
Usando o <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> junto com <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />, permite que o método <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> retorne valores localizados.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">Indica se um campo de dados é editável.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" />.</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que o campo é editável, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">Obtém um valor que indica se o campo é editável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o campo for editável; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">Obtém ou define um valor que indica se o valor inicial está habilitado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um valor inicial está habilitado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">Valida um endereço de email.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">Determina se o valor especificado corresponde ao padrão de um endereço de email válido.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor especificado for válido ou <see langword="null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">Habilita uma enumeração do .NET Framework a ser mapeada para uma coluna de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />.</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">O tipo da enumeração.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">Obtém ou define o tipo de enumeração.</summary>
      <returns vsli:raw="The enumeration type.">O tipo de enumeração.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Verifica se o valor do campo de dados é válido.</summary>
      <param name="value" vsli:raw="The data field value to validate.">O valor do campo de dados a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de campo de dados for válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">Valida as extensões de nome de arquivo.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">Obtém ou define as extensões de nome de arquivo.</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">As extensões de nome de arquivo ou as extensões de arquivo padrão (".png", ".jpg", ".jpeg" e ".gif") se a propriedade não for definida.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">O nome do campo que causou a falha de validação.</param>
      <returns vsli:raw="The formatted error message.">A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">Verifica se as extensões de nome de arquivo especificadas são válidas.</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">Uma lista delimitada por vírgula de extensões de arquivo válidas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a extensão de nome de arquivo for válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">Representa um atributo que é usado para especificar o comportamento de filtragem de uma coluna.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">O nome do controle a ser usado para filtragem.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro e o nome da camada de apresentação.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">O nome do controle a ser usado para filtragem.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">O nome da camada de apresentação que dá suporte a este controle.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro, o nome da camada de apresentação e os parâmetros de controle.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">O nome do controle a ser usado para filtragem.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">O nome da camada de apresentação que dá suporte a este controle.</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">A lista de parâmetros para o controle.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">Obtém os pares nome/valor que são usados como parâmetros no construtor do controle.</summary>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">Os pares de nome/valor que são usados como parâmetros no construtor do controle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">Retorna um valor que indica se essa instância do atributo é igual a um objeto especificado.</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">O objeto a ser comparado com essa instância de atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto passado for igual a esta instância de atributo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">Obtém o nome do controle a ser usado para filtragem.</summary>
      <returns vsli:raw="The name of the control to use for filtering.">O nome do controle a ser usado para filtragem.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">Retorna o código hash para esta instância do atributo.</summary>
      <returns vsli:raw="This attribute instance hash code.">O código hash dessa instância de atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">Obtém o nome da camada de apresentação que dá suporte a este controle.</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">O nome da camada de apresentação que dá suporte a este controle.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">Fornece uma maneira para um objeto ser invalidado.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">Determina se o objeto especificado é válido.</summary>
      <param name="validationContext" vsli:raw="The validation context.">O contexto de validação.</param>
      <returns vsli:raw="A collection that holds failed-validation information.">Uma coleção que contém as informações de falha na validação.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">Indica que uma ou mais propriedades que identificam exclusivamente uma entidade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">Especifica o comprimento máximo dos dados de cadeia de caracteres ou matriz permitido em uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />, com base no parâmetro <paramref name="length" />.</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">O comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">O nome a ser incluído na cadeia de caracteres formatada.</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">Uma cadeia de caracteres localizada para descrever o comprimento máximo aceitável.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina se um objeto especificado é válido.</summary>
      <param name="value" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor for nulo ou se o valor for menor ou igual ao comprimento máximo especificado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">O comprimento é zero ou inferior a um negativo.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">Obtém o comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">O comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">Especifica a classe de metadados para associar a uma classe de modelo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />.</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">A classe de metadados a ser referenciada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">Obtém a classe de metadados associada uma classe parcial de modelo de dados.</summary>
      <returns vsli:raw="The type value that represents the metadata class.">O valor do tipo que representa a classe de metadados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">Especifica o comprimento mínimo dos dados de cadeia de caracteres ou matriz permitido em uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" />.</summary>
      <param name="length" vsli:raw="The length of the array or string data.">O comprimento dos dados de cadeia de caracteres ou matriz.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">O nome a ser incluído na cadeia de caracteres formatada.</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">Uma cadeia de caracteres localizada para descrever o comprimento mínimo aceitável.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina se um objeto especificado é válido.</summary>
      <param name="value" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto especificado é válido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">O comprimento é menor que zero.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">Obtém ou define o comprimento mínimo permitido de dados de cadeia de caracteres ou matriz.</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">O comprimento mínimo permitido da matriz ou dos dados da cadeia de caracteres.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">Especifica que o valor de um campo de dados é um número de telefone bem formado.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">Determina se o número de telefone especificado está em um formato de número de telefone válido.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o número de telefone é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">Especifica as restrições de intervalo numérico para o valor de um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica o valor máximo permitido para o valor do campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica o valor máximo permitido para o valor do campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados e o tipo específico.</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">Especifica o tipo do objeto a testar.</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica o valor máximo permitido para o valor do campo de dados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">Obtém ou define um valor que determina se as conversões do valor que está sendo validado para <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> conforme definido pelo parâmetro <c>type</c> do construtor <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> usam a cultura invariável ou a cultura atual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" /> usar a cultura invariável para qualquer conversões; <see langword="false" /> usar a cultura atual no momento da validação.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">Formata a mensagem de erro é exibida quando há falha na validação de intervalo.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">O nome do campo que causou a falha de validação.</param>
      <returns vsli:raw="The formatted error message.">A mensagem de erro formatada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">Verifica se o valor do campo de dados está no intervalo especificado.</summary>
      <param name="value" vsli:raw="The data field value to validate.">O valor do campo de dados a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor especificado estiver no intervalo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">O valor do campo de dados estava fora do intervalo permitido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">Obtém o valor mínimo permitido do campo.</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">O valor máximo permitido para o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">Obtém o valor mínimo do campo permitido.</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">O valor mínimo permitido para o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">Obtém o tipo do campo de dados cujo valor deve ser validado.</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">O tipo do campo de dados cujo valor deve ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">Obtém ou define um valor que determina se os valores da cadeia de caracteres para <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> e <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> são analisados usando a cultura invariável, em vez da cultura atual.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">Especifica que o valor de um campo de dados no Dados Dinâmicos do ASP.NET deve corresponder à expressão regular especificada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">A expressão regular que é usada para validar o valor do campo de dados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">Formata a mensagem de erro para exibir se a expressão regular de validação falhar.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">O nome do campo que causou a falha de validação.</param>
      <returns vsli:raw="The formatted error message.">A mensagem de erro formatada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">O <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> não é uma expressão regular válida.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">Verifica se o valor inserido pelo usuário corresponde ao padrão de expressão regular.</summary>
      <param name="value" vsli:raw="The data field value to validate.">O valor do campo de dados a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a validação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">O valor do campo de dados não correspondeu ao padrão da expressão regular.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> não é uma expressão regular válida.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">Obtém ou define a quantidade de tempo em milissegundos para executar uma única operação de correspondência antes que o tempo limite da operação seja atingido.</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">A quantidade de tempo em milissegundos para executar uma única operação correspondente.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">Obtém o padrão da expressão regular.</summary>
      <returns vsli:raw="The pattern to match.">O padrão a ser correspondido.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">Especifica que o valor de um campo de dados é obrigatório.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">Obtém ou define um valor que indica se uma cadeia de caracteres vazia é permitida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma cadeia de caracteres vazia for permitida; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">Verifica se o valor do campo de dados necessário não está vazio.</summary>
      <param name="value" vsli:raw="The data field value to validate.">O valor do campo de dados a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a validação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">O valor do campo de dados era <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">Especifica se uma coluna de dados ou classe usa scaffolding.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">Inicializa uma nova instância de <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> usando a propriedade <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />.</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">O valor que especifica se o scaffolding está habilitado.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">Obtém ou define o valor que especifica se o scaffolding está habilitado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se scaffolding estiver habilitado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">Representa a coluna de banco de dados para a qual uma propriedade é mapeada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">O nome da coluna para a qual a propriedade é mapeada.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">O nome da coluna para a qual a propriedade é mapeada.</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">O nome da coluna para a qual a propriedade é mapeada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">Obtém ou define a ordem de base zero da coluna para a qual a propriedade é mapeada.</summary>
      <returns vsli:raw="The order of the column.">A ordem da coluna.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">Obtém ou define o tipo de dados específico do provedor de banco de dados da coluna para qual a propriedade é mapeada.</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">O tipo de dados específico do provedor de banco de dados da coluna para qual a propriedade é mapeada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">Indica que a classe é um tipo complexo. Tipos complexos são propriedades não escalares de tipos de entidade que permitem que propriedades escalares sejam organizadas dentro das entidades. Tipos complexos têm chaves e não podem ser gerenciados pelo Entity Framework quando separados do objeto pai.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">Especifica como o banco de dados gera valores para uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" />.</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">A opção gerada no banco de dados.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">Obtém ou define o padrão usado para gerar valores para a propriedade no banco de dados.</summary>
      <returns vsli:raw="The database generated option.">A opção gerada no banco de dados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">Representa o padrão usado para gerar valores para uma propriedade no banco de dados.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">O banco de dados gera um valor quando uma linha é inserida ou atualizada.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">O banco de dados gera um valor quando uma linha é inserida.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">O banco de dados não gera valores.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">Indica uma propriedade usada como uma chave estrangeira em uma relação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">O nome da propriedade de navegação associada ou o nome de uma ou mais chaves estrangeiras associadas.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">Obtém o nome da propriedade de navegação associada ou das chaves estrangeiras associadas.</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">O nome da propriedade de navegação associada ou das chaves estrangeiras associadas.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">Especifica o inverso de uma propriedade de navegação que representa a outra extremidade da mesma relação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> usando a propriedade especificada.</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">A propriedade de navegação que representa a outra extremidade do mesmo relacionamento.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">Obtém a propriedade de navegação que representa a outra extremidade do mesmo relacionamento.</summary>
      <returns vsli:raw="The property of the attribute.">A propriedade do atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">Indica que uma classe ou propriedade deve ser excluída do mapeamento de banco de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">Especifica a tabela de banco de dados para o qual uma classe é mapeada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" />, usando o nome especificado da tabela.</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">O nome da tabela para qual a classe é mapeada.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">Obtém o nome da tabela para qual a classe é mapeada.</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">O nome da tabela para qual a classe é mapeada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">Obtém ou define o esquema da tabela para o qual a classe é mapeada.</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">O esquema da tabela para a qual a classe é mapeada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">Especifica o comprimento mínimo e máximo de caracteres permitidos em um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> usando um comprimento máximo especificado.</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">O comprimento máximo de uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">O nome do campo que causou a falha de validação.</param>
      <returns vsli:raw="The formatted error message.">A mensagem de erro formatada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> é negativo.
-ou-
<paramref name="maximumLength" /> é menor que <paramref name="minimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina se um objeto especificado é válido.</summary>
      <param name="value" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto especificado é válido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> é negativo.
-ou-
<paramref name="maximumLength" /> é menor que <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">Obtém ou define o tamanho máximo de uma cadeia de caracteres.</summary>
      <returns vsli:raw="The maximum length a string.">O tamanho máximo de uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">Obtém ou define o tamanho mínimo de uma cadeia de caracteres.</summary>
      <returns vsli:raw="The minimum length of a string.">O tamanho mínimo de uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">Especifica o tipo de dados da coluna como uma versão de linha.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">Especifica o modelo ou controle de usuário usado pelos Dados dinâmicos para exibir um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando um controle de usuário especificado.</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">O controle de usuário a ser usado para exibir o campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando o controle de usuário especificado e a camada de apresentação especificada.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">O controle de usuário (modelo de campo) a ser usado para exibir o campo de dados.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">A camada de apresentação que usa a classe. Pode ser definido como "HTML", "Silverlight", "WPF" ou "WinForms".</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando o controle de usuário, a camada de apresentação e os parâmetros de controle especificados.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">O controle de usuário (modelo de campo) a ser usado para exibir o campo de dados.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">A camada de apresentação que usa a classe. Pode ser definido como "HTML", "Silverlight", "WPF" ou "WinForms".</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">O objeto a ser usado para recuperar valores de qualquer fonte de dados.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> é <see langword="null" /> ou é uma chave de restrição.
-ou-
O valor de <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> não é uma cadeia de caracteres.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">Obtém ou define o objeto <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> a ser usado para recuperar valores de qualquer fonte de dados.</summary>
      <returns vsli:raw="A collection of key/value pairs.">Uma coleção de pares de chave e valor.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">Obtém um valor que indica se essa instância é igual ao objeto especificado.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">O objeto a ser comparado a esta instância ou uma referência <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto especificado for igual a esta instância, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">Obtém o código hash para a instância atual do atributo.</summary>
      <returns vsli:raw="The attribute instance hash code.">O código hash da instância de atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">Obtém ou define a camada de apresentação que usa a classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />.</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">A camada de apresentação usada por essa classe.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">Obtém ou define o nome do modelo de campo a ser usado para exibir o campo de dados.</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">O nome do modelo de campo que exibe o campo de dados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">Fornece validação da URL.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">Valida o formato da URL especificada.</summary>
      <param name="value" vsli:raw="The URL to validate.">A URL a ser validada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o formato da URL for válido ou <see langword="null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">Serve como a classe base para todos os atributos de validação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> usando a função que permite o acesso aos recursos de validação.</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">A função que permite o acesso aos recursos de validação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> usando a mensagem de erro a ser associada a um controle de validação.</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">A mensagem de erro a ser associada a um controle de validação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">Obtém ou define uma mensagem de erro para associar a um controle de validação em caso de falha da validação.</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">A mensagem de erro associada ao controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">Obtém ou define o nome do recurso de mensagem de erro a ser usado para pesquisar o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> se a validação falhar.</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">O recurso de mensagem de erro associado ao controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">Obtém ou define o tipo de recurso a ser usado para a pesquisa de mensagens de erro se a validação falhar.</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">O tipo de mensagem de erro associado a um controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">Obtém a mensagem de erro de validação localizada.</summary>
      <returns vsli:raw="The localized validation error message.">A mensagem de erro de validação localizada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">O nome a ser incluído na mensagem formatada.</param>
      <returns vsli:raw="An instance of the formatted error message.">Uma instância da mensagem de erro formatada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">Verifica se o valor especificado é válido em relação ao atributo de validação atual.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">As informações de contexto sobre a operação de validação.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Uma instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">Determina se valor especificado do objeto é válido.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">O valor do objeto a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor especificado for válido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">Nenhuma sobrecarga de <see langword="IsValid" /> foi implementada por uma classe derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">Valida o valor especificado em relação ao atributo de validação atual.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">As informações de contexto sobre a operação de validação.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Uma instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtém ou define um valor que indica se o atributo requer contexto de validação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o atributo exigir um contexto de validação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">Valida o objeto especificado.</summary>
      <param name="value" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">O objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> que descreve o contexto em que as verificações de validação são executadas. O parâmetro não pode ser <see langword="null" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">Falha na validação.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">Valida o objeto especificado.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">O valor do objeto a ser validado.</param>
      <param name="name" vsli:raw="The name to include in the error message.">O nome a ser incluído na mensagem de erro.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" /> não é válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">O atributo atual está malformado.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">{1&amp;gt;Descreve o contexto no qual é realizada uma verificação de validação.&amp;lt;1}</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando a instância do objeto especificado.</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">A instância do objeto a ser validado. Não pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando o objeto especificado e um recipiente de propriedades opcional.</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">A instância do objeto a ser validado.  Não pode ser <see langword="null" /></param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">Um conjunto opcional de pares chave/valor a ser disponibilizado para os consumidores.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando o provedor de serviços e o dicionário de consumidores do serviço.</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">O objeto a ser validado. Esse parâmetro é necessário.</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">O objeto que implementa a interface do <see cref="T:System.IServiceProvider" />. Esse parâmetro é opcional.</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">Um dicionário de pares chave/valor para tornar disponíveis para os consumidores de serviço. Esse parâmetro é opcional.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtém ou define o nome do membro a ser validado.</summary>
      <returns vsli:raw="The name of the member to validate.">O nome do membro a ser validado.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">Retorna o serviço que fornece a validação personalizada.</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">O tipo do serviço a ser usado para validação.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">Uma instância do serviço ou <see langword="null" />, se o serviço não estiver disponível.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">Inicializa o <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando um provedor de serviço que pode retornar instâncias de serviço por tipo quando GetService é chamado.</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">O provedor de serviços.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">Obtém o dicionário de pares chave/valor associado a esse contexto.</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">O dicionário de pares chave/valor para esse contexto.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtém ou define o nome do membro a ser validado.</summary>
      <returns vsli:raw="The name of the member to validate.">O nome do membro a ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">Obtém o objeto a ser validado.</summary>
      <returns vsli:raw="The object to validate.">O objeto a ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">Obtém o tipo do objeto a ser validado.</summary>
      <returns vsli:raw="The type of the object to validate.">O tipo do objeto a ser validado.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">Representa a exceção que ocorre durante a validação de um campo de dados quando a classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> é usada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro gerada pelo sistema.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando um resultado de validação, um atributo de validação e o valor da exceção atual.</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">A lista de resultados de validação.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">O atributo que causou a exceção atual.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">O valor do objeto que fez com que o atributo disparasse o erro de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">O objeto que contém os dados serializados.</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">As informações de contexto sobre a origem ou o destino do objeto serializado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro especificada.</summary>
      <param name="message" vsli:raw="A specified message that states the error.">Uma mensagem especificada que indica o erro.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando a mensagem de erro, o atributo de validação e o valor da exceção atual especificados.</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">A mensagem que indica o erro.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">O atributo que causou a exceção atual.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">O valor do objeto que fez com que o atributo disparasse o erro de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro e uma coleção de instâncias de exceção interna especificadas.</summary>
      <param name="message" vsli:raw="The error message.">A mensagem de erro.</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">A coleção de exceções de validação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">Obtém a instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> que disparou essa exceção.</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">Uma instância do tipo de atributo de validação que disparou essa exceção.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Obtém a instância <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> que descreve o erro de validação.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">A instância <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> que descreve o erro de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">Obtém o valor do objeto que faz com que a classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> dispare essa exceção.</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">O valor do objeto que fez com que a classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> dispare o erro de validação.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">Representa um contêiner para os resultados de uma solicitação de validação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando um objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</summary>
      <param name="validationResult" vsli:raw="The validation result object.">O objeto de resultado de validação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando uma mensagem de erro.</summary>
      <param name="errorMessage" vsli:raw="The error message.">A mensagem de erro.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando uma mensagem de erro e uma lista de membros que têm erros de validação.</summary>
      <param name="errorMessage" vsli:raw="The error message.">A mensagem de erro.</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">A lista de nomes dos membros que têm erros de validação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">Obtém a mensagem de erro para a validação.</summary>
      <returns vsli:raw="The error message for the validation.">A mensagem de erro para a validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">Obtém a coleção de nomes de membro que indicam quais campos têm erros de validação.</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">A coleção de nomes de membro que indicam quais campos têm erros de validação.</returns>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">Representa o sucesso da validação (<see langword="true" /> quando a validação é bem-sucedida, caso contrário, <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">Retorna uma representação de cadeia de caracteres do resultado de validação atual.</summary>
      <returns vsli:raw="The current validation result.">O resultado de validação atual.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">Define uma classe auxiliar que pode ser usada para validar objetos, propriedades e métodos quando ela está incluída em seus atributos <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> associados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">Determina se o objeto especificado é válido usando o contexto de validação e a coleção de resultados de validação.</summary>
      <param name="instance" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Uma coleção para armazenar cada validação com falha.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">Determina se o objeto especificado é válido usando o contexto de validação, a coleção de resultados de validação e um valor que especifica se é necessário validar todas as propriedades.</summary>
      <param name="instance" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Uma coleção para armazenar cada validação com falha.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">
        <see langword="true" /> para validar todas as propriedades, se <see langword="false" />, somente os atributos obrigatórios são validados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">Valida a propriedade.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">O contexto que descreve a propriedade a ser validada.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Uma coleção para armazenar cada validação com falha.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade for validada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> não pode ser atribuído à propriedade.
- ou -
<paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> do <paramref name="validationContext" /> não é uma propriedade válida.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">Retorna um valor que indica se o valor especificado é válido com os atributos especificados.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">Uma coleção para conter validações com falha.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Os atributos de validação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">Determina se o objeto especificado é válido usando o contexto de validação.</summary>
      <param name="instance" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">O objeto não é válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">Determina se o objeto especificado é válido usando o contexto de validação e um valor que especifica se é necessário validar todas as propriedades.</summary>
      <param name="instance" vsli:raw="The object to validate.">O objeto a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para validar todas as propriedades; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">Valida a propriedade.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">O contexto que descreve a propriedade a ser validada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" /> não pode ser atribuído à propriedade.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">O parâmetro <paramref name="value" /> não é válido.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">Valida os atributos especificados.</summary>
      <param name="value" vsli:raw="The value to validate.">O valor a ser validado.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Os atributos de validação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="validationContext" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">O parâmetro <paramref name="value" /> não é validado com o parâmetro <paramref name="validationAttributes" />.</exception>
    </member>
  </members>
</doc>