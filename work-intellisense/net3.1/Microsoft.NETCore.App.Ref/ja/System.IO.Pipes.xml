<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary>パイプ ハンドルのラッパー クラスを表します。</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="preexistingHandle">使用する既存のハンドルを表す <see cref="T:System.IntPtr" /> オブジェクト。</param>
      <param name="ownsHandle">終了処理中にハンドルを確実にリリースする場合は <see langword="true" />。信頼性の高いリリースを実行しない場合は <see langword="false" /> (お勧めしません)。</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid" />
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary>同期と非同期の読み書き操作をサポートする匿名パイプ ストリームのクライアント側を公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>ハンドルを指定して <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="safePipeHandle">この <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> は有効なハンドルではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
      <exception cref="T:System.IO.IOException">ディスク エラーなどの I/O エラーが発生しました。
または
ストリームは閉じられました。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary>指定したパイプの方向およびパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="pipeHandleAsString">パイプ ハンドルを表す文字列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeHandleAsString" /> は無効なハンドルです。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeHandleAsString" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary>指定したパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeHandleAsString">パイプ ハンドルを表す文字列。</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" /> が有効なパイプ ハンドルではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトの読み取りモードを設定します。</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトの <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">送信モードが有効ではありません。 匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</exception>
      <exception cref="T:System.NotSupportedException">送信モードは <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> です。</exception>
      <exception cref="T:System.IO.IOException">接続が切断されているか、別の I/O エラーが発生しています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary>現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <returns>現在のパイプがサポートする <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> です。</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary>同期と非同期の読み書き操作をサポートする匿名パイプに関連するストリームを公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary>パイプの方向を指定して <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>指定したパイプ ハンドルから <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="serverSafePipeHandle">この <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <param name="clientSafePipeHandle">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> は無効なハンドルです。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
      <exception cref="T:System.IO.IOException">ディスク エラーなどの I/O エラーが発生しました。

または -

ストリームは閉じられました。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary>パイプの方向と継承性のモードを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary>パイプの方向、継承性のモード、バッファー サイズを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</param>
      <param name="bufferSize">バッファーのサイズ。 この値は、0 以上である必要があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。
または
<paramref name="bufferSize" /> が 0 未満です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary>現在 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドルを取得します。</summary>
      <returns>現在 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトのハンドル。</returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルのローカル コピーを閉じます。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary>接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを文字列として取得します。</summary>
      <returns>接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを表す文字列。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモードを設定します。 匿名パイプでは、送信モードを <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> にする必要があります。</summary>
      <returns>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモード。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">送信モードが有効ではありません。 匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</exception>
      <exception cref="T:System.NotSupportedException">プロパティが <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> に設定されています。これは、匿名のパイプではサポートされていません。</exception>
      <exception cref="T:System.IO.IOException">接続が切断されているか、別の I/O エラーが発生しています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary>現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <returns>現在のパイプでサポートされる <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary>同期および非同期の読み書き操作をサポートする名前付きパイプに関連する <see cref="T:System.IO.Stream" /> を公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>指定したパイプの方向を使用して、指定したパイプ ハンドルの <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="isAsync">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isConnected">パイプが接続されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="safePipeHandle">この <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.IO.IOException">ストリームは閉じられました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> は有効なハンドルではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary>指定したパイプ名を使用して <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary>指定したパイプ名とサーバー名を使用して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary>パイプ名、サーバー名、およびパイプの方向を指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary>パイプ名、サーバー名、パイプの方向、およびパイプのオプションを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> は <see langword="null" />として指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。

または -
<paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary>パイプ名、サーバー名、パイプの方向、パイプのオプション、およびセキュリティ偽装レベルを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="impersonationLevel">セキュリティ偽装レベルを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> は <see langword="null" />として指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。

または -
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。

または -
<paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。


または
<paramref name="impersonationLevel" /> は有効な <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>パイプ名、サーバー名、パイプの方向、パイプのオプション、セキュリティ偽装レベル、および継承性のモードを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="impersonationLevel">セキュリティ偽装レベルを決定する列挙値の 1 つ。</param>
      <param name="inheritability">基になるハンドルを子プロセスが継承するかどうかを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。
または
<paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。
または
<paramref name="impersonationLevel" /> は有効な <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値ではありません。

または -
<paramref name="inheritability" /> は有効な <see cref="T:System.IO.HandleInheritability" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary>無限のタイムアウト値で待機中のサーバーに接続します。</summary>
      <exception cref="T:System.InvalidOperationException">クライアントが既に接続されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary>指定したタイムアウト期限内に、待機中のサーバーに接続します。</summary>
      <param name="timeout">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <exception cref="T:System.TimeoutException">指定した <paramref name="timeout" /> 期間内に、サーバーに接続できませんでした。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> が 0 未満に設定され、<see cref="F:System.Threading.Timeout.Infinite" /> に設定されていません。</exception>
      <exception cref="T:System.InvalidOperationException">クライアントが既に接続されています。</exception>
      <exception cref="T:System.IO.IOException">サーバーが別のクライアントに接続されており、タイムアウト期間が期限切れです。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary>無限のタイムアウト時間で待機中のサーバーに非同期接続します。</summary>
      <returns>非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary>指定したタイムアウト時間内に待機中のサーバーに非同期接続します。</summary>
      <param name="timeout">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <returns>非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>指定したタイムアウト時間内に待機中のサーバーに非同期接続し、キャンセル要求を監視します。</summary>
      <param name="timeout">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary>待機中のサーバーに非同期接続し、キャンセル要求を監視します。</summary>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary>
        <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary>同じパイプ名を共有するサーバー インスタンス数を取得します。</summary>
      <returns>同じパイプ名を共有するサーバー インスタンス数。</returns>
      <exception cref="T:System.InvalidOperationException">パイプ ハンドルが設定されていません。

または -
現在の <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> オブジェクトが <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトにまだ接続されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが接続解除されているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になるパイプ ハンドルは閉じられています。</exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary>同期および非同期の読み書き操作をサポートする名前付きパイプに関連する <see cref="T:System.IO.Stream" /> を公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>パイプ ハンドルを指定して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="isAsync">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isConnected">パイプが接続されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="safePipeHandle">この <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> は無効なハンドルです。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> が有効なパイプ ハンドルではありません。

または -
サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary>指定したパイプ名を使用して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary>指定したパイプ名とパイプの方向を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>指定したパイプ名、パイプの方向、およびサーバー インスタンスの最大数を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。
または
負以外の数値が必要です。

または -
<paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。

または -
<see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> が必要です。

または -
アクセス権は、<see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> フラグ、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> フラグ、および <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> フラグに制限されます。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、および送信モードを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。

または -
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。

または -
<paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、およびパイプのオプションを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。
または
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。

または -
<paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。
または
<paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、および推奨される入力バッファー サイズと出力バッファー サイズを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName">パイプ名。</param>
      <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
      <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> は "匿名" に設定されています。

または -
<paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。

または
<paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。

または -
<paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。

または -
<paramref name="inBufferSize" /> が負の値です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary>クライアントが接続するのを待機する非同期操作を開始します。</summary>
      <param name="callback">クライアントが <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続したときに呼び出すメソッド。</param>
      <param name="state">この特定の非同期要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns>非同期の要求を参照するオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれませんでした。

または -

パイプの接続が既に確立されています。

または -

パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary>現在の接続を切断します。</summary>
      <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。

または -

接続されたパイプが既に切断されています。
または
パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary>クライアントが接続するのを待機する非同期操作を終了します。</summary>
      <param name="asyncResult">保留中の非同期の要求。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれませんでした。
または
パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary>
        <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary>パイプのもう一方の終端のクライアントのユーザー名を取得します。</summary>
      <returns>パイプのもう一方の終端のクライアントのユーザー名。</returns>
      <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。

または -

接続されたパイプが既に切断されています。

または -

パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
      <exception cref="T:System.IO.IOException">パイプの接続が解除されています。

または -

クライアントのユーザー名が 19 文字を超えています。</exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary>システム リソースで許されるサーバー インスタンスの最大数を表します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary>クライアントの偽装中にデリゲートを呼び出します。</summary>
      <param name="impersonationWorker">呼び出すメソッドを指定するデリゲート。</param>
      <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。

または -

接続されたパイプが既に切断されています。

または -

パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
      <exception cref="T:System.IO.IOException">パイプの接続が解除されています。

または -

I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを待機します。</summary>
      <exception cref="T:System.InvalidOperationException">パイプの接続が既に確立されています。

または -

パイプ ハンドルが設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプが閉じています。</exception>
      <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機します。</summary>
      <returns>非同期の待機操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機し、キャンセル要求を監視します。</summary>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の待機操作を表すタスク。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary>パイプの方向を指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary>パイプの方向が In になるように指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary>パイプの方向が双方向になるように指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary>パイプの方向が Out になるように指定します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトを作成するためのオプションを提供します。 この列挙体には、メンバー値のビットごとの組み合わせを可能にする <see cref="T:System.FlagsAttribute" /> 属性があります。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary>パイプを非同期の読み取り用および書き込み用に使用できることを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly">
      <summary>
        <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスの作成に使用した場合、同じユーザーが作成したクライアントにのみそのパイプを接続できることを示します。 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> インスタンスの作成に使用した場合、同じユーザーが作成したサーバーにのみそのパイプを接続できることを示します。 Windows では、ユーザー アカウントと昇格レベルの両方が検証されます。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary>追加のパラメーターがないことを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary>システムが中間キャッシュを使用して書き込みを行い、直接パイプに移動することを示します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary>匿名パイプと名前付きパイプの両方をサポートする、パイプに関連する <see cref="T:System.IO.Stream" /> オブジェクトを公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>指定した <see cref="T:System.IO.Pipes.PipeStream" /> 値とバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeDirection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</param>
      <param name="bufferSize">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。
または
<paramref name="bufferSize" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary>指定した <see cref="T:System.IO.Pipes.PipeStream" />、<see cref="T:System.IO.Pipes.PipeDirection" />、およびバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeTransmissionMode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</param>
      <param name="transmissionMode">パイプ オブジェクトの送信モードを示す <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値のいずれか。</param>
      <param name="outBufferSize">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。
または
<paramref name="transmissionMode" /> は有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。
または
<paramref name="bufferSize" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の読み取り操作を開始します。</summary>
      <param name="buffer">データを読み取るバッファー。</param>
      <param name="offset">読み取りの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="callback">非同期の読み取り操作が完了したときに呼び出すメソッド。</param>
      <param name="state">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。
または
<paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは、読み込み操作をサポートしません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>非同期の書き込み操作を開始します。</summary>
      <param name="buffer">現在のストリームに書き込むデータを格納しているバッファー。</param>
      <param name="offset">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="callback">非同期の書き込み操作が完了したときに呼び出すメソッド。</param>
      <param name="state">この特定の非同期書き込み要求を他の要求と区別する、ユーザー指定のオブジェクト。</param>
      <returns>非同期の書き込み操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。
または
<paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary>現在のストリームが読み取り操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns>ストリームが読み取り操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary>現在のストリームがシーク操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary>現在のストリームが書き込み操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns>ストリームが書き込み操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary>パイプがプロパティの取得または設定に対して適切な状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary>パイプが読み取り操作に対して接続状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary>パイプが書き込み操作に対して接続状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary>非同期読み込み要求の保留状態を終了します。</summary>
      <param name="asyncResult">保留中の非同期要求への参照。</param>
      <returns>読み取ったバイト数。 戻り値が 0 の場合は、ストリームの終了を示しています (パイプが閉じられています)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.IO.IOException">ストリームが閉じているか、内部エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary>保留中の非同期書き込み要求を終了します。</summary>
      <param name="asyncResult">保留中の非同期要求への参照。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.IO.IOException">ストリームが閉じているか、内部エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary>現在のストリームに対応するバッファーをクリアし、バッファー内のすべてのデータを、基になるデバイスに書き込みます。</summary>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary>パイプの着信バッファーのサイズ (バイト単位) を取得します。</summary>
      <returns>着信バッファーのサイズ (バイト単位) を表す整数値。</returns>
      <exception cref="T:System.NotSupportedException">ストリームを読み取ることができません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプは接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary>指定した <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトから、<see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトを初期化します。</summary>
      <param name="handle">初期化するパイプの <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクト。</param>
      <param name="isExposed">ハンドルを公開する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isAsync">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException">ハンドルはパイプにバインドできません。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが非同期的に開かれたか、同期的に開かれたかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> オブジェクトが非同期的に開かれた場合は <see cref="T:System.IO.Pipes.PipeStream" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが接続されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> オブジェクトが接続されている場合は <see cref="T:System.IO.Pipes.PipeStream" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトのハンドルが公開されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> オブジェクトのハンドルが公開されている場合は <see cref="T:System.IO.Pipes.PipeStream" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary>最後に実行された読み取り操作から返されたメッセージに他のデータが存在するかどうかを示す値を取得します。</summary>
      <returns>メッセージにそれ以上読み取る文字が存在しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">パイプが接続されていません。
または
パイプ ハンドルがまだ設定されていません。
または
パイプの <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> プロパティ値が <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary>ストリーム長 (バイト単位) を取得します。</summary>
      <returns>常に 0。</returns>
      <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary>パイプの発信バッファーのサイズ (バイト単位) を取得します。</summary>
      <returns>発信バッファーのサイズ (バイト単位)。</returns>
      <exception cref="T:System.NotSupportedException">ストリームに書き込むことができません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプは接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary>現在のストリームの現在位置を取得または設定します。</summary>
      <returns>常に 0。</returns>
      <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>ストリームからバイトのブロックを読み取り、指定した長さの指定した位置を開始位置として、指定したバッファーにデータを書き込みます。</summary>
      <param name="buffer">このメソッドが返されるときに、指定したバイト配列の <paramref name="offset" /> から (<paramref name="offset" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られたバイトに置き換えられます。</param>
      <param name="offset">読み取られるバイトが配置される <paramref name="buffer" /> 配列内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <returns>
        <paramref name="buffer" /> に読み取られる合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。
または
<paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは、読み込み操作をサポートしません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">何らかの I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary>現在のストリームからバイト シーケンスを読み取り、バイト配列に書き込んで、読み取ったバイト数だけストリーム内の位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <returns>
        <paramref name="buffer" /> に読み取る合計バイト数。 現在、多くのバイト数を利用できない場合、これは <paramref name="buffer" /> に割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
      <exception cref="T:System.ArgumentNullException">読み取ったバイト数がバッファー長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>現在のストリームからバイト シーケンスを、指定したバイト数の指定した位置を開始位置としてバイト配列に非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むバッファー。</param>
      <param name="offset">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count">読み取る最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</returns>
      <exception cref="T:System.NotSupportedException">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>現在のストリームからバイト シーケンスを非同期に読み取り、バイト メモリの範囲に書き込んで、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込むメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。 要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
      <exception cref="T:System.NotSupportedException">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary>パイプからバイトを読み取ります。</summary>
      <returns>
        <see cref="T:System.Int32" /> にキャストしたバイト。ストリームの末尾に達した (パイプが閉じられている) 場合は -1。</returns>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは、読み込み操作をサポートしません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">何らかの I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトの読み取りモードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトがパイプから読み取る方法を示す、いずれかの <see cref="T:System.IO.Pipes.PipeStream" /> 値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された値が有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException">指定された値が、このパイプ ストリームでサポートされている <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">ハンドルがまだ設定されていません。
または
パイプが名前付きクライアントとの接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException">パイプが破損しているか、または名前付きクライアントで I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary>現在の <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトによってカプセル化されるパイプのローカルの終端のセーフ ハンドルを取得します。</summary>
      <returns>現在の <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトによってカプセル化されるパイプの <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>現在のストリームの現在位置を、指定した値に設定します。</summary>
      <param name="offset">シークの開始位置 <paramref name="origin" /> からの相対的なポイント。</param>
      <param name="origin">
        <paramref name="offset" /> 型の値を使用して、<see cref="T:System.IO.SeekOrigin" /> の参照ポイントとして先頭、末尾、または現在位置を指定します。</param>
      <returns>ストリームの新しい位置。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary>現在のストリーム長を指定した値に設定します。</summary>
      <param name="value">ストリームの新しい長さ。</param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary>現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <returns>現在のパイプでサポートされている送信モードを示す、いずれかの <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値。</returns>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.InvalidOperationException">ハンドルがまだ設定されていません。
または
パイプは、匿名クライアント / サーバーの操作、または名前付きのクライアントとの接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary>パイプのもう一方の終端が、送信されたすべてのバイトを読み取るまで待機します。</summary>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>バッファーのデータを使用して、現在のストリームにバイトのブロックを書き込みます。</summary>
      <param name="buffer">パイプに書き込むデータを格納しているバッファー。</param>
      <param name="offset">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count">現在のストリームに書き込む最大バイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。
または
<paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>現在のストリームにバイト シーケンスを書き込み、書き込んだバイト数だけストリーム内の現在位置を進めます。</summary>
      <param name="buffer">メモリの領域。 このメソッドでは、この領域のコンテンツが現在のストリームにコピーされます。</param>
      <exception cref="T:System.NotSupportedException">ストリームは書き込みをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>指定した位置を開始位置としてバイト配列から指定したバイト数を非同期に書き込み、書き込んだバイト数だけこのストリーム内の現在の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">書き込むデータの取得元のバッファーです。</param>
      <param name="offset">ストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count">書き込む最大バイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が負の値です。
または
<paramref name="count" /> が負の値です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" />.Length - <paramref name="offset" /> が <paramref name="count" /> より小さいです。</exception>
      <exception cref="T:System.NotSupportedException">ストリームは書き込みをサポートしていません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer">データを書き込む元のメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.NotSupportedException">ストリームは書き込みをサポートしていません。</exception>
      <exception cref="T:System.ObjectDisposedException">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException">パイプがまだ接続されていません。
または
パイプが切断状態になっています。
または
パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary>現在のストリームにバイトを書き込みます。</summary>
      <param name="value">ストリームに書き込むバイト。</param>
      <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException">パイプは書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException">パイプが切断されているか、接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException">パイプが壊れているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary>クライアントとして呼び出すメソッドを表します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary>パイプの送信モードを指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary>パイプのデータがバイト ストリームとして送信され、読み取られることを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary>パイプのデータがメッセージ ストリームとして送信され、読み取られることを示します。</summary>
    </member>
  </members>
</doc>