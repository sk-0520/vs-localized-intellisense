<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">LINQ to XML 拡張メソッドを格納します。</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">ソース コレクション内のすべてのノードの先祖が格納された、要素のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XNode" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">ソース コレクション内のすべてのノードの先祖が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべてのノードの先祖が格納され、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XNode" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべてのノードの先祖が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の先祖が格納された要素のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の先祖が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の先祖が格納され、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の先祖が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">ソース コレクション内のすべての要素の属性のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">ソース コレクション内のすべての要素の属性が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素の、フィルター処理された属性のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素の、フィルター処理された属性のコレクションが格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XAttribute" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">ソース コレクション内のすべてのドキュメントおよび要素の子孫ノードのコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XContainer" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">ソース コレクション内のすべてのドキュメントおよび要素の子孫ノードの、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫ノードが格納されたノードのコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫ノードが格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">ソース コレクション内のすべての要素とドキュメントの子孫要素が格納された要素のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XContainer" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">ソース コレクション内のすべての要素とドキュメントの子孫要素が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素とドキュメントの子孫要素が格納され、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XContainer" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素とドキュメントの子孫要素が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫要素が格納された要素のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫要素が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫要素が格納され、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素、およびソース コレクション内のすべての要素の子孫が格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">ソース コレクション内のすべての要素およびドキュメントの子要素のコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">ソース コレクション内のすべての要素またはドキュメントの子要素の、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素およびドキュメントの、フィルター処理された子要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">ソース コレクション内のすべての要素およびドキュメントの子要素の、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">ソース コレクション内のすべてのノードがドキュメント順に並べ替えて格納された、ノードのコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XNode" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">ソース コレクション内のすべてのノードがドキュメント順に並べ替えて格納された、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">ソース コレクション内のすべてのドキュメントおよび要素の子ノードのコレクションを返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XContainer" />に制限されます。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">ソース コレクション内のすべてのドキュメントおよび要素の子ノードの、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">ソース コレクション内の親要素からすべての属性を削除します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">ソース コレクション内の親ノードからすべてのノードを削除します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">ソース コレクションが格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <paramref name="source" />内のオブジェクトの型。 <see cref="T:System.Xml.Linq.XNode" />に制限されます。</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">XML を解析するときに読み込みオプションを指定します。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">意味のない空白を保持したり、ベース URI と行情報を読み込んだりしないでください。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">解析の際に意味のない空白が保存されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">
        <see cref="T:System.Xml.XmlReader" /> からベース URI 情報を要求し、<see cref="P:System.Xml.Linq.XObject.BaseUri" /> プロパティを介して使用できるようにします。</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> から行情報を要求し、<see cref="T:System.Xml.Linq.XObject" /> 上のプロパティを介して使用できるようにします。</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> で <see cref="T:System.Xml.XmlReader" /> を読み込むときに、重複する名前空間を省略するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">リーダーのオプションが指定されていません。</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> を読み込むときに、重複する名前空間を省略します。</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">シリアル化のオプションを指定します。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">シリアル化の際に意味のない空白がすべて保存されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">シリアル化の際に XML に書式 (インデント) が設定されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">シリアル化の際に重複する名前空間宣言が削除されます。</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">XML 属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XAttribute" /> クラスの新しいインスタンスを、別の <see cref="T:System.Xml.Linq.XAttribute" /> オブジェクトから初期化します。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">コピー元の <see cref="T:System.Xml.Linq.XAttribute" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">指定された名前と値から <see cref="T:System.Xml.Linq.XAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">属性の <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">属性の値を含む <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">属性の空のコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">空のコレクションを格納している <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">現在の属性が名前空間宣言かどうかを判定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">現在の属性が名前空間宣言の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">現在の属性の拡張名を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">現在の属性の名前を格納している <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">親要素の次の属性を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">親要素の次の属性を格納している <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XAttribute" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.Attribute" /> です。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Boolean" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Boolean" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">属性に有効な <see cref="T:System.Boolean" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.DateTime" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.DateTime" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">属性に有効な <see cref="T:System.DateTime" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.DateTimeOffset" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.DateTimeOffset" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">属性に有効な <see cref="T:System.DateTimeOffset" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Decimal" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Decimal" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">属性に有効な <see cref="T:System.Decimal" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Double" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Double" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">属性に有効な <see cref="T:System.Double" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Guid" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Guid" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">属性に有効な <see cref="T:System.Guid" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Int32" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Int32" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">属性に有効な <see cref="T:System.Int32" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Int64" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Int64" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Int64" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">属性に有効な <see cref="T:System.Int64" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">属性に有効な <see cref="T:System.Boolean" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.DateTime" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.DateTime" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">属性に有効な <see cref="T:System.DateTime" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.DateTimeOffset" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">属性に有効な <see cref="T:System.DateTimeOffset" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">属性に有効な <see cref="T:System.Decimal" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">属性に有効な <see cref="T:System.Double" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Guid" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Guid" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">属性に有効な <see cref="T:System.Guid" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Int32" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Int32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Int32" /> の <see cref="T:System.Nullable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Int64" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Int64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Int64" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">属性に有効な <see cref="T:System.Int64" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">属性に有効な <see cref="T:System.Single" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.TimeSpan" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.TimeSpan" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.TimeSpan" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">属性に有効な <see cref="T:System.TimeSpan" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.UInt32" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.UInt32" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.UInt32" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">属性に有効な <see cref="T:System.UInt32" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.UInt64" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.UInt64" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.UInt64" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">属性に有効な <see cref="T:System.UInt64" /> 値が格納されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.Single" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.Single" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">属性に有効な <see cref="T:System.Single" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.String" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.TimeSpan" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.TimeSpan" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">属性に有効な <see cref="T:System.TimeSpan" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.UInt32" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.UInt32" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.UInt32" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">属性に有効な <see cref="T:System.UInt32" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.UInt64" /> にキャストします。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.UInt64" /> にキャストする <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の内容を格納している <see cref="T:System.UInt64" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">属性に有効な <see cref="T:System.UInt64" /> 値が格納されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">親要素の前の属性を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">親要素の前の属性を格納している <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">現在の属性を親要素から削除します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">親要素が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">現在の属性の値を設定します。</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">現在の属性に代入する値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> が <see cref="T:System.Xml.Linq.XObject" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">現在の <see cref="T:System.Xml.Linq.XAttribute" /> オブジェクトを文字列形式に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">XML 文字列形式の属性とその値を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">現在の属性の値を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">この属性の値を表す <see cref="T:System.String" /> です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">設定時に <paramref name="value" /> が <see langword="null" /> である場合に発生します。</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">CDATA が格納されているテキスト ノードを表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XCData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">
        <see cref="T:System.Xml.Linq.XCData" /> ノードの値を格納する文字列。</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XCData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">コピー元の <see cref="T:System.Xml.Linq.XCData" /> ノード。</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XCData" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.CDATA" /> です。</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この CDATA オブジェクトを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to the given &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XCData" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XCData" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">XML コメントを表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">文字列コンテンツを指定して、<see cref="T:System.Xml.Linq.XComment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">新しい <see cref="T:System.Xml.Linq.XComment" /> オブジェクトの内容を格納する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">既存のコメント ノードを使用して、<see cref="T:System.Xml.Linq.XComment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">コピー元の <see cref="T:System.Xml.Linq.XComment" /> ノード。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XComment" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.Comment" /> です。</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">このコメントの文字列値を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">このコメントの文字列値を格納している <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このコメントを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XComment" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XComment" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">他のノードを格納できるノードを表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">指定した内容をこの <see cref="T:System.Xml.Linq.XContainer" /> の子として追加します。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">指定した内容をこの <see cref="T:System.Xml.Linq.XContainer" /> の子として追加します。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">指定した内容をこのドキュメントまたは要素の最初の子として追加します。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">指定した内容をこのドキュメントまたは要素の最初の子として追加します。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> にノードを追加するために使用できる <see cref="T:System.Xml.Linq.XContainer" /> を作成します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">それに内容を書き込む準備ができている <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">このドキュメントまたは要素の子孫ノードのコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の子孫ノードをドキュメント順に格納している <see cref="T:System.Xml.Linq.XNode" /> の <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">このドキュメントまたは要素の子孫要素のコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の子孫要素を格納している <see cref="T:System.Xml.Linq.XElement" /> の <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このドキュメントまたは要素の子孫要素のフィルター処理されたコレクションをドキュメント順に返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指定した <see cref="T:System.Collections.Generic.IEnumerable`1" /> に一致する <see cref="T:System.Xml.Linq.XElement" /> の子孫要素を格納している <see cref="T:System.Xml.Linq.XContainer" /> の <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XName" /> の最初の子要素を (ドキュメント順に) 取得します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XElement" /> に一致するか、<see langword="null" /> の <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">この要素またはドキュメントの子要素のコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">この <see cref="T:System.Collections.Generic.IEnumerable`1" /> の子要素をドキュメント順に格納している <see cref="T:System.Xml.Linq.XElement" /> の <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素またはドキュメントの子要素のフィルター処理されたコレクションをドキュメント順に返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">一致する <see cref="T:System.Collections.Generic.IEnumerable`1" /> がある <see cref="T:System.Xml.Linq.XElement" /> の子をドキュメント順に格納している <see cref="T:System.Xml.Linq.XContainer" /> の <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">このノードの最初の子ノードを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> の最初の子ノードを格納している <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">このノードの最後の子ノードを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> の最後の子ノードを格納している <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">この要素またはドキュメントの子ノードのコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">この <see cref="T:System.Collections.Generic.IEnumerable`1" /> の内容をドキュメント順に格納している <see cref="T:System.Xml.Linq.XNode" /> の <see cref="T:System.Xml.Linq.XContainer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">このドキュメントまたは要素から子ノードを削除します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">このドキュメントまたは要素の子ノードを指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">子ノードを置き換える単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">このドキュメントまたは要素の子ノードを指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">XML 宣言を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">バージョン、エンコーディング、およびスタンドアロン ステータスを指定して、<see cref="T:System.Xml.Linq.XDeclaration" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">XML のバージョン (通常は "1.0")。</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">XML ドキュメントのエンコーディング。</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">XML がスタンドアロンか、または外部エンティティの解決が必要かを指定する、"yes" または "no" が含まれた文字列。</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> クラスの新しいインスタンスを、別の <see cref="T:System.Xml.Linq.XDeclaration" /> オブジェクトから初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">この <see cref="T:System.Xml.Linq.XDeclaration" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.Linq.XDeclaration" />。</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">このドキュメントのエンコーディングを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">このドキュメントのコード ページ名が格納された <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">このドキュメントのスタンドアロン プロパティを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">このドキュメントのスタンドアロン プロパティが格納された <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">宣言を書式設定された文字列として提供します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">書式設定された XML 文字列が格納された <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">このドキュメントのバージョン プロパティを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">このドキュメントのバージョン プロパティが格納された <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">XML ドキュメントを表します。 <see cref="T:System.Xml.Linq.XDocument" /> オブジェクトのコンポーネントと使用方法については、「XDocument クラスの概要」をご覧ください。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XDocument" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">指定した内容で、<see cref="T:System.Xml.Linq.XDocument" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">このドキュメントに追加するコンテンツ オブジェクトのパラメーター リスト。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">指定した <see cref="T:System.Xml.Linq.XDocument" /> および内容を使用して、<see cref="T:System.Xml.Linq.XDeclaration" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">ドキュメントの <see cref="T:System.Xml.Linq.XDeclaration" />。</param>
      <param name="content" vsli:raw="The content of the document.">ドキュメントの内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">既存の <see cref="T:System.Xml.Linq.XDocument" /> オブジェクトから <see cref="T:System.Xml.Linq.XDocument" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">コピーされる <see cref="T:System.Xml.Linq.XDocument" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">このドキュメントの XML 宣言を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">このドキュメントの XML 宣言を格納している <see cref="T:System.Xml.Linq.XDeclaration" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">このドキュメントのドキュメント型定義 (DTD: Document Type Definition) の名前を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">このドキュメントの DTD を格納している <see cref="T:System.Xml.Linq.XDocumentType" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">指定されたストリームを使用して新しい <see cref="T:System.Xml.Linq.XDocument" /> インスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">XML データを格納しているストリーム。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">ストリームに格納されているデータを読み取る <see cref="T:System.Xml.Linq.XDocument" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">指定されたストリームを使用して新しい <see cref="T:System.Xml.Linq.XDocument" /> インスタンスを作成し、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">XML データが含まれるストリーム。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">ベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">ストリームに格納されているデータを読み取る <see cref="T:System.Xml.Linq.XDocument" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> から新しい <see cref="T:System.IO.TextReader" /> を作成します。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> の内容を格納している <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XDocument" /> の内容を格納している <see cref="T:System.IO.TextReader" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.Linq.XDocument" /> から新しい <see cref="T:System.IO.TextReader" /> を作成し、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> の内容を格納している <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XDocument" /> から読み込まれた XML を格納している <see cref="T:System.IO.TextReader" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">ファイルから新しい <see cref="T:System.Xml.Linq.XDocument" /> を作成します。</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">新しい <see cref="T:System.Xml.Linq.XDocument" /> に読み込むファイルを参照している URI 文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">指定したファイルの内容を格納している <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">ファイルから新しい <see cref="T:System.Xml.Linq.XDocument" /> を作成し、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">新しい <see cref="T:System.Xml.Linq.XDocument" /> に読み込むファイルを参照している URI 文字列。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">指定したファイルの内容を格納している <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> から新しい<see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の内容を格納している <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XDocument" /> の内容を格納している <see cref="T:System.Xml.XmlReader" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.Linq.XDocument" /> から <see cref="T:System.Xml.XmlReader" /> を読み込み、必要に応じて、ベース URI の設定および行情報の保持を行います。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の内容として読み込む <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">ベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XDocument" /> から読み込まれた XML を格納している <see cref="T:System.Xml.XmlReader" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree from the specified stream, optionally preserving white space.">新しい <see cref="T:System.Xml.Linq.XDocument" /> を非同期に作成し、指定したストリームからその基になる XML ツリーを初期化します。必要に応じて、空白を維持します。</summary>
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">新しく作成された <see cref="T:System.Xml.Linq.XDocument" /> に読み込む未加工の XML を含むストリーム。</param>
      <param name="options" vsli:raw="A set of load options.">読み込みオプションのセット。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> の内容を含む新しい XDocument。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; parameter, optionally preserving white space.">新しい <see cref="T:System.Xml.Linq.XDocument" /> を作成し、指定した <see cref="T:System.IO.TextReader" /> パラメーターを使用してその基になる XML ツリーを初期化します。必要に応じて、空白を維持します。</summary>
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">新しく作成された <see cref="T:System.Xml.Linq.XDocument" /> に読み込む未加工の XML が含まれるリーダー。</param>
      <param name="options" vsli:raw="A set of load options.">読み込みオプションのセット。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> の内容を含む新しい XDocument。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XDocument" /> の内容を含む新しい <see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">新しい <see cref="T:System.Xml.Linq.XDocument" /> に読み込む XML を含むリーダー。</param>
      <param name="options" vsli:raw="A set of load options.">読み込みオプションのセット。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> の内容を含む新しい XDocument。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XDocument" /> オブジェクトの場合、この値は <see cref="F:System.Xml.XmlNodeType.Document" />です。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">文字列から新しい <see cref="T:System.Xml.Linq.XDocument" /> を作成します。</summary>
      <param name="text" vsli:raw="A string that contains XML.">XML を格納している文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">XML を格納した文字列から設定された <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">文字列から新しい <see cref="T:System.Xml.Linq.XDocument" /> を作成し、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="text" vsli:raw="A string that contains XML.">XML を格納している文字列。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">XML を格納した文字列から設定された <see cref="T:System.Xml.Linq.XDocument" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">このドキュメントの XML ツリーのルート要素を取得します。</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">XML ツリーのルート <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> を指定した <see cref="T:System.IO.Stream" /> に出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XDocument" /> の出力先のストリーム。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">オプションで書式設定動作を指定して、指定した <see cref="T:System.Xml.Linq.XDocument" /> にこの <see cref="T:System.IO.Stream" /> を出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XDocument" /> の出力先のストリーム。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込みます。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> の書き込み先の <see cref="T:System.Xml.Linq.XDocument" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">この <see cref="T:System.Xml.Linq.XDocument" /> をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込み、必要に応じて、書式設定を無効にします。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML を出力する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">この <see cref="T:System.Xml.Linq.XDocument" /> をシリアル化してファイルに書き込み、既存のファイルを上書きします (存在する場合)。</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">ファイルの名前を格納する文字列。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">この <see cref="T:System.Xml.Linq.XDocument" /> をシリアル化してファイルに書き込み、必要に応じて、書式設定を無効にします。</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">ファイルの名前を格納する文字列。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> をシリアル化して <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> の書き込み先の <see cref="T:System.Xml.Linq.XDocument" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> を <see cref="T:System.IO.Stream" /> に出力します。</summary>
      <param name="stream" vsli:raw="The stream to write the XML to.">XML が書き込まれるストリーム。</param>
      <param name="options" vsli:raw="A set of load options.">読み込みオプションのセット。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> を <see cref="T:System.IO.TextWriter" /> に書き込みます。</summary>
      <param name="textWriter" vsli:raw="The text writer to output the XML to.">XML を出力するテキスト ライター。</param>
      <param name="options" vsli:raw="A set of load options.">読み込みオプションのセット。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> を <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">XML の出力先のライター。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このドキュメントを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this XDocument's underlying XML tree to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この XDocument の基になる XML ツリーを指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> の内容を出力するライター。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">キャンセル トークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">XML ドキュメント型定義 (DTD) を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> クラスのインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">DTD の修飾名が格納されている <see cref="T:System.String" />。XML ドキュメントのルート要素の修飾名と同じです。</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">外部パブリック DTD のパブリック ID が格納されている <see cref="T:System.String" />。</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">外部プライベート DTD のシステム ID が格納されている <see cref="T:System.String" />。</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">内部 DTD の内部サブセットが格納されている <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> クラスのインスタンスを、別の <see cref="T:System.Xml.Linq.XDocumentType" /> オブジェクトから初期化します。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">コピー元の <see cref="T:System.Xml.Linq.XDocumentType" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) の内部サブセットを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) の内部サブセットが格納されている <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) の名前を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) の名前が格納されている <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XDocumentType" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.DocumentType" /> です。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) のパブリック ID を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) のパブリック ID が格納されている <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) のシステム ID を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">このドキュメント型定義 (DTD) のシステム ID が格納されている <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocumentType" /> を <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XDocumentType" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">XML 要素を表します。  使用法の情報と例については、「XElement クラスの概要」およびこのページの「解説」セクションを参照してください。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XElement" /> クラスの新しいインスタンスを、別の <see cref="T:System.Xml.Linq.XElement" /> オブジェクトから初期化します。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">コピー元の <see cref="T:System.Xml.Linq.XElement" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">指定した名前を使用して、<see cref="T:System.Xml.Linq.XElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">要素の名前を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">指定した名前と内容を持つ <see cref="T:System.Xml.Linq.XElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">要素名を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">要素の内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">指定した名前と内容を持つ <see cref="T:System.Xml.Linq.XElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">要素名を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The initial content of the element.">要素の初期コンテンツ。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XStreamingElement" /> オブジェクトから <see cref="T:System.Xml.Linq.XElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XStreamingElement" /> の内容に対して反復処理される、評価されていないクエリを格納する <see cref="T:System.Xml.Linq.XElement" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">この要素およびこの要素の先祖を格納している、要素のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">この要素およびこの要素の先祖を格納している、要素の <see cref="T:System.Xml.Linq.XElement" /> の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素およびこの要素の先祖を格納している、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素およびこの要素の先祖を格納している、<see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XName" /> を持つ、この <see cref="T:System.Xml.Linq.XElement" /> の <see cref="T:System.Xml.Linq.XAttribute" /> を返します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">取得する <see cref="T:System.Xml.Linq.XName" /> の <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">指定した名前 <see cref="T:System.Xml.Linq.XName" /> を持つ <see cref="T:System.Xml.Linq.XAttribute" />。指定した名前を持つ属性がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">この要素の属性のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">この要素の <see cref="T:System.Xml.Linq.XAttribute" /> 属性の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素の属性のフィルター処理されたコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素の属性を格納している <see cref="T:System.Xml.Linq.XAttribute" /> の <see cref="T:System.Collections.Generic.IEnumerable`1" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">この要素およびこの要素のすべての子孫ノードをドキュメント順で格納している、ノードのコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">この要素およびこの要素のすべての子孫ノードを格納している、ドキュメント順の <see cref="T:System.Xml.Linq.XNode" /> の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">この要素およびこの要素のすべての子孫要素をドキュメント順で格納している、要素のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">この要素およびこの要素のすべての子孫要素をドキュメント順で格納している、要素の <see cref="T:System.Xml.Linq.XElement" /> の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素およびこの要素のすべての子孫要素をドキュメント順で格納している、フィルター処理された要素のコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">この要素およびこの要素のすべての子孫要素をドキュメント順で格納している <see cref="T:System.Xml.Linq.XElement" /> の<see cref="T:System.Collections.Generic.IEnumerable`1" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">要素の空のコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">空のコレクションを格納している <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">この要素の最初の属性を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">この要素の最初の属性を格納している <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の既定の <see cref="T:System.Xml.Linq.XNamespace" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の既定の名前空間を格納している <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> のプレフィックスに関連付けられた名前空間を取得します。</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">検索対象の名前空間プレフィックスを格納している文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> のプレフィックスに関連付けられた名前空間の <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の名前空間に関連付けられているプレフィックスを取得します。</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">検索対象の <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">名前空間プレフィックスを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">この要素が 1 つ以上の属性を持っているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">この要素が 1 つ以上の属性を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">この要素が 1 つ以上の子要素を持っているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">この要素が 1 つ以上の子要素を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">この要素に内容が格納されていないかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">この要素に内容が格納されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">この要素の最後の属性を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">この要素の最後の属性を格納している <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">指定されたストリームを使用して新しい <see cref="T:System.Xml.Linq.XElement" /> インスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">XML データを格納しているストリーム。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">ストリームに格納されているデータを読み取るために使用する <see cref="T:System.Xml.Linq.XElement" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">指定されたストリームを使用して新しい <see cref="T:System.Xml.Linq.XElement" /> インスタンスを作成し、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">XML データが含まれるストリーム。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">ベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" /> オブジェクト。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">ストリームに格納されたデータを読み取るために使用する <see cref="T:System.Xml.Linq.XElement" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> から <see cref="T:System.Xml.Linq.XElement" /> を読み込みます。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.Xml.Linq.XElement" /> の内容として読み込む <see cref="T:System.IO.TextReader" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> から読み込まれた XML を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">
        <see cref="T:System.IO.TextReader" /> から <see cref="T:System.Xml.Linq.XElement" /> を読み込み、オプションで、空白の維持および行情報の保持を行います。</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.Xml.Linq.XElement" /> の内容として読み込む <see cref="T:System.IO.TextReader" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> から読み込まれた XML を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">ファイルから <see cref="T:System.Xml.Linq.XElement" /> を読み込みます。</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">新しい <see cref="T:System.Xml.Linq.XElement" /> に読み込むファイルを参照している URI 文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">指定したファイルの内容を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">ファイルから <see cref="T:System.Xml.Linq.XElement" /> を読み込み、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> に読み込むファイルを参照している URI 文字列。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">指定したファイルの内容を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Xml.Linq.XElement" /> を読み込みます。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> の内容として読み込む <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> から読み込まれた XML を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Xml.Linq.XElement" /> を読み込み、必要に応じて、空白の維持、ベース URI の設定、および行情報の保持を行います。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> の内容として読み込む <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> から読み込まれた XML を格納している <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified stream, optionally preserving white space.">新しい <see cref="T:System.Xml.Linq.XElement" /> を非同期に作成し、指定したストリームを使用してその基になる XML ツリーを初期化します。必要に応じて、空白を維持します。</summary>
      <param name="stream" vsli:raw="The stream containing the raw XML to read.">読み取る生の XML を格納するストリーム。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML を解析する読み込みオプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified stream.">指定したストリームの内容を格納する新しい <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified text reader, optionally preserving white space.">新しい <see cref="T:System.Xml.Linq.XElement" /> を非同期に作成し、指定したテキスト リーダーを使用してその基になる XML ツリーを初期化します。必要に応じて、空白を維持します。</summary>
      <param name="textReader" vsli:raw="A reader containing the raw XML to read.">読み取る生の XML を格納するリーダー。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML を解析する読み込みオプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">指定したリーダーの内容を格納する新しい <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified XML reader, optionally preserving white space.">新しい <see cref="T:System.Xml.Linq.XElement" /> を非同期に作成し、指定した XML リーダーを使用してその基になる XML ツリーを初期化します。必要に応じて、空白を維持します。</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read.">読み取る XML を格納するリーダー。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML を解析する読み込みオプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">指定したリーダーの内容を格納する新しい <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">この要素の名前を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">この要素の名前を格納している <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XElement" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.Element" /> です。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Boolean" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Boolean" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">要素が、有効な <see cref="T:System.Boolean" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.DateTime" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.DateTime" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">要素が、有効な <see cref="T:System.DateTime" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XAttribute" /> の値を <see cref="T:System.DateTimeOffset" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.DateTimeOffset" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">要素が、有効な <see cref="T:System.DateTimeOffset" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Decimal" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Decimal" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">要素が、有効な <see cref="T:System.Decimal" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Double" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Double" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">要素が、有効な <see cref="T:System.Double" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Guid" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Guid" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">要素が、有効な <see cref="T:System.Guid" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Int32" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Int32" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">要素が、有効な <see cref="T:System.Int32" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Int64" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Int64" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Int64" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">要素が、有効な <see cref="T:System.Int64" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Boolean" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Boolean" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.DateTime" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.DateTime" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.DateTime" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.DateTimeOffset" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Decimal" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Decimal" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Double" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Double" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Guid" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Guid" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Guid" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Int32" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Int32" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Int32" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Int64" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Int64" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Int64" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Int64" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Single" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.Single" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.TimeSpan" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.TimeSpan" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.TimeSpan" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.UInt32" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.UInt32" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.UInt32" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.UInt32" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.UInt64" /> の <see cref="T:System.Nullable`1" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.UInt64" /> の <see cref="T:System.Nullable`1" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.UInt64" /> の <see cref="T:System.Nullable`1" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">要素が <see langword="null" /> ではなく、有効な <see cref="T:System.UInt64" /> 値を含んでいません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.Single" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.Single" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">要素が、有効な <see cref="T:System.Single" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.String" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.TimeSpan" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.TimeSpan" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">要素が、有効な <see cref="T:System.TimeSpan" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.UInt32" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.UInt32" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.UInt32" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">要素が、有効な <see cref="T:System.UInt32" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の値を <see cref="T:System.UInt64" /> にキャストします。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.UInt64" /> にキャストする <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の内容を格納している <see cref="T:System.UInt64" />。</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">要素が、有効な <see cref="T:System.UInt64" /> 値を格納していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">XML を格納した文字列から <see cref="T:System.Xml.Linq.XElement" /> を読み込みます。</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">XML を格納している <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">XML を格納した文字列から設定された <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">XML を格納した文字列から <see cref="T:System.Xml.Linq.XElement" /> を読み込み、必要に応じて、空白および行情報を保持します。</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">XML を格納している <see cref="T:System.String" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">空白に対する動作、およびベース URI と行情報を読み込むかどうかを指定する <see cref="T:System.Xml.Linq.LoadOptions" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">XML を格納した文字列から設定された <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> からノードおよび属性を削除します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の属性を削除します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">この要素の子ノードおよび属性を、指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">この要素の子ノードおよび属性を置き換える内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">この要素の子ノードおよび属性を、指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">この要素の属性を、指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">この要素の属性を置き換える内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">この要素の属性を、指定された内容で置き換えます。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> を指定した <see cref="T:System.IO.Stream" /> に出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XElement" /> の出力先のストリーム。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">オプションで書式設定動作を指定して、指定した <see cref="T:System.IO.Stream" /> にこの <see cref="T:System.Xml.Linq.XElement" /> を出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XElement" /> の出力先のストリーム。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">この要素をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込みます。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.Linq.XElement" /> の書き込み先の <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">この要素をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込み、必要に応じて、書式設定を無効にします。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML を出力する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">この要素をシリアル化してファイルに書き込みます。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">ファイルの名前を格納する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">この要素をシリアル化してファイルに書き込み、オプションで、書式設定を無効にします。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">ファイルの名前を格納する <see cref="T:System.String" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この要素をシリアル化して <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.Linq.XElement" /> の書き込み先の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> を非同期的に <see cref="T:System.IO.Stream" /> に出力します。</summary>
      <param name="stream" vsli:raw="The stream to output the XML to.">XML の出力先のストリーム。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">シリアル化オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> を非同期的に <see cref="T:System.IO.TextWriter" /> に出力します。</summary>
      <param name="textWriter" vsli:raw="The writer to output the XML to.">XML の出力先のライター。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">シリアル化オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> を非同期的に <see cref="T:System.Xml.XmlWriter" /> に出力します。</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">XML の出力先のライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">非同期保存操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">属性の値の設定、属性の追加、または属性の削除を行います。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">変更する属性の名前を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">属性に代入する値。 値が <see langword="null" /> の場合は属性が削除されます。 それ以外の場合は、値が文字列形式に変換され、属性の <see cref="P:System.Xml.Linq.XAttribute.Value" /> プロパティに代入されます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> が、<see cref="T:System.Xml.Linq.XObject" /> のインスタンスです。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">子要素の値の設定、子要素の追加、または子要素の削除を行います。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">変更する子要素の名前を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">子要素に代入する値。 値が <see langword="null" /> の場合は、子要素が削除されます。 それ以外の場合は、値が文字列形式に変換され、子要素の <see cref="P:System.Xml.Linq.XElement.Value" /> プロパティに代入されます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> が、<see cref="T:System.Xml.Linq.XObject" /> のインスタンスです。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">現在の要素の値を設定します。</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">この要素に代入する値。 値は、文字列形式に変換され、<see cref="P:System.Xml.Linq.XElement.Value" /> プロパティに代入されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> が <see cref="T:System.Xml.Linq.XObject" /> です。</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">このオブジェクトの XML 表現を記述する XML スキーマ定義を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドによって生成され <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> メソッドによって処理されるオブジェクトの XML 表現を記述する <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">オブジェクトの XML 表現からオブジェクトを生成します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">オブジェクトの逆シリアル化元の <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">オブジェクトを XML 表現に変換します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">このオブジェクトのシリアル化先となる <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">この要素の連結されたテキスト コンテンツを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">この要素のすべてのテキスト コンテンツを格納している <see cref="T:System.String" />。 複数のテキスト ノードがある場合は、連結されます。</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この要素を <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified writer.">この <see cref="T:System.Xml.Linq.XElement" /> を指定したライターに非同期的に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XElement" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">XML 要素または属性の名前を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XName" /> が、この <see cref="T:System.Xml.Linq.XName" /> と等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">現在の <see cref="T:System.Xml.Linq.XName" /> と比較する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XName" /> が現在の <see cref="T:System.Xml.Linq.XName" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">
        <see cref="T:System.Xml.Linq.XName" /> オブジェクトを拡張名から取得します。</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> という形式の拡張 XML 名を含む <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">拡張名から作成された <see cref="T:System.Xml.Linq.XName" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">ローカル名および名前空間から <see cref="T:System.Xml.Linq.XName" /> オブジェクトを取得します。</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">ローカル (非修飾) 名。</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">XML 名前空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">指定されたローカル名と名前空間から作成された <see cref="T:System.Xml.Linq.XName" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XName" /> のハッシュ コードを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Int32" /> のハッシュ コードを格納している <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">名前のローカル (非修飾) 部を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">修飾名のローカル (非修飾) 部を含む <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">完全修飾名の名前空間部分を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">名前の名前空間部分を含む <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNamespace" /> の <see cref="T:System.Xml.Linq.XName" /> の URI を返します。</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNamespace" /> の <see cref="T:System.Xml.Linq.XName" /> の URI。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">
        <see cref="T:System.Xml.Linq.XName" /> の 2 つのインスタンスが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> と <paramref name="right" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">拡張 XML 名として書式設定された文字列 (<c>{namespace}localname</c>) を <see cref="T:System.Xml.Linq.XName" /> オブジェクトに変換します。</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> という形式の拡張 XML 名を含む文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">拡張名から作成された <see cref="T:System.Xml.Linq.XName" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">
        <see cref="T:System.Xml.Linq.XName" /> の 2 つのインスタンスが等しくないかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">現在の <see cref="T:System.Xml.Linq.XName" /> が、指定した <see cref="T:System.Xml.Linq.XName" /> と等しいかどうかを示します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XName" /> と比較する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XName" /> が、指定した <see cref="T:System.Xml.Linq.XName" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象のオブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> という形式の拡張 XML 名を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> という形式の拡張 XML 名を含む <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">XML 名前空間を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XNamespace" /> が現在の <see cref="T:System.Xml.Linq.XNamespace" /> と等しいかどうかを示します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">現在の <see cref="T:System.Xml.Linq.XNamespace" /> と比較する <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">指定した <see cref="T:System.Boolean" /> が現在の <see cref="T:System.Xml.Linq.XNamespace" /> と等しいかどうかを示す <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">指定した URI (Uniform Resource Identifier) の <see cref="T:System.Xml.Linq.XNamespace" /> を取得します。</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">名前空間 URI を格納している <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">指定した URI から作成された <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNamespace" /> のハッシュ コードを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Int32" /> のハッシュ コードを格納している <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">この <see cref="T:System.Xml.Linq.XName" /> と指定したローカル名から作成された <see cref="T:System.Xml.Linq.XNamespace" /> オブジェクトを返します。</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">ローカル名を格納している <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">この <see cref="T:System.Xml.Linq.XName" /> と指定したローカル名から作成された <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">この名前空間の URI を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">名前空間の URI を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">対応する名前空間がない <see cref="T:System.Xml.Linq.XNamespace" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">対応する名前空間がない <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> オブジェクトとローカル名を結合して、<see cref="T:System.Xml.Linq.XName" /> を作成します。</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">名前空間を格納している <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">ローカル名を格納している <see cref="T:System.String" />。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">名前空間とローカル名から構築された新しい <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">
        <see cref="T:System.Xml.Linq.XNamespace" /> の 2 つのインスタンスが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">
        <paramref name="left" /> と <paramref name="right" /> が等しいかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">URI が含まれている文字列を <see cref="T:System.Xml.Linq.XNamespace" /> に変換します。</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">名前空間 URI を格納している <see cref="T:System.String" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">URI 文字列から構築された <see cref="T:System.Xml.Linq.XNamespace" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">
        <see cref="T:System.Xml.Linq.XNamespace" /> の 2 つのインスタンスが等しくないかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNamespace" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">
        <paramref name="left" /> と <paramref name="right" /> が等しくないかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNamespace" /> の URI を返します。</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNamespace" /> の URI。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">XML URI (<c>http://www.w3.org/XML/1998/namespace</c>) に対応する <see cref="T:System.Xml.Linq.XNamespace" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">XML URI (<c>http://www.w3.org/XML/1998/namespace</c>) に対応する。 <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">xmlns URI (<c>http://www.w3.org/2000/xmlns/</c>) に対応する <see cref="T:System.Xml.Linq.XNamespace" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Xmlns URI<c>(</c>) に対応する。 **** <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">XML ツリー内のノードの抽象的な概念 (要素、コメント、ドキュメントの種類、処理命令、またはテキスト ノード) を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">このノードの直後に指定された内容を追加します。</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">このノードの後に追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">このノードの直後に指定された内容を追加します。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">指定した内容をこのノードの直前に追加します。</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">このノードの前に追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">指定した内容をこのノードの直前に追加します。</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">コンテンツ オブジェクトのパラメーター リスト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">このノードの先祖要素のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">このノードの先祖要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このノードの先祖要素のフィルター処理されたコレクションを返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">このノードの先祖要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。
返されたコレクションのノードは、ドキュメントの逆順になっています。
このメソッドは遅延実行を使用します。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">2 つのノードを比較してそれらの相対的な XML ドキュメント順を比較します。</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較する最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較する 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">ノードが等しい場合には 0 を格納する <see langword="int" />。<paramref name="n1" /> が <paramref name="n2" /> より前の場合には -1。<paramref name="n1" /> が <paramref name="n2" /> より後ろの場合には 1。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">2 つのノードが共通の先祖を共有していません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">このノードの <see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">このノードとその子孫の読み取りに使用される <see cref="T:System.Xml.XmlReader" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">
        <paramref name="readerOptions" /> パラメーターでオプションを指定して、<see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">重複する名前空間を省略するかどうかを指定する <see cref="T:System.Xml.Linq.ReaderOptions" /> オブジェクト。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">すべての子孫ノードの値を含む、2 つのノードの値を比較します。</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">ノードが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">2 つのノードの相対的な位置を比較できる比較子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">2 つのノードの相対的な位置を比較できる <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">このノードの後にある兄弟要素のコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">このノードの後にある兄弟要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" /> (ドキュメント順)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このノードの後にある兄弟要素のフィルター処理されたコレクションをドキュメント順に返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このノードの後にある兄弟要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" /> (ドキュメント順)。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">このノードの前にある兄弟要素のコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">このノードの前にある兄弟要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" /> (ドキュメント順)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このノードの前にある兄弟要素のフィルター処理されたコレクションをドキュメント順に返します。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">照合する <see cref="T:System.Xml.Linq.XName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">このノードの前にある兄弟要素の <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" /> (ドキュメント順)。 一致する <see cref="T:System.Xml.Linq.XName" /> を持つ要素のみがコレクションに含められます。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">2 つのノードの値が等しいかどうかを比較できる比較子を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">2 つのノードの値が等しいかどうかを比較できる <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">ドキュメント順に基づいて、現在のノードを指定したノードの後に表示するかどうかを決定します。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">ドキュメント順を比較する <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したノードの後にこのノードを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">ドキュメント順に基づいて、現在のノードを指定したノードの前に表示するかどうかを決定します。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">ドキュメント順を比較する <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したノードの前にこのノードを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">このノードの次の兄弟ノードを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">次の兄弟ノードを含む <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">このノードの後にある兄弟ノードのコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">このノードの後にある兄弟ノードの <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" /> (ドキュメント順)。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">このノードの前にある兄弟ノードのコレクションをドキュメント順に返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">このノードの前にある兄弟ノードの <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XNode" /> (ドキュメント順)。</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">このノードの前の兄弟ノードを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">前の兄弟ノードを含む <see cref="T:System.Xml.Linq.XNode" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> から <see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">この <see cref="T:System.Xml.XmlReader" /> に読み込むためにノードに配置された <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">リーダーから読み込まれたノードとその子孫ノードを含む <see cref="T:System.Xml.Linq.XNode" />。 ノードのランタイム型は、リーダーで発生した最初のノードのノード型 (<see cref="P:System.Xml.Linq.XObject.NodeType" />) によって決まります。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> は、認識されたノード型に配置されていません。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">基になる <see cref="T:System.Xml.XmlReader" /> は例外をスローします。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The runtime type of the node is determined by the &lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt; of the first node encountered in the reader.">
        <see cref="T:System.Xml.Linq.XNode" /> から <see cref="T:System.Xml.XmlReader" /> を作成します。 ノードのランタイム型は、リーダーで発生した最初のノードの <see cref="P:System.Xml.Linq.XObject.NodeType" /> によって決まります。</summary>
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XNode" /> に読み込むためにノードに配置されたリーダー。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="An XNode that contains the nodes read from the reader.">リーダーから読み取られたノードを含む XNode。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> は、認識されたノード型に配置されていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">現在のノードを親から削除します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">親は <see langword="null" /> になります。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">現在のノードを指定された内容に置き換えます。</summary>
      <param name="content" vsli:raw="Content that replaces this node.">このノードを置き換える内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">現在のノードを指定された内容に置き換えます。</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">新しい内容のパラメーター リスト。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">このノードに対してインデントが設定された XML を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">インデントが設定された XML を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">このノードに対して XML を返し、オプションで書式設定を無効にします。</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">XML を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このノードを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes the current node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">現在のノードを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write the current node into.">現在のノードを書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">ノードのドキュメント順を比較するための機能を含みます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">2 つのノードを比較してそれらの相対的なドキュメント順を比較します。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">ノードが等しい場合には 0 を格納する <see cref="T:System.Int32" />。<paramref name="x" /> が <paramref name="y" /> より前の場合には -1。<paramref name="x" /> が <paramref name="y" /> より後ろの場合には 1。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">2 つのノードが共通の先祖を共有していません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">2 つのノードを比較してそれらの相対的なドキュメント順を比較します。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">ノードが等しい場合には 0 を格納する <see cref="T:System.Int32" />。<paramref name="x" /> が <paramref name="y" /> より前の場合には -1。<paramref name="x" /> が <paramref name="y" /> より後ろの場合には 1。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">2 つのノードが共通の先祖を共有していません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">2 つのノードが <see cref="T:System.Xml.Linq.XNode" /> から派生されていません。</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">ノードを比較して等しいかどうかを確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">2 つのノードの値を比較します。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">ノードが等しいかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> に基づいてハッシュ コードを返します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">ハッシュする <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">ノードの値に基づくハッシュ コードが格納された <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">2 つのノードの値を比較します。</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる最初の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">比較対象となる 2 番目の <see cref="T:System.Xml.Linq.XNode" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">ノードが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">ノードの値に基づいてハッシュ コードを返します。</summary>
      <param name="obj" vsli:raw="The node to hash.">ハッシュするノード。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">ノードの値に基づくハッシュ コードが格納された <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">XML ツリー内のノードまたは属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> の注釈の一覧にオブジェクトを追加します。</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">追加する注釈を格納しているオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> から指定した型の最初の注釈オブジェクトを取得します。</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">取得する注釈の型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">指定した型に一致する最初の注釈オブジェクトを格納する <see cref="T:System.Object" />。いずれの注釈も指定した型でない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> から指定した型の最初の注釈オブジェクトを取得します。</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">取得する注釈の型。</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">指定した型に一致する最初の注釈オブジェクト。いずれの注釈も指定した型でない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> の指定した型の注釈のコレクションを取得します。</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">取得する注釈の型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Collections.Generic.IEnumerable`1" /> の指定した型に一致する注釈を格納する <see cref="T:System.Object" /> の <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> の指定した型の注釈のコレクションを取得します。</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">取得する注釈の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Collections.Generic.IEnumerable`1" /> の注釈を格納する <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> のベース URI を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.String" /> のベース URI を格納する <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">この <see cref="T:System.Xml.Linq.XObject" /> またはその子孫が変更されたときに発生します。</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">この <see cref="T:System.Xml.Linq.XObject" /> またはその子孫が変更される直前に発生します。</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> の <see cref="T:System.Xml.Linq.XObject" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XDocument" /> の <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> のノード型を取得します。</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> のノード型。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の親 <see cref="T:System.Xml.Linq.XObject" /> を取得します。</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XElement" /> の親 <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> から指定した型の注釈を削除します。</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">削除する注釈の型。</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XObject" /> から指定した型の注釈を削除します。</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">削除する注釈の型。</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">この <see cref="T:System.Xml.Linq.XObject" /> に行情報があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> に行情報がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">基になる <see cref="T:System.Xml.XmlReader" /> がこの <see cref="T:System.Xml.Linq.XObject" /> について報告した行番号を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Int32" /> について <see cref="T:System.Xml.XmlReader" /> が報告した行番号を格納する <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">基になる <see cref="T:System.Xml.XmlReader" /> がこの <see cref="T:System.Xml.Linq.XObject" /> について報告した行番号を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">この <see cref="T:System.Int32" /> について <see cref="T:System.Xml.XmlReader" /> が報告した行番号を格納する <see cref="T:System.Xml.Linq.XObject" />。</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> に対してイベントが生成されるときのイベントの種類を指定します。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> が <see cref="T:System.Xml.Linq.XContainer" /> に追加されたか、これから追加されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">
        <see cref="T:System.Xml.Linq.XObject" /> の名前が変更されたか、これから変更されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" /> が <see cref="T:System.Xml.Linq.XContainer" /> から削除されたか、これから削除されます。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">
        <see cref="T:System.Xml.Linq.XObject" /> の値が変更されたか、これから変更されます。 また、空の要素のシリアル化方法の変更 (空のタグから開始/終了タグのペアへ、またはその逆への変更) により、このイベントが発生します。</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">
        <see cref="E:System.Xml.Linq.XObject.Changing" /> イベントおよび <see cref="E:System.Xml.Linq.XObject.Changed" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">LINQ to XML イベントのイベント引数を格納する <see cref="T:System.Xml.Linq.XObjectChange" />。</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Add" /> 変更イベントのイベント引数。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Name" /> 変更イベントのイベント引数。</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">変更の種類を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">変更の種類を格納する <see cref="T:System.Xml.Linq.XObjectChange" />。</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Remove" /> 変更イベントのイベント引数。</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Value" /> 変更イベントのイベント引数。</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">XML 処理命令を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XProcessingInstruction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">この <see cref="T:System.String" /> のターゲット アプリケーションを含む <see cref="T:System.Xml.Linq.XProcessingInstruction" />。</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XProcessingInstruction" /> の文字列データ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> パラメーターまたは <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> は、XML 名の制約に従っていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XProcessingInstruction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">コピー元の <see cref="T:System.Xml.Linq.XProcessingInstruction" /> ノード。</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">この処理命令の文字列値を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">この処理命令の文字列値を含む <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">文字列 <paramref name="value" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" /> です。</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">この処理命令のターゲット アプリケーションを含む文字列を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">この処理命令のターゲット アプリケーションを含む <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">文字列 <paramref name="value" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" /> は、XML 名の制約に従っていません。</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この処理命令を <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">この処理命令が書き込まれる <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XProcessingInstruction" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XProcessingInstruction" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">遅延ストリーム出力をサポートする XML ツリー内の要素を表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">指定した <see cref="T:System.Xml.Linq.XElement" /> から <see cref="T:System.Xml.Linq.XName" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">要素の名前を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">指定した名前と内容を持つ <see cref="T:System.Xml.Linq.XStreamingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">要素名を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">要素の内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">指定した名前と内容を持つ <see cref="T:System.Xml.Linq.XStreamingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">要素名を格納する <see cref="T:System.Xml.Linq.XName" />。</param>
      <param name="content" vsli:raw="The contents of the element.">要素の内容。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">指定した内容をこの <see cref="T:System.Xml.Linq.XStreamingElement" /> に子として追加します。</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">ストリーム要素に追加されるコンテンツ。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">指定した内容をこの <see cref="T:System.Xml.Linq.XStreamingElement" /> に子として追加します。</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">ストリーム要素に追加されるコンテンツ。</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">このストリーム要素の名前を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">このストリーム要素の名前を格納している <see cref="T:System.Xml.Linq.XName" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XStreamingElement" /> を指定した <see cref="T:System.IO.Stream" /> に出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XDocument" /> の出力先のストリーム。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">オプションで書式設定動作を指定して、指定した <see cref="T:System.IO.Stream" /> にこの <see cref="T:System.Xml.Linq.XStreamingElement" /> を出力します。</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XDocument" /> の出力先のストリーム。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">このストリーム要素をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込みます。</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.Linq.XStreamingElement" /> の書き込み先の <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">このストリーム要素をシリアル化して <see cref="T:System.IO.TextWriter" /> に書き込み、必要に応じて、書式設定を無効にします。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML を出力する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">このストリーム要素をシリアル化してファイルに書き込みます。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">ファイルの名前を格納する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">このストリーム要素をシリアル化してファイルに書き込み、必要に応じて、書式設定を無効にします。</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">ファイルの名前を格納する <see cref="T:System.String" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このストリーム要素をシリアル化して <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.Linq.XElement" /> の書き込み先の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">このストリーム要素に対して書式 (インデント) が設定された XML を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">インデントが設定された XML を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">このストリーム要素に対して XML を返し、必要に応じて、書式設定を無効にします。</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">書式設定の動作を指定する <see cref="T:System.Xml.Linq.SaveOptions" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">XML を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このストリーム要素を <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">テキスト ノードを表します。</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XText" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" /> ノードの値を格納する <see cref="T:System.Xml.Linq.XText" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XText" /> クラスの新しいインスタンスを、別の <see cref="T:System.Xml.Linq.XText" /> オブジェクトから初期化します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">コピー元の <see cref="T:System.Xml.Linq.XText" /> ノード。</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">このノードのノード型を取得します。</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">ノード型。 <see cref="T:System.Xml.Linq.XText" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.Text" /> です。</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">このノードの値を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">このノードの値を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">このノードを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">この <see cref="T:System.Xml.Linq.XText" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に非同期的に書き込みます。</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to.">この <see cref="T:System.Xml.Linq.XText" /> を書き込むライター。</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">非同期操作のキャンセルを要求するために使用できるトークン。</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">非同期書き込み操作を表すタスク。</returns>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">このクラスには、XSD 検証のための LINQ to XML 拡張メソッドが含まれています。</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">検証済み属性のスキーマ検証後の infoset (PSVI) を取得します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">検証済みの <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> のスキーマ検証後の infoset を含む <see cref="T:System.Xml.Linq.XAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">検証済み要素のスキーマ検証後の infoset (PSVI) を取得します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">検証済みの <see cref="T:System.Xml.Linq.XElement" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> のスキーマ検証後の infoset (PSVI) を含む <see cref="T:System.Xml.Linq.XElement" />。</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">このメソッドは、<see cref="T:System.Xml.Linq.XAttribute" /> が指定した <see cref="T:System.Xml.Schema.XmlSchemaObject" /> および <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に準拠しているかどうかを検証します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">検証対象のサブツリーを指定する <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XAttribute" /> が、指定した <see cref="T:System.Xml.Schema.XmlSchemaObject" /> および <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に準拠しているかどうかを検証します。必要に応じて、スキーマ検証後の infoset (PSVI) を XML ツリーに設定できます。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XAttribute" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">検証対象のサブツリーを指定する <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">スキーマ検証後の infoset (PSVI) を設定するかどうかを示す <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">このメソッドは、<see cref="T:System.Xml.Linq.XDocument" /> が <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD に準拠しているかどうかを検証します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XDocument" /> が <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD に準拠しているかどうかを検証します。オプションで、スキーマ検証後の infoset (PSVI) を XML ツリーに設定できます。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XDocument" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">スキーマ検証後の infoset (PSVI) を設定するかどうかを示す <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">このメソッドは、<see cref="T:System.Xml.Linq.XElement" /> サブツリーが指定した <see cref="T:System.Xml.Schema.XmlSchemaObject" /> および <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に準拠しているかどうかを検証します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">検証対象のサブツリーを指定する <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XElement" /> サブツリーが、指定した <see cref="T:System.Xml.Schema.XmlSchemaObject" /> および <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に準拠しているかどうかを検証します。必要に応じて、スキーマ検証後の infoset (PSVI) を XML ツリーに設定できます。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">検証対象の <see cref="T:System.Xml.Linq.XElement" />。</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">検証対象のサブツリーを指定する <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">検証時に照合する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">リーダーが検証エラーを検出した場合に発生するイベントの <see cref="T:System.Xml.Schema.ValidationEventHandler" />。 <see langword="null" /> の場合、検証エラーに基づいて例外がスローされます。</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">スキーマ検証後の infoset (PSVI) を設定するかどうかを示す <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XML スキーマ定義言語 (XSD) の検証エラーが原因でスローされます。</exception>
    </member>
  </members>
</doc>