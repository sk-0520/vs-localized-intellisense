<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq</name>
  </assembly>
  <members>
    <member name="T:System.Linq.Enumerable">
      <summary vsli:raw="Provides a set of &lt;see langword=&quot;static&quot; /&gt; (&lt;see langword=&quot;Shared&quot; /&gt; in Visual Basic) methods for querying objects that implement &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を実装するオブジェクトをクエリするための一連の <see langword="static" /> (Visual Basic では <see langword="Shared" />) メソッドを提供します。</summary>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies an accumulator function over a sequence.">シーケンスにアキュムレータ関数を適用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to aggregate over.">集計対象の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">各要素に対して呼び出すアキュムレータ関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="func" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">シーケンスにアキュムレータ関数を適用します。 指定されたシード値が最初のアキュムレータ値として使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to aggregate over.">集計対象の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">最初のアキュムレータ値。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">各要素に対して呼び出すアキュムレータ関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">アキュムレータ値の型。</typeparam>
      <returns vsli:raw="The final accumulator value.">最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="func" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">シーケンスにアキュムレータ関数を適用します。 指定したシード値は最初のアキュムレータ値として使用され、指定した関数は結果値の選択に使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to aggregate over.">集計対象の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">最初のアキュムレータ値。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">各要素に対して呼び出すアキュムレータ関数。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">最終的なアキュムレータ値を結果値に変換する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">アキュムレータ値の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果の値の型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">変換された最終的なアキュムレータ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="func" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines whether all elements of a sequence satisfy a condition.">シーケンスのすべての要素が条件を満たしているかどうかを判断します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements to apply the predicate to.">述語を適用する要素を格納している <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された述語でソース シーケンスのすべての要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Determines whether a sequence contains any elements.">シーケンスに要素が含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to check for emptiness.">空かどうかを確認する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ソース シーケンスに要素が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines whether any element of a sequence satisfies a condition.">シーケンスの任意の要素が条件を満たしているかどうかを判断します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to apply the predicate to.">述語を適用する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence is not empty and at least one of its elements passes the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された述語でソース シーケンスの要素がテストに合格する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary vsli:raw="Appends a value to the end of the sequence.">シーケンスの末尾に値を追加します。</summary>
      <param name="source" vsli:raw="A sequence of values.">値のシーケンス。</param>
      <param name="element" vsli:raw="The value to append to &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> に追加する値。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A new sequence that ends with &lt;paramref name=&quot;element&quot; /&gt;.">
        <paramref name="element" /> で終わる新しいシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the input typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> として型指定された入力を返します。</summary>
      <param name="source" vsli:raw="The sequence to type as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> として型指定するシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> として型指定された入力シーケンス。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">Null 許容型の <see cref="T:System.Decimal" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">Null 許容型の <see cref="T:System.Double" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">Null 許容型の <see cref="T:System.Int32" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">Null 許容型の <see cref="T:System.Int64" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">Null 許容型の <see cref="T:System.Single" /> 値のシーケンスの平均を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">平均を計算する Null 許容型の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">平均値計算の対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">平均値の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">source の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Double" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Int32" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">シーケンス内の要素の合計は <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Int64" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only values that are &lt;see langword=&quot;null&quot; /&gt;.">値のシーケンスの平均値、または、ソース シーケンスが空または <see langword="null" /> である値のみを含む場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Single" /> 値のシーケンスの平均値を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">平均値計算の対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">値のシーケンスの平均値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
      <summary vsli:raw="Casts the elements of an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; to the specified type.">
        <see cref="T:System.Collections.IEnumerable" /> の要素を、指定した型にキャストします。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; that contains the elements to be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">
        <paramref name="TResult" /> 型にキャストされる要素が格納されている <see cref="T:System.Collections.IEnumerable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to cast the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">
        <paramref name="source" /> の要素のキャスト後の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains each element of the source sequence cast to the specified type.">指定された型にキャストされたソース シーケンスの各要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">シーケンスの要素を <paramref name="TResult" /> 型にキャストできません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Concatenates two sequences.">2 つのシーケンスを連結します。</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">連結する最初のシーケンス。</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">最初のシーケンスに連結するシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the concatenated elements of the two input sequences.">2 つの入力シーケンスの連結された要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using the default equality comparer.">既定の等値比較子を使用して、指定した要素がシーケンスに含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">値の検索対象となるシーケンス。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">シーケンス内で検索する値。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値を持つ要素がソース シーケンスに含まれている場合は <see langword="true" />。それ以外は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して、指定した要素がシーケンスに含まれているかどうかを判断します。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">値の検索対象となるシーケンス。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">シーケンス内で検索する値。</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">値を比較する等値比較子。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値を持つ要素がソース シーケンスに含まれている場合は <see langword="true" />。それ以外は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the number of elements in a sequence.">シーケンス内の要素数を返します。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">カウントする要素が格納されているシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">入力シーケンス内の要素数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified sequence satisfy a condition.">条件を満たす、指定されたシーケンス内の要素の数を表す数値を返します。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be tested and counted.">テストおよびカウントする要素が格納されているシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">述語関数の条件を満たす、シーケンス内の要素数を表す数値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 内の要素数が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.">指定したシーケンスの要素を返します。シーケンスが空の場合はシングルトン コレクションにある型パラメーターの既定値を返します。</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">シーケンスが空の場合に、既定値を返すシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object that contains the default value for the &lt;paramref name=&quot;TSource&quot; /&gt; type if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="TSource" /> が空の場合、<paramref name="source" /> 型の既定値を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。それ以外の場合は <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.">指定されたシーケンスの要素を返します。シーケンスが空の場合はシングルトン コレクションにある型パラメーターの既定値を返します。</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">シーケンスが空の場合に、指定された値を返すシーケンス。</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">シーケンスが空の場合に返す値。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains &lt;paramref name=&quot;defaultValue&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="defaultValue" /> が空の場合は <paramref name="source" /> が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。それ以外の場合は <paramref name="source" />。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、シーケンスから一意の要素を返します。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">重複する要素を削除する対象となるシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains distinct elements from the source sequence.">ソース シーケンスの一意の要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、シーケンスから一意の要素を返します。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">重複する要素を削除する対象となるシーケンス。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains distinct elements from the source sequence.">ソース シーケンスの一意の要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence.">シーケンス内の指定されたインデックス位置にある要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">取得する要素の、0 から始まるインデックス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The element at the specified position in the source sequence.">ソース シーケンス内の指定された位置にある要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> が 0 未満か <paramref name="source" /> に含まれている要素数以上の値です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence or a default value if the index is out of range.">シーケンス内の指定したインデックス位置にある要素を返します。インデックスが範囲外の場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">取得する要素の、0 から始まるインデックス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">インデックスがソース シーケンスの範囲外の場合は <see langword="default" /> (<paramref name="TSource" />)。それ以外の場合は、ソース シーケンスの指定した位置にある要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Empty``1">
      <summary vsli:raw="Returns an empty &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that has the specified type argument.">指定した型引数を持つ空の <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">返されるジェネリック <see cref="T:System.Collections.Generic.IEnumerable`1" /> の型パラメーターに割り当てる型。</typeparam>
      <returns vsli:raw="An empty &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">型引数が <paramref name="TResult" /> である空の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" /> には含まれていないが、返される要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">最初のシーケンスにも含まれ、返されたシーケンスからは削除される要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">2 つのシーケンスの要素の差集合が格納されているシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" /> には含まれていないが、返される要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">最初のシーケンスにも含まれ、返されたシーケンスからは削除される要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">2 つのシーケンスの要素の差集合が格納されているシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the first element of a sequence.">シーケンスの最初の要素を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the first element of.">最初の要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The first element in the specified sequence.">指定されたシーケンスの最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a sequence that satisfies a specified condition.">指定された条件を満たす、シーケンスの最初の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">指定された述語関数でテストに合格する、シーケンスの最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。

または -
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the first element of a sequence, or a default value if the sequence contains no elements.">シーケンスの最初の要素を返します。シーケンスに要素が含まれていない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the first element of.">最初の要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="TSource" /> が空の場合は <see langword="default" />(<paramref name="source" />)。それ以外の場合は <paramref name="source" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.">条件を満たす、シーケンスの最初の要素を返します。このような要素が見つからない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="TSource" /> が空の場合または <paramref name="source" /> で指定されたテストに合格する要素がない場合は <see langword="default" />(<paramref name="predicate" />)。それ以外の場合は、<paramref name="source" /> で指定されたテストに合格する、<paramref name="predicate" /> の最初の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IEnumerable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IEnumerable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a sequence of objects and a key.">C# では <c>IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c>、Visual Basic では <c>IEnumerable(Of IGrouping(Of TKey, TSource))</c>。各 <see cref="T:System.Linq.IGrouping`2" /> オブジェクトには、オブジェクトのシーケンスとキーが含まれます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、指定された比較子を使用してキーを比較します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IEnumerable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IEnumerable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a collection of objects and a key.">C# では <c>IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c>、Visual Basic では <c>IEnumerable(Of IGrouping(Of TKey, TSource))</c>。各 <see cref="T:System.Linq.IGrouping`2" /> オブジェクトには、オブジェクトのコレクションとキーが含まれます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、指定された関数を使用して各グループの要素を射影します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> 内の要素の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IEnumerable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IEnumerable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a collection of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# では <c>IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c>、Visual Basic では <c>IEnumerable(Of IGrouping(Of TKey, TElement))</c>。各 <see cref="T:System.Linq.IGrouping`2" /> オブジェクトには、<paramref name="TElement" /> 型のオブジェクトのコレクションとキーが含まれます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">キー セレクター関数に従ってシーケンスの要素をグループ化します。 キーの比較には、比較子を使用し、各グループの要素の射影には、指定された関数を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> 内の要素の型。</typeparam>
      <returns vsli:raw="An &lt;c&gt;IEnumerable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IEnumerable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a collection of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# では <c>IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c>、Visual Basic では <c>IEnumerable(Of IGrouping(Of TKey, TElement))</c>。各 <see cref="T:System.Linq.IGrouping`2" /> オブジェクトには、<paramref name="TElement" /> 型のオブジェクトのコレクションとキーが含まれます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="A collection of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型の要素のコレクション。各要素は、グループとそのキーの射影を表します。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 キーの比較には、指定された比較子を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys with.">キーの比較対象となる <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="A collection of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型の要素のコレクション。各要素は、グループとそのキーの射影を表します。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 各グループの要素は、指定された関数を使用して射影されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="A collection of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型の要素のコレクション。各要素は、グループとそのキーの射影を表します。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">指定されたキー セレクター関数に従ってシーケンスの要素をグループ化し、各グループとそのキーから結果値を作成します。 キー値の比較には、指定された比較子を使用し、各グループの要素の射影には、指定された関数を使用します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to group.">グループ化する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">各要素のキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">ソースの各要素を <see cref="T:System.Linq.IGrouping`2" /> の要素に割り当てる関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">各グループから結果値を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys with.">キーの比較対象となる <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">各 <see cref="T:System.Linq.IGrouping`2" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって返される結果値の型。</typeparam>
      <returns vsli:raw="A collection of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 型の要素のコレクション。各要素は、グループとそのキーの射影を表します。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果をグループ化します。 キーの比較には既定の等値比較子が使用されます。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">2 つのシーケンスに対してグループ化結合を実行して取得する、<paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果をグループ化します。 指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">最初のシーケンスの要素と、2 番目のシーケンスの一致する要素のコレクションから結果の要素を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">キーをハッシュして比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">2 つのシーケンスに対してグループ化結合を実行して取得する、<paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the default equality comparer to compare values.">既定の等値比較子を使用して値を比較することにより、2 つのシーケンスの積集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" /> にも含まれる、返される一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in the first sequence will be returned.">最初のシーケンスにも含まれる、返される一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">2 つのシーケンスの積集合を構成する要素が格納されているシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して値を比較することにより、2 つのシーケンスの積集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" /> にも含まれる、返される一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in the first sequence will be returned.">最初のシーケンスにも含まれる、返される一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">2 つのシーケンスの積集合を構成する要素が格納されているシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">一致するキーに基づいて 2 つのシーケンスの要素を相互に関連付けます。 キーの比較には既定の等値比較子が使用されます。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">一致する 2 つの要素から結果の要素を作成する関数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">2 つのシーケンスに対して内部結合を実行して取得する、<paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">一致するキーに基づいて 2 つのシーケンスの要素を相互に関連付けます。 指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用してキーを比較します。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">結合する最初のシーケンス。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">最初のシーケンスに結合するシーケンス。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">一致する 2 つの要素から結果の要素を作成する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">キーをハッシュして比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">最初のシーケンスの要素の型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">2 番目のシーケンスの要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">キー セレクター関数によって返されるキーの型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">2 つのシーケンスに対して内部結合を実行して取得する、<paramref name="TResult" /> 型の要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" />、または <paramref name="resultSelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the last element of a sequence.">シーケンスの最後の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the last element of.">最後の要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value at the last position in the source sequence.">ソース シーケンスの最後の位置にある値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a specified condition.">指定された条件を満たす、シーケンスの最後の要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">指定された述語関数でテストに合格する、シーケンスの最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。

または -
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the last element of a sequence, or a default value if the sequence contains no elements.">シーケンスの最後の要素を返します。シーケンスに要素が含まれていない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the last element of.">最後の要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the source sequence is empty; otherwise, the last element in the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">ソース シーケンスが空の場合は <see langword="default" /> (<paramref name="TSource" />)。それ以外の場合は <see cref="T:System.Collections.Generic.IEnumerable`1" /> の最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.">条件を満たす、シーケンスの最後の要素を返します。このような要素が見つからない場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return an element from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">シーケンスが空の場合、または述語関数でテストに合格する要素がない場合は <see langword="default" /> (<paramref name="TSource" />)。それ以外の場合は、述語関数でテストに合格する最後の要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents the total number of elements in a sequence.">シーケンス内の要素の合計数を表す <see cref="T:System.Int64" /> を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The number of elements in the source sequence.">ソース シーケンスの要素数。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">要素数が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents how many elements in a sequence satisfy a condition.">シーケンス内で条件を満たす要素の数を表す <see cref="T:System.Int64" /> を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements to be counted.">カウントする要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">述語関数の条件を満たす、シーケンス内の要素数を表す数値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of matching elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">一致する要素数が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
      <summary vsli:raw="Returns the maximum value in a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる null 許容の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Decimal&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Decimal)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Decimal&gt;</c> 型 (C# の場合) または <c>Nullable(Of Decimal)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">null 許容の <see cref="T:System.Double" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる null 許容の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Double&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Double)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Double&gt;</c> 型 (C# の場合) または <c>Nullable(Of Double)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">null 許容の <see cref="T:System.Int32" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる null 許容の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Int32&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int32)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Int32&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int32)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">null 許容の <see cref="T:System.Int64" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる null 許容の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Int64&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int64)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Int64&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int64)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">null 許容の <see cref="T:System.Single" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる null 許容の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Single&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Single)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Single&gt;</c> 型 (C# の場合) または <c>Nullable(Of Single)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
      <summary vsli:raw="Returns the maximum value in a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to determine the maximum value of.">最大値を確認する対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the maximum value in a generic sequence.">ジェネリック シーケンスの最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="No object in &lt;paramref name=&quot;source&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; or &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; interface.">
        <paramref name="source" /> のどのオブジェクトも <see cref="T:System.IComparable" /> または <see cref="T:System.IComparable`1" /> インターフェイスを実装しません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Decimal" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Double" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Int32" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Int64" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Decimal" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Decimal&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Decimal)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Decimal&gt;</c> 型 (C# の場合) または <c>Nullable(Of Decimal)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Double" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Double&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Double)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Double&gt;</c> 型 (C# の場合) または <c>Nullable(Of Double)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Int32" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Int32&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int32)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Int32&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int32)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Int64" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Int64&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int64)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Int64&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int64)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Single" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Single&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Single)&lt;/c&gt; in Visual Basic that corresponds to the maximum value in the sequence.">シーケンスの最大値に対応する <c>Nullable&lt;Single&gt;</c> 型 (C# の場合) または <c>Nullable(Of Single)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the maximum &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Single" /> の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes a transform function on each element of a generic sequence and returns the maximum resulting value.">ジェネリック シーケンスの各要素に対して変換関数を呼び出し、結果の最大値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">最大値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">シーケンスの最大値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
      <summary vsli:raw="Returns the minimum value in a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる null 許容の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Decimal&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Decimal)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Decimal&gt;</c> 型 (C# の場合) または <c>Nullable(Of Decimal)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">null 許容の <see cref="T:System.Double" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる null 許容の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Double&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Double)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Double&gt;</c> 型 (C# の場合) または <c>Nullable(Of Double)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">null 許容の <see cref="T:System.Int32" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる null 許容の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Int32&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int32)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Int32&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int32)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">null 許容の <see cref="T:System.Int64" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる null 許容の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Int64&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int64)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Int64&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int64)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">null 許容の <see cref="T:System.Single" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる null 許容の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="A value of type &lt;c&gt;Nullable&amp;lt;Single&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Single)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Single&gt;</c> 型 (C# の場合) または <c>Nullable(Of Single)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
      <summary vsli:raw="Returns the minimum value in a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to determine the minimum value of.">最小値を確認する対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the minimum value in a generic sequence.">ジェネリック シーケンスの最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="No object in &lt;paramref name=&quot;source&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; or &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; interface.">
        <paramref name="source" /> のどのオブジェクトも <see cref="T:System.IComparable" /> または <see cref="T:System.IComparable`1" /> インターフェイスを実装しません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Decimal" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Double" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Int32" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Int64" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Decimal" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Decimal&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Decimal)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Decimal&gt;</c> 型 (C# の場合) または <c>Nullable(Of Decimal)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Double" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Double&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Double)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Double&gt;</c> 型 (C# の場合) または <c>Nullable(Of Double)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Int32" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Int32&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int32)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Int32&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int32)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Int64" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Int64&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Int64)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Int64&gt;</c> 型 (C# の場合) または <c>Nullable(Of Int64)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、null 許容の <see cref="T:System.Single" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The value of type &lt;c&gt;Nullable&amp;lt;Single&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;Nullable(Of Single)&lt;/c&gt; in Visual Basic that corresponds to the minimum value in the sequence.">シーケンスの最小値に対応する <c>Nullable&lt;Single&gt;</c> 型 (C# の場合) または <c>Nullable(Of Single)</c> 型 (Visual Basic の場合) の値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes a transform function on each element of a sequence and returns the minimum &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">シーケンスの各要素に対して変換関数を呼び出し、<see cref="T:System.Single" /> の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> に要素が含まれていません。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes a transform function on each element of a generic sequence and returns the minimum resulting value.">ジェネリック シーケンスの各要素に対して変換関数を呼び出し、結果の最小値を返します。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">最小値を確認する対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">シーケンスの最小値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
      <summary vsli:raw="Filters the elements of an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; based on a specified type.">指定された型に基づいて <see cref="T:System.Collections.IEnumerable" /> の要素をフィルター処理します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; whose elements to filter.">フィルター処理する要素を含む <see cref="T:System.Collections.IEnumerable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">シーケンスの要素をフィルター処理する型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements from the input sequence of type &lt;paramref name=&quot;TResult&quot; /&gt;.">
        <paramref name="TResult" /> 型の入力シーケンスの要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order according to a key.">シーケンスの要素をキーに従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order by using a specified comparer.">指定された比較子を使用してシーケンスの要素を昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order according to a key.">シーケンスの要素をキーに従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">指定された比較子を使用してシーケンスの要素を降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">順序付ける値のシーケンス。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary vsli:raw="Adds a value to the beginning of the sequence.">シーケンスの先頭に値を追加します。</summary>
      <param name="source" vsli:raw="A sequence of values.">値のシーケンス。</param>
      <param name="element" vsli:raw="The value to prepend to &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> に追加する値。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A new sequence that begins with &lt;paramref name=&quot;element&quot; /&gt;.">
        <paramref name="element" /> で始まる新しいシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a sequence of integral numbers within a specified range.">指定した範囲内の整数のシーケンスを生成します。</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">シーケンス内の最初の整数の値。</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">生成する連続した整数の数。</param>
      <returns vsli:raw="An &lt;c&gt;IEnumerable&amp;lt;Int32&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IEnumerable(Of Int32)&lt;/c&gt; in Visual Basic that contains a range of sequential integral numbers.">連続した整数の範囲を含む <c>IEnumerable&lt;Int32&gt;</c> (C# の場合) または <c>IEnumerable(Of Int32)</c> (Visual Basic の場合)。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; -1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> が 0 未満です。

または -
<paramref name="start" /> + <paramref name="count" /> -1 が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a sequence that contains one repeated value.">繰り返される 1 つの値を含むシーケンスを生成します。</summary>
      <param name="element" vsli:raw="The value to be repeated.">繰り返される値。</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">生成されたシーケンスで値を繰り返す回数。</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">結果のシーケンスで繰り返される値の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains a repeated value.">繰り返される値を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Inverts the order of the elements in a sequence.">シーケンスの要素の順序を反転させます。</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">反転させる値のシーケンス。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">要素が入力シーケンスの要素に逆順で対応しているシーケンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a sequence into a new form.">シーケンスの各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">変換関数を呼び出す対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects each element of a sequence into a new form by incorporating the element's index.">要素のインデックスを組み込むことにより、シーケンスの各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">変換関数を呼び出す対象となる値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">各ソース要素に適用する変換関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化します。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返されるシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">入力シーケンスの各要素に対して一対多の変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化します。 各ソース要素のインデックスは、その要素の射影されたフォームで使用されます。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">各ソース要素に適用する変換関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> によって返されるシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the one-to-many transform function on each element of an input sequence.">入力シーケンスの各要素に対して一対多の変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化して、その各要素に対して結果のセレクター関数を呼び出します。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each element of the input sequence.">入力シーケンスの各要素に適用する変換関数。</param>
      <param name="resultSelector" vsli:raw="A transform function to apply to each element of the intermediate sequence.">中間シーケンスの各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> によって収集される中間要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding source element to a result element.">
        <paramref name="collectionSelector" /> の各要素で一対多の変換関数 <paramref name="source" /> を呼び出し、こうしたシーケンスの各要素とそれに対応するソース要素を結果の要素に割り当てた結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">シーケンスの各要素を <see cref="T:System.Collections.Generic.IEnumerable`1" /> に射影し、結果のシーケンスを 1 つのシーケンスに平坦化して、その各要素に対して結果のセレクター関数を呼び出します。 各ソース要素のインデックスは、その要素の中間の射影されたフォームで使用されます。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">射影する値のシーケンス。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">各ソース要素に適用する変換関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <param name="resultSelector" vsli:raw="A transform function to apply to each element of the intermediate sequence.">中間シーケンスの各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> によって収集される中間要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding source element to a result element.">
        <paramref name="collectionSelector" /> の各要素で一対多の変換関数 <paramref name="source" /> を呼び出し、こうしたシーケンスの各要素とそれに対応するソース要素を結果の要素に割り当てた結果として得られる要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" />、または <paramref name="resultSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type.">要素の型に対して既定の等値比較子を使用して要素を比較することで、2 つのシーケンスが等しいかどうかを判断します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to compare to &lt;paramref name=&quot;second&quot; /&gt;.">
        <paramref name="second" /> と比較する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to compare to the first sequence.">最初のシーケンスと比較する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのソース シーケンスが同じ長さで、それらに対応する要素がその型の既定の等値比較子に従って等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by comparing their elements by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して要素を比較することで、2 つのシーケンスが等しいかどうかを判断します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to compare to &lt;paramref name=&quot;second&quot; /&gt;.">
        <paramref name="second" /> と比較する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to compare to the first sequence.">最初のシーケンスと比較する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">要素の比較に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements compare equal according to &lt;paramref name=&quot;comparer&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのソース シーケンスが同じ長さで、<paramref name="comparer" /> に従ってそれらに対応する要素が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.">シーケンスの唯一の要素を返し、シーケンス内の要素が 1 つだけでない場合は例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the single element of.">1 つの要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence.">入力シーケンスの 1 つの要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element.&#xA;&#xA; -or-&#xA;&#xA; The input sequence is empty.">入力シーケンスに複数の要素が含まれています。

または -

入力シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">指定された条件を満たす、シーケンスの唯一の要素を返し、そのような要素が複数存在する場合は例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return a single element from.">1 つの要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">条件を満たす、入力シーケンスの 1 つの要素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="predicate" /> の条件を満たす要素はありません。

または -
<paramref name="predicate" /> の条件を満たす要素が複数あります。

または -
ソース シーケンスが空です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">シーケンスの唯一の要素を返します。シーケンスが空の場合、既定値を返します。シーケンス内に要素が複数ある場合、このメソッドは例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return the single element of.">1 つの要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence, or &lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the sequence contains no elements.">入力シーケンスの 1 つの要素。シーケンスに要素が含まれない場合は <see langword="default" /> (<paramref name="TSource" />)。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element.">入力シーケンスに複数の要素が含まれています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">指定された条件を満たすシーケンスの唯一の要素、またはそのような要素がない場合は既定値を返します。このメソッドは、複数の要素が条件を満たす場合に例外をスローします。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return a single element from.">1 つの要素を返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or &lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if no such element is found.">条件を満たす、入力シーケンスの 1 つの要素。そのような要素が見つからない場合は <see langword="default" /> (<paramref name="TSource" />)。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> の条件を満たす要素が複数あります。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a sequence and then returns the remaining elements.">シーケンス内の指定された数の要素をバイパスし、残りの要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">残りの要素を返す前にスキップする要素の数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements that occur after the specified index in the input sequence.">入力シーケンスで指定されたインデックスの後に出現する要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <param name="source" vsli:raw="An enumerable collection instance." />
      <param name="count" vsli:raw="The number of elements to omit from the end of the collection." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the enumerable collection." />
    </member>
    <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.">指定された条件が満たされる限り、シーケンスの要素をバイパスした後、残りの要素を返します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> で指定されたテストに合格しない連続する最初の要素から入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">指定された条件が満たされる限り、シーケンスの要素をバイパスした後、残りの要素を返します。 要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to return elements from.">返される要素が含まれる <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">各ソース要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" /> で指定されたテストに合格しない連続する最初の要素から入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">
        <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">
        <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">
        <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">
        <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Decimal" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">null 許容の <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Double" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">null 許容の <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Int32" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">null 許容の <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Int64" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">null 許容の <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる null 許容の <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">
        <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">合計を計算する対象となる <see cref="T:System.Single" /> 値のシーケンス。</param>
      <returns vsli:raw="The sum of the values in the sequence.">シーケンスの値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Decimal" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Decimal.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Double" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Int32" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Int64" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">合計が <see cref="F:System.Int64.MaxValue" /> を超えています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する null 許容の <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that are obtained by invoking a transform function on each element of the input sequence.">入力シーケンスの各要素に対して変換関数を呼び出して取得する <see cref="T:System.Single" /> 値のシーケンスの合計を計算します。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate a sum.">合計の計算に使用される値のシーケンス。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="The sum of the projected values.">射影された値の合計。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="selector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a sequence.">シーケンスの先頭から、指定された数の連続する要素を返します。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="count" vsli:raw="The number of elements to return.">返す要素数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the specified number of elements from the start of the input sequence.">入力シーケンスの先頭から、指定された数の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <param name="source" vsli:raw="An enumerable collection instance." />
      <param name="count" vsli:raw="The number of elements to take from the end of the collection." />
      <typeparam name="TSource" vsli:raw="The type of the elements in the enumerable collection." />
    </member>
    <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true.">指定された条件が満たされる限り、シーケンスから要素を返します。</summary>
      <param name="source" vsli:raw="A sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements from the input sequence that occur before the element at which the test no longer passes.">テストに合格しなくなった要素の前に出現する、入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">指定された条件が満たされる限り、シーケンスから要素を返します。 要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要素を返すシーケンス。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">各ソース要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements from the input sequence that occur before the element at which the test no longer passes.">テストに合格しなくなった要素の前に出現する、入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.">キーに従って、シーケンス内の後続の要素を昇順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">指定された比較子を使用して、シーケンス内の後続の要素を昇順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.">キーに従って、シーケンス内の後続の要素を降順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">指定された比較子を使用して、シーケンス内の後続の要素を降順で配置します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; that contains elements to sort.">並べ替える要素を格納している <see cref="T:System.Linq.IOrderedEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">要素がキーに従って降順に並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> から配列を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create an array from.">配列の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An array that contains the elements from the input sequence.">入力シーケンスの要素を含む配列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function.">指定されたキー セレクター関数に従って、<see cref="T:System.Collections.Generic.Dictionary`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values. The values within each group are in the same order as in &lt;paramref name=&quot;source&quot; /&gt;.">キーと値を格納している <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。

または -
<paramref name="keySelector" /> が <see langword="null" /> のキーを生成しています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements.">
        <paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function and key comparer.">指定されたキー セレクター関数およびキーの比較子に従って、<see cref="T:System.Collections.Generic.Dictionary`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values. The values within each group are in the same order as in &lt;paramref name=&quot;source&quot; /&gt;.">キーと値を格納している <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。

または -
<paramref name="keySelector" /> が <see langword="null" /> のキーを生成しています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements.">
        <paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to specified key selector and element selector functions.">指定されたキー セレクター関数および要素セレクター関数に従って、<see cref="T:System.Collections.Generic.Dictionary`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">各要素から結果の要素値を生成する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。

または -
<paramref name="keySelector" /> が <see langword="null" /> のキーを生成しています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements.">
        <paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">指定されたキー セレクター関数、比較子、および要素セレクター関数に従って、<see cref="T:System.Collections.Generic.Dictionary`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">各要素から結果の要素値を生成する変換関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。

または -
<paramref name="keySelector" /> が <see langword="null" /> のキーを生成しています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements.">
        <paramref name="keySelector" /> が 2 つの要素に対して重複するキーを生成しています。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> から <see cref="T:System.Collections.Generic.HashSet`1" /> を作成します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.HashSet`1" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; that contains values of type &lt;paramref name=&quot;TSource&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された TSource 型の値を格納する <see cref="T:System.Collections.Generic.HashSet`1" />。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; using the &lt;paramref name=&quot;comparer&quot; /&gt; to compare keys.">
        <paramref name="comparer" /> を使用して <see cref="T:System.Collections.Generic.IEnumerable`1" />から <see cref="T:System.Collections.Generic.HashSet`1" /> を作成し、キーを比較します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.HashSet`1" /> の作成元の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; that contains values of type &lt;paramref name=&quot;TSource&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された <paramref name="TSource" /> 型の値を格納する <see cref="T:System.Collections.Generic.HashSet`1" />。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> から <see cref="T:System.Collections.Generic.List`1" /> を作成します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の作成元の <see cref="T:System.Collections.Generic.List`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.List`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function.">指定されたキー セレクター関数に従って、<see cref="T:System.Linq.Lookup`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の作成元の <see cref="T:System.Linq.Lookup`2" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; that contains keys and values. The values within each group are in the same order as in &lt;paramref name=&quot;source&quot; /&gt;.">キーと値を格納している <see cref="T:System.Linq.Lookup`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function and key comparer.">指定されたキー セレクター関数およびキーの比較子に従って、<see cref="T:System.Linq.Lookup`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の作成元の <see cref="T:System.Linq.Lookup`2" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; that contains keys and values. The values within each group are in the same order as in &lt;paramref name=&quot;source&quot; /&gt;.">キーと値を格納している <see cref="T:System.Linq.Lookup`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="keySelector" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to specified key selector and element selector functions.">指定されたキー セレクター関数および要素セレクター関数に従って、<see cref="T:System.Linq.Lookup`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の作成元の <see cref="T:System.Linq.Lookup`2" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">各要素から結果の要素値を生成する変換関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Linq.Lookup`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">指定されたキー セレクター関数、比較子、および要素セレクター関数に従って、<see cref="T:System.Linq.Lookup`2" /> から <see cref="T:System.Collections.Generic.IEnumerable`1" /> を作成します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to create a &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> の作成元の <see cref="T:System.Linq.Lookup`2" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">各要素からキーを抽出する関数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">各要素から結果の要素値を生成する変換関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> によって返される値の型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">入力シーケンスから選択された <paramref name="TElement" /> 型の値を格納する <see cref="T:System.Linq.Lookup`2" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、または <paramref name="elementSelector" /> は、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using the default equality comparer.">既定の等値比較子を使用して、2 つのシーケンスの和集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements form the first set for the union.">和集合の最初のセットを形成する一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements form the second set for the union.">和集合の 2 番目のセットを形成する一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">2 つの入力シーケンスの要素 (重複する要素は除く) を格納している <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">指定された <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> を使用して 2 つのシーケンスの和集合を生成します。</summary>
      <param name="first" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements form the first set for the union.">和集合の最初のセットを形成する一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="second" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements form the second set for the union.">和集合の 2 番目のセットを形成する一意の要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">2 つの入力シーケンスの要素 (重複する要素は除く) を格納している <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of values based on a predicate.">述語に基づいて値のシーケンスをフィルター処理します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to filter.">フィルター処理する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition.">条件を満たす、入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">述語に基づいて値のシーケンスをフィルター処理します。 各要素のインデックスは、述語関数のロジックで使用されます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to filter.">フィルター処理する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">各ソース要素が条件に当てはまるかどうかをテストする関数。この関数の 2 つ目のパラメーターは、ソース要素のインデックスを表します。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition.">条件を満たす、入力シーケンスの要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> または <paramref name="predicate" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Zip``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
      <summary vsli:raw="Produces a sequence of tuples with elements from the two specified sequences.">指定された 2 つのシーケンスの要素を持つタプルのシーケンスを生成します。</summary>
      <param name="first" vsli:raw="The first sequence to merge.">マージする 1 番目のシーケンス。</param>
      <param name="second" vsli:raw="The second sequence to merge.">マージする 2 番目のシーケンス。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">1 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">2 番目の入力シーケンスの要素の型。</typeparam>
      <returns vsli:raw="A sequence of tuples with elements taken from the first and second sequences, in that order.">最初のシーケンスと 2 番目のシーケンスから取得された要素が、その順序で備えられているタプルのシーケンス。</returns>
    </member>
    <member name="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Applies a specified function to the corresponding elements of two sequences, producing a sequence of the results.">2 つのシーケンスの対応する要素に対して、1 つの指定した関数を適用し、結果として 1 つのシーケンスを生成します。</summary>
      <param name="first" vsli:raw="The first sequence to merge.">マージする 1 番目のシーケンス。</param>
      <param name="second" vsli:raw="The second sequence to merge.">マージする 2 番目のシーケンス。</param>
      <param name="resultSelector" vsli:raw="A function that specifies how to merge the elements from the two sequences.">2 つのシーケンスの要素をマージする方法を指定する関数。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">1 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">2 番目の入力シーケンスの要素の型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the result sequence.">結果のシーケンスの要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains merged elements of two input sequences.">2 つの入力シーケンスのマージされた要素が格納されている <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="first" /> または <paramref name="second" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Linq.IGrouping`2">
      <summary vsli:raw="Represents a collection of objects that have a common key.">共通のキーを持つオブジェクトのコレクションを表します。</summary>
      <typeparam name="TKey" vsli:raw="The type of the key of the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" />のキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the values in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" />内の値の型。</typeparam>
    </member>
    <member name="P:System.Linq.IGrouping`2.Key">
      <summary vsli:raw="Gets the key of the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> のキーを取得します。</summary>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" />のキー。</returns>
    </member>
    <member name="T:System.Linq.ILookup`2">
      <summary vsli:raw="Defines an indexer, size property, and Boolean search method for data structures that map keys to &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequences of values.">キーを値の <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンスに割り当てるデータ構造のインデクサー、サイズ プロパティ、ブール値検索メソッドを定義します。</summary>
      <typeparam name="TKey" vsli:raw="The type of the keys in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.ILookup`2" /> 内のキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequences that make up the values in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 内の値を構成する <see cref="T:System.Linq.ILookup`2" /> シーケンス内の要素の型。</typeparam>
    </member>
    <member name="M:System.Linq.ILookup`2.Contains(`0)">
      <summary vsli:raw="Determines whether a specified key exists in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">指定したキーが <see cref="T:System.Linq.ILookup`2" /> 内に存在するかどうかを判定します。</summary>
      <param name="key" vsli:raw="The key to search for in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.ILookup`2" /> 内で検索するキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="key" /> が <see cref="T:System.Linq.ILookup`2" /> 内にある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Linq.ILookup`2.Count">
      <summary vsli:raw="Gets the number of key/value collection pairs in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.ILookup`2" /> 内のキーと値コレクションのペアの数を取得します。</summary>
      <returns vsli:raw="The number of key/value collection pairs in the &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.ILookup`2" /> 内のキーと値コレクションのペアの数。</returns>
    </member>
    <member name="P:System.Linq.ILookup`2.Item(`0)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence of values indexed by a specified key.">指定したキーによりインデックス付けされた値の <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンスを取得します。</summary>
      <param name="key" vsli:raw="The key of the desired sequence of values.">必要な値のシーケンスのキー。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence of values indexed by the specified key.">指定したキーによりインデックス付けされた値の <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンス。</returns>
    </member>
    <member name="T:System.Linq.IOrderedEnumerable`1">
      <summary vsli:raw="Represents a sorted sequence.">並べ替えられたシーケンスを表します。</summary>
      <typeparam name="TElement" vsli:raw="The type of the elements of the sequence.">シーケンスの要素の型。</typeparam>
    </member>
    <member name="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
      <summary vsli:raw="Performs a subsequent ordering on the elements of an &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; according to a key.">キーに従って <see cref="T:System.Linq.IOrderedEnumerable`1" /> の要素に対して後続の並べ替えを実行します。</summary>
      <param name="keySelector" vsli:raw="The &lt;see cref=&quot;T:System.Func`2&quot; /&gt; used to extract the key for each element.">各要素のキーの抽出に使用される <see cref="T:System.Func`2" />。</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; used to compare keys for placement in the returned sequence.">返されたシーケンスでの配置用のキーの比較に使用される <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <param name="descending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort the elements in descending order; &lt;see langword=&quot;false&quot; /&gt; to sort the elements in ascending order.">要素を降順に並べ替える <see langword="true" />、要素を昇順に並べ替える <see langword="false" />。</param>
      <typeparam name="TKey" vsli:raw="The type of the key produced by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって生成されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedEnumerable`1&quot; /&gt; whose elements are sorted according to a key.">要素がキーに従って並べ替えられている <see cref="T:System.Linq.IOrderedEnumerable`1" />。</returns>
    </member>
    <member name="T:System.Linq.Lookup`2">
      <summary vsli:raw="Represents a collection of keys each mapped to one or more values.">それぞれ 1 つ以上の値にマップされているキーのコレクションを表します。</summary>
      <typeparam name="TKey" vsli:raw="The type of the keys in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> 内のキーの型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements of each &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; value in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 内の各 <see cref="T:System.Linq.Lookup`2" /> 値の要素の型。</typeparam>
    </member>
    <member name="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
      <summary vsli:raw="Applies a transform function to each key and its associated values and returns the results.">各キーとその関連する値に変換関数を適用し、結果を返します。</summary>
      <param name="resultSelector" vsli:raw="A function to project a result value from each key and its associated values.">各キーとその関連する値からの結果の値を導き出す関数。</param>
      <typeparam name="TResult" vsli:raw="The type of the result values produced by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> によって生成される結果の値の型。</typeparam>
      <returns vsli:raw="A collection that contains one value for each key/value collection pair in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> 内にあるキーと値コレクションの各ペアの 1 つの値が格納されるコレクション。</returns>
    </member>
    <member name="M:System.Linq.Lookup`2.Contains(`0)">
      <summary vsli:raw="Determines whether a specified key is in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">指定したキーが <see cref="T:System.Linq.Lookup`2" /> 内にあるかどうかを確認します。</summary>
      <param name="key" vsli:raw="The key to find in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> 内で検索するキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="key" /> が <see cref="T:System.Linq.Lookup`2" /> 内にある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Linq.Lookup`2.Count">
      <summary vsli:raw="Gets the number of key/value collection pairs in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> 内のキーと値コレクションのペアの数を取得します。</summary>
      <returns vsli:raw="The number of key/value collection pairs in the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> 内のキーと値コレクションのペアの数。</returns>
    </member>
    <member name="M:System.Linq.Lookup`2.GetEnumerator">
      <summary vsli:raw="Returns a generic enumerator that iterates through the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> を反復処理するジェネリック列挙子を返します。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> の列挙子。</returns>
    </member>
    <member name="P:System.Linq.Lookup`2.Item(`0)">
      <summary vsli:raw="Gets the collection of values indexed by the specified key.">指定したキーによってインデックス付けされた値のコレクションを取得します。</summary>
      <param name="key" vsli:raw="The key of the desired collection of values.">目的の値のコレクションのキー。</param>
      <returns vsli:raw="The collection of values indexed by the specified key.">指定したキーによってインデックス付けされた値のコレクション。</returns>
    </member>
    <member name="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.Linq.Lookup`2" /> を反復処理する列挙子を返します。 このクラスは継承できません。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Linq.Lookup`2&quot; /&gt;.">
        <see cref="T:System.Linq.Lookup`2" /> の列挙子。</returns>
    </member>
  </members>
</doc>