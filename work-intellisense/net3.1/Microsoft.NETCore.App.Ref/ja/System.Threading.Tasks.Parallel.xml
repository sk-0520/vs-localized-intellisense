<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary vsli:raw="Provides support for parallel loops and regions.">並列ループおよび並列領域に対するサポートを提供します。</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel.">反復処理が並列で実行される可能性のある <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and loop options can be configured.">反復処理が並列で実行される可能性があり、ループ オプションを構成できる <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ParallelLoopResult&quot; /&gt; structure that contains information on what portion of the loop completed.">完了したループの部分に関する情報を格納している <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> 構造体。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel.">反復処理が並列で実行される可能性のある、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.">イテレーションが並列で実行される可能性があり、ループ オプションを構成できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。

または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="for" /> ループを実行します。</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">開始インデックス。ここで指定したインデックスから処理が開始されます。</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each thread.">各スレッドのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each thread.">各スレッドのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または
<paramref name="localFinally" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">元のデータ ソースを格納している順序付け可能なパーティショナー。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the source orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Any methods in the source orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">順序付け可能のパーティショナー、<paramref name="source" /> の <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。

または -
順序付け可能のパーティショナー、ソースの <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> プロパティは <see langword="false" /> を返します。

または
ソースの順序付け可能なパーティショナーのすべてのメソッドは、<see langword="null" /> を返します。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception thrown from one of the specified delegates.">指定したデリゲートのいずれかからスローされた例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">元のデータ ソースを格納している順序付け可能なパーティショナー。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">順序付け可能のパーティショナー、<paramref name="source" /> の <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。

または -
順序付け可能のパーティショナー、<paramref name="source" /> の <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> プロパティは <see langword="false" /> を返します。

または
順序付け可能なパーティショナー、<paramref name="source" /> 内のメソッドが <see langword="null" /> を返したときにスローされる例外。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">指定のデリゲートの 1 つからスローされる例外を含める目的でスローされる例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">
        <paramref name="source" /> パーティショナーの <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。
または
<paramref name="source" /> パーティショナーのメソッドは <see langword="null" /> を返します。
または
<paramref name="source" /> パーティショナーの <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> メソッドが正しいパーティション数を返しません。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">指定のデリゲートの 1 つからスローされる例外を含める目的でスローされる例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、反復処理が並列で実行される可能性のある <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">
        <paramref name="source" /> パーティショナーの <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。

または -
<paramref name="source" /> パーティショナー内のメソッドが <see langword="null" /> を返したときにスローされる例外。

または
<paramref name="source" /> パーティショナーの <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> メソッドが正しいパーティション数を返しません。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">指定のデリゲートの 1 つからスローされる例外を含める目的でスローされる例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> パーティショナーの <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。

または -
<paramref name="source" /> パーティショナー内のメソッドが <see langword="null" /> を返したときにスローされる例外。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">指定のデリゲートの 1 つからスローされる例外を含める目的でスローされる例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> パーティショナーの <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> プロパティは <see langword="false" /> を返します。

または -
<paramref name="source" /> パーティショナー内のメソッドが <see langword="null" /> を返したときにスローされる例外。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">指定のデリゲートの 1 つからスローされる例外を含める目的でスローされる例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性のある <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">元のデータ ソースを格納している順序付け可能なパーティショナー。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="localInit" /> 引数が <see langword="null" /> です。
または
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> の <see cref="T:System.Collections.Concurrent.Partitioner" /> プロパティは <see langword="false" /> を返します。またはパーティショナーは <see langword="null" /> パーティションを返します。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes and  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">元のデータ ソースを格納している順序付け可能なパーティショナー。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; or &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。


または
<paramref name="localInit" /> または <paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> の <see cref="T:System.Collections.Concurrent.Partitioner" /> プロパティは <see langword="false" /> を返します。またはパーティショナーは <see langword="null" /> パーティションを返します。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> の <see cref="T:System.Collections.Concurrent.Partitioner" /> プロパティは <see langword="false" /> を返します。またはパーティショナーは <see langword="null" /> パーティションを返します。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">元のデータ ソースを格納しているパーティショナー。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の要素の型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。
または
<paramref name="body" /> 引数が <see langword="null" /> です。
または
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> の <see cref="T:System.Collections.Concurrent.Partitioner" /> プロパティは <see langword="false" /> を返します。またはパーティショナーは <see langword="null" /> パーティションを返します。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。

または -
<paramref name="body" /> 引数が <see langword="null" /> です。

または
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または -
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。
または
<paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data and 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">
        <see cref="T:System.Collections.IEnumerable" /> に対して、反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データと 64 ビットのインデックスを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</summary>
      <param name="source" vsli:raw="An enumerable data source.">列挙可能なデータ ソース。</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">各タスクのローカル データの初期状態を返す関数デリゲート。</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">1 回の反復処理につき 1 回呼び出されるデリゲート。</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">各タスクのローカル状態に対して最後の操作を行うデリゲート。</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">ソース内のデータの型。</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">スレッド ローカル データの型。</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">完了したループの部分に関する情報を格納している構造。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 引数が <see langword="null" /> です。
または
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。
または
<paramref name="body" /> 引数が <see langword="null" /> です。

または -
<paramref name="localInit" /> 引数が <see langword="null" /> です。

または
<paramref name="localFinally" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 引数の <see cref="T:System.Threading.CancellationToken" /> が取り消されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">すべてのスレッドでスローされたすべての個別の例外を含む例外。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel.">指定された一連のアクションの各アクションを実行します (場合によっては並列で)。</summary>
      <param name="actions" vsli:raw="An array of &lt;see cref=&quot;T:System.Action&quot; /&gt; to execute.">実行対象の <see cref="T:System.Action" /> の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">
        <paramref name="actions" /> 配列内のアクションが例外をスローしたときにスローされる例外。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">
        <paramref name="actions" /> 配列に <see langword="null" /> 要素が含まれています。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.">操作がユーザーによって取り消されていない限り、指定された各アクションを実行します。アクションは並列で実行される可能性があります。</summary>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">この操作の動作を構成するオブジェクト。</param>
      <param name="actions" vsli:raw="An array of actions to execute.">実行対象のアクションの配列。</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; is set.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationToken" /> が設定されます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actions" /> 引数が <see langword="null" /> です。

または -
<paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">
        <paramref name="actions" /> 配列内のアクションが例外をスローしたときにスローされる例外。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">
        <paramref name="actions" /> 配列に <see langword="null" /> 要素が含まれています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" /> 内の <see cref="T:System.Threading.CancellationTokenSource" /> に関連付けられている <see cref="T:System.Threading.CancellationToken" /> は破棄されました。</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary vsli:raw="Provides completion status on the execution of a &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop.">
        <see cref="T:System.Threading.Tasks.Parallel" /> ループの実行の完了ステータスを示します。</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary vsli:raw="Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.">ループが完了するまで実行されたかどうか (ループのすべての反復処理が実行され、ループが途中終了要求を受け取らなかったかどうか) を示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the loop ran to completion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ループが完了するまで実行された場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary vsli:raw="Gets the index of the lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> を呼び出した反復処理のうち、最も下位の反復処理のインデックスを取得します。</summary>
      <returns vsli:raw="Returns an integer that represents the lowest iteration from which the Break statement was called.">Break ステートメントを呼び出した反復処理のうち、最も下位の反復処理を表す整数を返します。</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary vsli:raw="Enables iterations of parallel loops to interact with other iterations. An instance of this class is provided by the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class to each loop; you can not create instances in your code.">他のイテレーションと対話するように、並列ループのイテレーションを有効にします。 このクラスのインスタンスは、<see cref="T:System.Threading.Tasks.Parallel" /> クラスから各ループに提供されるため、コードでインスタンスを作成することはできません。</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution of iterations beyond the current iteration at the system's earliest convenience.">現在のイテレーションの終了後、システムはできるだけ早く <see cref="T:System.Threading.Tasks.Parallel" /> ループの実行を終了する必要があることを通知します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method was previously called. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> メソッドは既に呼び出されました。 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> と <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> は、同じループのイテレーションで組み合わせて使用することはできません。</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary vsli:raw="Gets whether any iteration of the loop has thrown an exception that went unhandled by that iteration.">ループのいずれかの反復処理がその反復処理によってハンドルされない例外をスローしたかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an unhandled exception was thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />未処理の例外がスローされた場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary vsli:raw="Gets whether any iteration of the loop has called the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method.">ループのいずれかのイテレーションが <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> メソッドを呼び出したかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any iteration has stopped the loop by calling the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> メソッドを呼び出していずれかのイテレーションが停止した場合は <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary vsli:raw="Gets the lowest iteration of the loop from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> を呼び出したループの反復処理のうち、最も下位の反復処理を取得します。</summary>
      <returns vsli:raw="The lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called. In the case of a &lt;see cref=&quot;M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})&quot; /&gt; loop, the value is based on an internally-generated index.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> を呼び出したイテレーションのうち、最下位のイテレーション。 <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" /> ループの場合、値は内部的に生成されたインデックスに基づきます。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary vsli:raw="Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.">この反復処理または他の反復処理からの要求に基づいて、ループの現在の反復処理を終了する必要があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current iteration should exit; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のイテレーションを終了する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution at the system's earliest convenience.">
        <see cref="T:System.Threading.Tasks.Parallel" /> ループの実行をできるだけ早く終了する必要があることを通知します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; method was called previously. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> メソッドは、既に呼び出されています。 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> と <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> は、同じループのイテレーションで組み合わせて使用することはできません。</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary vsli:raw="Stores options that configure the operation of methods on the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class.">
        <see cref="T:System.Threading.Tasks.Parallel" /> クラスのメソッドの操作を構成するオプションを格納します。</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; class.">
        <see cref="T:System.Threading.Tasks.ParallelOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">この <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンスに関連付けられている <see cref="T:System.Threading.CancellationToken" /> を取得または設定します。</summary>
      <returns vsli:raw="The token that is associated with this instance.">このインスタンスに関連付けられているトークン。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets or sets the maximum number of concurrent tasks enabled by this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">この <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンスによって実現される同時実行タスクの最大数を取得または設定します。</summary>
      <returns vsli:raw="An integer that represents the maximum degree of parallelism.">並列化の最大レベルを表す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is being set to zero or to a value that is less than -1.">プロパティが 0 に設定されているか、-1 より小さい値に設定されています。</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance. Setting this property to null indicates that the current scheduler should be used.">この <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンスに関連付けられている <see cref="T:System.Threading.Tasks.TaskScheduler" /> を取得または設定します。 このプロパティを null に設定すると、現在のスケジューラが使用されます。</summary>
      <returns vsli:raw="The task scheduler that is associated with this instance.">このインスタンスに関連付けられているタスク スケジューラ。</returns>
    </member>
  </members>
</doc>