<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">バイト配列に基づいて HTTP コンテンツを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> の初期化に使用されるコンテンツ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> の初期化に使用されるコンテンツ。</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> の初期化に使用される <paramref name="content" /> パラメーターのオフセット (バイト単位)。</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> を初期化するために使用される <paramref name="content" /> パラメーターから始まる <paramref name="offset" /> のバイト数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> パラメーターが 0 未満。

または -
<paramref name="offset" /> パラメーターが <paramref name="content" /> パラメーターで指定されたコンテンツの長さを超えています。

または -
<paramref name="count" /> パラメーターが 0 未満。

または -
<paramref name="count" /> パラメーターが、<paramref name="content" /> パラメーターで指定されたコンテンツの長さから <paramref name="offset" /> パラメーターを引いた値を超えています。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.ByteArrayContent" /> からのメモリであるバッキング ストアの読み取りの非同期操作として HTTP コンテンツ ストリームを作成します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">コンス トラクターで指定したバイト配列を、非同期操作として HTTP コンテンツ ストリームにシリアル化し書き込みます。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">トランスポートに関する情報 (チャネル バインディング トークンなど)。 このパラメーターは <see langword="null" /> の場合もあります。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">バイト配列が有効なバイト長であるかどうかを判断します。</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">バイト配列の長さ (バイト単位)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="length" /> が有効な長さの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">クライアント証明書がどのように提供されるかを指定します。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> は、使用できるすべてのクライアント証明書を自動的に提供しようとします。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">アプリケーションは <see cref="T:System.Net.Http.WebRequestHandler" /> にクライアント証明書を手動で提供します。 この値が既定値です。</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">内部ハンドラーと呼ばれる、別のハンドラーへ HTTP 応答メッセージの処理をデリゲートする HTTP ハンドラーの型。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.DelegatingHandler" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">特定の内部ハンドラーを使用して、<see cref="T:System.Net.Http.DelegatingHandler" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">HTTP 応答メッセージ処理用の内部ハンドラー。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.DelegatingHandler" /> が使用しているアンマネージド リソースを解放します。オプションでマネージド リソースも破棄します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">HTTP 応答メッセージを処理する内部ハンドラーを取得または設定します。</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">HTTP 応答メッセージの内部ハンドラー。</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">非同期操作としてサーバーに送信するように HTTP 要求を内部ハンドラーに送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">サーバーに送信する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">application/x-www-form-urlencoded MIME 型を使用してエンコードされた名前と値の組のコンテナー。</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">指定した名前と値のペアのコレクションを使用して、<see cref="T:System.Net.Http.FormUrlEncodedContent" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">名前と値のペアのコレクション。</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">Authorization、ProxyAuthorization、WWW-Authenticate、Proxy-Authenticate のヘッダー値の認証情報を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">承認のために使用するスキーム。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">承認のために使用するスキーム。</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">要求されているリソースのユーザー エージェントの認証情報を含む資格情報。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在のオブジェクトと等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">要求されているリソースのユーザー エージェントの認証情報を含む資格情報を取得します。</summary>
      <returns vsli:raw="The credentials containing the authentication information.">認証情報を含む資格情報。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">認証ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> は有効な認証ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">承認のために使用するスキームを取得します。</summary>
      <returns vsli:raw="The scheme to use for authorization.">承認のために使用するスキーム。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な <paramref name="input" /> 情報の場合は <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">Cache-Control ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在のオブジェクトと等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">それぞれにオプションで割り当てられた値を持つキャッシュ拡張トークン。</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">それぞれにオプションで割り当てられた値を持つキャッシュ拡張トークンのコレクション。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">HTTP クライアントが応答を許容できる最大有効期間 (秒単位で指定)。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒単位)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">HTTP クライアントが有効期限を超えた応答を許容するかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP クライアントが有効期限を超えた応答を許容する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">最大時間 (秒単位)、HTTP クライアントは有効期限を超えた応答を許容できます。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒単位)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">HTTP クライアントが応答を許容する更新の有効期間 (秒単位で指定)。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒単位)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">キャッシュ エントリが古くなったとき、元のサーバーで以降の使用においてキャッシュ エントリの再検証が必要かどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キャッシュ エントリが古くなったとき、元のサーバーで以降の使用においてキャッシュ エントリの再検証が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">HTTP クライアントがキャッシュされた応答を許容できるかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP クライアントがキャッシュされた応答を受け入れない場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">HTTP 応答のキャッシュ コントロール ヘッダー フィールドにある "no-cache" ディレクティブ内の fieldnames のコレクション。</summary>
      <returns vsli:raw="A collection of fieldnames.">fieldnames のコレクション。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">HTTP 要求メッセージまたは任意の応答のいずれかの一部がキャッシュに格納されるのを禁止するかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キャッシュが HTTP 要求メッセージまたは任意の応答のいずれかの部分を格納できない場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">キャッシュまたはプロキシがエンティティ本体の側面を変更する必要はありません。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キャッシュまたはプロキシがエンティティ本体の側面を変更する必要がない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">キャッシュの応答に、HTTP 応答の他の制約と一致するキャッシュ エントリを使用するか、504 (ゲートウェイ タイムアウト) 状態を使用するかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キャッシュの応答に、HTTP 応答の他の制約と一致するキャッシュ エントリを使用するか、504 (ゲートウェイ タイムアウト) 状態を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">Cache-Control ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> は、有効な Cache-Control ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">HTTP 応答メッセージのすべてまたは一部が単一ユーザーに向けたものであって共有キャッシュでキャッシュされるべきでないかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP 応答メッセージのすべてまたは一部が単一ユーザーに向けたものであって共有キャッシュでキャッシュされるべきでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">HTTP 応答のキャッシュ コントロール ヘッダー フィールドにある "private" ディレクティブ内のコレクション fieldnames。</summary>
      <returns vsli:raw="A collection of fieldnames.">fieldnames のコレクション。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">共有のユーザー エージェントのキャッシュでキャッシュ エントリが古くなったとき、元のサーバーで以降の使用においてキャッシュ エントリの再検証が必要かどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">共有のユーザー エージェントのキャッシュでキャッシュ エントリが古くなったとき、元のサーバーで以降の使用においてキャッシュ エントリの再検証が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">HTTP 応答が、通常はキャッシュできない、または非共有キャッシュにのみキャッシュ可能であっても、任意のキャッシュによってキャッシュされる可能性があるかどうか。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">HTTP 応答が、通常はキャッシュできない、または非共有キャッシュにのみキャッシュ可能であっても、任意のキャッシュによってキャッシュされる可能性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">秒で指定した、キャッシュ制御ヘッダーまたは共有キャッシュの Expires ヘッダーにある「最長期間」ディレクティブをオーバーライドする HTTP 応答での共有の最長時間。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒単位)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な <paramref name="input" /> 情報の場合は <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">Content-Disposition ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> を含む文字列。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">ファイルが作成された日付。</summary>
      <returns vsli:raw="The file creation date.">ファイルの作成日。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">コンテンツのボディ部の配置タイプです。</summary>
      <returns vsli:raw="The disposition type.">配置タイプ。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">メッセージ ペイロード (エンティティがデタッチされ別のファイルに格納されている場合に使用する) を格納するためのファイル名を作成する方法に関する提案。</summary>
      <returns vsli:raw="A suggested filename.">推奨ファイル名。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">メッセージ ペイロード (エンティティがデタッチされ別のファイルに格納されている場合に使用する) を格納するためのファイル名を作成する方法に関する提案。</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">推奨ファイル名は filename* 形式。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">ファイルの最終更新日。</summary>
      <returns vsli:raw="The file modification date.">ファイルの変更日。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">コンテンツのボディ部の名前です。</summary>
      <returns vsli:raw="The name for the content body part.">コンテンツのボディ部の名前。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">パラメーターのセットには、Content-Disposition ヘッダーが含まれています。</summary>
      <returns vsli:raw="A collection of parameters.">パラメーターのコレクション。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">コンテンツの破棄ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> は有効なコンテンツの破棄ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">ファイルが最後に読み取られた日付。</summary>
      <returns vsli:raw="The last read date.">最後の読み取り日。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">ファイルのおおよそのサイズ (バイト単位)。</summary>
      <returns vsli:raw="The approximate size, in bytes.">おおよそのサイズ (バイト単位)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">Content-Range ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">範囲の開始点または終了点 (バイト単位)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">データの送信を開始する位置 (バイト単位)。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">データの送信を終了する位置 (バイト単位)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">データの送信を開始する位置 (バイト単位)。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">データの送信を終了する位置 (バイト単位)。</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">範囲の開始点または終了点 (バイト単位)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">指定したオブジェクトが、現在の <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">データの送信を開始する位置を取得します。</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">データの送信を開始する位置 (バイト単位)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">Content-Range ヘッダーが指定された長さであるかどうかを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Content-Range が指定された長さである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">Content-Range が指定された範囲であるかどうかを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Content-Range が指定された範囲である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">エンティティ ボディ全体の長さを取得します。</summary>
      <returns vsli:raw="The length of the full entity-body.">エンティティ ボディ全体の長さ。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">コンテンツ範囲ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> は有効なコンテンツ範囲のヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">データの送信を終了する位置を取得します。</summary>
      <returns vsli:raw="The position at which to stop sending data.">データの送信を終了する位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">使用されている範囲単位。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">範囲単位を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">entity-tag ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> を含む文字列。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> を含む文字列。</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">このエンティティ タグ ヘッダーが弱い検証コントロールかどうかを示す値。 エンティティ タグ ヘッダーが弱い検証コントロールの場合は、<paramref name="isWeak" /> を <see langword="true" /> に設定します。 エンティティ タグ ヘッダーが強い検証コントロールの場合は、<paramref name="isWeak" /> を <see langword="false" /> に設定します。</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">エンティティ タグのヘッダー値を取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">エンティティ タグの前に脆弱性インジケーターが付いたかどうかを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">エンティティ タグの前に脆弱性インジケータ―が付いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">エンティティ タグ ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> は有効なエンティティ タグ ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">引用符で囲まれたを不透明な文字列を取得します。</summary>
      <returns vsli:raw="An opaque quoted string.">引用符で囲まれたを不透明な文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">RFC 2616 で定義されているコンテンツ ヘッダーのコレクションを表します。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Allow" /> コンテンツ ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">HTTP 応答の <see langword="Allow" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Disposition" /> コンテンツ ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Disposition" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Encoding" /> コンテンツ ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Encoding" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Language" /> コンテンツ ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Language" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Length" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Length" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Location" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Location" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-MD5" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-MD5" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Range" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Range" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Type" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Content-Type" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Expires" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Expires" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Last-Modified" /> コンテンツ ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 応答の <see langword="Last-Modified" /> コンテンツ ヘッダーの値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">RFC 2616 で定義されているヘッダーとその値のコレクション。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに指定のヘッダーと値を追加します。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">コレクションに追加するヘッダー。</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">コレクションに追加するヘッダー値のリスト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">この名前を null または空にすることはできません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">この値を null または空にすることはできません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">誤って使用されたヘッダー名。 要求ヘッダーが HttpRequestMessage オブジェクトで、応答ヘッダーが HttpResponseMessage オブジェクトで、コンテンツ ヘッダーが HttpContent オブジェクトで使用されていることを確認してください。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">ヘッダー名の形式が無効です。

または -

ヘッダーの値の改行文字の後には空白文字が必要です。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに指定のヘッダーと値を追加します。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">コレクションに追加するヘッダー。</param>
      <param name="value" vsli:raw="The content of the header.">ヘッダーの内容。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">この名前を null または空にすることはできません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">誤って使用されたヘッダー名。 要求ヘッダーが HttpRequestMessage オブジェクトで、応答ヘッダーが HttpResponseMessage オブジェクトで、コンテンツ ヘッダーが HttpContent オブジェクトで使用されていることを確認してください。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">ヘッダー名の形式が無効です。

または -

ヘッダーの値の改行文字の後には空白文字が必要です。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションからすべてのヘッダーを削除します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">特定のヘッダーが <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに存在しているかどうかを返します。</summary>
      <param name="name" vsli:raw="The specific header.">特定のヘッダー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> には指定したヘッダーがコレクションに存在しています。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> の列挙子。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに格納されている指定したヘッダーのすべてのヘッダーの値を返します。</summary>
      <param name="name" vsli:raw="The specified header to return values for.">値を返す指定されたヘッダー。</param>
      <returns vsli:raw="An array of header strings.">ヘッダー文字列の配列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">ヘッダーが見つかりません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">指定したヘッダーを <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">コレクションから削除するヘッダーの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> を反復処理できる列挙子を取得します。</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> を反復処理できる <see cref="T:System.Net.Http.Headers.HttpHeaders" /> の実装のインスタンス。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.HttpHeaders" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">指定したヘッダーとその値が、提供された情報を検証せずに <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに追加されたかどうかを示す値を返します。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">コレクションに追加するヘッダー。</param>
      <param name="values" vsli:raw="The values of the header.">ヘッダーの値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したヘッダー <see langword="true" /> と <paramref name="name" /> がコレクションに追加された場合は <paramref name="values" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">指定したヘッダーとその値が、提供された情報を検証せずに <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに追加されたかどうかを示す値を返します。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">コレクションに追加するヘッダー。</param>
      <param name="value" vsli:raw="The content of the header.">ヘッダーの内容。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したヘッダー <see langword="true" /> と <paramref name="name" /> がコレクションに追加された場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> コレクションに指定されたヘッダーと指定した値が格納されているかどうかを返します。</summary>
      <param name="name" vsli:raw="The specified header.">指定されたヘッダー。</param>
      <param name="values" vsli:raw="The specified header values.">指定されたヘッダーの値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> は指定したヘッダー <paramref name="name" /> で、<see langword="values" /> はコレクションに存在しています。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">ヘッダー値のコレクションを表します。</summary>
      <typeparam name="T" vsli:raw="The header collection type.">ヘッダーコレクション型。</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> にエントリを追加します。</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">ヘッダー コレクションに追加する項目。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> からすべてのエントリを削除します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> に項目が格納されているかどうかを確認します。</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">ヘッダー コレクションから検索する項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> インスタンスにエントリが含まれている場合は <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 内のヘッダーの数を取得します。</summary>
      <returns vsli:raw="The number of headers in a collection.">このコレクション内のヘッダーの数</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> を反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> インスタンスの列挙子。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> インスタンスが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> インスタンスが読み取り専用の場合は <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> にエントリを解析して追加します。</summary>
      <param name="input" vsli:raw="The entry to add.">追加するエントリ。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">指定した項目を <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> から削除します。</summary>
      <param name="item" vsli:raw="The item to remove.">削除する項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が <paramref name="item" /> インスタンスから削除された場合は <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。それ以外の場合は <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> を反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> インスタンスの列挙子。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">現在の <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> オブジェクトを表す文字列を返します。 オブジェクト。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">入力を解析して <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> に追加できるかどうか決定します。</summary>
      <param name="input" vsli:raw="The entry to validate.">検証するエントリ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が解析され <paramref name="input" /> インスタンスに追加できる場合は <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">RFC 2616 で定義されている要求ヘッダーのコレクションを表します。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Charset" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Charset" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Encoding" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Encoding" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Language" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Accept-Language" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Authorization" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Authorization" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Cache-Control" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Cache-Control" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Connection" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Connection" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">HTTP 要求の <see langword="Connection" /> ヘッダーに Close が含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Connection" /> ヘッダーに Close が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Date" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Date" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Expect" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Expect" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">HTTP 要求の <see langword="Expect" /> ヘッダーに Continue が含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Expect" /> ヘッダーに Continue が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="From" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="From" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Host" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Host" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Match" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> を返します。
HTTP 要求の <see langword="If-Match" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Modified-Since" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Modified-Since" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-None-Match" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-None-Match" /> ヘッダーの値を取得します。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Range" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Range" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Unmodified-Since" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="If-Unmodified-Since" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Max-Forwards" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Max-Forwards" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Pragma" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Pragma" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Proxy-Authorization" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Proxy-Authorization" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Range" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Range" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Referer" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Referer" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="TE" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="TE" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Trailer" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Trailer" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Transfer-Encoding" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Transfer-Encoding" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">HTTP 要求の <see langword="Transfer-Encoding" /> ヘッダーにチャンクが含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Transfer-Encoding" /> ヘッダーにチャンクが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Upgrade" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Upgrade" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="User-Agent" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="User-Agent" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Via" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Via" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Warning" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 要求の <see langword="Warning" /> ヘッダーの値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">RFC 2616 で定義されている応答ヘッダーのコレクションを表します。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Accept-Ranges" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Accept-Ranges" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Age" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Age" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Cache-Control" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Cache-Control" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Connection" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Connection" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">HTTP 応答の <see langword="Connection" /> ヘッダーに Close が含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> ヘッダーに Close が含まれる場合は <see langword="Connection" /> 。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Date" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Date" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="ETag" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="ETag" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Location" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Location" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Pragma" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> を返します。
HTTP 応答の <see langword="Pragma" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Proxy-Authenticate" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Proxy-Authenticate" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Retry-After" /> ヘッダーの値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Retry-After" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Server" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Server" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Trailer" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Trailer" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Transfer-Encoding" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Transfer-Encoding" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">HTTP 応答の <see langword="Transfer-Encoding" /> ヘッダーにチャンクが含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="Transfer-Encoding" /> ヘッダーにチャンクが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Upgrade" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Upgrade" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Vary" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Vary" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Via" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Via" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Warning" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="Warning" /> ヘッダーの値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="WWW-Authenticate" /> ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 応答の <see langword="WWW-Authenticate" /> ヘッダーの値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">RFC 2616 に定義され、コンテンツ タイプのヘッダーに使用されるメディア タイプを表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">新しいインスタンスを初期化する文字列を表すソースです。</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">文字セットを取得または設定します。</summary>
      <returns vsli:raw="The character set.">文字セット。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">media-type のヘッダー値を取得または設定します。</summary>
      <returns vsli:raw="The media-type header value.">media-type のヘッダー値。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">media-type ヘッダー値のパラメーターを取得または設定します。</summary>
      <returns vsli:raw="The media-type header value parameters.">media-type ヘッダー値のパラメーター。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">メディア種類のヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> は、有効なメディアの種類のヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">コンテンツ タイプ ヘッダーで使用される追加の品質ファクターとメディア タイプを表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">新しいインスタンスを初期化するための文字列として表現された <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">新しいインスタンスを初期化するための文字列として表現された <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />。</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">このヘッダー値に関連付けられた品質です。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">品質ヘッダー値の情報を含むメディア種類を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" /> は、品質のヘッダー値の情報を含む、有効なメディアの種類ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> の品質の値を取得または設定します。</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> オブジェクトの品質の値。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">RFC 2616 で定義され、さまざまなヘッダーで使用される名前と値のペアを表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The header name.">ヘッダー名。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The header name.">ヘッダー名。</param>
      <param name="value" vsli:raw="The header value.">ヘッダーの値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在のオブジェクトと等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">ヘッダー名を取得します。</summary>
      <returns vsli:raw="The header name.">ヘッダー名。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">名前の値のヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> は有効な名前の値のヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な <paramref name="input" /> 情報の場合は <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">ヘッダーの値を取得します。</summary>
      <returns vsli:raw="The header value.">ヘッダーの値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">RFC 2616 で定義され、さまざまなヘッダーで使用されるパラメーター付きの名前と値のペアを表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The header name.">ヘッダー名。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The header name.">ヘッダー名。</param>
      <param name="value" vsli:raw="The header value.">ヘッダーの値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在のオブジェクトと等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> オブジェクトからパラメーターを取得します。</summary>
      <returns vsli:raw="A collection containing the parameters.">パラメーターを格納しているコレクション。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">パラメーター ヘッダー値の情報を含む、名前の値を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> はパラメーターのヘッダー値の情報を含む有効な名前の値ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な <paramref name="input" /> 情報の場合は <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">ユーザー エージェント ヘッダー内の製品トークン値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The product name.">製品名。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The product name value.">製品名の値。</param>
      <param name="version" vsli:raw="The product version value.">製品バージョンの値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">製品トークンの名前を取得します。</summary>
      <returns vsli:raw="The name of the product token.">製品トークンの名前。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">製品のヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">製品トークンのバージョンを取得します。</summary>
      <returns vsli:raw="The version of the product token.">製品トークンのバージョン。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">User-Agent ヘッダー内の製品またはコメントのいずれかになる値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="comment" vsli:raw="A comment value.">コメント値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="productName" vsli:raw="The product name value.">製品名の値。</param>
      <param name="productVersion" vsli:raw="The product version value.">製品バージョンの値。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> オブジェクトからコメントを取得します。</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">この <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> のコメントの値。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">情報のヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> は、有効な製品情報のヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> オブジェクトから製品を取得します。</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">この <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> からの製品の値。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">日付/時刻またはエンティティ タグ値のいずれかとなる If-Range ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">新しいインスタンスを初期化するために使用される日付の値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">新しいインスタンスを初期化するために使用される文字列として表現されたエンティティ タグ。</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトから日付を取得します。</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトからの日付。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトからエンティティ タグを取得します。</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトからのエンティティ タグ。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">条件ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" />は有効な範囲の条件ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">Range ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">バイト範囲を使用して、<see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">データの送信を開始する位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">データの送信を終了する位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> は <paramref name="to" /> より大きい

または -
<paramref name="from" /> または <paramref name="to" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">範囲ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> は有効な範囲のヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">指定された範囲を <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトから取得します。</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトからの範囲。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="he string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトから単位を取得します。</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> オブジェクトからの単位。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">バイト範囲の Range ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">データの送信を開始する位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">データの送信を終了する位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> は <paramref name="to" /> より大きい
または
<paramref name="from" /> または <paramref name="to" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">データの送信を開始する位置を取得します。</summary>
      <returns vsli:raw="The position at which to start sending data.">データの送信を開始する位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">データの送信を終了する位置を取得します。</summary>
      <returns vsli:raw="The position at which to stop sending data.">データの送信を終了する位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">日付/時刻または期間値のいずれかとなる Retry-After ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">新しいインスタンスを初期化するために使用する日付と時刻のオフセット。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">新しいインスタンスを初期化するために使用される、秒単位の差分です。</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトから日付と時刻のオフセットを取得します。</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトからの日付と時刻のオフセット。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトから秒単位のデルタを取得します。</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトからの秒単位のデルタ。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">再試行条件ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> は有効な再試行の条件ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">品質に関する追加情報を持つ文字列ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">新しいインスタンスを初期化するために使用する文字列。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">新しいインスタンスを初期化するために使用する文字列。</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">新しいインスタンスを初期化するために使用される品質要素。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">指定したオブジェクトが、現在の <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">品質ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> は、品質のヘッダー値の情報を含む、有効な文字列ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトから品質要因を取得します。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトからの品質要因。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトから文字列値を取得します。</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> オブジェクトからの文字列値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">Accept-Encoding ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">新しいインスタンスを初期化するために使用する <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">新しいインスタンスを初期化するために使用する文字列。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">指定したオブジェクトが、現在の <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">transfer-coding パラメーターを取得します。</summary>
      <returns vsli:raw="The transfer-coding parameters.">transfer-coding パラメーター。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">転送コーディング ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" /> は、有効な transfer-coding ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">transfer-coding 値を取得します。</summary>
      <returns vsli:raw="The transfer-coding value.">transfer-coding 値。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">オプションの品質要素と Accept-Encoding ヘッダー値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">新しいインスタンスを初期化するために使用する文字列。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">新しいインスタンスを初期化するために使用する文字列。</param>
      <param name="quality" vsli:raw="A value for the quality factor.">品質係数の値。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">転送コーディング値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> は、品質ヘッダー値の情報を持つ有効な転送コーディングではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> から品質要因を取得します。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> からの品質要因。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">Via ヘッダーの値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">受信したプロトコルのプロトコル バージョン。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">要求または応答を受信したホストとポート。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">受信したプロトコルのプロトコル バージョン。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">要求または応答を受信したホストとポート。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">受信したプロトコルのプロトコル名。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">受信したプロトコルのプロトコル バージョン。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">要求または応答を受信したホストとポート。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">受信したプロトコルのプロトコル名。</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">受信者のプロキシまたはゲートウェイのソフトウェアの識別に使用するコメント フィールド。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">受信者のプロキシまたはゲートウェイのソフトウェアの識別に使用するコメント フィールドを取得します。</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">受信者のプロキシまたはゲートウェイのソフトウェアの識別に使用するコメント フィールド。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">Via ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> は有効な Via ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">受信したプロトコルのプロトコル名を取得します。</summary>
      <returns vsli:raw="The protocol name.">プロトコル名。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">受信したプロトコルのプロトコル バージョンを取得します。</summary>
      <returns vsli:raw="The protocol version.">プロトコルのバージョン。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">要求または応答を受信したホストとポートを取得します。</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">要求または応答を受信したホストとポート。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current instance.">現在のインスタンスのコピー。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">警告ヘッダーで使用される警告値を表します。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定の警告コード。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">この警告をアタッチしたホスト。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">警告テキストを含む、引用符で囲まれた文字列。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定の警告コード。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">この警告をアタッチしたホスト。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">警告テキストを含む、引用符で囲まれた文字列。</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">警告の日付/時刻スタンプ。</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">この警告をアタッチしたホストを取得します。</summary>
      <returns vsli:raw="The host that attached the warning.">この警告をアタッチしたホスト。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">特定の警告コードを取得します。</summary>
      <returns vsli:raw="The specific warning code.">特定の警告コード。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">警告の日付/時刻スタンプを取得します。</summary>
      <returns vsli:raw="The date/time stamp of the warning.">警告の日付/時刻スタンプ。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">指定した <see cref="T:System.Object" /> が、現在の <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> オブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> オブジェクトのハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current object.">現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">文字列を <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> インスタンスに変換します。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">認証ヘッダー値の情報を表す文字列。</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> インスタンスを返します。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> は <see langword="null" /> の参照です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> は有効な認証ヘッダー値の情報ではありません。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">現在の <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> インスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="Returns a copy of the current instance.">現在のインスタンスのコピーを返します。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">警告テキストを含む、引用符で囲まれた文字列を取得します。</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">警告テキストを含む、引用符で囲まれた文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">現在の <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> オブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">文字列が有効な <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 情報かどうかを判断します。</summary>
      <param name="input" vsli:raw="The string to validate.">検証対象の文字列。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="input" /> が有効な <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 情報の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">URI で識別されるリソースに HTTP 要求を送信し、そのリソースから HTTP 応答を受信するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">このインスタンスが破棄されたときに破棄される <see cref="T:System.Net.Http.HttpClient" /> を使用して、<see cref="T:System.Net.Http.HttpClientHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">指定したハンドラーを使用して、<see cref="T:System.Net.Http.HttpClient" /> クラスの新しいインスタンスを初期化します。 このインスタンスが破棄されたときに、ハンドラーは破棄されます。</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">要求の送信に使用する HTTP ハンドラー スタック。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">提供されたハンドラーを使用して、<see cref="T:System.Net.Http.HttpClient" /> クラスの新しいインスタンスを初期化し、このインスタンスが破棄されるときにそのハンドラーを破棄するかどうかを指定します。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">HTTP 応答メッセージの処理を行う <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">内部ハンドラーを <see langword="true" />HttpClient.Dispose で破棄する場合は 。内部ハンドラーを再利用する場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">要求の送信時に使用されるインターネット リソースの URI (Uniform Resource Identifier) の基本アドレスを取得または設定します。</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">要求を送信するときに使用する、インターネット リソースの Uniform Resource Identifier (URI) のベース アドレス。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">このインスタンスでのすべての保留中の要求をキャンセルします。</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">グローバル HTTP プロキシを取得または設定します。</summary>
      <returns vsli:raw="A proxy used by every HTTP request.">
        <see cref="T:System.Net.HttpWebRequest" />をインスタンス化するすべての呼び出しによって使用されるプロキシ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">渡される値を <see langword="null" /> とすることはできません。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">各要求と共に送信されるヘッダーを取得します。</summary>
      <returns vsli:raw="The headers which should be sent with each request.">各要求と一緒に送信する必要があるヘッダー。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">この <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって行われる後続の要求で使用される、既定の HTTP バージョンを取得または設定します。</summary>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">この <see cref="T:System.Net.Http.HttpClient" /> インスタンスを使用して行われたすべての要求に使用する既定のバージョン。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">設定操作で、<see langword="DefaultRequestVersion" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">
        <see cref="T:System.Net.Http.HttpClient" /> インスタンスにより 1 つ以上の要求が既に開始されています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">
        <see cref="T:System.Net.Http.HttpClient" /> インスタンスは既に破棄されています。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">指定された URI に DELETE 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンを使用して削除要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">指定された URI に DELETE 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンを使用して削除要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpClient" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">指定された URI に GET 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">非同期操作としてHTTP 完了オプションを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">操作が完了したものと見なすタイミングを示す HTTP 完了オプション値。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンおよび HTTP 完了オプションを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">操作が完了したものと見なすタイミングを示す HTTP 完了オプション値。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">指定された URI に GET 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">非同期操作としてHTTP 完了オプションを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">操作が完了したものと見なすタイミングを示す HTTP 完了オプション値。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンおよび HTTP 完了オプションを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">操作が完了したものと見なすタイミングを示す HTTP 完了オプション値。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">非同期操作としてキャンセル トークンを使用して GET 要求を指定された Uri に送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体をバイト配列として返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体をバイト配列として返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体をストリームとして返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体をストリームとして返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体を文字列として返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">指定 URI に GET 要求を送信し、非同期操作で応答本体を文字列として返します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">応答コンテンツの閲覧時のバッファーの最大バイトを取得または設定します。</summary>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">応答コンテンツを読み取るときに、バッファーに格納できる最大バイト数。 このプロパティの既定値は 2 GB です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">指定されたサイズが 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">操作は現在のインスタンス上で既に開始されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">現在のインスタンスは破棄されています。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">文字列として指定されている URI に PATCH 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">文字列として表現されている URI に PATCH 要求をキャンセル トークン付きで非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">非同期操作として PATCH 要求を送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">PATCH 要求をキャンセル トークンと共に非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">指定された URI に POST 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">POST 要求をキャンセル トークンとともに非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">指定された URI に POST 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">POST 要求をキャンセル トークンとともに非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">指定された URI に PUT 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">PUT 要求をとキャンセル トークンと共に非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">指定された URI に PUT 要求を非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">PUT 要求をとキャンセル トークンと共に非同期操作として送信します。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">要求の送信先 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">サーバーに送信される HTTP 要求の内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">操作が完了したとき (応答が使用できる状態になった後か、応答コンテンツ全体が読み取られた後)。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">操作が完了したとき (応答が使用できる状態になった後か、応答コンテンツ全体が読み取られた後)。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求メッセージは <see cref="T:System.Net.Http.HttpClient" /> インスタンスによって既に送信されました。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">ネットワーク接続、DNS エラー、サーバー証明書の検証またはタイムアウトなどの基になる問題のため、要求が失敗しました。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">要求がタイムアウトするまで待機する期間を取得または設定します。</summary>
      <returns vsli:raw="The timespan to wait before the request times out.">要求がタイムアウトするまで待機する期間。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">指定したタイムアウトが 0 以下のため <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">操作は現在のインスタンス上で既に開始されました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">現在のインスタンスは破棄されています。</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">.NET Framework および .NET Core 2.0 以前の <see cref="T:System.Net.Http.HttpClient" /> で使用される既定のメッセージ ハンドラー。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">ハンドラーがリダイレクト応答に従うかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />ハンドラーがリダイレクト応答に従う必要がある場合は。それ<see langword="false" />以外の場合は。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP コンテンツ応答を自動展開するためにハンドラーによって使用される展開メソッドの種類を取得または設定します。</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">自動展開メソッドは、ハンドラーによって使用されます。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">証明書が証明機関の失効リストに対して照合されるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1 のみ: このプロパティは実装されていません。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">証明書を自動的に証明書ストアから取得するか、または呼び出し元が特定のクライアント証明書を渡すことを許可するかを示す値を、取得または設定します。</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">このハンドラーに関連付けられているセキュリティ証明書のコレクション。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">サーバーに関連付けられている要求であるセキュリティ証明書のコレクションを取得します。</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">証明書ベースのクライアント認証を実行するときにサーバーに提示される X509CertificateCollection。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">サーバーの Cookie を保存するためにハンドラーによって使用されるコンテナーを取得または設定します。</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">サーバーの Cookie を保存するためにハンドラーによって使用されるコンテナー。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">このハンドラーで使用する認証情報を取得または設定します。</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">ハンドラーに関連付けられる認証資格情報。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">常に <see langword="true" /> を返すキャッシュされたデリゲートを取得します。</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">常に <see langword="true" /> を返すキャッシュされたデリゲート。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">既定の (システム) プロキシが使用されている場合、認証のために既定のプロキシ サーバーに送信するための資格情報を取得または設定します。 既定のプロキシは、<see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> が <see langword="true" /> に設定され、<see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> が <see langword="null" /> に設定されている場合にのみ使用されます。</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">既定のプロキシサーバーへの要求を認証するために必要な資格情報。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">ハンドラーがフォローするリダイレクトの最大数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">ハンドラーがフォローするリダイレクト応答の最大数。 既定値は 50 です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">
        <see cref="T:System.Net.Http.HttpClient" /> オブジェクトを使用して要求を行うときに許可される (サーバー エンドポイントあたりの) コンカレント接続の最大数を取得または設定します。 サーバー エンドポイントあたりの制限に注意してください。たとえば、値 256 は http://www.adatum.com/ に対して 256 のコンカレント接続数を許可し、http://www.adventure-works.com/ に対してさらに 256 のコンカレント接続数を許可します。</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">
        <see cref="T:System.Net.Http.HttpClient" />オブジェクトで許可されている同時接続の最大数 (サーバーエンドポイントあたり)。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">ハンドラーによって使用される最大要求コンテンツ バッファー サイズを取得または設定します。</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">最大要求コンテンツ バッファー サイズ (バイト単位)。 既定値は 2 ギガバイトです。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">応答ヘッダーの最大長 (KB 単位、1 KB = 1024 バイト) を取得または設定します。 たとえば、値が 64 の場合、応答ヘッダーの最大長に 65536 バイトが許可されます。</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">応答ヘッダーの最大長 (kb 単位) (1024 バイト)。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">ハンドラーが要求と共に認証ヘッダーを送信するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">認証後にハンドラーから要求と共に HTTP Authorization ヘッダーが送信されるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">
        <see cref="T:System.Net.Http.HttpClient" /> 要求のカスタム プロパティの書き込み可能なディクショナリ (マップ) を取得します。 ディクショナリが初期化されて空になると、カスタム ハンドラーと特殊な処理のキーと値のペアを挿入してクエリを実行できます。</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">カスタムプロパティの書き込み可能なディクショナリ。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">ハンドラーで使用するプロキシ情報を取得または設定します。</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">ハンドラーで使用するプロキシ情報。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> で提供される情報に基づいて、ブロックしない操作として <see cref="T:System.Net.Http.HttpResponseMessage" /> のインスタンスを作成します。</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">サーバー証明書を検証するコールバック メソッドを取得または設定します。</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">サーバー証明書を検証するコールバック メソッド。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">HttpClientHandler オブジェクトによって管理される <see cref="T:System.Net.Http.HttpClient" /> オブジェクトが使用する TLS/SSL プロトコルを取得または設定します。</summary>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 列挙値に定義されている値の 1 つ。</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1 のみ: このプロパティは実装されていません。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">ハンドラーが自動応答のコンテンツ展開をサポートするかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">ハンドラーが自動応答の内容の圧縮解除をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">ハンドルがプロキシ設定をサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">ハンドラーがプロキシ設定をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">ハンドラーが <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> および <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> プロパティの構成設定をサポートするかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> プロパティと <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> プロパティの構成設定をハンドラーがサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">ハンドラーが <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> プロパティを使用してサーバーの Cookie を保存し、要求の送信時にそれらの Cookie を使用するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">ハンドラーが <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> プロパティを使用してサーバー クッキーを格納し、要求を送信するときにこれらのクッキーを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">既定の資格情報がハンドラーによる要求と共に送信されるかどうかを制御する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">ハンドラーが要求のプロキシを使用するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">ハンドラーが要求に対してプロキシを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">応答が使用できるようになった場合に <see cref="T:System.Net.Http.HttpClient" /> 操作が完了したと見なすか、内容を含む応答メッセージ全体を読み取った後に完了したと見なすかを示します。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">操作は、コンテンツを含む全体の応答を読んだ後に完了する必要があります。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">操作は、応答が使用できる状態になった後か、ヘッダーが読み取られた後すぐに完了する必要があります。 コンテンツがまだ読み取られていません。</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">HTTP エンティティ本体およびコンテンツ ヘッダーを表す基本クラス。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpContent" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">HTTP コンテンツをバイト ストリームにシリアル化し、<paramref name="stream" /> パラメーターとして指定されたストリーム オブジェクトにコピーします。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">HTTP コンテンツをバイト ストリームにシリアル化し、<paramref name="stream" /> パラメーターとして指定されたストリーム オブジェクトにコピーします。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">トランスポート (チャネル バインディング トークンなど) について説明します。 このパラメーターは <see langword="null" /> の場合もあります。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">非同期操作として HTTP コンテンツをメモリ ストリームにシリアル化します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.HttpContent" /> が使用しているアンマネージド リソースを解放し、マネージド リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpContent" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">RFC 2616 で定義されているように HTTP コンテンツ ヘッダーを取得します。</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">RFC 2616 で定義されているようなコンテンツ ヘッダー。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">非同期操作として HTTP コンテンツをメモリ バッファーにシリアル化します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">非同期操作として HTTP コンテンツをメモリ バッファーにシリアル化します。</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">使用バッファーの最大サイズ (バイト単位)。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">非同期操作として HTTP コンテンツをバイト配列にシリアル化します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">HTTP コンテンツをシリアル化し、非同期操作としてコンテンツを表すストリームを返します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">非同期操作として HTTP コンテンツを文字列にシリアル化します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">非同期操作として HTTP コンテンツをストリームにシリアル化します。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">トランスポート (チャネル バインディング トークンなど) について説明します。 このパラメーターは <see langword="null" /> の場合もあります。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">HTTP コンテンツが有効なバイト長であるかどうかを判断します。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP コンテンツの長さ (バイト単位)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な長さの場合は <paramref name="length" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">HTTP メッセージ ハンドラーの基本データ型。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> が使用しているアンマネージド リソースを解放し、マネージド リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">アプリケーションが HTTP ハンドラー チェーンに対して <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> メソッドを呼び出せるようにする専用クラス。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">指定した <see cref="T:System.Net.Http.HttpMessageHandler" /> を使用して、<see cref="T:System.Net.Http.HttpMessageInvoker" /> クラスのインスタンスを初期化します。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">HTTP 応答メッセージの処理を行う <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">指定した <see cref="T:System.Net.Http.HttpMessageHandler" /> を使用して、<see cref="T:System.Net.Http.HttpMessageInvoker" /> クラスのインスタンスを初期化します。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">HTTP 応答メッセージの処理を行う <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">内部ハンドラーを Dispose() で破棄する場合は <see langword="true" />。内部ハンドラーを再利用する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">
        <see cref="T:System.Net.Http.HttpMessageInvoker" /> が使用しているアンマネージド リソースを解放し、マネージド リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpMessageInvoker" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">非同期操作として HTTP 要求を送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">送信する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">操作をキャンセルするキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">標準的な HTTP メソッドの取得と比較を行い、新しい HTTP メソッドを作成するためのヘルパー クラス。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">指定した HTTP メソッドを使用して、<see cref="T:System.Net.Http.HttpMethod" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP メソッド。</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">HTTP DELETE プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP DELETE method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定した <see cref="T:System.Net.Http.HttpMethod" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">現在のオブジェクトと比較する HTTP メソッド。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトが現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />です。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">現在のオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトが現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />です。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">HTTP GET プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP GET method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">この型のハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">HTTP HEAD プロトコル メソッドを表します。 HEAD メソッドは、サーバーが応答でメッセージ本文は返さずにメッセージ ヘッダーだけを返すこと以外、GET と同じです。</summary>
      <returns vsli:raw="The HTTP HEAD method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">HTTP メソッド。</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" /> として表される HTTP メソッド。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">2 つの <see cref="T:System.Net.Http.HttpMethod" /> オブジェクトを比較する等値演算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">等値演算子の左辺にある <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">等値演算子に表示される右側の <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="left" /> パラメーターと <paramref name="right" /> パラメーターが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">2 つの <see cref="T:System.Net.Http.HttpMethod" /> オブジェクトを比較する非等値演算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">非等値演算子の左辺にある <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">非等値演算子に表示される右側の <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="left" /> パラメーターと <paramref name="right" /> パラメーターが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">HTTP OPTIONS プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">URI への追加として新しいエントリをポストするために使用される HTTP POST プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP POST method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">URI で識別されるエントリを置き換えるために使用される HTTP PUT プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP PUT method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">現在のオブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string representing the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">HTTP TRACE プロトコル メソッドを表します。</summary>
      <returns vsli:raw="The HTTP TRACE method.">
        <see cref="T:System.Net.Http.HttpMethod" /> を返します。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">
        <see cref="T:System.Net.Http.HttpClient" /> と <see cref="T:System.Net.Http.HttpMessageHandler" /> クラスによってスローされる例外の基本クラス。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">現在の例外を記述するメッセージを指定して、<see cref="T:System.Net.Http.HttpRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">現在の例外を説明するメッセージ。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">現在の例外と内部例外を記述するメッセージを指定して、<see cref="T:System.Net.Http.HttpRequestException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">現在の例外を説明するメッセージ。</param>
      <param name="inner" vsli:raw="The inner exception.">内部例外。</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">HTTP 要求メッセージを表します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">HTTP メソッドと要求 <see cref="T:System.Net.Http.HttpRequestMessage" /> を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP メソッド。</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">要求 <see cref="T:System.Uri" /> を表す文字列。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">HTTP メソッドと要求 <see cref="T:System.Net.Http.HttpRequestMessage" /> を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP メソッド。</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">要求する <see cref="T:System.Uri" />。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">HTTP メッセージの内容を取得または設定します。</summary>
      <returns vsli:raw="The content of a message.">メッセージの内容</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> が使用しているアンマネージド リソースを解放し、マネージド リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">HTTP 要求ヘッダーのコレクションを取得します。</summary>
      <returns vsli:raw="The collection of HTTP request headers.">HTTP 応答ヘッダーのコレクション。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">この HTTP 要求メッセージで使用する HTTP メソッドを取得または設定します。</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">要求メッセージによって使用される HTTP メソッド。 既定は GET メソッドです。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">HTTP 要求のプロパティのセットを取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">HTTP 要求に使用される <see cref="T:System.Uri" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">HTTP 要求に使用される <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">現在のオブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string representation of the current object.">現在のオブジェクトの文字列形式。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">HTTP メッセージ バージョンを取得または設定します。</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">HTTP メッセージのバージョン。 .NET Core 2.1 または2.2 を対象としている場合を除き、既定値は<c>1.1</c>です。 この場合、既定値は<c>2.0</c>です。</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">ステータス コードとデータを含む HTTP 応答メッセージを表します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">
        <see cref="T:System.Net.Http.HttpResponseMessage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">特定の <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> を使用して、<see cref="T:System.Net.Http.HttpResponseMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">HTTP 応答のステータス コード。</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">HTTP 応答メッセージの内容を取得または設定します。</summary>
      <returns vsli:raw="The content of the HTTP response message.">HTTP 応答メッセージの内容。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">
        <see cref="T:System.Net.Http.HttpResponseMessage" /> が使用しているアンマネージ リソースを解放し、アンマネージ リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.HttpResponseMessage" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">HTTP 応答の <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> プロパティが <see langword="false" /> である場合、例外をスローします。</summary>
      <returns vsli:raw="The HTTP response message if the call is successful.">呼び出しに成功した場合の HTTP 応答メッセージ。</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">HTTP 応答は失敗です。</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">HTTP 応答ヘッダーのコレクションを取得します。</summary>
      <returns vsli:raw="The collection of HTTP response headers.">HTTP 応答ヘッダーのコレクション。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">HTTP 応答が成功したかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> が200-299 の範囲内にあるかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">ステータス コードと共にサーバーが通常送信する理由語句を取得または設定します。</summary>
      <returns vsli:raw="The reason phrase sent by the server.">サーバーが送信する理由語句。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">この応答メッセージを引き起こした要求メッセージを取得または設定します。</summary>
      <returns vsli:raw="The request message which led to this response message.">この応答メッセージを引き起こした要求メッセージ。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">HTTP 応答のステータス コードを取得または設定します。</summary>
      <returns vsli:raw="The status code of the HTTP response.">HTTP 応答のステータス コード。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">現在のオブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string representation of the current object.">現在のオブジェクトの文字列形式。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">HTTP 応答に含まれている末尾のヘッダーのコレクションを取得します。</summary>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">HTTP 応答の末尾のヘッダーのコレクション。</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR:HTTP/2 応答には、末尾のヘッダー フレームに疑似ヘッダーが含まれています。</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">HTTP メッセージ バージョンを取得または設定します。</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">HTTP メッセージのバージョン。 既定値は、1.1 です。</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">要求と応答メッセージの小規模な処理のみをするハンドラーの基本型。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MessageProcessingHandler" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">指定した内部ハンドラーを使用して、<see cref="T:System.Net.Http.MessageProcessingHandler" /> クラスのインスタンスを作成します。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">HTTP 応答メッセージ処理用の内部ハンドラー。</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">サーバーに送信される各要求の処理を実行します。</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">処理する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The HTTP request message that was processed.">処理された HTTP 要求メッセージ。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">サーバーからの各応答に対して処理を実行します。</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">処理する HTTP 応答メッセージ。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The HTTP response message that was processed.">処理された HTTP 応答メッセージ。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">非同期操作としてサーバーに送信するように HTTP 要求を内部ハンドラーに送信します。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">サーバーに送信する HTTP 要求メッセージ。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">キャンセル通知を受け取るために他のオブジェクトまたはスレッドで使用できるキャンセル トークン。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">multipart/* のコンテンツ タイプの指定を使用してシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">マルチパート コンテンツのサブタイプ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">マルチパート コンテンツのサブタイプ。</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">マルチパート コンテンツの境界文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="subtype" /> が <see langword="null" /> または空の文字列でした。
<paramref name="boundary" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。

または -
<paramref name="boundary" /> が空白文字で終わっています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> の長さが 70 を超えていました。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">multipart/* のコンテンツ タイプの指定を使用してシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションにマルチパート HTTP コンテンツを追加します。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">コレクションに追加する HTTP コンテンツ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> が <see langword="null" /> でした。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">非同期操作としてマルチパート/* エンコーディングを使用し、HTTP コンテンツをストリームにシリアル化します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.MultipartContent" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">マルチパート/* コンテンツ タイプの仕様を使用してシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">コレクションを反復処理するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">非同期操作としてマルチパートの HTTP コンテンツをストリームにシリアル化します。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">トランスポート (チャネル バインディング トークンなど) について説明します。 このパラメーターは <see langword="null" /> の場合もあります。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">
        <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> メソッドの明示的な実装。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">コレクションを反復処理するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">HTTP マルチパート コンテンツが有効なバイト長であるかどうかを決定します。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP コンテンツの長さ (バイト単位)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な長さの場合は <paramref name="length" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">マルチパート/フォーム データの MIME タイプを使用してエンコードされたコンテンツのコンテナーを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartFormDataContent" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.MultipartFormDataContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">マルチパート フォーム データ コンテンツの境界の文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="boundary" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。
または
<paramref name="boundary" /> が空白文字で終わっています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> の長さが 70 を超えていました。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">マルチパート/フォーム データの MIME の種類にシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションに HTTP コンテンツを追加します。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">コレクションに追加する HTTP コンテンツ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">マルチパート/フォーム データの MIME の種類にシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションに HTTP コンテンツを追加します。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">コレクションに追加する HTTP コンテンツ。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">追加する HTTP コンテンツの名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">マルチパート/フォーム データの MIME の種類にシリアル化される <see cref="T:System.Net.Http.HttpContent" /> オブジェクトのコレクションに HTTP コンテンツを追加します。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">コレクションに追加する HTTP コンテンツ。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">追加する HTTP コンテンツの名前。</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">コレクションに追加する HTTP コンテンツのファイル名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。
または
<paramref name="fileName" /> が <see langword="null" /> であったか、または空白文字だけを含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> が <see langword="null" />でした。</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;." />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">.NET Core 2.1 以降の <see cref="T:System.Net.Http.HttpClient" /> で使用される既定のメッセージ ハンドラーを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP コンテンツ応答を自動展開するためにハンドラーによって使用される展開メソッドの種類を取得または設定します。</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">HTTP コンテンツ応答を自動展開するためにハンドラーによって使用される展開方法の種類。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">マネージド クッキー コンテナー オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The managed cookie container object.">マネージクッキーコンテナーオブジェクト。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">既定の (システム) プロキシが使用されている場合、認証のために既定のプロキシ サーバーに送信するための使用されている資格情報を取得または設定します。</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">認証プロキシに対してユーザーを認証するために使用される資格情報。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">許可される HTTP リダイレクトの最大数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">許可される HTTP リダイレクトの最大数。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">1 つのサーバーに対して許可されている同時 TCP 接続の最大数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">1台のサーバーに対して許可されている同時 TCP 接続の最大数。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">応答からドレインできる最大データ量 (バイト単位) を取得または設定します。</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">応答からドレインできるデータの最大量 (バイト単位)。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">応答ヘッダーの最大長 (KB 単位、1 KB = 1024 バイト) を取得または設定します。</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">サーバー応答のヘッダー部分の最大サイズ (kb 単位)。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">再利用可能と見なされるプールで接続がアイドル状態でいられる時間を取得または設定します。</summary>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">プール内の接続の最大アイドル時間。 このプロパティの既定値は2分です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">指定された値が <see cref="F:System.TimeSpan.Zero" /> 未満、または <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> と等しいです。</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">ハンドラーが要求と共に認証ヘッダーを送信するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />ハンドラーが要求と共に認証ヘッダーを送信する場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> プロパティが <see langword="true" /> の場合に、カスタム プロキシを取得または設定します。</summary>
      <returns vsli:raw="The custom proxy.">カスタムプロキシ。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">クライアント TLS 認証に使用するオプションのセットを取得または設定します。</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">クライアントの TLS 認証に使用されるオプションのセット。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">ストリームに基づく HTTP コンテンツを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StreamContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" /> の初期化に使用されるコンテンツ。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StreamContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" /> の初期化に使用されるコンテンツ。</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" /> のバッファーのサイズ (バイト単位)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> が <see langword="null" /> でした。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> が 0 以下でした。</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">非同期操作として HTTP ストリーム コンテンツをメモリ ストリームに書き込みます。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Http.StreamContent" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">非同期操作として HTTP コンテンツをストリームにシリアル化します。</summary>
      <param name="stream" vsli:raw="The target stream.">対象のストリーム。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">トランスポート (チャネル バインディング トークンなど) について説明します。 このパラメーターは <see langword="null" /> の場合もあります。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">ストリーム コンテンツが有効なバイト長であるかどうかを判断します。</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">ストリーム コンテンツの長さ (バイト単位)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が有効な長さの場合は <paramref name="length" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">文字列に基づいて HTTP コンテンツを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" />の初期化に使用されるコンテンツ。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" /> の初期化に使用されるコンテンツ。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">コンテンツに使用するエンコード。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">
        <see cref="T:System.Net.Http.StringContent" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StringContent" /> の初期化に使用されるコンテンツ。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">コンテンツに使用するエンコード。</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">コンテンツに使用するメディア タイプ。</param>
    </member>
  </members>
</doc>