<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary vsli:raw="Compares two objects for equivalence, ignoring the case of strings.">2 つのオブジェクトが等しいかどうかを比較します。比較時には文字列の大文字と小文字は区別されません。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> を使用して、<see cref="P:System.Threading.Thread.CurrentCulture" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">指定した <see cref="T:System.Globalization.CultureInfo" /> を使用して <see cref="T:System.Collections.CaseInsensitiveComparer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt;.">新しい <see cref="T:System.Globalization.CultureInfo" /> で使用する <see cref="T:System.Collections.CaseInsensitiveComparer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary vsli:raw="Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.">同じ型の 2 つのオブジェクトに対して大文字小文字を区別しない比較を実行し、一方が他方よりも小さいか、等しいか、大きいかを示す値を返します。</summary>
      <param name="a" vsli:raw="The first object to compare.">比較する最初のオブジェクト。</param>
      <param name="b" vsli:raw="The second object to compare.">比較する 2 番目のオブジェクト。</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is less than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; equals &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is greater than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <paramref name="a" /> と <paramref name="b" /> の相対値を示す符号付き整数。次の表を参照してください。
 [値] 
 説明 
 0 より小さい値 
<paramref name="a" /> が <paramref name="b" /> より小さい。大文字と小文字は区別されません。  
  
 0 
<paramref name="a" /> と <paramref name="b" /> は等しい。大文字と小文字は区別されません。  
  
 0 より大きい値 
<paramref name="a" /> が <paramref name="b" /> より大きい。大文字と小文字は区別されません。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;a&quot; /&gt; nor &lt;paramref name=&quot;b&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are of different types.">
        <paramref name="a" /> と <paramref name="b" /> が、いずれも <see cref="T:System.IComparable" /> インターフェイスを実装していません。

または -
<paramref name="a" /> と <paramref name="b" /> の型が異なります。</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた、常に使用できる <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた、常に使用できる <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンス。</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary vsli:raw="Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.">文字列の大文字と小文字を区別しないハッシュ アルゴリズムを使用して、オブジェクトのハッシュ コードを提供します。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> を使用して、<see cref="P:System.Threading.Thread.CurrentCulture" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">指定した <see cref="T:System.Globalization.CultureInfo" /> を使用して <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt;.">新しい <see cref="T:System.Globalization.CultureInfo" /> で使用する <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> に関連付けられた、常に使用できる <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> に関連付けられた <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> に関連付けられた、常に使用できる <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> に関連付けられた <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.">文字列の大文字と小文字を区別しないハッシュ アルゴリズムを使用して、特定のオブジェクトのハッシュ コードを返します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">ハッシュ コードが返される対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A hash code for the given object, using a hashing algorithm that ignores the case of strings.">文字列の大文字と小文字を区別しないハッシュ アルゴリズムを使用した、特定のオブジェクトのハッシュ コード。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection.">厳密に型指定されたコレクションの <see langword="abstract" /> 基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the default initial capacity.">既定の初期量を使用して、<see cref="T:System.Collections.CollectionBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the specified capacity.">容量を指定して、<see cref="T:System.Collections.CollectionBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">新しいリストに格納できる要素の数。</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">
        <see cref="T:System.Collections.CollectionBase" /> に格納できる要素の数を取得または設定します。</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">
        <see cref="T:System.Collections.CollectionBase" /> に格納できる要素の数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.CollectionBase.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> は <see cref="P:System.Collections.CollectionBase.Count" /> より小さい値に設定されます。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">システムで使用可能なメモリが不足しています。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method cannot be overridden.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスからすべてのオブジェクトを削除します。 このメソッドはオーバーライドできません。</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This property cannot be overridden.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに格納されている要素の数を取得します。 このプロパティはオーバーライドできません。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに格納されている要素の数。 このプロパティ値を取得することは、O(1) 操作になります。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.Collections.CollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.ArrayList" /> インスタンス内の要素のリストを格納する <see cref="T:System.Collections.CollectionBase" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ArrayList" /> インスタンス自体を表す <see cref="T:System.Collections.CollectionBase" />。 このプロパティ値を取得することは、O(1) 操作になります。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IList" /> インスタンス内の要素のリストを格納する <see cref="T:System.Collections.CollectionBase" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IList" /> インスタンス自体を表す <see cref="T:System.Collections.CollectionBase" />。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスの内容を消去しているときに、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスの内容を消去した後に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに新しい要素を挿入する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />を挿入する位置の、0 以上のインデックス。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに新しい要素を挿入した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />を挿入する位置の、0 以上のインデックス。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスから要素を削除するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">
        <paramref name="value" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> から削除する要素の値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスから要素を削除した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">
        <paramref name="value" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> から削除する要素の値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">
        <paramref name="oldValue" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスに値を設定した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">
        <paramref name="oldValue" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">値を検証するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method is not overridable.">
        <see cref="T:System.Collections.CollectionBase" /> インスタンスの指定したインデックスにある要素を削除します。 このメソッドはオーバーライドできません。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">削除する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が <see cref="P:System.Collections.CollectionBase.Count" /> 以上になっています。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">
        <see cref="T:System.Collections.CollectionBase" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.CollectionBase" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.CollectionBase" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.CollectionBase" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.CollectionBase" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.CollectionBase" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" /> の末尾にオブジェクトを追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be added to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> の末尾に追加する <see cref="T:System.Collections.CollectionBase" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; index at which the &lt;paramref name=&quot;value&quot; /&gt; has been added.">
        <paramref name="value" /> が追加された位置の <see cref="T:System.Collections.CollectionBase" /> インデックス。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> は読み取り専用です。

または -
<see cref="T:System.Collections.CollectionBase" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains a specific element.">
        <see cref="T:System.Collections.CollectionBase" /> に特定の要素が格納されているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="value" /> が <see cref="T:System.Collections.CollectionBase" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Searches for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">指定した <see cref="T:System.Object" /> を検索し、<see cref="T:System.Collections.CollectionBase" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;, if found; otherwise, -1.">
        <see cref="T:System.Collections.CollectionBase" /> 全体を対象に <paramref name="value" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; at the specified index.">
        <see cref="T:System.Collections.CollectionBase" /> 内の指定したインデックスの位置に要素を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert.">挿入する <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が <see cref="P:System.Collections.CollectionBase.Count" /> より大きくなっています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> は読み取り専用です。

または -
<see cref="T:System.Collections.CollectionBase" /> は固定サイズです。</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.CollectionBase" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.CollectionBase" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.CollectionBase" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が <see cref="P:System.Collections.CollectionBase.Count" /> 以上になっています。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">特定のオブジェクトが <see cref="T:System.Collections.CollectionBase" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.CollectionBase" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter was not found in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; object.">
        <see cref="T:System.Collections.CollectionBase" /> オブジェクトに <paramref name="value" /> パラメーターが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> は読み取り専用です。

または -
<see cref="T:System.Collections.CollectionBase" /> は固定サイズです。</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection of key/value pairs.">厳密に型指定されたキー/値ペアのコレクションの <see langword="abstract" /> 基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; class.">
        <see cref="T:System.Collections.DictionaryBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスの内容を消去します。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">1 次元の <see cref="T:System.Collections.DictionaryBase" /> の指定したインデックスに <see cref="T:System.Array" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> インスタンスから <see cref="T:System.Collections.DictionaryEntry" /> オブジェクトがコピーされる 1 次元の <see cref="T:System.Collections.DictionaryBase" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.DictionaryBase" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.DictionaryBase" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに格納されている要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに格納されている要素の数。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに格納されている要素のリストを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IDictionary" /> インスタンス自体を表す <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> インスタンスを反復処理する <see cref="T:System.Collections.DictionaryBase" /> を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> インスタンスの <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに格納されている要素のリストを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.Hashtable" /> インスタンス自体を表す <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary vsli:raw="Performs additional custom processes before clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスの内容を消去する前に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスの内容を消去した後に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary vsli:raw="Gets the element with the specified key and value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">指定したキーおよび値を持つ、<see cref="T:System.Collections.DictionaryBase" /> インスタンスの要素を取得します。</summary>
      <param name="key" vsli:raw="The key of the element to get.">取得する要素のキー。</param>
      <param name="currentValue" vsli:raw="The current value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" /> に関連付けられている要素の現在の値。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the element with the specified key and value.">指定したキーおよび値を持つ要素を格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに新しい要素を挿入する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to insert.">挿入する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to insert.">挿入する要素の値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに新しい要素を挿入した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to insert.">挿入する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to insert.">挿入する要素の値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスから要素を削除する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">削除する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to remove.">削除する要素の値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスから要素を削除した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">削除する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to remove.">削除する要素の値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to locate.">検索する要素のキー。</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" /> に関連付けられている要素の古い値。</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" /> に関連付けられている要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> インスタンスに値を設定した後に、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to locate.">検索する要素のキー。</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" /> に関連付けられている要素の古い値。</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" /> に関連付けられている要素の新しい値。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating the element with the specified key and value.">指定したキーおよび値を持つ要素を検証するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="key" vsli:raw="The key of the element to validate.">検証する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to validate.">検証する要素の値。</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe).">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.DictionaryBase" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">指定したキーおよび値を持つ要素を <see cref="T:System.Collections.DictionaryBase" /> に追加します。</summary>
      <param name="key" vsli:raw="The key of the element to add.">追加する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to add.">追加する要素の値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">同じキーを持つ要素が、<see cref="T:System.Collections.DictionaryBase" /> に既に存在します。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> は読み取り専用です。

または -
<see cref="T:System.Collections.DictionaryBase" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains a specific key.">
        <see cref="T:System.Collections.DictionaryBase" /> に特定のキーが格納されているかどうかを判断します。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> 内で検索されるキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したキーを持つ要素が <see langword="true" /> に格納されている場合は <see cref="T:System.Collections.DictionaryBase" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトが固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">指定されたキーに関連付けられている値を取得または設定します。</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">値を取得または設定する対象のキー。</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, attempting to get it returns &lt;see langword=&quot;null&quot; /&gt;, and attempting to set it creates a new element using the specified key.">指定されたキーに関連付けられている値。 指定したキーが見つからない場合、そのキーを取得しようとした場合は <see langword="null" /> が返され、そのキーを設定しようとした場合は、指定したキーを使用して新しい要素が作成されます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">このプロパティが設定されていますが、<see cref="T:System.Collections.DictionaryBase" /> が読み取り専用です。

または -
プロパティが設定済みで、コレクション内に <paramref name="key" /> が存在せず、<see cref="T:System.Collections.DictionaryBase" /> が固定サイズです。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内のキーを格納している <see cref="T:System.Collections.DictionaryBase" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内のキーを格納している <see cref="T:System.Collections.DictionaryBase" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">指定したキーを持つ要素を <see cref="T:System.Collections.DictionaryBase" /> から削除します。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">削除する要素のキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> は読み取り専用です。

または -
<see cref="T:System.Collections.DictionaryBase" /> は固定サイズです。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内の値を格納している <see cref="T:System.Collections.DictionaryBase" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内の値を格納している <see cref="T:System.Collections.DictionaryBase" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">オブジェクトの先入れ先出しコレクションを表します。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the default initial capacity, and uses the default growth factor.">空で、既定の初期量を備え、既定の増加率を使用する、<see cref="T:System.Collections.Queue" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.">指定したコレクションからコピーした要素を格納し、コピーした要素の数と同じ初期量を備え、既定の増加率を使用する、<see cref="T:System.Collections.Queue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">要素のコピー元の <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default growth factor.">空で、指定した初期量を備え、既定の増加率を使用する、<see cref="T:System.Collections.Queue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" /> が格納できる要素数の初期値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified growth factor.">空で、指定した初期量を備え、指定した増加率を使用する、<see cref="T:System.Collections.Queue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" /> が格納できる要素数の初期値。</param>
      <param name="growFactor" vsli:raw="The factor by which the capacity of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is expanded.">
        <see cref="T:System.Collections.Queue" /> の容量を拡張するときに使用する係数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;growFactor&quot; /&gt; is less than 1.0 or greater than 10.0.">
        <paramref name="capacity" /> が 0 未満です。

または -
<paramref name="growFactor" /> が 1.0 未満であるか、または 10.0 を超えています。</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> からすべてのオブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の簡易コピーを作成します。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の簡易コピー。</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">ある要素が <see cref="T:System.Collections.Queue" /> 内に存在するかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> 内で検索される <see cref="T:System.Object" />。 値として <see langword="null" /> を指定できます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が <paramref name="obj" /> に存在する場合は <see cref="T:System.Collections.Queue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">
        <see cref="T:System.Collections.Queue" /> の要素を既存の 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、配列内の指定したインデックスから始まります。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.Queue" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.Queue" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
      <exception cref="T:System.ArrayTypeMismatchException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.Queue" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> に格納されている要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> に格納されている要素の数。</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の先頭にあるオブジェクトを削除し、返します。</summary>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の先頭から削除されたオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" /> が空です。</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の末尾にオブジェクトを追加します。</summary>
      <param name="obj" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> に追加するオブジェクト。 値として <see langword="null" /> を指定できます。</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> を反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.Queue" />。</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.Queue" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.Queue" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; without removing it.">
        <see cref="T:System.Collections.Queue" /> の先頭にあるオブジェクトを削除せずに返します。</summary>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> の先頭にあるオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" /> が空です。</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; that wraps the original queue, and is thread safe.">元のキューをラップする、スレッド セーフである新しい <see cref="T:System.Collections.Queue" /> を返します。</summary>
      <param name="queue" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; to synchronize.">同期する <see cref="T:System.Collections.Queue" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; wrapper that is synchronized (thread safe).">同期されている (スレッド セーフな) <see cref="T:System.Collections.Queue" /> ラッパー。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;queue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="queue" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to a new array.">
        <see cref="T:System.Collections.Queue" /> の要素を新しい配列にコピーします。</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> からコピーした要素を格納する新しい配列。</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">容量を <see cref="T:System.Collections.Queue" /> 内にある実際の要素数に設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.Queue" /> は読み取り専用です。</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed non-generic read-only collection.">厳密に型指定された非ジェネリック読み取り専用コレクションのための <see langword="abstract" /> 基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; class.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> インスタンスに格納されている要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> インスタンスに格納されている要素の数。 このプロパティ値を取得することは、O(1) 操作になります。</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> インスタンスを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> インスタンスに格納されている要素のリストを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.ArrayList" /> インスタンス自体を表す <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ReadOnlyCollectionBase" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.ReadOnlyCollectionBase" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.ReadOnlyCollectionBase" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe).">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ReadOnlyCollectionBase" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> オブジェクトへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.">キーによって並べ替えられ、キーとインデックスを使ってアクセスできる、キー/値ペアのコレクションを表します。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">空で、既定の初期量を備え、<see cref="T:System.Collections.SortedList" /> オブジェクトに追加された各キーによって実装されている <see cref="T:System.IComparable" /> インターフェイスに従って並べ替えられた、<see cref="T:System.Collections.SortedList" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">空で、既定の初期量を備え、指定した <see cref="T:System.Collections.SortedList" /> インターフェイスに従って並べ替えられた、<see cref="T:System.Collections.IComparer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">キーの比較時に使用する <see cref="T:System.Collections.IComparer" /> の実装。

または -
各キーの <see cref="T:System.IComparable" /> 実装を使用する場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">空で、指定した初期量を備え、指定した <see cref="T:System.Collections.SortedList" /> インターフェイスに従って並べ替えられた、<see cref="T:System.Collections.IComparer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">キーの比較時に使用する <see cref="T:System.Collections.IComparer" /> の実装。

または -
各キーの <see cref="T:System.IComparable" /> 実装を使用する場合は <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが格納できる要素数の初期値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> が 0 未満です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;capacity&quot; /&gt;.">メモリが不足しているため、指定された <paramref name="capacity" /> を持つ <see cref="T:System.Collections.SortedList" /> オブジェクトを作成できません。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key.">指定したディクショナリからコピーした要素を格納し、コピーした要素の数と同じ初期量を備え、各キーによって実装されている <see cref="T:System.Collections.SortedList" /> インターフェイスに従って並べ替えられた、<see cref="T:System.IComparable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">新しい <see cref="T:System.Collections.IDictionary" /> オブジェクトにコピーする <see cref="T:System.Collections.SortedList" /> 実装。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="One or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="d" /> 内の 1 つ以上の要素が、<see cref="T:System.IComparable" /> インターフェイスを実装していません。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">指定したディクショナリからコピーした要素を格納し、コピーした要素の数と同じ初期量を備え、指定した <see cref="T:System.Collections.SortedList" /> インターフェイスに従って並べ替えられた、<see cref="T:System.Collections.IComparer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">新しい <see cref="T:System.Collections.IDictionary" /> オブジェクトにコピーする <see cref="T:System.Collections.SortedList" /> 実装。</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">キーの比較時に使用する <see cref="T:System.Collections.IComparer" /> の実装。

または -
各キーの <see cref="T:System.IComparable" /> 実装を使用する場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and one or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="comparer" /> が <see langword="null" /> で、<paramref name="d" /> の 1 つ以上の要素が <see cref="T:System.IComparable" /> インターフェイスを実装していません。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">空で、指定した初期量を備え、<see cref="T:System.Collections.SortedList" /> に追加された各キーによって実装されている <see cref="T:System.IComparable" /> インターフェイスに従って並べ替えられた、<see cref="T:System.Collections.SortedList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが格納できる要素数の初期値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> が 0 未満です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;initialCapacity&quot; /&gt;.">メモリが不足しているため、指定された <paramref name="initialCapacity" /> を持つ <see cref="T:System.Collections.SortedList" /> オブジェクトを作成できません。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">指定したキーおよび値を持つ要素を <see cref="T:System.Collections.SortedList" /> オブジェクトに追加します。</summary>
      <param name="key" vsli:raw="The key of the element to add.">追加する要素のキー。</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt;.">追加する要素の値。 値として <see langword="null" /> を指定できます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the specified &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is set to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface, and &lt;paramref name=&quot;key&quot; /&gt; does not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">指定した <paramref name="key" /> を持つ要素が、既に <see cref="T:System.Collections.SortedList" /> オブジェクトに存在します。

または -
<see cref="T:System.Collections.SortedList" /> が <see cref="T:System.IComparable" /> インターフェイスを使用するように設定されているのに、<paramref name="key" /> が <see cref="T:System.IComparable" /> インターフェイスを実装していません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> は読み取り専用です。

または -
<see cref="T:System.Collections.SortedList" /> は固定サイズです。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">メモリが不足しているため、<see cref="T:System.Collections.SortedList" /> に要素を追加できません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比較子が例外をスローしました。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary vsli:raw="Gets or sets the capacity of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの容量を取得または設定します。</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに格納できる要素の数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value assigned is less than the current number of elements in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">代入された値が、<see cref="T:System.Collections.SortedList" /> オブジェクト内の現在の要素の数未満です。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">システムで使用可能なメモリが不足しています。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトからすべての要素を削除します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> が読み取り専用です。

または -
<see cref="T:System.Collections.SortedList" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary vsli:raw="Creates a shallow copy of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの簡易コピーを作成します。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの簡易コピー。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに特定のキーが格納されているかどうかを確認します。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内で検索されるキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="key" /> を持つ要素が <see cref="T:System.Collections.SortedList" /> オブジェクトに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比較子が例外をスローしました。</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに特定のキーが格納されているかどうかを確認します。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内で検索されるキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="key" /> を持つ要素が <see cref="T:System.Collections.SortedList" /> オブジェクトに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比較子が例外をスローしました。</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific value.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに特定の値が格納されているかどうかを確認します。</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内で検索される値。 値として <see langword="null" /> を指定できます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="value" /> を持つ要素が <see cref="T:System.Collections.SortedList" /> オブジェクトに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object, starting at the specified index in the array.">
        <see cref="T:System.Collections.SortedList" /> の要素を 1 次元の <see cref="T:System.Array" /> オブジェクトにコピーします。コピー操作は、配列内の指定したインデックスから始まります。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から <see cref="T:System.Collections.DictionaryEntry" /> オブジェクトがコピーされる 1 次元の <see cref="T:System.Collections.SortedList" /> オブジェクト。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.SortedList" /> オブジェクトの要素数が、<paramref name="arrayIndex" /> からコピー先の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.SortedList" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary vsli:raw="Gets the number of elements contained in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに格納されている要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトに格納されている要素の数。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary vsli:raw="Gets the value at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの指定したインデックスにある値を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">取得する値の 0 から始まるインデックス。</param>
      <returns vsli:raw="The value at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの指定したインデックスにある値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> が、<see cref="T:System.Collections.SortedList" /> オブジェクトの有効なインデックスの範囲外です。</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object that iterates through a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> オブジェクトを反復処理する <see cref="T:System.Collections.SortedList" /> オブジェクトを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの <see cref="T:System.Collections.IDictionaryEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの指定したインデックスにあるキーを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the key to get.">取得するキーの 0 から始まるインデックス。</param>
      <returns vsli:raw="The key at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの指定したインデックスにあるキー。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> が、<see cref="T:System.Collections.SortedList" /> オブジェクトの有効なインデックスの範囲外です。</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内のキーを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IList" /> オブジェクト内のキーを格納している <see cref="T:System.Collections.SortedList" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内の値を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IList" /> オブジェクト内の値を格納している <see cref="T:System.Collections.SortedList" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the specified key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内の指定したキーの、0 から始まるインデックス番号を返します。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内で検索されるキー。</param>
      <returns vsli:raw="The zero-based index of the &lt;paramref name=&quot;key&quot; /&gt; parameter, if &lt;paramref name=&quot;key&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">
        <paramref name="key" /> が <see cref="T:System.Collections.SortedList" /> オブジェクトに存在する場合は、<paramref name="key" /> パラメーターの 0 から始まるインデックス番号。それ以外の場合は -1。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比較子が例外をスローしました。</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified value in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内にある指定した値のうち、最初に出現する値の、0 から始まるインデックス番号を返します。</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内で検索される値。 値として <see langword="null" /> を指定できます。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the &lt;paramref name=&quot;value&quot; /&gt; parameter, if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">
        <paramref name="value" /> が <see cref="T:System.Collections.SortedList" /> オブジェクトに存在する場合は、先頭の <paramref name="value" /> パラメーターの 0 から始まるインデックス番号。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe).">
        <see cref="T:System.Collections.SortedList" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> オブジェクトへのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.SortedList" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with a specific key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内の特定のキーに関連付けられている値を取得または設定します。</summary>
      <param name="key" vsli:raw="The key associated with the value to get or set.">取得または設定する値に関連付けられているキー。</param>
      <returns vsli:raw="The value associated with the &lt;paramref name=&quot;key&quot; /&gt; parameter in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object, if &lt;paramref name=&quot;key&quot; /&gt; is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が存在する場合は、<see cref="T:System.Collections.SortedList" /> オブジェクト内の <paramref name="key" /> パラメーターに関連付けられている値。それ以外の場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">このプロパティが設定されていますが、<see cref="T:System.Collections.SortedList" /> オブジェクトが読み取り専用です。

または -
プロパティが設定済みで、コレクション内に <paramref name="key" /> が存在せず、<see cref="T:System.Collections.SortedList" /> が固定サイズです。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">メモリが不足しているため、<see cref="T:System.Collections.SortedList" /> に要素を追加できません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比較子が例外をスローしました。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内のキーを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内のキーを格納している <see cref="T:System.Collections.SortedList" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">指定したキーを持つ要素を <see cref="T:System.Collections.SortedList" /> オブジェクトから削除します。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">削除する要素のキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> が読み取り専用です。

または -
<see cref="T:System.Collections.SortedList" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの指定したインデックスにある要素を削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">削除する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> が、<see cref="T:System.Collections.SortedList" /> オブジェクトの有効なインデックスの範囲外です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> は読み取り専用です。

または -
<see cref="T:System.Collections.SortedList" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary vsli:raw="Replaces the value at a specific index in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトの特定のインデックスにある値を置換します。</summary>
      <param name="index" vsli:raw="The zero-based index at which to save &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を保存する位置の、0 から始まるインデックス番号。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to save into the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> オブジェクトに保存する <see cref="T:System.Collections.SortedList" />。 値として <see langword="null" /> を指定できます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> が、<see cref="T:System.Collections.SortedList" /> オブジェクトの有効なインデックスの範囲外です。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary vsli:raw="Returns a synchronized (thread-safe) wrapper for a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト用の同期された (スレッド セーフな) ラッパーを返します。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object to synchronize.">同期する <see cref="T:System.Collections.SortedList" /> オブジェクト。</param>
      <returns vsli:raw="A synchronized (thread-safe) wrapper for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト用の同期された (スレッド セーフな) ラッパー。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクトへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.SortedList" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">容量を <see cref="T:System.Collections.SortedList" /> オブジェクト内にある実際の要素数に設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> が読み取り専用です。

または -
<see cref="T:System.Collections.SortedList" /> は固定サイズです。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> オブジェクト内の値を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> オブジェクト内の値を格納している <see cref="T:System.Collections.SortedList" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary vsli:raw="Creates collections that ignore the case in strings.">文字列の大文字小文字の違いを無視するコレクションを作成します。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.CollectionsUtil&quot; /&gt; class.">
        <see cref="T:System.Collections.Specialized.CollectionsUtil" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">既定の初期量を備えた、大文字と小文字を区別しない <see cref="T:System.Collections.Hashtable" /> クラスの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">既定の初期量を備えた、<see cref="T:System.Collections.Hashtable" /> クラスの大文字と小文字を区別しない新しいインスタンス。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary vsli:raw="Copies the entries from the specified dictionary to a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the same initial capacity as the number of entries copied.">コピーされるエントリ数と同じ初期量を備えた、<see cref="T:System.Collections.Hashtable" /> クラスの大文字と小文字を区別しない新しいインスタンスに、指定したディクショナリからエントリをコピーします。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; to copy to a new case-insensitive &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt;.">大文字と小文字を区別しない新しい <see cref="T:System.Collections.IDictionary" /> にコピーする <see cref="T:System.Collections.Hashtable" />。</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class containing the entries from the specified &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">指定した <see cref="T:System.Collections.Hashtable" /> のエントリが格納されている、大文字と小文字を区別しない <see cref="T:System.Collections.IDictionary" /> クラスの新しいインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">指定した初期量を備えた、大文字と小文字を区別しない <see cref="T:System.Collections.Hashtable" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="capacity" vsli:raw="The approximate number of entries that the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; can initially contain.">
        <see cref="T:System.Collections.Hashtable" /> が初期状態で格納できるエントリの概数。</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">指定した初期量を備えた、<see cref="T:System.Collections.Hashtable" /> クラスの大文字と小文字を区別しない新しいインスタンス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">文字列の大文字と小文字を区別しない <see cref="T:System.Collections.SortedList" /> クラスの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">文字列の大文字と小文字を区別しない <see cref="T:System.Collections.SortedList" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary vsli:raw="Represents a simple last-in-first-out (LIFO) non-generic collection of objects.">シンプルな後入れ先出し (LIFO) の非ジェネリック オブジェクト コレクションを表します。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the default initial capacity.">空で、既定の初期量を備えた、<see cref="T:System.Collections.Stack" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.">指定したコレクションからコピーした要素を格納し、コピーされる要素の数と同じ初期量を備えた、<see cref="T:System.Collections.Stack" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">要素のコピー元の <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">空で、指定した初期量または既定の初期量のうち大きい方の初期量を備えた、<see cref="T:System.Collections.Stack" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Stack" /> が格納できる要素数の初期値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> からすべてのオブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の簡易コピーを作成します。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の簡易コピー。</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">ある要素が <see cref="T:System.Collections.Stack" /> 内に存在するかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 内で検索するオブジェクト。 値として <see langword="null" /> を指定できます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> が <see cref="T:System.Collections.Stack" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">既存の 1 次元の <see cref="T:System.Collections.Stack" /> に <see cref="T:System.Array" /> をコピーします。コピー操作は、配列の指定したインデックスから始まります。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.Stack" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.Stack" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元の <see cref="T:System.Collections.Stack" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> に格納されている要素の数を取得します。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> に格納されている要素の数。</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.Stack" /> を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.Stack" />。</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.Stack" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; without removing it.">
        <see cref="T:System.Collections.Stack" /> の先頭にあるオブジェクトを削除せずに返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> の先頭にある <see cref="T:System.Collections.Stack" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" /> が空です。</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の先頭にあるオブジェクトを削除し、返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; removed from the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の先頭から削除された <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" /> が空です。</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の先頭にオブジェクトを挿入します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to push onto the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> にプッシュする <see cref="T:System.Collections.Stack" />。 値として <see langword="null" /> を指定できます。</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary vsli:raw="Returns a synchronized (thread safe) wrapper for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 用の同期された (スレッド セーフな) ラッパーを返します。</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to synchronize.">同期する <see cref="T:System.Collections.Stack" />。</param>
      <returns vsli:raw="A synchronized wrapper around the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 用の同期されたラッパー。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stack" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> へのアクセスを同期するために使用できる <see cref="T:System.Collections.Stack" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to a new array.">
        <see cref="T:System.Collections.Stack" /> を新しい配列にコピーします。</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> の要素のコピーを格納する新しい配列。</returns>
    </member>
  </members>
</doc>