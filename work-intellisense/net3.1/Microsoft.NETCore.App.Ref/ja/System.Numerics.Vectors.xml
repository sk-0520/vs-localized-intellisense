<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">3 × 2 行列を表します。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">指定した成分の 3 × 2 行列を作成します。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">最初の行の最初の要素に代入する値。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">最初の行の 2 番目の要素に代入する値。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">2 番目の行の最初の要素に代入する値。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">2 番目の行の 2 番目の要素に代入する値。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">3 番目の行の最初の要素に代入する値。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">3 番目の行の 2 番目の要素に代入する値。</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">1 つの行列の各要素に、2 番目の行列の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> と <paramref name="value2" /> の加算結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">ラジアンで指定した回転を使用して回転行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">回転の量 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">ラジアンで指定した回転量、および中心点を使用して、回転行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">回転の量 (ラジアン)。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">指定したベクトル拡大率から、拡大縮小行列を作成します。</summary>
      <param name="scales" vsli:raw="The scale to use.">使用する拡大率。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">指定された中心点からのオフセットで、指定されたベクトル拡大率に基づいて、拡大縮小行列を作成します。</summary>
      <param name="scales" vsli:raw="The scale to use.">使用する拡大率。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心オフセット。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">指定された拡大率による一様拡大縮小を表す拡大縮小行列を作成します。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">使用する一様拡大率。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">指定された中心からのオフセットで、指定された拡大率の一様拡大縮小を表す拡大縮小行列を作成します。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">使用する一様拡大率。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心オフセット。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">指定した X および Y 成分による拡大縮小行列を作成します。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X 軸方向の拡大縮小値。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y 軸方向の拡大縮小値。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">特定の中心点をオフセットとする拡大縮小行列を作成します。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X 軸方向の拡大縮小値。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y 軸方向の拡大縮小値。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">ラジアンで指定した角度から、傾斜行列を作成します。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 角度 (ラジアン)。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 角度 (ラジアン)。</param>
      <returns vsli:raw="The skew matrix.">傾斜行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">ラジアンで指定した角度、および中心点から、傾斜行列を作成します。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 角度 (ラジアン)。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 角度 (ラジアン)。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The skew matrix.">傾斜行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">指定した 2 次元ベクトルから平行移動行列を作成します。</summary>
      <param name="position" vsli:raw="The translation position.">平行移動位置。</param>
      <returns vsli:raw="The translation matrix.">平行移動行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">指定した X および Y 成分から平行移動行列を作成します。</summary>
      <param name="xPosition" vsli:raw="The X position.">X 位置。</param>
      <param name="yPosition" vsli:raw="The Y position.">Y 位置。</param>
      <returns vsli:raw="The translation matrix.">平行移動行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">このインスタンスと、別の 3 × 2 行列が等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other matrix.">もう 1 つの行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの行列が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">この行列の行列式を計算します。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">積単位行列を取得します。</summary>
      <returns vsli:raw="The multiplicative identify matrix.">積単位行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">指定した行列の逆行列を計算します。 戻り値は、演算が成功したかどうかを示します。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">逆行列を計算する行列。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">操作が成功した場合、このメソッドから戻る際に、逆行列が入れられます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が正常に変換された場合は <paramref name="matrix" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">現在の行列が単位行列かどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在の行列が単位行列である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">1 つの行列から 2 番目の行列までの線形補間を、2 番目の行列の重み付けを指定する値に基づいて実行します。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="matrix2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> の相対的な重み付け。</param>
      <returns vsli:raw="The interpolated matrix.">補間結果の行列。</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">最初の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">最初の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">2 番目の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">2 番目の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">3 番目の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">3 番目の行の 2 番目の要素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">2 つの行列の乗算結果となる積行列を返します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The product matrix.">積行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">指定した行列のすべての要素をスカラー因子倍した行列を返します。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">スカラー倍演算の対象となる行列。</param>
      <param name="value2" vsli:raw="The scaling value to use.">使用する倍率値。</param>
      <returns vsli:raw="The scaled matrix.">スケール調節された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">指定した行列のすべての成分値に -1 を乗算することにより、その符号を反転します。</summary>
      <param name="value" vsli:raw="The matrix to negate.">符号反転の対象となる行列。</param>
      <returns vsli:raw="The negated matrix.">符号反転された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">1 つの行列の各要素に、2 番目の行列の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix that contains the summed values.">加算結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">指定された行列が等しいかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">比較対象の 1 番目の行列。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">比較対象の 2 番目の行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しい場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">指定された行列が等しくないかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">比較対象の 1 番目の行列。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">比較対象の 2 番目の行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しくない場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">2 つの行列の乗算結果となる積行列を返します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The product matrix.">積行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">指定した行列のすべての要素をスカラー因子倍した行列を返します。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">スカラー倍演算の対象となる行列。</param>
      <param name="value2" vsli:raw="The scaling value to use.">使用する倍率値。</param>
      <returns vsli:raw="The scaled matrix.">スケール調節された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">2 番目の行列の各要素を、最初の行列の対応する要素からそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">指定した行列のすべての成分値に -1 を乗算することにより、その符号を反転します。</summary>
      <param name="value" vsli:raw="The matrix to negate.">符号反転の対象となる行列。</param>
      <returns vsli:raw="The negated matrix.">符号反転された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">2 番目の行列の各要素を、最初の行列の対応する要素からそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">この行列を表す文字列を返します。</summary>
      <returns vsli:raw="The string representation of this matrix.">この行列の文字列表現。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">この行列の平行移動成分を取得または設定します。</summary>
      <returns vsli:raw="The translation component of the current instance.">現在のインスタンスの平行移動成分。</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">4 × 4 行列を表します。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">指定した <see cref="T:System.Numerics.Matrix4x4" /> オブジェクトに基づいて <see cref="T:System.Numerics.Matrix3x2" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">3 × 2 行列。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">指定した成分から 4 × 4 行列を作成します。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">最初の行の最初の要素に代入する値。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">最初の行の 2 番目の要素に代入する値。</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">3 番目の行の 3 番目の要素に代入する値。</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">3 番目の行の 4 番目の要素に代入する値。</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">4 番目の行の最初の要素に代入する値。</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">4 番目の行の 2 番目の要素に代入する値。</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">4 番目の行の 3 番目の要素に代入する値。</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">4 番目の行の 4 番目の要素に代入する値。</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">最初の行の 3 番目の要素に代入する値。</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">最初の行の 4 番目の要素に代入する値。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">2 番目の行の最初の要素に代入する値。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">2 番目の行の 2 番目の要素に代入する値。</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">2 番目の行の 3 番目の要素に代入する値。</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">2 番目の行の 3 番目の要素に代入する値。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">3 番目の行の最初の要素に代入する値。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">3 番目の行の 2 番目の要素に代入する値。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">1 つの行列の各要素に、2 番目の行列の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> と <paramref name="value2" /> の加算結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">オブジェクトの指定位置を中心に回転する球ビルボードを作成します。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">オブジェクトのうち、ビルボードの回転の中心となる位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">カメラの位置。</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">カメラの上方向ベクトル。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">カメラの前方向ベクトル。</param>
      <returns vsli:raw="The created billboard.">作成されたビルボード。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">指定した軸を中心に回転する円筒ビルボードを作成します。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">オブジェクトのうち、ビルボードの回転の中心となる位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">カメラの位置。</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">ビルボードの回転軸。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">カメラの前方向ベクトル。</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">オブジェクトの前方向ベクトル。</param>
      <returns vsli:raw="The billboard matrix.">ビルボード行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">任意のベクトルを中心とした回転を表す行列を作成します。</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">回転の中心軸。</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">
        <paramref name="axis" /> を中心とする回転角度 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">指定された四元数回転値から、回転の行列を作成します。</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">元の四元数。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">指定したヨー、ピッチ、およびロールから回転行列を作成します。</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">Y 軸を中心とする回転の角度 (ラジアン)。</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">X 軸を中心とする回転の角度 (ラジアン)。</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">Z 軸を中心とする回転の角度 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">ビュー行列を作成します。</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">カメラの位置。</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">カメラが指す対象となるターゲット。</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">カメラの観点で上になる方向。</param>
      <returns vsli:raw="The view matrix.">ビュー行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">指定されたビュー ボリューム次元から、平行透視行列を作成します。</summary>
      <param name="width" vsli:raw="The width of the view volume.">ビュー ボリュームの幅。</param>
      <param name="height" vsli:raw="The height of the view volume.">ビュー ボリュームの高さ。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">ビュー ボリュームの最小 Z 値。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">ビュー ボリュームの最大 Z 値。</param>
      <returns vsli:raw="The orthographic projection matrix.">平行投影行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">カスタマイズされた平行投影行列を作成します。</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">ビュー ボリュームの最小 X 値。</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">ビュー ボリュームの最大 X 値。</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">ビュー ボリュームの最小 Y 値。</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">ビュー ボリュームの最大 Y 値。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">ビュー ボリュームの最小 Z 値。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">ビュー ボリュームの最大 Z 値。</param>
      <returns vsli:raw="The orthographic projection matrix.">平行投影行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">指定されたビュー ボリューム次元から、透視投影行列を作成します。</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの幅。</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの高さ。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">ニア ビュー平面までの距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">ファー ビュー平面までの距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視投影行列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> が 0 以下です。

または -
<paramref name="farPlaneDistance" /> が 0 以下です。

または -
<paramref name="nearPlaneDistance" /> が <paramref name="farPlaneDistance" /> 以上です。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">視野、縦横比、そしてニアおよびファー ビュー平面距離に基づいて、透視投影行列作成します。</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">y 方向の視野 (ラジアン)。</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">ビュー領域の幅を高さで割った値として定義される縦横比。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">ニア ビュー平面までの距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">ファー ビュー平面までの距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視投影行列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> が 0 以下です。

または -
<paramref name="fieldOfView" /> が <see cref="F:System.Math.PI" /> 以上です。

<paramref name="nearPlaneDistance" /> が 0 以下です。

または -
<paramref name="farPlaneDistance" /> が 0 以下です。

または -
<paramref name="nearPlaneDistance" /> が <paramref name="farPlaneDistance" /> 以上です。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">カスタマイズされた透視投影行列を作成します。</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの最小 x 値。</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの最大 x 値。</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの最小 y 値。</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">ニア ビュー平面でのビュー ボリュームの最大 y 値。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">ニア ビュー平面までの距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">ファー ビュー平面までの距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視投影行列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> が 0 以下です。

または -
<paramref name="farPlaneDistance" /> が 0 以下です。

または -
<paramref name="nearPlaneDistance" /> が <paramref name="farPlaneDistance" /> 以上です。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">指定した平面についての座標系反射を表す行列を作成します。</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">反射面。</param>
      <returns vsli:raw="A new matrix expressing the reflection.">反射を表す新しい行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">X 軸を中心とした点の回転を表す行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">X 軸の周りの回転量 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">中心点からの X 軸を中心とした点の回転を表す行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">X 軸の周りの回転量 (ラジアン)。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">Y 軸を中心とした点の回転を表す行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Y 軸の周りの回転量 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">中心点からの Y 軸回転量 (ラジアン)。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">Y 軸の周りの回転量 (ラジアン)。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">Z 軸を中心とした点の回転を表す行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Z 軸の周りの回転量 (ラジアン)。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">中心点からの Z 軸を中心とした点の回転を表す行列を作成します。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">Z 軸の周りの回転量 (ラジアン)。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">回転行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">指定したベクトル拡大率から、拡大縮小行列を作成します。</summary>
      <param name="scales" vsli:raw="The scale to use.">使用する拡大率。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">特定の点を中心とした拡大縮小行列を作成します。</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">各軸上の拡大率を内容とするベクトル。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">各軸上に一様に拡大縮小する一様拡大縮小行列を作成します。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">一様拡大率。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">特定の点を中心に各軸上に一様に拡大縮小する一様拡大縮小行列を作成します。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">一様拡大率。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">指定した X、Y、Z 成分による拡大縮小行列を作成します。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X 軸方向の拡大縮小値。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y 軸方向の拡大縮小値。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Z 軸方向の拡大縮小値。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">特定の中心点をオフセットとする拡大縮小行列を作成します。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">X 軸方向の拡大縮小値。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">Y 軸方向の拡大縮小値。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">Z 軸方向の拡大縮小値。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">拡大縮小行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">指定された光源から影を落とす方法による、指定した平面への幾何射影の行列を作成します。</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">影を作る光の入射方向。</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">新しい行列の幾何射影により影を落とす先の平面。</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">指定方向から指定平面上への幾何射影をするために使用する新しい行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">指定した 3 次元ベクトルから平行移動行列を作成します。</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">各軸の平行移動量。</param>
      <returns vsli:raw="The translation matrix.">平行移動行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">指定した X、Y、Z 成分から平行移動行列を作成します。</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">X 軸方向の平行移動量。</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">Y 軸方向の平行移動量。</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">Z 軸方向の平行移動量。</param>
      <returns vsli:raw="The translation matrix.">平行移動行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">指定したパラメーターによるワールド行列を作成します。</summary>
      <param name="position" vsli:raw="The position of the object.">オブジェクトの位置。</param>
      <param name="forward" vsli:raw="The forward direction of the object.">オブジェクトの前方向。</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">オブジェクトの上方向。 通常、その値は <c>[0, 1, 0]</c> です。</param>
      <returns vsli:raw="The world matrix.">ワールド行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">指定された拡大縮小、回転、または平行移動行列から、拡大縮小、平行移動、および回転の成分の抽出を試みます。 戻り値は、演算が成功したかどうかを示します。</summary>
      <param name="matrix" vsli:raw="The source matrix.">元となる行列。</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">操作が成功した場合、このメソッドから戻る際に、変換行列の拡大縮小成分が入れられます。</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">操作が成功した場合、このメソッドから戻る際に、変換行列の回転成分が入れられます。</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">操作が成功した場合、このメソッドから戻る際に、変換行列の平行移動成分が入れられます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が正常に成分分解された場合は <paramref name="matrix" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">このインスタンスと、別の 4 × 4 行列が等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other matrix.">もう 1 つの行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの行列が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">現在の 4 x 4 行列の行列式を計算します。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">積単位行列を取得します。</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">積単位行列を取得します。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">指定した行列の逆行列を計算します。 戻り値は、演算が成功したかどうかを示します。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">逆行列を計算する行列。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">操作が成功した場合、このメソッドから戻る際に、逆行列が入れられます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が正常に変換された場合は <paramref name="matrix" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">現在の行列が単位行列かどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在の行列が単位行列である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">1 つの行列から 2 番目の行列までの線形補間を、2 番目の行列の重み付けを指定する値に基づいて実行します。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="matrix2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> の相対的な重み付け。</param>
      <returns vsli:raw="The interpolated matrix.">補間結果の行列。</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">最初の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">最初の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">最初の行の 3 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">最初の行の 4 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">2 番目の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">2 番目の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">2 番目の行の 3 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">2 番目の行の 4 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">3 番目の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">3 番目の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">3 番目の行の 3 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">3 番目の行の 4 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">4 番目の行の最初の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">4 番目の行の 2 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">4 番目の行の 3 番目の要素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">4 番目の行の 4 番目の要素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">2 つの行列の乗算結果となる積行列を返します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The product matrix.">積行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">指定した行列のすべての要素をスカラー因子倍した行列を返します。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">スカラー倍演算の対象となる行列。</param>
      <param name="value2" vsli:raw="The scaling value to use.">使用する倍率値。</param>
      <returns vsli:raw="The scaled matrix.">スケール調節された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">指定した行列のすべての成分値に -1 を乗算することにより、その符号を反転します。</summary>
      <param name="value" vsli:raw="The matrix to negate.">符号反転の対象となる行列。</param>
      <returns vsli:raw="The negated matrix.">符号反転された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">1 つの行列の各要素に、2 番目の行列の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix that contains the summed values.">加算結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">指定された行列が等しいかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">比較対象の 1 番目の行列。</param>
      <param name="value2" vsli:raw="The second matrix to care.">比較対象の 2 番目の行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しい場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">指定された行列が等しくないかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">比較対象の 1 番目の行列。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">比較対象の 2 番目の行列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しくない場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">2 つの行列の乗算結果となる積行列を返します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The product matrix.">積行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">指定した行列のすべての要素をスカラー因子倍した行列を返します。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">スカラー倍演算の対象となる行列。</param>
      <param name="value2" vsli:raw="The scaling value to use.">使用する倍率値。</param>
      <returns vsli:raw="The scaled matrix.">スケール調節された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">2 番目の行列の各要素を、最初の行列の対応する要素からそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">指定した行列のすべての成分値に -1 を乗算することにより、その符号を反転します。</summary>
      <param name="value" vsli:raw="The matrix to negate.">符号反転の対象となる行列。</param>
      <returns vsli:raw="The negated matrix.">符号反転された行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">2 番目の行列の各要素を、最初の行列の対応する要素からそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first matrix.">最初の行列。</param>
      <param name="value2" vsli:raw="The second matrix.">2 番目の行列。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする行列。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">この行列を表す文字列を返します。</summary>
      <returns vsli:raw="The string representation of this matrix.">この行列の文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">指定した四元数回転を適用することにより、指定したマトリックスを変換します。</summary>
      <param name="value" vsli:raw="The matrix to transform.">変換対象の行列。</param>
      <param name="rotation" vsli:raw="The rotation t apply.">適用する回転。</param>
      <returns vsli:raw="The transformed matrix.">変換結果の行列。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">この行列の平行移動成分を取得または設定します。</summary>
      <returns vsli:raw="The translation component of the current instance.">現在のインスタンスの平行移動成分。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">行列の行と列を入れ替えます。</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">転置演算の対象となる行列。</param>
      <returns vsli:raw="The transposed matrix.">転置結果の行列。</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">3 次元空間の平面を表します。</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">法線と、原点からの法線に沿った距離を指定して、<see cref="T:System.Numerics.Plane" /> オブジェクトを作成します。</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">平面の法線ベクトル。</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">原点から平面への法線ベクトルに沿った距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">4 次元ベクトルを指定して <see cref="T:System.Numerics.Plane" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">最初の 3 つの要素で法線ベクトルを記述し、その法線に沿った原点からの距離を <see cref="F:System.Numerics.Vector4.W" /> で定義するベクトル。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">法線の X 成分、Y 成分、および Z 成分と、原点からの法線に沿った距離を指定して、<see cref="T:System.Numerics.Plane" /> オブジェクトを作成します。</summary>
      <param name="x" vsli:raw="The X component of the normal.">法線の X 成分。</param>
      <param name="y" vsli:raw="The Y component of the normal.">法線の Y 成分。</param>
      <param name="z" vsli:raw="The Z component of the normal.">法線の Z 成分。</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">原点から平面への法線に沿った距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">3 つの指定したポイントを含む <see cref="T:System.Numerics.Plane" /> オブジェクトを作成します。</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">平面を定義する最初のポイント。</param>
      <param name="point2" vsli:raw="The second point defining the plane.">平面を定義する 2 番目のポイント。</param>
      <param name="point3" vsli:raw="The third point defining the plane.">平面を定義する 3 番目のポイント。</param>
      <returns vsli:raw="The plane containing the three points.">3 つのポイントを含む平面。</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">原点から平面への法線に沿った距離。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">平面と 4 次元ベクトルのドット積を計算します。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The four-dimensional vector.">4 次元ベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">指定した 3 次元ベクトルと、この平面の法線ベクトルと距離 (<see cref="F:System.Numerics.Plane.D" />) 値とのドット積を返します。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">3 次元ベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">指定した 3 次元ベクトルと、この平面の <see cref="F:System.Numerics.Plane.Normal" /> ベクトルとのドット積を返します。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The three-dimensional vector.">3 次元ベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">このインスタンスと、別の平面オブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other plane.">他方の平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの平面が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">平面の法線ベクトル。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">ソース平面の正規化された法線ベクトルを法線ベクトルとする新しい <see cref="T:System.Numerics.Plane" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The source plane.">ソース平面。</param>
      <returns vsli:raw="The normalized plane.">正規化された平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">2 つの平面が等しいかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">比較する最初の平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">比較する 2 番目の平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しい場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">2 つの平面が等しくないかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">比較する最初の平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">比較する 2 番目の平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しくない場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">この平面オブジェクトの文字列表現を返します。</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">この <see cref="T:System.Numerics.Plane" /> オブジェクトを表す文字列。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">正規化された平面を 4 × 4 行列によって変換します。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">変換する対象の、正規化された平面。</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">
        <paramref name="plane" /> に適用する変換行列。</param>
      <returns vsli:raw="The transformed plane.">変換された平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">正規化された平面を四元数ローテーションによって変換します。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">変換する対象の、正規化された平面。</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">平面に適用する四元数ローテーション。</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">四元数ローテーション適用した結果の、新しい平面。</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">3 次元物理回転をエンコードするために使用されるベクトルを表します。</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">指定したベクトルおよび回転部分から四元数を作成します。</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">四元数のベクトル部分。</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">四元数の回転部分。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">指定した成分から四元数を構築します。</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">四元数の X 成分に代入する値。</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">四元数の Y 成分に代入する値。</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">四元数の Z 成分に代入する値。</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">四元数の W 成分に代入する値。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">1 つの四元数の各要素に、2 番目の四元数の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> と <paramref name="value2" /> の加算結果の値を内容とする四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">2 つの四元数を連結します。</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">シリーズの最初の四元数回転。</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">シリーズの 2 番目の四元数回転。</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">
        <paramref name="value1" /> の回転の後に <paramref name="value2" /> の回転をするという連結を表す新しい四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">指定した四元数の共役を返します。</summary>
      <param name="value" vsli:raw="The quaternion.">四元数。</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">
        <see langword="value" /> の共役である新しい四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">単位ベクトルとベクトルの周りの回転角度から四元数を作成します。</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">回転軸となる単位ベクトル。</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">ベクトルの周りの回転角度 (ラジアン)。</param>
      <returns vsli:raw="The newly created quaternion.">新しく作成される四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">指定した回転行列から四元数を作成します。</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">回転行列。</param>
      <returns vsli:raw="The newly created quaternion.">新しく作成される四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">特定のヨー、ピッチ、およびロールから新しい四元数を作成します。</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">Y 軸の周りのヨー角度 (ラジアン)。</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">X 軸の周りのピッチ角度 (ラジアン)。</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">Z 軸の周りのロール角度 (ラジアン)。</param>
      <returns vsli:raw="The resulting quaternion.">結果として得られる四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">ある四元数を 2 番目の四元数で除算します。</summary>
      <param name="value1" vsli:raw="The dividend.">被除数。</param>
      <param name="value2" vsli:raw="The divisor.">除数。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> を <paramref name="value2" /> で除算した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">2 つの四元数のドット積を計算します。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">このインスタンスと、別の四元数が等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other quaternion.">もう 1 つの四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの四元数が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">回転なしを表す四元数を取得します。</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">値が<c>(0, 0, 0, 1)</c>である四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">四元数の逆数を返します。</summary>
      <param name="value" vsli:raw="The quaternion.">四元数。</param>
      <returns vsli:raw="The inverted quaternion.">逆四元数。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">現在のインスタンスが単位四元数かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスが単位四元数である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">四元数の長さを計算します。</summary>
      <returns vsli:raw="The computed length of the quaternion.">計算された四元数の長さ。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">四元数の長さの 2 乗を計算します。</summary>
      <returns vsli:raw="The length squared of the quaternion.">2 乗された四元数の長さ。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">2 つの四元数の間の線形補間を、2 番目の四元数の重み付けを指定する値に基づいて実行します。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">補間での <paramref name="quaternion2" /> の相対的重み。</param>
      <returns vsli:raw="The interpolated quaternion.">補間四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">2 つの四元数を乗算することによって生成される四元数を返します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The product quaternion.">積四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">指定した四元数のすべての成分をスカラー因子倍した四元数を返します。</summary>
      <param name="value1" vsli:raw="The source quaternion.">元の四元数。</param>
      <param name="value2" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled quaternion.">スケール調節した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">四元数の各成分の符号を反転させます。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">符号反転する四元数。</param>
      <returns vsli:raw="The negated quaternion.">符号反転した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">指定した <see cref="T:System.Numerics.Quaternion" /> の各成分を、その長さで除算します。</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">正規化する四元数。</param>
      <returns vsli:raw="The normalized quaternion.">正規化した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">1 つの四元数の各要素に、2 番目の四元数の対応する要素を加算します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> と <paramref name="value2" /> の加算結果の値を内容とする四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">ある四元数を 2 番目の四元数で除算します。</summary>
      <param name="value1" vsli:raw="The dividend.">被除数。</param>
      <param name="value2" vsli:raw="The divisor.">除数。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> を <paramref name="value2" /> で除算した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">2 つの四元数が等しいかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">比較する最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">比較する 2 番目の四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの四元数が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">2 つの四元数が等しくないかどうかを示す値を返します。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">比較する最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">比較する 2 番目の四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="value1" /> が等しくない場合は <paramref name="value2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">2 つの四元数を乗算することによって生成される四元数を返します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The product quaternion.">積四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">指定した四元数のすべての成分をスカラー因子倍した四元数を返します。</summary>
      <param name="value1" vsli:raw="The source quaternion.">元の四元数。</param>
      <param name="value2" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled quaternion.">スケール調節した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">最初の四元数の各要素から、2 番目の四元数の対応する要素をそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">四元数の各成分の符号を反転させます。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">符号反転する四元数。</param>
      <returns vsli:raw="The negated quaternion.">符号反転した結果の四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">球面線形補間を使用して 2 つの四元数の間を補間します。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">補間での 2 番目の四元数の相対的な重み。</param>
      <returns vsli:raw="The interpolated quaternion.">補間四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">最初の四元数の各要素から、2 番目の四元数の対応する要素をそれぞれ減算します。</summary>
      <param name="value1" vsli:raw="The first quaternion.">最初の四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">2 番目の四元数。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">
        <paramref name="value2" /> の各要素を、<paramref name="value1" /> の中の対応する要素から減算した結果の値を内容とする四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">この四元数を表す文字列を返します。</summary>
      <returns vsli:raw="The string representation of this quaternion.">この四元数の文字列形式。</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">四元数の回転成分。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">四元数のベクトル成分の X 値。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">四元数のベクトル成分の Y 値。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">四元数のベクトル成分の Z 値。</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">ジェネリックなベクトルの作成、操作、結合、変換を行う便利な静的メソッドのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">指定したベクトルの要素の絶対値を要素とする新しいベクトルを返します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The absolute value vector.">絶対値ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">指定した 2 つのベクトルの要素の各ペアの合計値をその値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">2 つのベクトルの対応する要素の各ペアに対してビット単位の And Not 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">指定したベクトルのビットを、符号なしバイトのベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">指定したベクトルのビットを、倍精度浮動小数点のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">指定したベクトルのビットを、16 ビット整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">指定したベクトルのビットを、整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">指定したベクトルのビットを、長整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">指定したベクトルのビットを、符号付きバイトのベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">指定したベクトルのビットを、単精度浮動小数点のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">指定したベクトルのビットを、符号なし 16 ビット整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">指定したベクトルのビットを、符号なし整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">指定したベクトルのビットを、符号なし長整数のベクトルのビットとして再解釈します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">2 つのベクトルの要素の各ペアに対してビット単位の <see langword="And" /> 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">2 つのベクトルの要素の各ペアに対してビット単位の <see langword="Or" /> 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">指定した 2 つの単精度ソース ベクトルの間で、整数のマスク ベクトルに基づいて選択した値を要素とする新しい単精度ベクトルを作成します。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">選択を行うために使用される整数のマスク ベクトル。</param>
      <param name="left" vsli:raw="The first source vector.">最初のソース ベクトル。</param>
      <param name="right" vsli:raw="The second source vector.">2 番目のソース ベクトル。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">マスクに基づいて選択した値を要素とする新しいベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">指定した 2 つの倍精度ソース ベクトルの間で、整数のマスク ベクトルに基づいて選択した値を要素とする新しい倍精度ベクトルを作成します。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">選択を行うために使用される整数のマスク ベクトル。</param>
      <param name="left" vsli:raw="The first source vector.">最初のソース ベクトル。</param>
      <param name="right" vsli:raw="The second source vector.">2 番目のソース ベクトル。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">マスクに基づいて選択した値を要素とする新しいベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">指定した同じ型の 2 つのソース ベクトルの間で、整数のマスク ベクトルに基づいて選択した値を要素とする、指定した型の新しいベクトルを作成します。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">選択を行うために使用される整数のマスク ベクトル。</param>
      <param name="left" vsli:raw="The first source vector.">最初のソース ベクトル。</param>
      <param name="right" vsli:raw="The second source vector.">2 番目のソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">マスクに基づいて選択した値を要素とする新しいベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Int64&gt;</c> を <c>Vector&lt;Double&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;UInt64&gt;</c> を <c>Vector&lt;Double&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Single&gt;</c> を <c>Vector&lt;Int32&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Double&gt;</c> を <c>Vector&lt;Int64&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Int32&gt;</c> を <c>Vector&lt;Single&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;UInt32&gt;</c> を <c>Vector&lt;Single&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Single&gt;</c> を <c>Vector&lt;UInt32&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">
        <c>Vector&lt;Double&gt;</c> を <c>Vector&lt;UInt64&gt;</c> に変換します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The converted vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">最初のベクトルの要素を 2 番目のベクトル内の対応する要素で除算した結果を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The divided vector.">除算されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">2 つのベクトルのドット積を返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">指定した 2 つの倍精度ベクトル内の要素が等しいかどうかを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">指定した 2 つの整数ベクトル内の要素が等しいかどうかを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">指定した 2 つの長整数ベクトル内の要素が等しいかどうかを通知する値を要素とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting long integer vector.">結果の長整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">指定した 2 つの単精度ベクトル内の要素が等しいかどうかを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">指定した同じ型の 2 つのベクトル内の要素が等しいかどうかを通知する値を要素とする、指定した型の新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">指定したベクトルの要素の各ペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> と <paramref name="right" /> のすべての要素が等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">指定したベクトルの要素のいずれか 1 つのペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> と <paramref name="right" /> のいずれかの要素ペアが等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">1 つの倍精度浮動小数点のベクトル内の要素が、2 番目の倍精度浮動小数点のベクトル内の対応する要素より大きいかどうかを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">1 つの整数ベクトル内の要素が 2 番目の整数ベクトル内の対応する要素より大きいかどうかを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">1 つの長整数ベクトル内の要素が 2 番目の長整数ベクトル内の対応する要素より大きいかどうかを通知する値を要素とする新しい長整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting long integer vector.">結果の長整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">1 つの単精度浮動小数点のベクトル内の要素が、2 番目の単精度浮動小数点のベクトル内の対応する要素より大きいかどうかを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">指定した型の 1 つのベクトル内の要素が、同じ型の 2 番目のベクトル内の対応する要素より大きいかどうかを通知する値を要素とする、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">最初のベクトル内のすべての要素が 2 番目のベクトル内の対応する要素より大きいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のすべての要素が <paramref name="right" /> 内の対応する要素より大きい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">最初のベクトル内のいずれかの要素が 2 番目のベクトル内の対応する要素より大きいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のいずれかの要素が <paramref name="right" /> 内の対応する要素より大きい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">1 つのベクトル内の要素が 2 番目の倍精度浮動小数点ベクトル内の対応する要素より大きいか等しいことを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">1 つの整数ベクトル内の要素が 2 番目の整数ベクトル内の対応する要素より大きいか等しいことを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">1 つの長整数ベクトル内の要素が 2 番目の長整数ベクトル内の対応する要素より大きいか等しいことを通知する値を要素とする新しい長整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting long integer vector.">結果の長整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">1 つのベクトル内の要素が 2 番目の単精度浮動小数点ベクトル内の対応する要素より大きいか等しいことを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">指定した型の 1 つのベクトル内の要素が、同じ型の 2 番目のベクトル内の対応する要素より大きいか等しいことを通知する値を要素とする、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">最初のベクトル内のすべての要素が 2 番目のベクトル内の対応する要素より大きいか等しいことを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のすべての要素が <paramref name="right" /> 内の対応する要素より大きいか等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">最初のベクトル内のいずれかの要素が 2 番目のベクトル内の対応する要素より大きいか等しいことを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のいずれかの要素が <paramref name="right" /> 内の対応する要素より大きいか等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">ベクトル演算が JIT の組み込みサポートによりハードウェア アクセラレータの対象になるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ベクトル演算がハードウェア アクセラレータの対象になる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">1 つの倍精度浮動小数点のベクトル内の要素が、2 番目の倍精度浮動小数点のベクトル内の対応する要素より小さいかどうかを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">1 つの整数ベクトル内の要素が 2 番目の整数ベクトル内の対応する要素より小さいかどうかを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">1 つの長整数ベクトル内の要素が 2 番目の長整数ベクトル内の対応する要素より小さいかどうかを通知する値を要素とする新しい長整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting long integer vector.">結果の長整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">1 つの単精度のベクトル内の要素が、2 番目の単精度のベクトル内の対応する要素より小さいかどうかを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">1 つのベクトル内の要素が 2 番目のベクトル内の対応する要素より小さいかどうかを通知する値を要素とする、指定した型の新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">最初のベクトル内のすべての要素が 2 番目のベクトル内の対応する要素より小さいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のすべての要素が <paramref name="right" /> 内の対応する要素より小さい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">最初のベクトル内のいずれかの要素が 2 番目のベクトル内の対応する要素より小さいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のいずれかの要素が <paramref name="right" /> 内の対応する要素より小さい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">1 つの倍精度浮動小数点のベクトル内の要素が、2 番目の倍精度浮動小数点のベクトル内の対応する要素より小さいか等しいことを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">1 つの整数ベクトル内の要素が 2 番目の整数ベクトル内の対応する要素より小さいか等しいことを通知する値を要素とする新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">1 つの長整数ベクトル内の要素が 2 番目の長整数ベクトル内の対応する要素より小さいか等しいことを通知する値を要素とする新しい長整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting long integer vector.">結果の長整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">1 つの単精度浮動小数点のベクトル内の要素が、2 番目の単精度浮動小数点のベクトル内の対応する要素より小さいか等しいことを通知する値を要素とする、新しい整数ベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="The resulting integral vector.">結果の整数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">1 つのベクトル内の要素が 2 番目のベクトル内の対応する要素より小さいか等しいことを通知する値を要素とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">最初のベクトル内のすべての要素が 2 番目のベクトル内の対応する要素より小さいか等しいことを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のすべての要素が <paramref name="right" /> 内の対応する要素より小さいか等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">最初のベクトル内のいずれかの要素が 2 番目のベクトル内の対応する要素より小さいか等しいことを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> 内のいずれかの要素が <paramref name="right" /> 内の対応する要素より小さいか等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">指定した 2 つのベクトルの要素の各ペアの最大値を要素とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The maximum vector.">最大値のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">指定した 2 つのベクトルの要素の各ペアの最小値を要素とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The minimum vector.">最小値のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">指定したベクトルの各値を乗算したスカラー値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The scalar value.">スカラー値。</param>
      <param name="right" vsli:raw="The vector.">ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">指定したベクトルの各値をスカラー値で乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;Double&gt;</c> インスタンスを 1 つの <c>Vector&lt;&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;Single&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;Int16&gt;</c> インスタンスを 1 つの <c>Vector&lt;SByte&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;SByte&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;Int32&gt;</c> インスタンスを 1 つの <c>Vector&lt;Int16&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;Int16&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;Int64&gt;</c> インスタンスを 1 つの <c>Vector&lt;Int32&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;Int32&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;UInt16&gt;</c> インスタンスを 1 つの <c>Vector&lt;Byte&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;Byte&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;UInt32&gt;</c> インスタンスを 1 つの <c>Vector&lt;UInt16&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;UInt16&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">2 つの <c>Vector&lt;UInt64&gt;</c> インスタンスを 1 つの <c>Vector&lt;UInt32&gt;</c> に縮小変換します。</summary>
      <param name="source1">要素が戻り値の下位インデックス要素になる最初のソース ベクトル。</param>
      <param name="source2">要素が戻り値の上位インデックス要素になる 2 番目のソース ベクトル。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">ソース ベクトルから縮小変換された要素を含む 1 つの <c>Vector&lt;UInt32&gt;</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">指定したベクトルの要素を符号反転した値を要素とする新しいベクトルを返します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">指定したベクトルの要素の 1 の補数をとった値を要素とする新しいベクトルを返します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">指定したベクトルの要素の平方根を要素とする新しいベクトルを返します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The square root vector.">ベクトルの平方根。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">2 番目のベクトルの要素と最初のベクトルの対応する要素の差を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The difference vector.">差ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;Byte&gt;</c> を 2 つの <c>Vector&lt;UInt16&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;Int16&gt;</c> を 2 つの <c>Vector&lt;Int32&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;Int32&gt;</c> を 2 つの <c>Vector&lt;Int64&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;SByte&gt;</c> を 2 つの <c>Vector&lt;Int16&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;Single&gt;</c> を 2 つの <c>Vector&lt;Double&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;UInt16&gt;</c> を 2 つの <c>Vector&lt;UInt32&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">1 つの <c>Vector&lt;UInt32&gt;</c> を 2 つの <c>Vector&lt;UInt64&gt;</c> インスタンスに拡大変換します。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">要素が出力に拡張されるソース ベクトル。</param>
      <param name="dest1">要素にソース ベクトルの下位インデックスから拡張された要素を含む、最初の出力ベクトル。</param>
      <param name="dest2">要素がソース ベクトルの上位インデックスから拡張された要素を含む、2 番目の出力ベクトル。</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">2 つのベクトルの要素の各ペアに対してビット単位の排他的論理和 (<see langword="XOr" />) 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
      <returns vsli:raw="The resulting vector.">結果のベクトル。</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">並列アルゴリズムの下位レベルでの最適化に適する、指定した数値型の 1 つのベクトルを表します。</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">ベクトルの型。 <c>T</c>には、任意のプリミティブ数値型を指定できます。</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">指定した型を成分とするベクトルを作成します。</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">ベクトルの成分の型を定義する数値型。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">指定した配列からベクトルを作成します。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">数値の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">指定した配列の、指定したインデックス位置を開始位置として、ベクトルを作成します。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">数値の配列。</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">ベクトルを作成するための開始インデックス位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="values" /> の長さから <paramref name="index" /> を引いた長さが <see cref="P:System.Numerics.Vector`1.Count" /> 未満です。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">指定した <see cref="T:System.ReadOnlySpan`1" /> からベクトルを構築します。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">型 T のオブジェクトの読み取り専用の範囲として、ベクトルに追加する値。この範囲には少なくとも <see cref="P:System.Numerics.Vector`1.Count" /> の要素が含まれている必要があります。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">指定したバイトの読み取り専用の範囲からベクトルを構築します。</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">ベクトルに追加する値を含む、バイトの読み取り専用の範囲。 この範囲には少なくとも <see cref="P:System.Numerics.Vector`1.Count" /> の要素が含まれている必要があります。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">指定した <see cref="T:System.Span`1" /> からベクトルを構築します。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">型 T のオブジェクトの範囲として、ベクトルに追加する値。この範囲には少なくとも <see cref="P:System.Numerics.Vector`1.Count" /> の要素が含まれている必要があります。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">指定した宛先の配列に、ベクトルのインスタンスをコピーします。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">ベクトルの値のコピーを受け取る配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">現在のベクトル内の要素数が、<paramref name="destination" /> 配列内の使用可能な要素数を超えています。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">指定した宛先の配列に、指定したインデックス位置を開始位置として、ベクトルのインスタンスをコピーします。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">ベクトルの値のコピーを受け取る配列。</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">コピー操作を開始する、<paramref name="destination" /> 内の開始インデックス位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">現在のインスタンスの要素数が、<paramref name="startIndex" /> 配列の <paramref name="destination" /> から末尾までの使用可能な要素数を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> の値が 0 未満であるか、<paramref name="destination" /> の最後のインデックスの値を超えています。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">ベクトルを指定した範囲にコピーします。 」を参照してください。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">値のコピー先の範囲。 コピー先の範囲は、サイズ <see cref="P:System.Numerics.Vector`1.Count" /> 以上である必要があります。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">ソース ベクトルの要素数が、コピー先の範囲で利用できる数を超えています。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">ベクトルを指定した <see cref="T:System.Span`1" /> にコピーします。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">値のコピー先の範囲。 コピー先の範囲は、サイズ <see cref="P:System.Numerics.Vector`1.Count" /> 以上である必要があります。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">ソース ベクトルの要素数が、コピー先の範囲で利用できる数を超えています。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">ベクトルに格納されている要素の数を返します。</summary>
      <returns vsli:raw="The number of elements stored in the vector.">ベクトルに格納されている要素の数。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">リフレクションを使用してプロパティ get アクセス操作子にアクセスすることは、サポートされていません。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">このインスタンスが、指定したベクトルと等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">このインスタンスと比較するベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="other" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">このインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 このメソッドは、<see langword="false" /> が null の場合、または <paramref name="obj" /> が現在のインスタンスとは異なる型のベクトルである場合に、<paramref name="obj" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">指定したインデックス位置にある要素を取得します。</summary>
      <param name="index" vsli:raw="The index of the element to return.">返される要素のインデックス。</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">インデックス位置 <paramref name="index" /> にある要素。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が <see cref="P:System.Numerics.Vector`1.Count" /> 以上です。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">すべての要素が 1 のベクトルを返します。</summary>
      <returns vsli:raw="A vector containing all ones.">すべての要素が 1 のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">2 つのベクトルの各要素に対してビット単位の <see langword="And" /> 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <see langword="And" /> と <paramref name="left" /> のビット単位の <paramref name="right" /> 演算を実行した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">2 つのベクトルの各要素に対してビット単位の <see langword="Or" /> 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <see langword="Or" /> と <paramref name="left" /> の要素のビット単位の <paramref name="right" /> 演算を実行した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> を <paramref name="right" /> で除算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">指定した 2 つのベクトルの要素の各ペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">2 つのベクトルの各要素に対してビット単位の <see langword="XOr" /> 演算を実行して、新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <see langword="XOr" /> と <paramref name="left" /> の要素のビット単位の <paramref name="right" /> 演算を実行した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Byte" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Double" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Int16" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Int32" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Int64" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.SByte" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.Single" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.UInt16" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.UInt32" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">指定したベクトルのビットを、<see cref="T:System.UInt64" /> 型のベクトルとして再解釈します。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">再解釈するベクトル。</param>
      <returns vsli:raw="The reinterpreted vector.">再解釈されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">指定したベクトルの要素のいずれか 1 つのペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">左辺と右辺でいずれかの要素ペアが等しい場合は <see langword="true" />。 等しい要素ペアがない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">ベクトルを、指定したスカラー値で乗算します。</summary>
      <param name="factor" vsli:raw="The scalar value.">スカラー値。</param>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">ベクトルを、指定したスカラー値で乗算します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="factor" vsli:raw="A scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">指定したベクトルの要素の 1 の補数をとった値を要素とする新しいベクトルを返します。</summary>
      <param name="value" vsli:raw="The source vector.">ソース ベクトル。</param>
      <returns vsli:raw="The one's complement vector.">1 の補数ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> から <paramref name="left" /> を減算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">指定したベクトルを符号反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">既定の書式設定を使用してこのベクトルの文字列表現を返します。</summary>
      <returns vsli:raw="The string representation of this vector.">このベクトルの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">指定した書式設定文字列を使用して個々の要素を書式設定することにより、このベクトルの文字列表現を返します。</summary>
      <param name="format" vsli:raw="The format of individual elements.">個々の要素の書式を定義する、 または 。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">指定した書式設定文字列を使用して個々の要素を書式設定し、さらに、指定した書式設定プロバイダーを使用してカルチャ固有書式設定を定義することによって、このベクトルの文字列表現を返します。</summary>
      <param name="format" vsli:raw="The format of individual elements.">個々の要素の書式を定義する、 または 。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">カルチャ固有の書式情報を提供する書式設定プロバイダー。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">指定した <see cref="T:System.Span`1" /> にベクトルをコピーしようとします。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">値のコピー先の範囲。 コピー先の範囲は、サイズ <see cref="P:System.Numerics.Vector`1.Count" /> 以上である必要があります。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">ソース ベクトルが正常に <see langword="true" /> にコピーされた場合は <paramref name="destination" />。 <see langword="false" /> はソース ベクトルを保持できるほど大きくない場合は <paramref name="destination" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">指定したバイト範囲にベクトルをコピーしようとします。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">値のコピー先の範囲。 コピー先の範囲は、サイズ <see cref="P:System.Numerics.Vector`1.Count" /> 以上である必要があります。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">ソース ベクトルが正常に <see langword="true" /> にコピーされた場合は <paramref name="destination" />。 <see langword="false" /> はソース ベクトルを保持できるほど大きくない場合は <paramref name="destination" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">すべての要素がゼロのベクトルを返します。</summary>
      <returns vsli:raw="A vector containing all zeroes.">すべての要素がゼロのベクトル。</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">2 つの単精度浮動小数点値を持つベクトルを表します。</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">2 つの要素が同じ値を持つ新しい <see cref="T:System.Numerics.Vector2" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">両方の要素に割り当てる値。</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">指定した値を要素とするベクトルを作成します。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector2.X" /> フィールドに代入する値。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector2.Y" /> フィールドに代入する値。</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">指定したベクトルの各要素の絶対値を要素とするベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The absolute value vector.">絶対値ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">ベクトルを最小値と最大値の間に制限します。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">制限するベクトル。</param>
      <param name="min" vsli:raw="The minimum value.">最小値。</param>
      <param name="max" vsli:raw="The maximum value.">最大値。</param>
      <returns vsli:raw="The restricted vector.">制限付きベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">ベクトルの要素を、指定された配列にコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">指定した配列に、指定したインデックス位置を開始位置として、ベクトルの要素をコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">ベクトルの最初の要素のコピー先位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が配列の長さ以上です。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">指定した 2 点間のユークリッド距離を計算します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">指定した 2 点間のユークリッド距離の 2 乗を返します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance squared.">距離の 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector resulting from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="divisor" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The vector that results from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">2 つのベクトルのドット積を返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">このインスタンスと、別のベクトルが等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other vector.">もう 1 つのベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのベクトルが等しい場合は <see langword="true" />、そうでない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">ベクトルの長さを返します。</summary>
      <returns vsli:raw="The vector's length.">ベクトルの長さ。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">ベクトルの長さの 2 乗を返します。</summary>
      <returns vsli:raw="The vector's length squared.">ベクトルの長さの 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">指定された重み付けに基づいて、2 つのベクトル間の線形補間を実行します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" /> の重みを示す 0 と 1 の間の値。</param>
      <returns vsli:raw="The interpolated vector.">補間ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの大きい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The maximized vector.">最大化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの小さい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The minimized vector.">最小化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">ベクトルに、指定したスカラーを乗算します。</summary>
      <param name="left" vsli:raw="The vector to multiply.">乗算するベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">指定したベクトルとスカラー値を乗算します。</summary>
      <param name="left" vsli:raw="The scaled value.">スケール調節された値。</param>
      <param name="right" vsli:raw="The vector.">ベクトル。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">指定したベクトルの符号を反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">指定したベクトルと方向が同じで、長さが 1 であるベクトルを返します。</summary>
      <param name="value" vsli:raw="The vector to normalize.">正規化するベクトル。</param>
      <returns vsli:raw="The normalized vector.">正規化後のベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">2 つの要素が 1 に等しいベクトルを取得します。</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">2つの要素が1に等しいベクトル (つまり、ベクトル<c>(1, 1)</c>を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> を <paramref name="right" /> で除算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="value1" vsli:raw="The vector.">ベクトル。</param>
      <param name="value2" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The result of the division.">除算結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">指定した 2 つのベクトルの要素の各ペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">指定した 2 つのベクトルが等しくないかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しくない場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定したベクトルを、指定したスカラー値で乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">スカラー値に、指定されたベクトルを乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> から <paramref name="left" /> を減算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">指定したベクトルを符号反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">指定した法線を持つ表面からのベクトルの反射を返します。</summary>
      <param name="vector" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">反射の基準となる表面の法線。</param>
      <returns vsli:raw="The reflected vector.">反射されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">指定したベクトルの各要素の平方根を要素として持つベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The square root vector.">ベクトルの平方根。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The difference vector.">差ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">既定の書式設定を使用して現在のインスタンスの文字列表現を返します。</summary>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">指定した書式設定文字列を使用して個々の要素を書式設定することにより、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">指定した書式設定文字列を使用して個々の要素を書式設定し、また、指定した書式設定プロバイダーを使用してカルチャ固有書式設定を定義することによって、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">カルチャ固有の書式情報を提供する書式設定プロバイダー。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">指定した 3 x 2 行列でベクトルを変換します。</summary>
      <param name="position" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">指定した 4 x 4 行列でベクトルを変換します。</summary>
      <param name="position" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">指定した四元数回転値によって、ベクトルを変換します。</summary>
      <param name="value" vsli:raw="The vector to rotate.">回転するベクトル。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">適用する回転。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">特定の 3 x 2 行列でベクトル法線を変換します。</summary>
      <param name="normal" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="matrix" vsli:raw="The matrix.">行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">特定の 4 x 4 行列でベクトル法線を変換します。</summary>
      <param name="normal" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="matrix" vsli:raw="The matrix.">行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">ベクトル (1,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">ベクター <c>(1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">ベクトル (0,1) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">ベクター <c>(0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">ベクトルの X 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">ベクトルの Y 成分。</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">2 つの要素が 0 に等しいベクトルを返します。</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">2つの要素が0に等しいベクトル (つまり、ベクトル<c>(0, 0)</c>を返します。</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">3 つの単精度浮動小数点値を持つベクトルを表します。</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">指定した <see cref="T:System.Numerics.Vector3" /> オブジェクトと指定した値から、新しい <see cref="T:System.Numerics.Vector2" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The vector with two elements.">2 つの要素を持つベクトル。</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Z" /> フィールドに代入する追加の値。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">3 つの要素が同じ値を持つ新しい <see cref="T:System.Numerics.Vector3" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">3 つの要素すべてに代入する値。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">指定した値を要素とするベクトルを作成します。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.X" /> フィールドに代入する値。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Y" /> フィールドに代入する値。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector3.Z" /> フィールドに代入する値。</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">指定したベクトルの各要素の絶対値を要素とするベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The absolute value vector.">絶対値ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">ベクトルを最小値と最大値の間に制限します。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">制限するベクトル。</param>
      <param name="min" vsli:raw="The minimum value.">最小値。</param>
      <param name="max" vsli:raw="The maximum value.">最大値。</param>
      <returns vsli:raw="The restricted vector.">制限付きベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">ベクトルの要素を、指定された配列にコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">指定した配列に、指定したインデックス位置を開始位置として、ベクトルの要素をコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">ベクトルの最初の要素のコピー先位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が配列の長さ以上です。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">2 つのベクターのクロス積を計算します。</summary>
      <param name="vector1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="vector2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The cross product.">クロス積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">指定した 2 点間のユークリッド距離を計算します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">指定した 2 点間のユークリッド距離の 2 乗を返します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance squared.">距離の 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector resulting from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="divisor" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The vector that results from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">2 つのベクトルのドット積を返します。</summary>
      <param name="vector1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="vector2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">このインスタンスと、別のベクトルが等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other vector.">もう 1 つのベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのベクトルが等しい場合は <see langword="true" />、そうでない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">このベクトル オブジェクトの長さを返します。</summary>
      <returns vsli:raw="The vector's length.">ベクトルの長さ。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">ベクトルの長さの 2 乗を返します。</summary>
      <returns vsli:raw="The vector's length squared.">ベクトルの長さの 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">指定された重み付けに基づいて、2 つのベクトル間の線形補間を実行します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" /> の重みを示す 0 と 1 の間の値。</param>
      <returns vsli:raw="The interpolated vector.">補間ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの大きい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The maximized vector.">最大化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの小さい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The minimized vector.">最小化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">ベクトルに、指定したスカラーを乗算します。</summary>
      <param name="left" vsli:raw="The vector to multiply.">乗算するベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">指定したベクトルとスカラー値を乗算します。</summary>
      <param name="left" vsli:raw="The scaled value.">スケール調節された値。</param>
      <param name="right" vsli:raw="The vector.">ベクトル。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">指定したベクトルの符号を反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">指定したベクトルと方向が同じで、長さが 1 であるベクトルを返します。</summary>
      <param name="value" vsli:raw="The vector to normalize.">正規化するベクトル。</param>
      <returns vsli:raw="The normalized vector.">正規化後のベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">3 つの要素が 1 に等しいベクトルを取得します。</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">3つの要素が1に等しいベクトル (つまり、ベクトル<c>(1, 1, 1)</c>を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> を <paramref name="right" /> で除算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="value1" vsli:raw="The vector.">ベクトル。</param>
      <param name="value2" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The result of the division.">除算結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">指定した 2 つのベクトルの要素の各ペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">指定した 2 つのベクトルが等しくないかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しくない場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定したベクトルを、指定したスカラー値で乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">スカラー値に、指定されたベクトルを乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> から <paramref name="left" /> を減算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">指定したベクトルを符号反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">指定した法線を持つ表面からのベクトルの反射を返します。</summary>
      <param name="vector" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">反射の基準となる表面の法線。</param>
      <returns vsli:raw="The reflected vector.">反射されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">指定したベクトルの各要素の平方根を要素として持つベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The square root vector.">ベクトルの平方根。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The difference vector.">差ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">既定の書式設定を使用して現在のインスタンスの文字列表現を返します。</summary>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">指定した書式設定文字列を使用して個々の要素を書式設定することにより、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">指定した書式設定文字列を使用して個々の要素を書式設定し、また、指定した書式設定プロバイダーを使用してカルチャ固有書式設定を定義することによって、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">カルチャ固有の書式情報を提供する書式設定プロバイダー。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">指定した 4 x 4 行列でベクトルを変換します。</summary>
      <param name="position" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">指定した四元数回転値によって、ベクトルを変換します。</summary>
      <param name="value" vsli:raw="The vector to rotate.">回転するベクトル。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">適用する回転。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">特定の 4 x 4 行列でベクトル法線を変換します。</summary>
      <param name="normal" vsli:raw="The source vector.">ソース ベクトル。</param>
      <param name="matrix" vsli:raw="The matrix.">行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">ベクトル (1,0,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">ベクター <c>(1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">ベクトル (0,1,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">ベクター <c>(0, 1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">ベクトル (0,0,1) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">ベクトル<c>(0, 0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">ベクトルの X 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">ベクトルの Y 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">ベクトルの Z 成分。</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">3 つの要素が 0 に等しいベクトルを取得します。</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">3つの要素が0に等しいベクトル (つまり、ベクトル<c>(0,</c>0, 0) を返します。</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">4 つの単精度浮動小数点値からなるベクトルを表します。</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">指定された <see cref="T:System.Numerics.Vector4" /> オブジェクト、そして Z および W 成分から、新しい <see cref="T:System.Numerics.Vector2" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">X 成分と Y 成分のために使用するベクトル。</param>
      <param name="z" vsli:raw="The Z component.">Z 成分。</param>
      <param name="w" vsli:raw="The W component.">W 成分。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">指定された <see cref="T:System.Numerics.Vector4" /> オブジェクトおよび W 成分から、新しい <see cref="T:System.Numerics.Vector3" /> オブジェクトを構成します。</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">X、Y、Z の各成分のために使用するベクトル。</param>
      <param name="w" vsli:raw="The W component.">W 成分。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">4 つの要素の値が同じである新しい <see cref="T:System.Numerics.Vector4" /> オブジェクトを作成します。</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">4 つの要素すべてに代入する値。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">指定した値を要素とするベクトルを作成します。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.X" /> フィールドに代入する値。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.Y" /> フィールドに代入する値。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.Z" /> フィールドに代入する値。</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">
        <see cref="F:System.Numerics.Vector4.W" /> フィールドに代入する値。</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">指定したベクトルの各要素の絶対値を要素とするベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The absolute value vector.">絶対値ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">ベクトルを最小値と最大値の間に制限します。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">制限するベクトル。</param>
      <param name="min" vsli:raw="The minimum value.">最小値。</param>
      <param name="max" vsli:raw="The maximum value.">最大値。</param>
      <returns vsli:raw="The restricted vector.">制限付きベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">ベクトルの要素を、指定された配列にコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">指定した配列に、指定したインデックス位置を開始位置として、ベクトルの要素をコピーします。</summary>
      <param name="array" vsli:raw="The destination array.">コピー先の配列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">ベクトルの最初の要素のコピー先位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">現在のインスタンスの要素数が、配列内の要素数を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が配列の長さ以上です。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> が多次元です。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">指定した 2 点間のユークリッド距離を計算します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">指定した 2 点間のユークリッド距離の 2 乗を返します。</summary>
      <param name="value1" vsli:raw="The first point.">最初の点。</param>
      <param name="value2" vsli:raw="The second point.">2 番目の点。</param>
      <returns vsli:raw="The distance squared.">距離の 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector resulting from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="divisor" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The vector that results from the division.">除算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">2 つのベクトルのドット積を返します。</summary>
      <param name="vector1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="vector2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The dot product.">ドット積。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">このインスタンスと、別のベクトルが等しいかどうかを示す値を返します。</summary>
      <param name="other" vsli:raw="The other vector.">もう 1 つのベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのベクトルが等しい場合は <see langword="true" />、そうでない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">このインスタンスと、指定したオブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">現在のインスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。 <paramref name="obj" /> が <see langword="null" /> の場合、メソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="The hash code.">ハッシュ コード。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">このベクトル オブジェクトの長さを返します。</summary>
      <returns vsli:raw="The vector's length.">ベクトルの長さ。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">ベクトルの長さの 2 乗を返します。</summary>
      <returns vsli:raw="The vector's length squared.">ベクトルの長さの 2 乗。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">指定された重み付けに基づいて、2 つのベクトル間の線形補間を実行します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value2" /> の重みを示す 0 と 1 の間の値。</param>
      <returns vsli:raw="The interpolated vector.">補間ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの大きい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The maximized vector.">最大化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアの小さい方を要素とするベクトルを返します。</summary>
      <param name="value1" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="value2" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The minimized vector.">最小化ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">ベクトルに、指定したスカラーを乗算します。</summary>
      <param name="left" vsli:raw="The vector to multiply.">乗算するベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">指定したベクトルとスカラー値を乗算します。</summary>
      <param name="left" vsli:raw="The scaled value.">スケール調節された値。</param>
      <param name="right" vsli:raw="The vector.">ベクトル。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">指定したベクトルの符号を反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">指定したベクトルと方向が同じで、長さが 1 であるベクトルを返します。</summary>
      <param name="vector" vsli:raw="The vector to normalize.">正規化するベクトル。</param>
      <returns vsli:raw="The normalized vector.">正規化後のベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">4 つの要素が 1 に等しいベクトルを取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">
        <see cref="T:System.Numerics.Vector4" /> を返します。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">2 つのベクトルを加算します。</summary>
      <param name="left" vsli:raw="The first vector to add.">加算する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to add.">加算する 2 番目のベクトル。</param>
      <returns vsli:raw="The summed vector.">加算結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">最初のベクトルを 2 番目のベクトルで除算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> を <paramref name="right" /> で除算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定したベクトルを、指定したスカラー値で除算します。</summary>
      <param name="value1" vsli:raw="The vector.">ベクトル。</param>
      <param name="value2" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The result of the division.">除算結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">指定した 2 つのベクトルの要素の各ペアが等しいかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">指定した 2 つのベクトルが等しくないかどうかを示す値を返します。</summary>
      <param name="left" vsli:raw="The first vector to compare.">比較する最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector to compare.">比較する 2 番目のベクトル。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> と <paramref name="left" /> が等しくない場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">指定した 2 つのベクトルの要素の各ペアを乗算した値を値とする新しいベクトルを返します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The element-wise product vector.">要素ごとの積ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定したベクトルを、指定したスカラー値で乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">スカラー値に、指定されたベクトルを乗算します。</summary>
      <param name="left" vsli:raw="The vector.">ベクトル。</param>
      <param name="right" vsli:raw="The scalar value.">スカラー値。</param>
      <returns vsli:raw="The scaled vector.">スケール調節されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> から <paramref name="left" /> を減算した結果のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">指定したベクトルを符号反転します。</summary>
      <param name="value" vsli:raw="The vector to negate.">符号反転するベクトル。</param>
      <returns vsli:raw="The negated vector.">符号反転後のベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">指定したベクトルの各要素の平方根を要素として持つベクトルを返します。</summary>
      <param name="value" vsli:raw="A vector.">ベクトル。</param>
      <returns vsli:raw="The square root vector.">ベクトルの平方根。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">最初のベクトルから 2 番目のベクトルを減算します。</summary>
      <param name="left" vsli:raw="The first vector.">最初のベクトル。</param>
      <param name="right" vsli:raw="The second vector.">2 番目のベクトル。</param>
      <returns vsli:raw="The difference vector.">差ベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">既定の書式設定を使用して現在のインスタンスの文字列表現を返します。</summary>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">指定した書式設定文字列を使用して個々の要素を書式設定することにより、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">指定した書式設定文字列を使用して個々の要素を書式設定し、また、指定した書式設定プロバイダーを使用してカルチャ固有書式設定を定義することによって、現在のインスタンスの文字列表現を返します。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">個々の要素の書式を定義する、標準またはカスタム数値書式文字列。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">カルチャ固有の書式情報を提供する書式設定プロバイダー。</param>
      <returns vsli:raw="The string representation of the current instance.">現在のインスタンスの文字列表現。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">指定した 4 × 4 行列によって 2 次元ベクトルを変換します。</summary>
      <param name="position" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">指定した四元数回転値によって、2 次元ベクトルを変換します。</summary>
      <param name="value" vsli:raw="The vector to rotate.">回転するベクトル。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">適用する回転。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">指定した 4 × 4 行列によって 3 次元ベクトルを変換します。</summary>
      <param name="position" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">指定した四元数回転値によって、3 次元ベクトルを変換します。</summary>
      <param name="value" vsli:raw="The vector to rotate.">回転するベクトル。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">適用する回転。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">指定した 4 × 4 行列によって 4 次元ベクトルを変換します。</summary>
      <param name="vector" vsli:raw="The vector to transform.">変換するベクトル。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">変換行列。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">指定した四元数回転値によって、4 次元ベクトルを変換します。</summary>
      <param name="value" vsli:raw="The vector to rotate.">回転するベクトル。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">適用する回転。</param>
      <returns vsli:raw="The transformed vector.">変換されたベクトル。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">ベクトル (0,0,0,1) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">ベクター <c>(0、0、0、1)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">ベクトル (1,0,0,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">ベクター <c>(1, 0, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">ベクトル (0,1,0,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">ベクター <c>(0, 1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">ベクトル (0,0,1,0) を取得します。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">ベクトル<c>(0, 0, 1, 0)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">ベクトルの W 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">ベクトルの X 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">ベクトルの Y 成分。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">ベクトルの Z 成分。</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">4 つの要素が 0 に等しいベクトルを取得します。</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">4つの要素が0に等しいベクトル (つまり、ベクトル<c>(0, 0</c>, 0, 0) を返します。</returns>
    </member>
  </members>
</doc>