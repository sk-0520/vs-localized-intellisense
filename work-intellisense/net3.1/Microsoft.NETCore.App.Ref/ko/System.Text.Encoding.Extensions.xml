<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.ASCIIEncoding">
      <summary vsli:raw="Represents an ASCII character encoding of Unicode characters.">유니코드 문자의 ASCII 문자 인코딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.ASCIIEncoding&quot; /&gt; class.">
        <see cref="T:System.Text.ASCIIEncoding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">지정된 문자 범위를 인코딩하여 생성된 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">인코딩할 문자 집합이 포함된 범위입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">지정된 문자 범위를 인코딩하여 생성된 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">지정된 문자 범위를 지정된 바이트 범위로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character span to encode.">인코딩할 문자 범위입니다.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">결과적으로 생성되는 바이트 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">지정된 바이트 범위를 디코딩하여 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">디코딩할 바이트 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">지정된 바이트 범위를 디코딩하여 생성되는 문자 수입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">쓸 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" />가 결과 문자 수보다 작은 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">결과 문자 집합을 포함할 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우
또는
<paramref name="byteindex" /> 및 <paramref name="byteCount" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">지정된 바이트 범위를 지정된 문자 범위로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">디코딩할 바이트를 포함하는 범위입니다.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">결과적으로 생성되는 문자 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <see cref="T:System.Text.Decoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Text.ASCIIEncoding.IsSingleByte">
      <summary vsli:raw="Gets a value indicating whether the current encoding uses single-byte code points.">현재 인코딩이 싱글바이트 코드 포인트를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;true&quot; /&gt;.">이 속성은 항상 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Text.UnicodeEncoding">
      <summary vsli:raw="Represents a UTF-16 encoding of Unicode characters.">유니코드 문자의 UTF-16 인코딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class.">
        <see cref="T:System.Text.UnicodeEncoding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">
        <see cref="T:System.Text.UnicodeEncoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수를 사용하여 big endian 바이트 순서를 사용할지 여부와 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환할지 여부를 지정할 수 있습니다.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">big endian 바이트 순서(최상위 바이트 먼저)를 사용하려면 <see langword="true" />이고, little endian 바이트 순서(최하위 바이트 먼저)를 사용하려면 <see langword="false" />입니다.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">
        <see cref="T:System.Text.UnicodeEncoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수를 사용하여 big endian 바이트 순서를 사용할지 여부, 유니코드 바이트 순서 표시를 제공할지 여부 및 잘못된 인코딩이 검색되었을 때 예외를 발생시킬지 여부를 지정할 수 있습니다.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first); &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">big endian 바이트 순서(최상위 바이트 먼저)를 사용하려면 <see langword="true" />이고, little endian 바이트 순서(최하위 바이트 먼저)를 사용하려면 <see langword="false" />입니다.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">잘못된 인코딩이 검색되었을 때 예외가 발생하도록 지정하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="F:System.Text.UnicodeEncoding.CharSize">
      <summary vsli:raw="Represents the Unicode character size in bytes. This field is a constant.">유니코드 문자 크기를 바이트 단위로 나타냅니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Text.UnicodeEncoding" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to compare with the current object.">현재 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Text.UnicodeEncoding" /> 인스턴스이고 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색 기능을 사용하고 있으며 <paramref name="chars" />에 잘못된 문자 시퀀스가 포함되어 있는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified string.">지정한 문자열의 문자를 인코딩하여 생성되는 바이트 수를 계산합니다.</summary>
      <param name="s" vsli:raw="The string that contains the set of characters to encode.">인코딩할 문자 집합이 포함된 문자열입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">
        <paramref name="bytes" /> 매개 변수가 가리키는 위치에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="bytes" /> 가 <see langword="null" /> (<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</summary>
      <param name="s" vsli:raw="The string containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">쓸 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by the &lt;paramref name=&quot;chars&quot; /&gt; parameter.">
        <paramref name="chars" /> 매개 변수가 가리키는 위치에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="chars" /> 가 <see langword="null" /> (<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="charCount" />가 결과 문자 수보다 작은 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">결과 문자 집합을 포함할 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우
또는
<paramref name="byteindex" /> 및 <paramref name="byteCount" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">UTF-16으로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">UTF-16으로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <see cref="T:System.Text.Decoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-16으로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-16으로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">현재 <see cref="T:System.Text.UnicodeEncoding" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.">이 인스턴스의 생성자가 바이트 순서 표시를 요청하는 경우 UTF-16 형식으로 인코딩된 유니코드 바이트 순서 표시를 반환합니다.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">
        <see cref="T:System.Text.UnicodeEncoding" /> 개체가 제공하도록 구성된 경우 유니코드 바이트 순서 표시가 포함된 바이트 배열입니다. 그렇지 않으면 이 메서드는 길이가 0인 바이트 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the results of decoding the specified sequence of bytes.">지정된 바이트 시퀀스의 디코딩 결과가 포함된 <see cref="T:System.String" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Text.UnicodeEncoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.">개체가 하나를 제공하도록 구성된 경우 UTF-16 형식으로 인코딩된 유니코드 바이트 순서 표시를 가져옵니다.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">이 개체가 제공 하도록 구성 된 경우 유니코드 바이트 순서 표시를 포함 하는 바이트 범위입니다. 그렇지 않으면 기본 범위입니다.</returns>
    </member>
    <member name="T:System.Text.UTF32Encoding">
      <summary vsli:raw="Represents a UTF-32 encoding of Unicode characters.">유니코드 문자의 UTF-32 인코딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class.">
        <see cref="T:System.Text.UTF32Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UTF32Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">
        <see cref="T:System.Text.UTF32Encoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수를 사용하여 big endian 바이트 순서를 사용할지 여부와 <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환할지 여부를 지정할 수 있습니다.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">big endian 바이트 순서(최상위 바이트 먼저)를 사용하려면 <see langword="true" />이고, little endian 바이트 순서(최하위 바이트 먼저)를 사용하려면 <see langword="false" />입니다.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유니코드 바이트 순서 표시를 제공하도록 지정하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">
        <see cref="T:System.Text.UTF32Encoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수를 사용하여 big endian 바이트 순서를 사용할지 여부, 유니코드 바이트 순서 표시를 제공할지 여부 및 잘못된 인코딩이 검색되었을 때 예외를 발생시킬지 여부를 지정할 수 있습니다.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">big endian 바이트 순서(최상위 바이트 먼저)를 사용하려면 <see langword="true" />이고, little endian 바이트 순서(최하위 바이트 먼저)를 사용하려면 <see langword="false" />입니다.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유니코드 바이트 순서 표시를 제공하도록 지정하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
      <param name="throwOnInvalidCharacters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">잘못된 인코딩이 검색되었을 때 예외가 발생하도록 지정하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">지정한 <see cref="T:System.Object" />이(가) 현재 <see cref="T:System.Text.UTF32Encoding" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current object.">현재 개체와 비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Text.UTF32Encoding" /> 인스턴스이고 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">
        <paramref name="bytes" /> 매개 변수가 가리키는 위치에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">쓸 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="charCount" />가 결과 문자 수보다 작은 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">결과 문자 집합을 포함할 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우
또는
<paramref name="byteindex" /> 및 <paramref name="byteCount" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">UTF-32로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">UTF-32로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <see cref="T:System.Text.Decoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-32로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-32로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">현재 <see cref="T:System.Text.UTF32Encoding" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-32 format, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one.">
        <see cref="T:System.Text.UTF32Encoding" /> 개체가 제공하도록 구성된 경우 UTF-32 형식으로 인코딩된 유니코드 바이트 순서 표시를 반환합니다.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">
        <see cref="T:System.Text.UTF32Encoding" /> 개체가 제공하도록 구성된 경우 유니코드 바이트 순서 표시가 포함된 바이트 배열입니다. 그렇지 않으면 이 메서드는 길이가 0인 바이트 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="A string that contains the results of decoding the specified sequence of bytes.">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 문자열입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(전체 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Text.UTF32Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-32 format, if this object is configured to supply one.">개체가 하나를 제공하도록 구성된 경우 UTF-32 형식으로 인코딩된 유니코드 바이트 순서 표시를 가져옵니다.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, a default span.">이 개체가 제공 하도록 구성 된 경우 유니코드 바이트 순서 표시를 포함 하는 바이트 범위입니다. 그렇지 않으면 기본 범위입니다.</returns>
    </member>
    <member name="T:System.Text.UTF7Encoding">
      <summary vsli:raw="Represents a UTF-7 encoding of Unicode characters.">유니코드 문자의 UTF-7 인코딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class.">
        <see cref="T:System.Text.UTF7Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class. A parameter specifies whether to allow optional characters.">
        <see cref="T:System.Text.UTF7Encoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수는 선택적 문자를 허용하는지 여부를 지정합니다.</summary>
      <param name="allowOptionals" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that optional characters are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">선택적 문자가 허용되도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UTF7Encoding.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">지정한 개체가 현재 <see cref="T:System.Text.UTF7Encoding" /> 개체와 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="An object to compare to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">현재 <see cref="T:System.Text.UTF7Encoding" /> 개체와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is a &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object and is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Text.UTF7Encoding" /> 개체이고 현재 <see cref="T:System.Text.UTF7Encoding" /> 개체와 같으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic .NET).">
        <paramref name="chars" />가 <see langword="null" />(Visual Basic .NET의 경우 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">지정한 <see cref="T:System.String" /> 개체의 문자를 인코딩하여 생성되는 바이트 수를 계산합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an int.">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="bytes" /> 가 <see langword="null" /> (<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 문자 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 문자 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">쓸 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="chars" /> 가 <see langword="null" /> (<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" />가 결과 문자 수보다 작은 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">결과 문자 집합을 포함할 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.
또는
<paramref name="chars" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우
또는
<paramref name="byteindex" /> 및 <paramref name="byteCount" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">UTF-7로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">UTF-7로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <see cref="T:System.Text.Decoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-7로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-7로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">현재 <see cref="T:System.Text.UTF7Encoding" /> 개체에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="charCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="byteCount" />가 0보다 작은 경우
또는
결과 문자 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" />가 <see langword="null" />(<see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" /> 가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary vsli:raw="Represents a UTF-8 encoding of Unicode characters.">유니코드 문자의 UTF-8 인코딩을 나타냅니다.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class.">
        <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. A parameter specifies whether to provide a Unicode byte order mark.">
        <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수는 유니코드 바이트 순서 표시를 제공할지 여부를 지정합니다.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.">
        <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다. 매개 변수를 사용하여 유니코드 바이트 순서 표시를 제공할지 여부와 잘못된 인코딩이 검색되었을 때 예외를 발생시킬지 여부를 지정할 수 있습니다.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method should return a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">잘못된 인코딩이 검색되었을 때 예외를 throw하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; object.">지정한 개체와 현재 <see cref="T:System.Text.UTF8Encoding" /> 개체가 같은지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to compare with the current instance.">현재 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Text.UTF8Encoding" /> 인스턴스이고 현재 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(전체 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; property is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" /> 속성은 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">지정된 문자 범위를 인코딩하여 생성된 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">인코딩할 문자 집합이 포함된 범위입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">지정된 문자 범위를 인코딩하여 생성된 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(전체 설명은 .NET Framework의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">쓸 최대 바이트 수입니다.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">인코딩할 문자 집합이 포함된 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">지정된 문자 범위를 지정된 바이트 범위로 인코딩합니다.</summary>
      <param name="chars" vsli:raw="The character span to encode.">인코딩할 문자 범위입니다.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">결과적으로 생성되는 바이트 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">인코딩할 첫 번째 문자의 인덱스입니다.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />가 <see langword="null" />인 경우
또는
<paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우
또는
<paramref name="charIndex" /> 및 <paramref name="charCount" /> 가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.
또는
<paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">지정된 바이트 범위를 디코딩하여 생성되는 문자 수를 계산합니다.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">디코딩할 바이트 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">지정된 바이트 범위를 디코딩하여 생성되는 문자 수입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">쓸 최대 문자 수입니다.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="charCount" />가 결과 문자 수보다 작은 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">결과 문자 집합을 포함할 문자 배열입니다.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">결과 문자 집합을 쓰기 시작할 인덱스입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우
또는
<paramref name="chars" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우
또는
<paramref name="byteindex" /> 및 <paramref name="byteCount" /> 가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.
또는
<paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.
또는
<paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">지정된 바이트 범위를 지정된 문자 범위로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">디코딩할 바이트를 포함하는 범위입니다.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">결과적으로 생성되는 문자 집합을 포함하는 범위입니다.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="chars" />에 쓴 실제 문자 수입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</summary>
      <returns vsli:raw="A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">현재 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for the current instance.">현재 인스턴스에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">인코딩할 문자 수입니다.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" />가 0보다 작은 경우
또는
결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-8 format, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one.">
        <see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 UTF-8 형식으로 인코딩된 유니코드 바이트 순서 표시를 반환합니다.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one. Otherwise, this method returns a zero-length byte array.">
        <see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 유니코드 바이트 순서 표시가 포함된 바이트 배열입니다. 그렇지 않으면 이 메서드는 길이가 0인 바이트 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">디코딩할 첫 번째 바이트의 인덱스입니다.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">디코딩할 바이트 수입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.
또는
<paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">대체가 발생했습니다(자세한 내용은 .NET의 문자 인코딩 참조).
및
<see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Text.UTF8Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.">개체가 하나를 제공하도록 구성된 경우 UTF-8 형식으로 인코딩된 유니코드 바이트 순서 표시를 가져옵니다.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">이 개체가 제공 하도록 구성 된 경우 유니코드 바이트 순서 표시를 포함 하는 바이트 범위입니다. 그렇지 않으면 기본 범위입니다.</returns>
    </member>
  </members>
</doc>