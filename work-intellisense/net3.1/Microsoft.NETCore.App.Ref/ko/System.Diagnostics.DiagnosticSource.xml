<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary vsli:raw="Represents an operation with context to be used for logging.">로깅에 사용되는 컨텍스트를 통해 작업을 표시합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="operationName" vsli:raw="The name of the operation.">작업의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary vsli:raw="Gets or sets the flags (defined by the W3C ID specification) associated with the activity.">작업과 연결된 플래그(W3C ID 사양에 의해 정의됨)를 가져옵니다.</summary>
      <returns vsli:raw="the flags associated with the activity.">활동과 연결 된 플래그입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new baggage item with the specified key and value.">지정된 키와 값으로 새 수하물 항목을 가져오도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="key" vsli:raw="The baggage key.">수하물 키입니다.</param>
      <param name="value" vsli:raw="The baggage value.">수하물 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new tag with the provided &lt;paramref name=&quot;key&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt;.">제공된 <see cref="T:System.Diagnostics.Activity" /> 및 <paramref name="key" />를 사용하여 새 태그를 갖도록 <paramref name="value" />를 업데이트합니다. 입니다.</summary>
      <param name="key" vsli:raw="The tag key.">태그 키입니다.</param>
      <param name="value" vsli:raw="The tag value.">태그 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary vsli:raw="Gets a collection of key/value pairs that represents information that is passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">이 <see cref="T:System.Diagnostics.Activity" />의 자식 항목으로 전달되는 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Information that's passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary vsli:raw="Gets or sets the current operation (&lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;) for the current thread. This flows across async calls.">현재 스레드에 대한 현재 작업(<see cref="T:System.Diagnostics.Activity" />)을 가져오거나 설정합니다.  이는 비동기 호출 간에 이동합니다.</summary>
      <returns vsli:raw="The current operation for the current thread.">현재 스레드의 현재 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary vsli:raw="Gets or sets the default ID format for the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Activity" />에 대한 기본 ID 형식을 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary vsli:raw="Gets the duration of the operation.">작업 기간을 가져옵니다.</summary>
      <returns vsli:raw="The delta between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the end time if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has ended (&lt;see cref=&quot;M:System.Diagnostics.Activity.Stop&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was called), or &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has not ended and &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was not called.">
        <see cref="P:System.Diagnostics.Activity.StartTimeUtc" />와 종료 시간 사이의 델타 (<see cref="M:System.Diagnostics.Activity.Stop" /> 또는 <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />를 호출한 <see cref="T:System.Diagnostics.Activity" /> 경우) 또는 <see cref="F:System.TimeSpan.Zero" />가 종료 되지 않고 <see cref="T:System.Diagnostics.Activity" />가 호출 되지 않은 경우 <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary vsli:raw="Gets or sets a value that detrmines if the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt; is always used to define the default ID format.">
        <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />이 항상 기본 ID 형식을 정의하는 데 사용되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always use the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항상 <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />를 사용 <see langword="true" /> 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary vsli:raw="Returns the value of a key-value pair added to the activity with &lt;see cref=&quot;M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)&quot; /&gt;.">
        <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />을 사용하여 작업에 추가된 키-값 쌍의 값을 반환합니다.</summary>
      <param name="key" vsli:raw="The baggage key.">수하물 키입니다.</param>
      <returns vsli:raw="The value of the key-value-pair item if it exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not exist.">키-값 쌍 항목의 값(있는 경우) 또는 <see langword="null" />(존재 하지 않는 경우).</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary vsli:raw="Gets an identifier that is specific to a particular request.">특정 요청과 관련된 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The activity ID.">활동 ID입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary vsli:raw="Gets the format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" />에 대한 형식을 가져옵니다.</summary>
      <returns vsli:raw="The format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" />형식입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary vsli:raw="Gets the operation name.">작업 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the operation.">작업의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; that created this activity.">이 작업을 생성한 부모 <see cref="T:System.Diagnostics.Activity" />를 가져옵니다.</summary>
      <returns vsli:raw="The parent of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, if it is from the same process, or &lt;see langword=&quot;null&quot; /&gt; if this instance has no parent (it is a root activity) or if the parent is from outside the process.">이 <see cref="T:System.Diagnostics.Activity" />의 부모 이거나, 동일한 프로세스에서 발생 한 경우이 고,이 인스턴스에 부모 (루트 활동)가 없거나 부모가 프로세스 외부에 있는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary vsli:raw="Gets the ID of this activity's parent.">이 작업의 부모 ID를 가져옵니다.</summary>
      <returns vsli:raw="The parent ID, if one exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not.">부모 ID (있는 경우) 이거나 <see langword="null" /> 그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary vsli:raw="Gets the parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">부모의 <see cref="P:System.Diagnostics.Activity.SpanId" />를 가져옵니다.</summary>
      <returns vsli:raw="The parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">부모의 <see cref="P:System.Diagnostics.Activity.SpanId" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary vsli:raw="Gets a value that indicates whether the W3CIdFlags.Recorded flag is set.">W3CIdFlags.Recorded 플래그가 설정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the W3CIdFlags.Recorded flag is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">W3CIdFlags 플래그가 설정 된 경우 <see langword="true" /> 합니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary vsli:raw="Gets the root ID of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">이 <see cref="T:System.Diagnostics.Activity" />의 루트 ID를 가져옵니다.</summary>
      <returns vsli:raw="The root ID, or &lt;see langword=&quot;null&quot; /&gt; if the current instance has either a &lt;see cref=&quot;P:System.Diagnostics.Activity.ParentId&quot; /&gt; or an &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">루트 ID 이거나, 현재 인스턴스에 <see cref="P:System.Diagnostics.Activity.ParentId" /> 또는 <see cref="P:System.Diagnostics.Activity.Id" />있는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to set its &lt;see cref=&quot;P:System.Diagnostics.Activity.Duration&quot; /&gt; as the difference between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the specified stop time.">해당 <see cref="T:System.Diagnostics.Activity" />을 <see cref="P:System.Diagnostics.Activity.Duration" />와 지정된 중지 시간 간의 차이로 설정하도록 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" />를 업데이트합니다.</summary>
      <param name="endTimeUtc" vsli:raw="The UTC stop time.">UTC 중지 시간입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary vsli:raw="Sets the ID format on this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; before it is started.">시작하기 전에 이 <see cref="T:System.Diagnostics.Activity" />의 ID 형식을 설정합니다.</summary>
      <param name="format" vsli:raw="One of the enumeration values that specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary vsli:raw="Sets the parent ID using the W3C convention of a TraceId and a SpanId.">TraceId 및 SpanId의 W3C 규칙을 사용하여 부모 ID를 설정합니다.</summary>
      <param name="traceId" vsli:raw="The parent activity's TraceId.">부모 활동의 TraceId입니다.</param>
      <param name="spanId" vsli:raw="The parent activity's SpanId.">부모 작업의 SpanId입니다.</param>
      <param name="activityTraceFlags" vsli:raw="One of the enumeration values that specifies flags defined by the W3C standard that are associated with an activity.">작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정하는 열거 값 중 하나입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary vsli:raw="Updates this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; with an ID of &lt;paramref name=&quot;parentId&quot; /&gt; caused this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">이 <see cref="T:System.Diagnostics.Activity" />를 업데이트하여 ID가 <see cref="T:System.Diagnostics.Activity" />인 <paramref name="parentId" />가 이 <see cref="T:System.Diagnostics.Activity" />의 원인임을 나타냅니다.</summary>
      <param name="parentId" vsli:raw="The ID of the parent operation.">부모 작업의 ID입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary vsli:raw="Sets the start time of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">이 <see cref="T:System.Diagnostics.Activity" />의 시작 시간을 설정합니다.</summary>
      <param name="startTimeUtc" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; start time in UTC.">
        <see cref="T:System.Diagnostics.Activity" /> 시작 시간(UTC)입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary vsli:raw="Gets the SPAN part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" />의 SPAN 부분을 가져옵니다.</summary>
      <returns vsli:raw="The ID for the SPAN part of &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has the W3C format; otherwise, a zero &lt;see langword=&quot;SpanId&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Activity" /> W3C 형식이 면 <see cref="P:System.Diagnostics.Activity.Id" />의 범위 부분에 대 한 ID이 고, 그렇지 않으면입니다. 그렇지 않으면 0 <see langword="SpanId" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary vsli:raw="Starts the activity.">작업을 시작합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary vsli:raw="Gets the time when the operation started.">작업이 시작된 시간을 가져옵니다.</summary>
      <returns vsli:raw="The UTC time that the operation started.">작업이 시작 된 UTC 시간입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary vsli:raw="Stops the activity.">작업을 중지합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary vsli:raw="Gets a collection of key/value pairs that represent information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">로깅 시스템에 <see cref="T:System.Diagnostics.Activity" />와 함께 기록될 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary vsli:raw="Gets the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Activity.Id" />의 TraceId 부분을 가져옵니다.</summary>
      <returns vsli:raw="The ID for the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the ID has the W3C format; otherwise, a zero TraceId.">ID가 W3C 형식이 면 <see cref="P:System.Diagnostics.Activity.Id" />의 TraceId 부분에 대 한 ID이 고, 그렇지 않으면입니다. 그렇지 않으면 0 TraceId입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary vsli:raw="Gets or sets the W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">W3C <see langword="tracestate" /> 헤더를 가져옵니다.</summary>
      <returns vsli:raw="The W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">W3C <see langword="tracestate" /> 헤더입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary vsli:raw="Specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary vsli:raw="The hierarchical format.">계층 구조 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary vsli:raw="An unknown format.">알 수 없는 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary vsli:raw="The W3C format.">W3C 형식입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt; formatted based on a W3C standard.">W3C 표준에 따라 서식이 지정된 <see cref="P:System.Diagnostics.Activity.SpanId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 8 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; to a specified span.">현재 <see cref="T:System.Diagnostics.ActivitySpanId" />의 8바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination" vsli:raw="The span to which the 8 bytes of the SpanID are to be copied.">SpanID의 8바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of eight bytes.">8바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A read-only span of eight bytes.">8바이트의 읽기 전용 범위입니다.</param>
      <returns vsli:raw="The new span ID.">새 범위 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of 16 hexadecimal characters.">16개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A span that contains 16 hexadecimal characters.">16개의 16진수 문자를 포함하는 범위입니다.</param>
      <returns vsli:raw="The new span ID.">새 범위 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;          &#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.
또는
<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns vsli:raw="The new span ID.">새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; based on a random number (that is very likely to be unique).">임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns vsli:raw="The new span ID.">새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether this instance and the specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance have the same value.">이 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId" vsli:raw="The instance to compare.">비교할 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;spanId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary vsli:raw="the current instance and a specified object, which also must be an &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance, have the same value.">현재스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스여야 함)의 값이 동일해야 합니다.</summary>
      <param name="obj" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivitySpanId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the SpanId.">SpanId의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code of the SpanId.">SpanId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have the same value.">지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is the same as the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determine whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have unequal values.">지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 다른지 확인합니다.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is different from the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary vsli:raw="Specifies flags defined by the W3C standard that are associated with an activity.">작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary vsli:raw="The activity has not been marked.">활동이 표시되지 않았습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary vsli:raw="The activity (or more likely its parents) has been marked as useful to record.">활동(또는 부모)이 기록에 유용한 것으로 표시되었습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.TraceId&quot; /&gt; whose format is based on a W3C standard.">형식이 W3C 표준을 기반으로 하는 <see cref="P:System.Diagnostics.Activity.TraceId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 16 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; to a specified span.">현재 <see cref="T:System.Diagnostics.ActivityTraceId" />의 16바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination" vsli:raw="The span to which the 16 bytes of the trace ID are to be copied.">추적 ID의 16바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 16 bytes.">16바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A read-only span of 16 bytes.">16바이트의 읽기 전용 범위입니다.</param>
      <returns vsli:raw="The new trace ID.">새 추적 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 32 hexadecimal characters.">32개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A span that contains 32 hexadecimal characters.">32개의 16진수 문자를 포함하는 범위입니다.</param>
      <returns vsli:raw="The new trace ID.">새 추적 ID입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;&#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.
또는
<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns vsli:raw="The new trace ID.">새 추적 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; based on a random number (that is very likely to be unique).">임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt;.">새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether the current instance and a specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; are equal.">현재 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivityTraceId" />가 같은지 여부를 확인합니다.</summary>
      <param name="traceId" vsli:raw="The instance to compare.">비교할 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;traceId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance and a specified object, which must also be an &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instance, have the same value.">이 인스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스여야 함)의 값이 같은지를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivityTraceId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the TraceId.">TraceId의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code of the TraceId.">TraceId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is the same as the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is different from the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this span ID.">이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this trace ID.">이 추적 ID를 나타내는 32자의 16진수 문자열을 반환합니다.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary vsli:raw="Provides an implementation of the abstract &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class that represents a named place to which a source sends its information (events).">소스가 해당 정보(이벤트)를 보내는 명명된 위치를 나타내는 추상 <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">새 <see cref="T:System.Diagnostics.DiagnosticListener" />를 만듭니다.</summary>
      <param name="name" vsli:raw="The name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary vsli:raw="Gets the collection of listeners for this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 수신기 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary vsli:raw="Disposes the NotificationListeners.">NotificationListeners를 삭제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary vsli:raw="Determines whether there are any registered subscribers.">등록된 구독자가 있는지 여부를 결정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any registered subscribers, &lt;see langword=&quot;false&quot; /&gt; otherwise.">등록된 구독자가 있으며 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary vsli:raw="Checks whether the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt; is enabled.">
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 활성화 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">알림이 활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Checks if any subscriber to the diagnostic events is interested in receiving events with this name. Subscribers indicate their interest using a delegate provided in &lt;see cref=&quot;Overload:System.Diagnostics.DiagnosticListener.Subscribe&quot; /&gt;.">진단 이벤트의 구독자가 이 이름을 사용하는 이벤트를 수신하는 데 관심이 있는지 확인합니다. 구독자는 <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />에서 제공되는 대리자를 통해 관심을 표시합니다.</summary>
      <param name="name" vsli:raw="The name of the event to check.">확인할 이벤트의 이름입니다.</param>
      <param name="arg1" vsli:raw="The object that represents a context.">컨텍스트를 나타내는 개체입니다.</param>
      <param name="arg2" vsli:raw="The object that represents a context.">컨텍스트를 나타내는 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">사용하도록 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityExport method of all the subscribers.">모든 구독자의 OnActivityExport 메서드를 호출합니다.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityImport method of all the subscribers.">모든 구독자의 OnActivityImport 메서드를 호출합니다.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload" vsli:raw="An object that represents the incoming request.">들어오는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary vsli:raw="Adds a subscriber.">구독자를 추가합니다.</summary>
      <param name="observer" vsli:raw="A subscriber.">구독자입니다.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name and up to two context objects.">구독자를 추가하고 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer" vsli:raw="A subscriber.">구독자입니다.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; to if an event filter is not desirable.">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary vsli:raw="Adds a subscriber, optionally filters events based on their name and up to two context objects, and specifies methods to call when providers import or export activites from outside the process.">구독자를 추가하고, 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링하고, 공급자가 프로세스 외부에서 활동을 가져오거나 내보낼 때 호출할 메서드를 지정합니다.</summary>
      <param name="observer" vsli:raw="A subscriber.">구독자입니다.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; if an event filter is not desirable.">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <param name="onActivityImport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the incoming request.">들어오는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <param name="onActivityExport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the outgoing request.">나가는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name.">구독자를 추가하고 필요에 따라 이름을 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer" vsli:raw="A subscriber.">구독자입니다.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name (&lt;see cref=&quot;T:System.String&quot; /&gt;). The delegate should return &lt;see langword=&quot;true&quot; /&gt; if the event is enabled.">해당 이름(<see cref="T:System.String" />)에 따라 이벤트를 필터링하는 대리자입니다. 이벤트가 활성화된 경우 대리자는 <see langword="true" />를 반환해야 합니다.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary vsli:raw="Returns a string with the name of this DiagnosticListener.">이 DiagnosticListener의 이름이 있는 문자열을 반환합니다.</summary>
      <returns vsli:raw="The name of this DiagnosticListener.">이 DiagnosticListener의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary vsli:raw="Logs a notification.">알림을 기록합니다.</summary>
      <param name="name" vsli:raw="The name of the event to log.">기록할 이벤트의 이름입니다.</param>
      <param name="value" vsli:raw="An object that represents the payload for the event.">이벤트의 페이로드를 나타내는 개체입니다.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary vsli:raw="An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.">계측된 프로세스 내에서 사용하기 위한 다양한 데이터 페이로드의 프로덕션 시간 로깅에 대한 코드를 계측할 수 있는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary vsli:raw="Verifies if the notification event is enabled.">알림 이벤트가 설정되었는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the event being written.">작성 중인 이벤트의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Verifies it the notification event is enabled.">알림 이벤트가 활성화되었는지 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the event being written.">작성 중인 이벤트의 이름입니다.</param>
      <param name="arg1" vsli:raw="An object that represents the additional context for IsEnabled. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all. Based on that, producer may call IsEnabled(string, object, object) again with non-&lt;see langword=&quot;null&quot; /&gt; context.">IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 소비자가 이러한 이벤트에 대한 알림을 받기를 원하는지 여부를 확인하기 위해 순수 IsEnabled(string)라고 하는 생산자를 나타낼 수 있습니다. 이를 기반으로 생산자는 <see langword="null" /> 이외의 컨텍스트를 사용하여 IsEnabled(문자열, 개체, 개체)를 다시 호출할 수 있습니다.</param>
      <param name="arg2" vsli:raw="Optional. An object that represents the additional context for IsEnabled. &lt;see langword=&quot;null&quot; /&gt; by default. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in &lt;paramref name=&quot;arg1&quot; /&gt;.">선택 사항입니다. IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 기본적으로 <see langword="null" />입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 순수 IsEnabled(문자열) 또는 생산자라고 하는 생산자가 <paramref name="arg1" />에서 필요한 모든 컨텍스트를 통과했음을 나타낼 수 있습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.">프로세스 외부에서 발생하는 나가는 HTTP 요청과 같은 일부 이벤트 또는 작업으로 상태를 전송합니다.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.">프로세스 외부에서 발생한 들어오는 요청과 같은 이벤트 또는 작업에서 상태를 활동으로 전송합니다.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload" vsli:raw="A payload that represents the incoming request.">들어오는 요청을 나타내는 페이로드입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Starts an &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; and writes a start event.">
        <see cref="T:System.Diagnostics.Activity" />를 시작하고 이벤트를 씁니다.</summary>
      <param name="activity" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to be started.">
        <see cref="T:System.Diagnostics.Activity" />가 시작됩니다.</param>
      <param name="args" vsli:raw="An object that represent the value being passed as a payload for the event.">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다.</param>
      <returns vsli:raw="The started activity for convenient chaining.">편리한 연결을 위한 시작 작업입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Stops the given &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, maintains the global &lt;see cref=&quot;P:System.Diagnostics.Activity.Current&quot; /&gt; activity, and notifies consumers that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; was stopped.">지정된 <see cref="T:System.Diagnostics.Activity" />를 중지하고, 글로벌 <see cref="P:System.Diagnostics.Activity.Current" /> 작업을 유지 관리하고, 소비자에게 <see cref="T:System.Diagnostics.Activity" />가 중지되었음을 알립니다.</summary>
      <param name="activity" vsli:raw="The activity to be stopped.">중지할 작업입니다.</param>
      <param name="args" vsli:raw="An object that represents the value passed as a payload for the event.">이벤트의 페이로드로 전달된 값을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary vsli:raw="Provides a generic way of logging complex payloads.">복잡한 페이로드를 로깅하는 일반적인 방법을 제공합니다.</summary>
      <param name="name" vsli:raw="The name of the event being written.">작성 중인 이벤트의 이름입니다.</param>
      <param name="value" vsli:raw="An object that represents the value being passed as a payload for the event. This is often an anonymous type which contains several sub-values.">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다. 이는 종종 여러 하위 값을 포함하는 익명 형식입니다.</param>
    </member>
  </members>
</doc>