<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary vsli:raw="Compares two objects for equivalence, ignoring the case of strings.">문자열의 대/소문자를 무시하고 두 개체를 비교합니다.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />를 사용하여 <see cref="P:System.Threading.Thread.CurrentCulture" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">지정된 <see cref="T:System.Collections.CaseInsensitiveComparer" />를 사용하여 <see cref="T:System.Globalization.CultureInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt;.">새 <see cref="T:System.Globalization.CultureInfo" />에 사용할 <see cref="T:System.Collections.CaseInsensitiveComparer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary vsli:raw="Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.">대/소문자를 구분하지 않고 같은 형식의 두 개체를 비교한 다음 한 개체가 다른 개체보다 작은지, 큰지 또는 두 개체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="a" vsli:raw="The first object to compare.">비교할 첫 번째 개체입니다.</param>
      <param name="b" vsli:raw="The second object to compare.">비교할 두 번째 개체입니다.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is less than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; equals &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is greater than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 표와 같이 <paramref name="a" /> 및 <paramref name="b" />의 상대 값을 나타내는 부호 있는 정수입니다.
  값 
  의미 
  0보다 작음 
 <paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />보다 작습니다.  
  
  0 
 <paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />와 같습니다.  
  
  0보다 큼 
 <paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />보다 큽니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;a&quot; /&gt; nor &lt;paramref name=&quot;b&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are of different types.">
        <paramref name="a" /> 또는 <paramref name="b" /> 모두 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우
또는
<paramref name="a" />와 <paramref name="b" />가 형식이 다른 경우</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련된 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련된 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary vsli:raw="Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하여 개체에 대해 해시 코드를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />를 사용하여 <see cref="P:System.Threading.Thread.CurrentCulture" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">지정된 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />를 사용하여 <see cref="T:System.Globalization.CultureInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt;.">새 <see cref="T:System.Globalization.CultureInfo" />에 사용할 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />와 관련된 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />와 관련된 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하여 지정된 개체의 해시 코드를 반환합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">해시 코드가 반환될 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="A hash code for the given object, using a hashing algorithm that ignores the case of strings.">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하는 지정된 개체의 해시 코드입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection.">강력한 형식의 컬렉션에 대한 <see langword="abstract" /> 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the default initial capacity.">새 인스턴스를 초기화 합니다 <see cref="T:System.Collections.CollectionBase" /> 기본 초기 용량을 사용 합니다.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the specified capacity.">새 인스턴스를 초기화 합니다 <see cref="T:System.Collections.CollectionBase" /> 지정 된 용량을 사용 합니다.</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">새 목록에 처음부터 저장할 수 있는 요소의 수입니다.</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">
        <see cref="T:System.Collections.CollectionBase" />에 포함될 수 있는 요소의 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">
        <see cref="T:System.Collections.CollectionBase" />에 포함될 수 있는 요소의 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.CollectionBase.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <see cref="P:System.Collections.CollectionBase.Capacity" />가 <see cref="P:System.Collections.CollectionBase.Count" />보다 작은 값으로 설정되어 있습니다.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">시스템에 사용 가능한 메모리가 부족합니다.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method cannot be overridden.">개체를 모두 제거 된 <see cref="T:System.Collections.CollectionBase" /> 인스턴스. 이 메서드는 재정의할 수 없습니다.</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This property cannot be overridden.">에 포함 된 요소의 수를 가져옵니다는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스. 이 속성은 재정의할 수 없습니다.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">에 포함 된 요소의 수는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스. 이 속성 값을 검색하는 것은 O(1) 연산입니다.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">반복 하는 열거자를 반환 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> 인스턴스에 대한 <see cref="T:System.Collections.CollectionBase" />입니다.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">가져옵니다는 <see cref="T:System.Collections.ArrayList" /> 의 요소 목록을 포함 하는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ArrayList" /> 나타내는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스 자체입니다. 이 속성 값을 검색하는 것은 O(1) 연산입니다.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">가져옵니다는 <see cref="T:System.Collections.IList" /> 의 요소 목록을 포함 하는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IList" /> 나타내는 <see cref="T:System.Collections.CollectionBase" /> 인스턴스 자체입니다.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.CollectionBase" /> 인스턴스의 콘텐츠를 지운 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">내용을 지운 후 사용자 지정 프로세스를 추가로 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">새 요소를 삽입 하기 전에 추가로 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">삽입할 0부터 시작 하는 인덱스 <paramref name="value" />합니다.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">에 있는 요소의 새 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">새 요소를 삽입 한 후 추가 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">삽입할 0부터 시작 하는 인덱스 <paramref name="value" />합니다.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">에 있는 요소의 새 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">요소를 제거 하는 경우 추가 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">0부터 시작 하는 인덱스는 <paramref name="value" /> 찾을 수 있습니다.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">제거할 요소의 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">요소를 제거한 후 추가 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">0부터 시작 하는 인덱스는 <paramref name="value" /> 찾을 수 있습니다.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">제거할 요소의 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">에 값을 설정 하기 전에 추가로 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">0부터 시작 하는 인덱스는 <paramref name="oldValue" /> 찾을 수 있습니다.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">로 바꿀 값 <paramref name="newValue" />합니다.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">에 있는 요소의 새 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">값을 설정한 후 추가 사용자 지정 프로세스를 수행 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">0부터 시작 하는 인덱스는 <paramref name="oldValue" /> 찾을 수 있습니다.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">로 바꿀 값 <paramref name="newValue" />합니다.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">에 있는 요소의 새 값 <paramref name="index" />합니다.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">값 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행 합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method is not overridable.">지정된 된 인덱스에서 요소를 제거 합니다 <see cref="T:System.Collections.CollectionBase" /> 인스턴스. 이 메서드는 재정의할 수 없습니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">제거할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우
-또는-
<paramref name="index" />가 <see cref="P:System.Collections.CollectionBase.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.CollectionBase" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.CollectionBase" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
-또는-
소스 <see cref="T:System.Collections.CollectionBase" />의 요소 수가 대상 <paramref name="index" />의 <paramref name="array" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.CollectionBase" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.CollectionBase" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.CollectionBase" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">개체를 <see cref="T:System.Collections.CollectionBase" />의 끝 부분에 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be added to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" />의 끝에 추가할 <see cref="T:System.Collections.CollectionBase" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; index at which the &lt;paramref name=&quot;value&quot; /&gt; has been added.">
        <see cref="T:System.Collections.CollectionBase" />가 추가된 <paramref name="value" /> 인덱스입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" />이 읽기 전용인 경우
-또는-
<see cref="T:System.Collections.CollectionBase" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains a specific element.">
        <see cref="T:System.Collections.CollectionBase" />에 특정 요소가 들어 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.CollectionBase" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 지정된 <see cref="T:System.Collections.CollectionBase" />가 있으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Searches for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">지정한 <see cref="T:System.Object" />를 검색하고, 전체 <see cref="T:System.Collections.CollectionBase" /> 내에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.CollectionBase" />입니다.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;, if found; otherwise, -1.">
        <paramref name="value" />가 있으면 전체 <see cref="T:System.Collections.CollectionBase" />에서 맨 처음 발견되는 값의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; at the specified index.">
        <see cref="T:System.Collections.CollectionBase" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert.">삽입할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우
-또는-
<paramref name="index" />가 <see cref="P:System.Collections.CollectionBase.Count" />보다 큰 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" />이 읽기 전용인 경우
-또는-
<see cref="T:System.Collections.CollectionBase" />가 고정 크기입니다.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" />의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.CollectionBase" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.CollectionBase" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 읽기 전용이면 <see cref="T:System.Collections.CollectionBase" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The element at the specified index.">지정한 인덱스의 요소입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우
-또는-
<paramref name="index" />가 <see cref="P:System.Collections.CollectionBase.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Collections.CollectionBase" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.CollectionBase" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter was not found in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; object.">합니다 <paramref name="value" /> 에서 매개 변수를 찾을 수 없습니다는 <see cref="T:System.Collections.CollectionBase" /> 개체입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" />이 읽기 전용인 경우
-또는-
<see cref="T:System.Collections.CollectionBase" />가 고정 크기입니다.</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection of key/value pairs.">강력한 형식의 키/값 쌍 컬렉션에 대한 <see langword="abstract" /> 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; class.">
        <see cref="T:System.Collections.DictionaryBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스의 콘텐츠를 지웁니다.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">지정한 인덱스에서 1차원 <see cref="T:System.Collections.DictionaryBase" />에 <see cref="T:System.Array" /> 엔트리를 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> 인스턴스에서 복사된 <see cref="T:System.Collections.DictionaryEntry" /> 개체의 대상인 1차원 <see cref="T:System.Collections.DictionaryBase" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
또는
소스 <see cref="T:System.Collections.DictionaryBase" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.DictionaryBase" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 포함된 요소의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 포함된 요소의 수입니다.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 포함된 요소의 목록을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IDictionary" /> 인스턴스 자체를 나타내는 <see cref="T:System.Collections.DictionaryBase" />입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 인스턴스를 반복하는 <see cref="T:System.Collections.DictionaryBase" />를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 포함된 요소의 목록을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.Hashtable" /> 인스턴스 자체를 나타내는 <see cref="T:System.Collections.DictionaryBase" />입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary vsli:raw="Performs additional custom processes before clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스의 내용을 지우기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스의 내용을 지운 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary vsli:raw="Gets the element with the specified key and value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에서 지정한 키와 값이 있는 요소를 가져옵니다.</summary>
      <param name="key" vsli:raw="The key of the element to get.">가져올 요소의 키입니다.</param>
      <param name="currentValue" vsli:raw="The current value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />와 연관된 요소의 현재 값입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the element with the specified key and value.">지정된 키와 값의 요소를 포함하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 새 요소를 삽입하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">삽입할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to insert.">삽입할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 새 요소를 삽입한 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">삽입할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to insert.">삽입할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에서 요소를 제거하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">제거할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to remove.">제거할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에서 요소를 제거한 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">제거할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to remove.">제거할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 값을 설정하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">찾을 요소의 키입니다.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />와 연관된 요소의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />와 연관된 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 인스턴스에 값을 설정한 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">찾을 요소의 키입니다.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />와 연관된 요소의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />와 연관된 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating the element with the specified key and value.">지정한 키와 값을 가지는 요소의 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="key" vsli:raw="The key of the element to validate.">유효성을 검사할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to validate.">유효성을 검사할 요소의 값입니다.</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe).">
        <see cref="T:System.Collections.DictionaryBase" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">지정한 키와 값을 가지는 요소를 <see cref="T:System.Collections.DictionaryBase" />에 추가합니다.</summary>
      <param name="key" vsli:raw="The key of the element to add.">추가할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to add.">추가할 요소의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">같은 키를 가진 요소가 이미 <see cref="T:System.Collections.DictionaryBase" />에 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" />이 읽기 전용인 경우
또는
<see cref="T:System.Collections.DictionaryBase" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains a specific key.">
        <see cref="T:System.Collections.DictionaryBase" />에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" />에서 찾을 수 있는 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 지정한 키가 있는 요소가 포함되어 있으면 <see cref="T:System.Collections.DictionaryBase" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체의 크기가 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">지정된 키에 연결된 값을 가져오거나 설정합니다.</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">가져오거나 설정할 값이 있는 키입니다.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, attempting to get it returns &lt;see langword=&quot;null&quot; /&gt;, and attempting to set it creates a new element using the specified key.">지정한 키와 연결된 값입니다. 지정한 키가 없는 경우 해당 키를 가져오려고 시도하면 <see langword="null" />이 반환되고 해당 키를 설정하려고 시도하면 지정한 키를 사용하여 새 요소가 만들어집니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">속성이 설정되어 있으며 <see cref="T:System.Collections.DictionaryBase" />가 읽기 전용인 경우
또는
속성이 설정되어 있고 <paramref name="key" />가 컬렉션에 없으며 <see cref="T:System.Collections.DictionaryBase" />의 크기가 고정된 경우</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 키가 포함된 <see cref="T:System.Collections.DictionaryBase" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 키가 포함된 <see cref="T:System.Collections.DictionaryBase" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" />에서 지정한 키를 가지는 요소를 제거합니다.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">제거할 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" />이 읽기 전용인 경우
또는
<see cref="T:System.Collections.DictionaryBase" />가 고정 크기입니다.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 값이 포함된 <see cref="T:System.Collections.DictionaryBase" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 값이 포함된 <see cref="T:System.Collections.DictionaryBase" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Collections.DictionaryBase" />를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.DictionaryBase" />입니다.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">개체의 선입선출(FIFO) 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the default initial capacity, and uses the default growth factor.">비어 있는 상태이고 기본 초기 용량을 가지며 기본 증가 비율을 사용하는 <see cref="T:System.Collections.Queue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.">지정한 컬렉션에서 복사된 요소가 포함되어 있고, 복사된 요소의 수와 같은 초기 용량을 가지며, 기본 증가 비율을 사용하는 <see cref="T:System.Collections.Queue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">요소를 복사할 원본 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default growth factor.">비어 있는 상태이고 지정한 초기 용량을 가지며 기본 증가 비율을 사용하는 <see cref="T:System.Collections.Queue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" />에 포함될 수 있는 초기 요소 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified growth factor.">비어 있는 상태이고 지정한 초기 용량을 가지며 지정한 증가 비율을 사용하는 <see cref="T:System.Collections.Queue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" />에 포함될 수 있는 초기 요소 수입니다.</param>
      <param name="growFactor" vsli:raw="The factor by which the capacity of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is expanded.">
        <see cref="T:System.Collections.Queue" />의 용량이 확장될 때 곱해지는 비율입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;growFactor&quot; /&gt; is less than 1.0 or greater than 10.0.">
        <paramref name="capacity" />가 0보다 작은 경우
또는
<paramref name="growFactor" />가 1.0보다 작거나 10.0보다 큰 경우</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에서 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />의 부분 복사본을 만듭니다.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />의 부분 복사본입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 요소가 있는지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.Queue" />입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 <paramref name="obj" />에 있으면 <see cref="T:System.Collections.Queue" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">
        <see cref="T:System.Collections.Queue" /> 요소를 지정한 배열 인덱스에서 시작하여 기존의 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Queue" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
또는
소스 <see cref="T:System.Collections.Queue" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
      <exception cref="T:System.ArrayTypeMismatchException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.Queue" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 포함된 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 포함된 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />의 시작 부분에서 개체를 제거하고 반환합니다.</summary>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />의 시작에서 제거하는 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" />가 비어 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">개체를 <see cref="T:System.Collections.Queue" />의 끝 부분에 추가합니다.</summary>
      <param name="obj" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 추가할 개체입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.Queue" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.Queue" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.Queue" /> 이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; without removing it.">
        <see cref="T:System.Collections.Queue" />의 시작 부분에서 개체를 제거하지 않고 반환합니다.</summary>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />의 처음에 있는 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" />가 비어 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; that wraps the original queue, and is thread safe.">원래 큐를 래핑하고 스레드로부터 안전한 새 <see cref="T:System.Collections.Queue" />를 반환합니다.</summary>
      <param name="queue" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; to synchronize.">동기화할 <see cref="T:System.Collections.Queue" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; wrapper that is synchronized (thread safe).">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.Queue" /> 래퍼입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;queue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="queue" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to a new array.">
        <see cref="T:System.Collections.Queue" /> 요소를 새 배열에 복사합니다.</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" />에서 복사된 요소를 포함하는 새 배열입니다.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">용량을 <see cref="T:System.Collections.Queue" />의 실제 요소 수로 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.Queue" />이 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed non-generic read-only collection.">제네릭이 아닌 강력한 형식의 읽기 전용 컬렉션의 <see langword="abstract" /> 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; class.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">에 포함 된 요소의 수를 가져옵니다는 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">에 포함 된 요소의 수는 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스. 이 속성 값을 검색하는 것은 O(1) 연산입니다.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">반복 하는 열거자를 반환 합니다 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> 인스턴스에 대한 <see cref="T:System.Collections.ReadOnlyCollectionBase" />입니다.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스에 포함된 요소의 목록을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.ArrayList" /> 나타내는 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스 자체입니다.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.ReadOnlyCollectionBase" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ReadOnlyCollectionBase" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
-또는-
소스 <see cref="T:System.Collections.ReadOnlyCollectionBase" />의 요소 수가 대상 <paramref name="index" />의 <paramref name="array" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.ReadOnlyCollectionBase" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe).">액세스 여부를 나타내는 값을 가져옵니다는 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 개체가 동기화 되는지 (스레드로부터 안전함).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ReadOnlyCollectionBase" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">에 대 한 액세스를 동기화 할 수 있는 개체를 가져옵니다는 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 개체입니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.">키를 기준으로 정렬되고 키와 인덱스로 액세스할 수 있는 키/값 쌍의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">비어 있는 상태이고 기본 초기 용량을 가지며 <see cref="T:System.Collections.SortedList" /> 개체에 추가된 각 키에서 구현하는 <see cref="T:System.IComparable" /> 인터페이스에 따라 정렬되는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">비어 있고 기본 초기 용량을 갖고 있으며 지정된 <see cref="T:System.Collections.SortedList" /> 인터페이스에 따라 정렬되는 <see cref="T:System.Collections.IComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">키를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.
또는
각 키의 <see cref="T:System.IComparable" /> 구현을 사용하면 <see langword="null" />입니다.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">비어 있고 지정된 초기 용량을 갖고 있으며 지정된 <see cref="T:System.Collections.SortedList" /> 인터페이스에 따라 정렬되는 <see cref="T:System.Collections.IComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">키를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.
또는
각 키의 <see cref="T:System.IComparable" /> 구현을 사용하면 <see langword="null" />입니다.</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 개체에 포함될 수 있는 초기 요소 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;capacity&quot; /&gt;.">지정된 <paramref name="capacity" />의 <see cref="T:System.Collections.SortedList" /> 개체를 만드는 데 사용할 수 있는 메모리가 충분하지 않은 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key.">지정된 사전에서 복사된 요소가 포함되어 있고 복사된 요소의 수와 같은 초기 용량을 갖고 있으며 각 키에서 구현된 <see cref="T:System.Collections.SortedList" /> 인터페이스에 따라 정렬되는 <see cref="T:System.IComparable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">새 <see cref="T:System.Collections.IDictionary" /> 개체로 복사할 <see cref="T:System.Collections.SortedList" /> 구현입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="One or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="d" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">지정된 사전에서 복사된 요소가 포함되어 있고 복사된 요소의 수와 같은 초기 용량을 갖고 있으며 지정된 <see cref="T:System.Collections.SortedList" /> 인터페이스에 따라 정렬되는 <see cref="T:System.Collections.IComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">새 <see cref="T:System.Collections.IDictionary" /> 개체로 복사할 <see cref="T:System.Collections.SortedList" /> 구현입니다.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">키를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.
또는
각 키의 <see cref="T:System.IComparable" /> 구현을 사용하면 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and one or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="comparer" />가 <see langword="null" />이고 <paramref name="d" />의 요소 중 하나 이상이 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">비어 있는 상태이고 지정된 초기 용량을 가지며 <see cref="T:System.Collections.SortedList" /> 개체에 추가된 각 키에서 구현된 <see cref="T:System.IComparable" /> 인터페이스에 따라 정렬되는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 개체에 포함될 수 있는 초기 요소 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" />가 0보다 작은 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;initialCapacity&quot; /&gt;.">지정된 <paramref name="initialCapacity" />의 <see cref="T:System.Collections.SortedList" /> 개체를 만드는 데 사용할 수 있는 메모리가 충분하지 않은 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">지정한 키와 값을 가진 요소를 <see cref="T:System.Collections.SortedList" /> 개체에 추가합니다.</summary>
      <param name="key" vsli:raw="The key of the element to add.">추가할 요소의 키입니다.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt;.">추가할 요소의 값입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the specified &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is set to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface, and &lt;paramref name=&quot;key&quot; /&gt; does not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">지정한 <paramref name="key" />를 가진 요소가 이미 <see cref="T:System.Collections.SortedList" /> 개체에 있는 경우
또는
<see cref="T:System.Collections.SortedList" />가 <see cref="T:System.IComparable" /> 인터페이스를 사용하도록 설정되었으나 <paramref name="key" />는 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" />이 읽기 전용인 경우
또는
<see cref="T:System.Collections.SortedList" />가 고정 크기입니다.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" />에 요소를 추가할 수 있는 메모리가 충분하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">비교자에서 예외를 throw하는 경우</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary vsli:raw="Gets or sets the capacity of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 용량을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 개체에 포함될 수 있는 요소의 수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value assigned is less than the current number of elements in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">할당된 값이 <see cref="T:System.Collections.SortedList" /> 개체의 현재 요소 수보다 작은 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">시스템에 사용 가능한 메모리가 부족합니다.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 요소를 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용인 경우
또는
<see cref="T:System.Collections.SortedList" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary vsli:raw="Creates a shallow copy of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 단순 복사본을 만듭니다.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 단순 복사본입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">
        <see cref="T:System.Collections.SortedList" /> 개체에 특정 키가 포함되어 있는지 여부를 확인합니다.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 찾을 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에 지정된 <paramref name="key" />를 가진 요소가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">비교자에서 예외를 throw하는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">
        <see cref="T:System.Collections.SortedList" /> 개체에 특정 키가 포함되어 있는지 여부를 확인합니다.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 찾을 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에 지정된 <paramref name="key" />를 가진 요소가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">비교자에서 예외를 throw하는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific value.">
        <see cref="T:System.Collections.SortedList" /> 개체에 특정 값이 포함되어 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 찾을 값입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에 지정된 <paramref name="value" />를 가진 요소가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object, starting at the specified index in the array.">
        <see cref="T:System.Collections.SortedList" /> 요소를 지정한 배열 인덱스에서 시작하여 1차원 <see cref="T:System.Array" /> 개체에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 <see cref="T:System.Collections.DictionaryEntry" /> 개체의 대상인 1차원 <see cref="T:System.Collections.SortedList" /> 개체입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
또는
소스 <see cref="T:System.Collections.SortedList" /> 개체의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.SortedList" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary vsli:raw="Gets the number of elements contained in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 포함된 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 포함된 요소 수입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary vsli:raw="Gets the value at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스에서 값을 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">가져올 값의 0부터 시작하는 인덱스입니다.</param>
      <returns vsli:raw="The value at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스에 있는 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" />가 <see cref="T:System.Collections.SortedList" /> 개체의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object that iterates through a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체를 반복하는 <see cref="T:System.Collections.SortedList" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체의 <see cref="T:System.Collections.SortedList" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스에서 키를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the key to get.">가져올 키의 0부터 시작하는 인덱스입니다.</param>
      <returns vsli:raw="The key at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스 키입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" />가 <see cref="T:System.Collections.SortedList" /> 개체의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 키를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IList" /> 개체의 키가 포함된 <see cref="T:System.Collections.SortedList" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IList" /> 개체의 값이 포함된 <see cref="T:System.Collections.SortedList" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the specified key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정된 키 인덱스(0부터 시작)를 반환합니다.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 찾을 키입니다.</param>
      <returns vsli:raw="The zero-based index of the &lt;paramref name=&quot;key&quot; /&gt; parameter, if &lt;paramref name=&quot;key&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">
        <paramref name="key" />가 <see cref="T:System.Collections.SortedList" /> 개체에 있으면 <paramref name="key" /> 매개 변수의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">비교자에서 예외를 throw하는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified value in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">지정한 값이 <see cref="T:System.Collections.SortedList" /> 개체에서 맨 처음 발견되는 인덱스(0부터 시작)를 반환합니다.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 찾을 값입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the &lt;paramref name=&quot;value&quot; /&gt; parameter, if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">
        <paramref name="value" />가 <see cref="T:System.Collections.SortedList" /> 개체에 있으면 <paramref name="value" /> 매개 변수가 맨 처음 발견되는 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체의 크기가 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.">
        <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe).">
        <see cref="T:System.Collections.SortedList" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with a specific key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 특정 키와 연관된 값을 가져오거나 설정합니다.</summary>
      <param name="key" vsli:raw="The key associated with the value to get or set.">가져오거나 설정할 값과 관련된 키입니다.</param>
      <returns vsli:raw="The value associated with the &lt;paramref name=&quot;key&quot; /&gt; parameter in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object, if &lt;paramref name=&quot;key&quot; /&gt; is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 있으면 <see cref="T:System.Collections.SortedList" /> 개체의 <paramref name="key" /> 매개 변수와 연관된 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">속성이 설정되어 있고 <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용인 경우
또는
속성이 설정되어 있고 <paramref name="key" />가 컬렉션에 없으며 <see cref="T:System.Collections.SortedList" />의 크기가 고정된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.SortedList" />에 요소를 추가할 수 있는 메모리가 충분하지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">비교자에서 예외를 throw하는 경우</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 키를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 키가 포함된 <see cref="T:System.Collections.SortedList" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에서 지정된 키를 가진 요소를 제거합니다.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">제거할 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용인 경우
또는
<see cref="T:System.Collections.SortedList" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스에서 요소를 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">제거할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" />가 <see cref="T:System.Collections.SortedList" /> 개체의 유효한 인덱스 범위 밖에 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" />이 읽기 전용인 경우
또는
<see cref="T:System.Collections.SortedList" />가 고정 크기입니다.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary vsli:raw="Replaces the value at a specific index in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 지정한 인덱스에서 값을 바꿉니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which to save &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 저장할 0부터 시작하는 인덱스입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to save into the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> 개체에 저장할 <see cref="T:System.Collections.SortedList" />입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" />가 <see cref="T:System.Collections.SortedList" /> 개체의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary vsli:raw="Returns a synchronized (thread-safe) wrapper for a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 대해 동기화되어 스레드로부터 안전하게 보호되는 래퍼를 반환합니다.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object to synchronize.">동기화할 <see cref="T:System.Collections.SortedList" /> 개체입니다.</param>
      <returns vsli:raw="A synchronized (thread-safe) wrapper for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 대해 동기화되어 스레드로부터 안전하게 보호되는 래퍼입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Collections.SortedList" />를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.SortedList" />입니다.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">용량을 <see cref="T:System.Collections.SortedList" /> 개체의 실제 요소 수로 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 개체가 읽기 전용인 경우
또는
<see cref="T:System.Collections.SortedList" />가 고정 크기입니다.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 개체의 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 개체의 값이 포함된 <see cref="T:System.Collections.SortedList" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary vsli:raw="Creates collections that ignore the case in strings.">문자열의 대/소문자를 무시하는 컬렉션을 만듭니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.CollectionsUtil&quot; /&gt; class.">
        <see cref="T:System.Collections.Specialized.CollectionsUtil" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary vsli:raw="Copies the entries from the specified dictionary to a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the same initial capacity as the number of entries copied.">지정된 사전의 항목을 복사된 항목의 수와 초기 용량이 같은 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스로 복사합니다.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; to copy to a new case-insensitive &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt;.">대/소문자를 구분하지 않는 새 <see cref="T:System.Collections.IDictionary" />로 복사할 <see cref="T:System.Collections.Hashtable" />입니다.</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class containing the entries from the specified &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">지정된 <see cref="T:System.Collections.Hashtable" />의 항목을 포함하는 <see cref="T:System.Collections.IDictionary" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</summary>
      <param name="capacity" vsli:raw="The approximate number of entries that the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; can initially contain.">
        <see cref="T:System.Collections.Hashtable" />가 처음에 포함할 수 있는 대략적인 엔트리 수입니다.</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary vsli:raw="Represents a simple last-in-first-out (LIFO) non-generic collection of objects.">제네릭이 아닌 간단한 LIFO(후입선출) 방식의 개체 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the default initial capacity.">비어 있는 상태에서 기본 초기 용량을 가지는 <see cref="T:System.Collections.Stack" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.">지정한 컬렉션에서 복사된 요소가 포함되어 있고 복사된 요소의 수와 같은 초기 용량을 가지는 <see cref="T:System.Collections.Stack" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">요소를 복사할 원본 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">비어 있는 상태이고 지정한 초기 용량과 기본 초기 용량 중에서 더 큰 용량을 가지는 <see cref="T:System.Collections.Stack" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Stack" />에 포함될 수 있는 초기 요소 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에서 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />의 부분 복사본을 만듭니다.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />의 부분 복사본입니다.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에 요소가 있는지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에서 찾을 개체입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />가 <paramref name="obj" />에 있으면 <see cref="T:System.Collections.Stack" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">
        <see cref="T:System.Collections.Stack" />을 지정한 배열 인덱스에서 시작하여 기존의 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Stack" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우
또는
소스 <see cref="T:System.Collections.Stack" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">소스 <see cref="T:System.Collections.Stack" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에 포함된 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에 포함된 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />의 <see cref="T:System.Collections.Stack" />를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.Stack" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.Stack" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; without removing it.">
        <see cref="T:System.Collections.Stack" />의 맨 위에서 개체를 제거하지 않고 반환합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" />의 맨 위에 있는 <see cref="T:System.Collections.Stack" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" />가 비어 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />의 맨 위에서 개체를 제거하고 반환합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; removed from the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" />의 맨 위에서 제거되는 <see cref="T:System.Collections.Stack" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" />가 비어 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">개체를 <see cref="T:System.Collections.Stack" />의 맨 위에 삽입합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to push onto the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" />에 적용할 <see cref="T:System.Collections.Stack" />입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary vsli:raw="Returns a synchronized (thread safe) wrapper for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.Stack" />의 래퍼를 반환합니다.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to synchronize.">동기화할 <see cref="T:System.Collections.Stack" />입니다.</param>
      <returns vsli:raw="A synchronized wrapper around the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />의 동기화 래퍼입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stack" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" />에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Collections.Stack" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to a new array.">
        <see cref="T:System.Collections.Stack" />을 새 배열에 복사합니다.</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" />의 요소 복사본을 포함하는 새 배열입니다.</returns>
    </member>
  </members>
</doc>