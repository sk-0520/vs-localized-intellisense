<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Requests</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationManager">
      <summary>클라이언트 인증 처리 중 호출된 인증 모듈을 관리합니다.</summary>
    </member>
    <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>등록된 각 인증 모듈을 호출하여 인증 요청에 응답하는 첫 번째 모듈을 찾습니다.</summary>
      <param name="challenge">인터넷 리소스가 반환한 요구입니다.</param>
      <param name="request">인증 요구를 초기화한 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credentials">이 요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
      <returns>인증을 시도한 결과가 들어 있는 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스입니다. 요구(challenge)에 응답할 인증 모듈이 없으면, 이 메서드는 <see langword="null" />을 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="challenge" />가 <see langword="null" />인 경우
또는
<paramref name="request" />가 <see langword="null" />인 경우
또는
<paramref name="credentials" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.CredentialPolicy">
      <summary>
        <see cref="T:System.Net.HttpWebRequest" /> 클래스를 통한 리소스 요청에 사용할 자격 증명 정책을 가져오거나 설정합니다.</summary>
      <returns>요청과 함께 자격 증명을 보낼지 여부를 결정하는 <see cref="T:System.Net.ICredentialPolicy" /> 인터페이스를 구현하는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <summary>
        <see cref="T:System.Net.WebRequest" />와 이 클래스의 파생 클래스를 통한 요청에 대해 Kerberos 인증을 수행하는 동안 호스트를 식별하는 데 사용되는 SPN(서비스 사용자 이름)이 들어 있는 사전을 가져옵니다.</summary>
      <returns>호스트 정보로 구성된 키에 대한 SPN 값이 들어 있는 쓰기 가능한 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>요청을 사전 인증합니다.</summary>
      <param name="request">인터넷 리소스에 대한 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credentials">요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
      <returns>요청을 사전 인증할 수 있으면, <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다. <paramref name="credentials" />이(가) <see langword="null" />이면 이 메서드는 <see langword="null" />을(를) 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <summary>인증 관리자를 사용하여 인증 모듈을 등록합니다.</summary>
      <param name="authenticationModule">인증 관리자를 사용하여 등록할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.RegisteredModules">
      <summary>인증 관리자로 등록하는 인증 모듈의 목록을 가져옵니다.</summary>
      <returns>등록된 인증 모듈을 읽을 수 있도록 하는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <summary>등록된 모듈 목록에서 지정된 인증 모듈을 제거합니다.</summary>
      <param name="authenticationModule">등록된 모듈 목록에서 제거할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">지정된 <see cref="T:System.Net.IAuthenticationModule" />이 등록되지 않은 경우</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <summary>등록된 모듈 목록에서 지정된 인증 체계가 포함된 인증 모듈을 제거합니다.</summary>
      <param name="authenticationScheme">제거할 모듈의 인증 체계입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationScheme" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이 인증 체계 모듈이 등록되지 않은 경우</exception>
    </member>
    <member name="T:System.Net.Authorization">
      <summary>인터넷 서버에 대한 인증 메시지가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String)">
      <summary>지정된 인증 메시지를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token">서버에 필요한 암호화된 인증 메시지입니다.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <summary>지정된 인증 메시지 및 완료 상태를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token">서버에 필요한 암호화된 인증 메시지입니다.</param>
      <param name="finished">인증 요구의 완료 상태입니다. 인증 요구가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <summary>지정된 인증 메시지, 완료 상태 및 연결 그룹 식별자를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token">서버에 필요한 암호화된 인증 메시지입니다.</param>
      <param name="finished">인증 요구의 완료 상태입니다. 인증 요구가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="connectionGroupId">이 인증 체계에만 바인딩된 프라이빗 클라이언트/서버 연결을 만드는 데 사용할 수 있는 고유 식별자입니다.</param>
    </member>
    <member name="P:System.Net.Authorization.Complete">
      <summary>인증의 완료 상태를 가져옵니다.</summary>
      <returns>인증 프로세스가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.ConnectionGroupId">
      <summary>사용자별 연결에 대한 고유 식별자를 가져옵니다.</summary>
      <returns>연결을 인증 항목과 연결하는 고유 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.Message">
      <summary>인증 요구에 대한 응답으로 서버에 반환된 메시지를 가져옵니다.</summary>
      <returns>인증 요구에 대한 응답으로 서버에 반환될 메시지입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.MutuallyAuthenticated">
      <summary>상호 인증이 발생했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns>클라이언트와 서버가 모두 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.ProtectionRealm">
      <summary>
        <see cref="P:System.Net.Authorization.Message" /> 속성을 사용하여 인증할 수 있는 URI(Uniform Resource Identifier)에 대한 접두사를 가져오거나 설정합니다.</summary>
      <returns>URI 접두사가 포함된 문자열의 배열입니다.</returns>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary>
        <see cref="T:System.Net.HttpWebRequest" /> 개체를 사용하여 가져온 리소스의 캐싱 동작을 제어하는 시간 값의 의미를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary>캐시에 보관된 시간이 이 값으로 지정된 시간 이내인 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />와 <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />와 <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary>만료 후 경과 시간이 이 값으로 지정된 시간 이내인 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary>만료까지 남은 시간이 이 값으로 지정된 시간보다 크거나 같은 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary>내부 전용입니다. 이 멤버를 사용하려고 하면 Framework에서 <see cref="T:System.ArgumentException" />을 throw합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary>HTTP(Hypertext Transfer protocol)를 사용하여 가져온 리소스의 캐싱 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary>서버를 사용하여 요청을 만족시킵니다. 클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다. 클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다. 이 동작은 .NET Framework에서 제공하는 시스템 구성 파일에 기본적으로 지정된 캐시 동작입니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary>캐시의 리소스를 사용할 수 있는 경우 캐시에서 리소스 요청을 만족시키고, 그렇지 않으면 리소스 요청을 서버로 보냅니다. 요청된 항목을 클라이언트와 서버 사이의 캐시에서 사용할 수 있으면 중간 캐시에서 요청을 만족시킬 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary>로컬로 캐시된 리소스를 사용하여 요청을 만족시키며, 캐시에 해당 항목이 없더라도 요청을 서버로 보내지는 않습니다. 이 캐시 정책 수준이 지정된 경우 클라이언트 캐시에 항목이 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary>로컬 컴퓨터의 캐시나 LAN(Local Area Network) 상의 원격 캐시에서 리소스 요청을 만족시킵니다. 요청을 만족시킬 수 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다. HTTP 캐싱 프로토콜에서 이 작업은 <see langword="only-if-cached" /> 캐시 제어 지시문을 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary>캐시된 리소스 복사본을 사용하거나 서버로 리소스 요청을 보냄으로써 리소스 요청을 만족시킵니다. 현재 캐시 정책과 콘텐츠가 캐시에 보관된 기간에 따라 수행할 작업이 결정됩니다. 대부분의 애플리케이션에서는 이 캐시 수준을 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary>캐시의 리소스를 사용하여 요청을 만족시키지 않고 리소스를 캐시하지 않습니다. 리소스가 로컬 캐시에 있으면 제거됩니다. 이 정책 수준은 중간 캐시에서 리소스를 제거해야 함을 나타냅니다. HTTP 캐싱 프로토콜에서 이 작업은 no-cache 캐시 제어 지시문을 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary>서버나 로컬 캐시 이외의 캐시를 사용하여 요청을 만족시킵니다. 중간 캐시에서 요청을 만족시키려면 캐시에서 서버를 사용하여 해당 캐시 항목의 유효성을 다시 검증해야 합니다. HTTP 캐싱 프로토콜에서 이 작업은 max-age = 0 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary>서버를 사용하여 요청을 만족시킵니다. 응답은 캐시에 저장될 수 있습니다. HTTP 캐싱 프로토콜에서 이 작업은 no-cache 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary>서버의 복사본과 캐시에 있는 리소스의 복사본을 비교합니다. 서버의 복사본이 최신이면 요청을 처리하는 데 사용하고 캐시의 복사본을 대체합니다. 캐시의 복사본이 서버의 복사본과 동일하면 캐시된 복사본을 사용합니다. HTTP 캐싱 프로토콜에서는 조건부 요청을 사용하여 이 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary>
        <see cref="T:System.Net.HttpWebRequest" /> 개체를 사용하여 가져온 리소스에 대한 애플리케이션의 캐싱 요구 사항을 정의합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary>
        <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary>지정된 캐시 동기화 날짜를 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheSyncDate">캐시에 저장된 리소스의 유효성을 다시 검사해야 할 시간을 지정하는 <see cref="T:System.DateTime" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary>지정된 보관 기간 제어 및 시간 값을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 열거형 값인 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> 또는 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" /> 중 하나입니다.</param>
      <param name="ageOrFreshOrStale">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="cacheAgeControl" /> 매개 변수에 지정된 값을 이 생성자와 함께 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary>지정된 최대 보관 기간, 보관 기간 제어 및 시간 값을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 값입니다.</param>
      <param name="maxAge">리소스의 최대 보관 기간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="freshOrStale">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="cacheAgeControl" /> 매개 변수에 지정된 값이 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary>지정된 최대 보관 기간, 보관 기간 제어 값, 시간 값 및 캐시 동기화 날짜를 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 값입니다.</param>
      <param name="maxAge">리소스의 최대 보관 기간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="freshOrStale">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="cacheSyncDate">캐시에 저장된 리소스의 유효성을 다시 검사해야 할 시간을 지정하는 <see cref="T:System.DateTime" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary>지정된 캐시 정책을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="level">
        <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 값입니다.</param>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary>이 인스턴스의 캐시 동기화 날짜를 가져옵니다.</summary>
      <returns>이 인스턴스가 만들어질 때 지정된 날짜로 설정된 <see cref="T:System.DateTime" />입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary>이 인스턴스가 만들어질 때 지정된 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 개체를 사용하여 가져온 리소스의 캐시 동작을 지정하는 <see cref="T:System.Net.HttpWebRequest" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary>캐시에서 반환되는 리소스에 허용되는 최대 보관 기간을 가져옵니다.</summary>
      <returns>이 인스턴스가 만들어질 때 지정된 최대 보관 기간 값으로 설정된 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary>캐시에서 반환되는 리소스에 허용되는 만료 후 최대 시간 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 만들어질 때 지정된 만료 후 최대 시간 값으로 설정된 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary>캐시에서 반환되는 리소스에 허용되는 만료 전 최소 시간을 가져옵니다.</summary>
      <returns>이 인스턴스가 만들어질 때 지정된 만료 전 최소 시간을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary>이 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns>이 인스턴스의 속성 값이 들어 있는 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="T:System.Net.FileWebRequest">
      <summary>파일 시스템 구현을 제공 합니다 <see cref="T:System.Net.WebRequest" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Net.FileWebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스의 지정된 인스턴스로부터 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 새 serialize 하는 데 필요한 정보가 들어 있는 개체 <see cref="T:System.Net.FileWebRequest" /> 개체입니다.</param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> 새 연결 된 serialize 된 스트림의 소스가 들어 있는 개체 <see cref="T:System.Net.FileWebRequest" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.Abort">
      <summary>인터넷 리소스에 대한 요청을 취소합니다.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.FileWebRequest.Method" /> 속성이 <c>GET</c>이며 애플리케이션에서 스트림에 쓰려는 경우</exception>
      <exception cref="T:System.InvalidOperationException">스트림에 대 한 이전 호출에서 사용 되 고 <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />입니다.</exception>
      <exception cref="T:System.ApplicationException">사용 가능한 쓰기 스트림이 없습니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="T:System.Net.FileWebRequest" /> 중단 되었습니다.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>파일 시스템 리소스에 대 한 비동기 요청을 시작 합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 스트림은 <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용 중입니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="T:System.Net.FileWebRequest" /> 중단 되었습니다.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ConnectionGroupName">
      <summary>요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>요청에 대한 연결 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentLength">
      <summary>전송 되는 데이터의 콘텐츠 길이 가져오거나 설정 합니다.</summary>
      <returns>전송 중인 요청 데이터의 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.FileWebRequest.ContentLength" />가 0보다 작습니다.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentType">
      <summary>전송 되는 데이터의 콘텐츠 형식을 가져오거나 설정 합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>전송 중인 데이터의 콘텐츠 형식입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Credentials">
      <summary>이 요청과 연관 된 자격 증명을 가져오거나 설정 합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> 이 요청과 연관 된 인증 자격 증명을 포함 하는 합니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>애플리케이션이 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 인스턴스에 대한 비동기 요청을 종료합니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 스트림에 대 한 보류 중인 요청을 참조 하는 합니다.</param>
      <returns>애플리케이션에서 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>파일 시스템 리소스에 대 한 비동기 요청을 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 참조 하는 응답에 대 한 보류 중인 요청입니다.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> 파일 시스템 리소스 로부터의 응답이 들어 있는입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStream">
      <summary>반환 된 <see cref="T:System.IO.Stream" /> 파일 시스템 리소스에 데이터를 쓰기 위한 개체입니다.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 파일 시스템 리소스에 데이터를 작성 합니다.</returns>
      <exception cref="T:System.Net.WebException">요청 시간이 초과 됩니다.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStreamAsync">
      <summary>데이터를 파일 시스템 리소스에 쓰기 위해 스트림을 비동기 작업으로 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">스트림에 대 한 이전 호출에서 사용 되 고 <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />입니다.
-또는-
스트림이 요청 전에 이미 응답을 받았습니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.FileWebRequest.Method" /> 속성이 GET 또는 HEAD입니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="T:System.Net.FileWebRequest" /> 중단 되었습니다.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponse">
      <summary>파일 시스템 요청에 대 한 응답을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> 파일 시스템 리소스 로부터의 응답이 들어 있는입니다.</returns>
      <exception cref="T:System.Net.WebException">요청 시간이 초과되었습니다.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponseAsync">
      <summary>파일 시스템 요청에 대한 응답을 비동기 작업으로 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 스트림은 <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용 중입니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="T:System.Net.FileWebRequest" /> 중단 되었습니다.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.Headers">
      <summary>요청과 연관 된 이름/값 쌍의 컬렉션을 가져옵니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> 이 요청과 연관 된 헤더 이름/값 쌍이 포함 된 합니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Method">
      <summary>요청에 사용 되는 프로토콜 메서드를 가져오거나 설정 합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>이 요청에서 사용할 프로토콜 메서드입니다.</returns>
      <exception cref="T:System.ArgumentException">메서드가 올바르지 않습니다.
-또는-
메서드가 지원되지 않습니다.
-또는-
여러 메서드가 지정 된 경우</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.PreAuthenticate">
      <summary>요청을 미리 인증 여부를 나타내는 값을 가져오거나 설정 합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>
        <see langword="true" /> 미리 인증 합니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Proxy">
      <summary>이 요청에 사용할 네트워크 프록시를 가져오거나 설정 합니다. 이 속성은 나중에 사용에 대 한 예약 되어 있습니다.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> 이 요청에 사용할 네트워크 프록시를 나타내는입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.RequestUri">
      <summary>리소스 URI (Uniform Identifier) 요청을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 요청의 URI를 포함 합니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>채웁니다를 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 serialize 하는 데 필요한 데이터로 <see cref="T:System.Net.FileWebRequest" />합니다.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 에 대 한 serialize 된 데이터를 보유 하는 <see cref="T:System.Net.FileWebRequest" />합니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 직렬화된 스트림의 대상이 들어 있는 <see cref="T:System.Net.FileWebRequest" />입니다.</param>
    </member>
    <member name="P:System.Net.FileWebRequest.Timeout">
      <summary>요청 시간이 초과 될 때까지 시간을 가져오거나 설정 합니다.</summary>
      <returns>요청 시간이 초과 될 때까지 시간을 밀리초 단위로 시간 또는 값 <see cref="F:System.Threading.Timeout.Infinite" /> 요청 시간 제한이 실행 되지 않은 것을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정 된 값은 0 보다 작거나 아니며 <see cref="F:System.Threading.Timeout.Infinite" />합니다.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <summary>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <exception cref="T:System.NotSupportedException">Uniform Resource Identifier (Uri) 파일에 대 한 기본 자격 증명을 사용할 수 없습니다.</exception>
    </member>
    <member name="T:System.Net.FileWebResponse">
      <summary>
        <see cref="T:System.Net.WebResponse" /> 클래스의 파일 시스템 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Net.FileWebResponse" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.FileWebResponse" /> 인스턴스입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련된 serialize된 스트림의 소스가 들어 있는 <see cref="T:System.Net.FileWebResponse" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.Close">
      <summary>응답 스트림을 닫습니다.</summary>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentLength">
      <summary>파일 시스템 리소스의 콘텐츠 길이를 가져옵니다.</summary>
      <returns>파일 시스템 리소스에서 반환된 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentType">
      <summary>파일 시스템 리소스의 콘텐츠 형식을 가져옵니다.</summary>
      <returns>"이진수/8진수 스트림" 값입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.GetResponseStream">
      <summary>파일 시스템 리소스에서 데이터 스트림을 반환합니다.</summary>
      <returns>파일 시스템 리소스에서 데이터를 읽을 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.Headers">
      <summary>응답과 관련된 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>이 응답과 관련된 헤더 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ResponseUri">
      <summary>응답을 제공한 파일 시스템 리소스의 URI를 가져옵니다.</summary>
      <returns>응답을 제공한 파일 시스템 리소스의 URI가 들어 있는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.SupportsHeaders">
      <summary>
        <see cref="P:System.Net.FileWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FileWebResponse" /> 인스턴스에 의해 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Net.FileWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FileWebResponse" /> 인스턴스에 의해 지원되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.FileWebResponse" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유할 <see cref="T:System.Net.FileWebResponse" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.FileWebResponse" />입니다.</param>
    </member>
    <member name="T:System.Net.FtpStatusCode">
      <summary>FTP(파일 전송 프로토콜) 작업에 대해 반환되는 상태 코드를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.AccountNeeded">
      <summary>서버의 사용자 계정이 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <summary>오류가 발생하여 요청 작업을 완료하지 못했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <summary>지정된 페이지 형식을 알 수 없어 요청된 작업을 수행할 수 없음을 나타냅니다. 페이지 형식에 대한 자세한 내용은 RFC 959 3.1.2.3절을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <summary>지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <summary>파일을 사용할 수 없어서 지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <summary>파일을 사용할 수 없거나 파일이 사용 중이어서 지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <summary>서버에 공간이 부족하여 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <summary>하나 이상의 명령 인수에 구문 오류가 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.BadCommandSequence">
      <summary>명령 시퀀스의 순서가 올바르지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CantOpenData">
      <summary>데이터 연결을 열 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingControl">
      <summary>서버에서 제어 연결을 닫고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingData">
      <summary>서버에서 데이터 연결을 닫는 중이며 요청된 파일 작업에 성공했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandExtraneous">
      <summary>필요하지 않은 명령이어서 서버에서 구현하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <summary>FTP 서버에서 명령을 구현하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandOK">
      <summary>명령이 성공적으로 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <summary>명령에 구문 오류가 있거나 서버에서 인식할 수 없는 명령임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ConnectionClosed">
      <summary>연결이 닫혔음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <summary>데이터 연결이 이미 열려 있으며 요청된 전송이 시작 중임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DirectoryStatus">
      <summary>디렉터리의 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.EnteringPassive">
      <summary>서버에서 수동 모드를 시작 중임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionAborted">
      <summary>요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionOK">
      <summary>요청된 파일 작업이 성공적으로 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileCommandPending">
      <summary>요청된 파일 작업에 추가 정보가 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileStatus">
      <summary>파일의 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.LoggedInProceed">
      <summary>사용자가 로그인했으며 명령을 보낼 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <summary>서버에 로그인 계정을 제공해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NotLoggedIn">
      <summary>서버에 로그인 정보를 보내야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.OpeningData">
      <summary>서버에서 데이터 연결을 열고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.PathnameCreated">
      <summary>요청된 경로 이름이 만들어졌음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.RestartMarker">
      <summary>응답에 다시 시작 마커 회신이 들어 있음을 나타냅니다. 이 상태와 함께 제공되는 설명 텍스트에는 사용자 데이터 스트림 마커와 서버 마커가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <summary>서버에 암호를 제공해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendUserCommand">
      <summary>서버에서 사용자 로그인 작업을 수행할 준비가 되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <summary>서버에서 클라이언트가 지정한 인증 메커니즘을 허용하며 보안 데이터의 교환이 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <summary>서비스를 사용할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <summary>지금은 서비스를 사용할 수 없으므로 나중에 요청을 시도해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SystemType">
      <summary>IANA(Internet Assigned Numbers Authority)에서 발표한 Assigned Numbers 문서의 시스템 이름을 사용하여 시스템 형식 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.Undefined">
      <summary>완결성을 위해 포함된 값으로, 이 값은 서버에서 반환되지 않습니다.</summary>
    </member>
    <member name="T:System.Net.FtpWebRequest">
      <summary>FTP(파일 전송 프로토콜) 클라이언트를 구현합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.Abort">
      <summary>비동기 FTP 작업을 종료합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>요청의 콘텐츠 스트림을 쓰기 위해 비동기적으로 여는 작업을 시작합니다.</summary>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <returns>작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 인스턴스입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 메서드 또는 <see cref="M:System.Net.FtpWebRequest.GetRequestStream" />에 대한 이전 호출이 아직 완료되지 않은 경우</exception>
      <exception cref="T:System.Net.WebException">FTP 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.FtpWebRequest.Method" /> 속성이 <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>비동기적으로 FTP 서버에 요청을 보내고 응답을 받는 작업을 시작합니다.</summary>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <returns>작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 인스턴스입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />가 이 인스턴스에 대해 이미 호출된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ClientCertificates">
      <summary>FTP 서버에 대해 암호화된 연결을 설정하는 데 사용되는 자격 증명을 가져오거나 설정합니다.</summary>
      <returns>클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <summary>현재 요청을 보내는 데 사용되는 서비스 지점이 들어 있는 연결 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns>연결 그룹의 이름이 들어 있는 <see cref="T:System.String" /> 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentLength">
      <summary>
        <see cref="T:System.Net.FtpWebRequest" /> 클래스에서 무시되는 값을 가져오거나 설정합니다.</summary>
      <returns>무시되는 <see cref="T:System.Int64" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentOffset">
      <summary>이 요청으로 다운로드할 파일의 바이트 오프셋을 가져오거나 설정합니다.</summary>
      <returns>파일 오프셋을 바이트 단위로 지정하는 <see cref="T:System.Int64" /> 인스턴스입니다. 기본값은 0입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">이 속성에 지정된 값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentType">
      <summary>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <exception cref="T:System.NotSupportedException">FTP에서 콘텐츠 형식 정보를 지원하지 않는 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Credentials">
      <summary>FTP 서버와 통신하는 데 사용되는 자격 증명을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> 인스턴스이거나, 속성이 아직 설정되지 않은 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Net.ICredentials" />이 아닌 형식의 <see cref="T:System.Net.NetworkCredential" />가 set 작업에 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <summary>모든 FTP 요청에 대한 기본 캐시 정책을 정의합니다.</summary>
      <returns>FTP 요청에 대한 캐시 정책을 정의하는 <see cref="T:System.Net.Cache.RequestCachePolicy" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">호출자가 이 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.EnableSsl">
      <summary>SSL 연결 사용 여부를 지정하는 <see cref="T:System.Boolean" />을 가져오거나 설정합니다.</summary>
      <returns>제어 및 데이터 전송이 암호화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">FTP 서버에 대한 연결이 이미 설정된 경우</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />으로 시작된 보류 중인 비동기 작업을 종료합니다.</summary>
      <param name="asyncResult">작업이 시작될 때 반환된 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <returns>이 인스턴스와 연결된 쓰기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출하여 <paramref name="asyncResult" />를 가져오지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" />로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>
        <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />으로 시작된 보류 중인 비동기 작업을 종료합니다.</summary>
      <param name="asyncResult">작업이 시작될 때 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> 인스턴스가 들어 있는 <see cref="T:System.Net.FtpWebResponse" /> 참조입니다. 이 개체에는 요청에 대한 FTP 서버의 응답이 들어 있습니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />을 호출하여 <paramref name="asyncResult" />를 가져오지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" />로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.WebException">HTTP 프록시를 사용하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetRequestStream">
      <summary>데이터를 FTP 서버에 업로드하는 데 사용되는 스트림을 검색합니다.</summary>
      <returns>현재 요청에서 서버로 보낼 데이터를 저장하는 데 사용되는 쓰기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />이 호출되어 아직 완료되지 않은 경우
또는
HTTP 프록시를 사용하도록 설정되어 있고 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 이외의 FTP 명령을 사용하려고 한 경우</exception>
      <exception cref="T:System.Net.WebException">FTP 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.FtpWebRequest.Method" /> 속성이 <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetResponse">
      <summary>FTP 서버 응답을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> 인스턴스가 들어 있는 <see cref="T:System.Net.FtpWebResponse" /> 참조입니다. 이 개체에는 요청에 대한 FTP 서버의 응답이 들어 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />가 이 인스턴스에 대해 이미 호출된 경우
또는
HTTP 프록시를 사용하도록 설정되어 있고 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 이외의 FTP 명령을 사용하려고 한 경우</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Net.FtpWebRequest.EnableSsl" />이 <see langword="true" />로 설정되었지만 서버에서 이 기능을 지원하지 않는 경우
또는
<see cref="P:System.Net.FtpWebRequest.Timeout" />이 지정되었고 제한 시간이 만료되었습니다.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Headers">
      <summary>빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체를 가져옵니다.</summary>
      <returns>빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.KeepAlive">
      <summary>FTP 서버에 대한 제어 연결이 요청 완료 후 닫히는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns>서버에 대한 연결이 소멸되지 않아야 하면 <see langword="true" />이고, 소멸되어야 하면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Method">
      <summary>FTP 서버에 보낼 명령을 가져오거나 설정합니다.</summary>
      <returns>서버에 보낼 FTP 명령이 들어 있는 <see cref="T:System.String" /> 값입니다. 기본값은 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <exception cref="T:System.ArgumentException">메서드가 잘못된 경우
또는
메서드가 지원되지 않는 경우
또는
여러 메서드가 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.PreAuthenticate">
      <summary>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <exception cref="T:System.NotSupportedException">FTP에서 사전 인증을 지원하지 않는 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Proxy">
      <summary>FTP 서버와 통신하는 데 사용되는 프록시를 가져오거나 설정합니다.</summary>
      <returns>FTP 서버와의 통신을 처리하는 <see cref="T:System.Net.IWebProxy" /> 인스턴스입니다. .NET Core에서 해당 값은 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">이 속성을 <see langword="null" />로 설정한 경우</exception>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <summary>스트림을 읽거나 쓸 때의 제한 시간을 가져오거나 설정합니다.</summary>
      <returns>읽기 또는 쓰기 제한 시간 (밀리초)입니다. 기본값은 30만 밀리초 (5 분)입니다.</returns>
      <exception cref="T:System.InvalidOperationException">요청을 이미 보낸 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RenameTo">
      <summary>이름을 바꿀 파일의 새 이름을 가져오거나 설정합니다.</summary>
      <returns>이름을 바꿀 파일의 새 이름입니다.</returns>
      <exception cref="T:System.ArgumentException">set 작업에 지정된 값이 <see langword="null" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RequestUri">
      <summary>이 인스턴스에서 요청한 URI를 가져옵니다.</summary>
      <returns>FTP(파일 전송 프로토콜)를 사용하여 액세스되는 리소스를 식별하는 <see cref="T:System.Uri" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ServicePoint">
      <summary>FTP 서버에 연결하는 데 사용되는 <see cref="T:System.Net.ServicePoint" /> 개체를 가져옵니다.</summary>
      <returns>연결 동작을 사용자 지정하는 데 사용할 수 있는 <see cref="T:System.Net.ServicePoint" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Timeout">
      <summary>요청 대기 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>요청 시간이 초과 될 때까지 대기 하는 시간 (밀리초)을 포함 하는 값입니다. <see cref="T:System.Int32" />  기본값 <see cref="F:System.Threading.Timeout.Infinite" />은입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseBinary">
      <summary>파일 전송을 위한 데이터 형식을 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns>서버에 전송할 데이터가 이진 데이터임을 나타낼 경우 <see langword="true" />이고, 데이터가 텍스트임을 나타낼 경우 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <summary>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <exception cref="T:System.NotSupportedException">FTP에서 기본 자격 증명을 지원하지 않는 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UsePassive">
      <summary>클라이언트 애플리케이션의 데이터 전송 프로세스에 대한 동작을 가져오거나 설정합니다.</summary>
      <returns>클라이언트 애플리케이션의 데이터 전송 프로세스에서 데이터 포트의 연결을 수신 대기할 경우 <see langword="false" />이고, 클라이언트에서 데이터 포트의 연결을 시작해야 할 경우에는 <see langword="true" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
    </member>
    <member name="T:System.Net.FtpWebResponse">
      <summary>요청에 대한 FTP(파일 전송 프로토콜) 서버의 응답을 캡슐화합니다.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.BannerMessage">
      <summary>연결할 때(로그온하기 전) FTP 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns>서버에서 보낸 배너 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.Close">
      <summary>응답에서 사용 중인 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentLength">
      <summary>FTP 서버로부터 받은 데이터의 길이를 가져옵니다.</summary>
      <returns>FTP 서버로부터 받은 데이터의 바이트 수를 포함하는 <see cref="T:System.Int64" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentType">
      <summary>모든 경우에 <see cref="T:System.NotImplementedException" />을(를) throw합니다.</summary>
      <returns>모든 경우에 <see cref="T:System.NotImplementedException" />을(를) throw합니다.</returns>
      <exception cref="T:System.NotImplementedException">모든 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.ExitMessage">
      <summary>FTP 세션을 종료할 때 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns>서버에서 보낸 종료 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.GetResponseStream">
      <summary>FTP 서버에서 보낸 응답 데이터를 포함하는 스트림을 검색합니다.</summary>
      <returns>응답과 함께 반환된 데이터를 포함하는 읽기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스이거나, 서버에서 응답 데이터를 반환하지 않은 경우 <see cref="F:System.IO.Stream.Null" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">응답에 데이터 스트림이 반환되지 않은 경우</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.Headers">
      <summary>빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체를 가져옵니다.</summary>
      <returns>빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.LastModified">
      <summary>FTP 서버에 있는 파일을 마지막으로 수정한 날짜와 시간을 가져옵니다.</summary>
      <returns>파일을 마지막으로 수정한 날짜와 시간을 포함하는 <see cref="T:System.DateTime" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ResponseUri">
      <summary>요청에 대한 응답을 보낸 URI를 가져옵니다.</summary>
      <returns>이 응답과 관련된 리소스를 식별하는 <see cref="T:System.Uri" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusCode">
      <summary>FTP 서버에서 보낸 가장 최근 상태 코드를 가져옵니다.</summary>
      <returns>이 응답과 함께 반환된 가장 최근 상태 코드를 나타내는 <see cref="T:System.Net.FtpStatusCode" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusDescription">
      <summary>FTP 서버에서 보낸 상태 코드를 설명하는 텍스트를 가져옵니다.</summary>
      <returns>이 응답과 함께 반환된 상태 코드와 메시지를 포함하는 <see cref="T:System.String" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.SupportsHeaders">
      <summary>
        <see cref="P:System.Net.FtpWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FtpWebResponse" /> 인스턴스에 의해 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.
<see cref="P:System.Net.FtpWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FtpWebResponse" /> 인스턴스에 의해 지원되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.WelcomeMessage">
      <summary>인증을 완료했을 때 FTP 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns>서버에서 보낸 시작 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="T:System.Net.GlobalProxySelection">
      <summary>모든 HTTP 요청에 대한 글로벌 기본 프록시 인스턴스를 포함합니다.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.#ctor">
      <summary>
        <see cref="T:System.Net.GlobalProxySelection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <summary>빈 프록시 인스턴스를 반환합니다.</summary>
      <returns>정보가 들어 있지 않은 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
    </member>
    <member name="P:System.Net.GlobalProxySelection.Select">
      <summary>글로벌 HTTP 프록시를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" />에의 모든 호출이 사용하는 <see cref="M:System.Net.HttpWebRequest.GetResponse" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">set 작업에 지정된 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 작업에 대한 권한이 없는 경우</exception>
    </member>
    <member name="T:System.Net.HttpContinueDelegate">
      <summary>클라이언트가 계속 응답을 받을 때 호출자에게 알리는 메서드를 나타냅니다.</summary>
      <param name="StatusCode">서버에서 HTTP 상태의 숫자 값입니다.</param>
      <param name="httpHeaders">서버에서 100-continue 응답으로 반환된 헤더입니다.</param>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>
        <see cref="T:System.Net.WebRequest" /> 클래스의 HTTP 관련 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Net.HttpWebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다. 이 생성자는 사용되지 않습니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Net.HttpWebRequest" /> 개체를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Net.HttpWebRequest" /> 개체와 관련되어 있는 serialize된 스트림의 소스 및 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>인터넷 리소스에 대한 요청을 취소합니다.</summary>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>HTTP <see langword="Accept" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Accept" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <summary>요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</summary>
      <param name="range">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <summary>지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</summary>
      <param name="from">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우
또는
<paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <summary>요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</summary>
      <param name="range">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <summary>지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</summary>
      <param name="from">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우
또는
<paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <summary>요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier">범위에 대한 설명입니다.</param>
      <param name="range">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <summary>지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier">범위에 대한 설명입니다.</param>
      <param name="from">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우
또는
<paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <summary>요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier">범위에 대한 설명입니다.</param>
      <param name="range">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <summary>지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier">범위에 대한 설명입니다.</param>
      <param name="from">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우
또는
<paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Address">
      <summary>요청에 실제로 응답하는 인터넷 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns>요청에 실제로 응답하는 인터넷 리소스를 식별하는 <see cref="T:System.Uri" />입니다. 기본값은 요청을 초기화하기 위해 <see cref="M:System.Net.WebRequest.Create(System.String)" /> 메서드가 사용한 URI입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>요청이 리디렉션 응답을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>요청이 인터넷 리소스의 리디렉션 응답을 자동으로 따르면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>인터넷 리소스에서 받은 데이터를 버퍼링할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에서 받은 데이터를 버퍼링하려면 <see langword="true" />이고, 버퍼링하지 않으려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary>인터넷 리소스에 보낸 데이터를 버퍼링할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 보낸 데이터를 버퍼링할 수 있게 하려면 <see langword="true" />이고, 버퍼링할 수 없게 하려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <summary>압축을 푸는 데 사용할 형식을 가져오거나 설정합니다.</summary>
      <returns>사용 되는 압축 풀기 유형을 나타내는 <see cref="T:System.Net.DecompressionMethods" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태는 이 속성을 설정하도록 허용하지 않습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 개체입니다.</param>
      <returns>비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우
또는
<see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.InvalidOperationException">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 사용되고 있는 경우
또는
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.
또는
스레드 풀에 스레드가 부족합니다.</exception>
      <exception cref="T:System.NotSupportedException">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">.NET Compact Framework 애플리케이션에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다. 콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 .NET Compact Framework의 네트워크 프로그래밍을 참조하세요.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>인터넷 리소스에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자</param>
      <param name="state">이 요청에 대한 상태 개체입니다.</param>
      <returns>응답에 대한 비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이 스트림은 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용 중입니다.
또는
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.
또는
스레드 풀에 스레드가 부족합니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고 <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />입니다.
또는
<see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />, 그리고 <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT입니다.
또는
<see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드가 호출되었습니다.
또는
<see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ClientCertificates">
      <summary>이 요청과 관련된 보안 인증서의 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>이 요청과 연결된 보안 인증서를 포함하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Connection">
      <summary>HTTP <see langword="Connection" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Connection" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.Connection" />의 값이 Keep-alive 또는 Close로 설정되어 있습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <summary>요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns>이 요청에 대한 연결 그룹의 이름입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength">
      <summary>
        <see langword="Content-length" /> HTTP 헤더를 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 보낼 데이터의 바이트 수입니다. 기본값은 -1로, 해당 속성이 설정되지 않았으며 보낼 요청 데이터가 없음을 나타냅니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">새 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 값이 0보다 작습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>HTTP <see langword="Content-type" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Content-type" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueDelegate">
      <summary>인터넷 리소스에서 HTTP 100-continue 응답을 받을 때 호출된 대리자 메서드를 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에서 HTTP 계속 응답이 반환될 때 실행하는 콜백 메서드를 구현하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueTimeout">
      <summary>서버에서 100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>이 요청과 관련된 쿠키를 가져오거나 설정합니다.</summary>
      <returns>이 요청과 관련된 쿠키가 들어 있는 A <see cref="T:System.Net.CookieContainer" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>요청에 대한 인증 정보를 가져오거나 설정합니다.</summary>
      <returns>요청과 관련된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Date">
      <summary>HTTP 요청에 사용할 <see langword="Date" /> HTTP 헤더 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP 요청의 Date 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <summary>이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns>다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <summary>HTTP 오류 응답의 기본 최대 길이를 가져오거나 설정합니다.</summary>
      <returns>HTTP 오류 응답의 기본 최대 길이입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작고 -1이 아닌 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <summary>
        <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> 속성에 대한 기본값을 가져오거나 설정합니다.</summary>
      <returns>받은 응답 헤더의 기본 최대 길이이며 킬로바이트(1024바이트) 단위입니다. 기본 구성 파일에서는 이 값을 64KB로 설정합니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작고 -1이 아닌 경우</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 끝냅니다.</summary>
      <param name="asyncResult">스트림에 대해 보류된 요청입니다.</param>
      <returns>요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.IOException">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentException">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary>데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 종료하고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</summary>
      <param name="asyncResult">스트림에 대해 보류된 요청입니다.</param>
      <param name="context">
        <see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns>요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.ArgumentException">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</exception>
      <exception cref="T:System.IO.IOException">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>인터넷 리소스에 대한 비동기 요청을 종료합니다.</summary>
      <param name="asyncResult">응답에 대해 보류된 요청입니다.</param>
      <returns>인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">이 메서드가 <paramref name="asyncResult." />를 사용하여 이미 호출되었습니다.
또는
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> 속성이 0보다 큰데 데이터를 요청 스트림에 쓰지 않은 경우</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary>HTTP <see langword="Expect" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Expect" /> 헤더의 콘텐츠입니다. 기본값은 <see langword="null" />입니다.

이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다. WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="Expect" />가 하위 문자열로 "100-continue"를 포함하는 문자열로 설정된 경우</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary>요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</summary>
      <returns>요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우
또는
<see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우
또는
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.NotSupportedException">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
요청의 제한 시간이 만료된 경우
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">.NET Compact Framework 애플리케이션에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다. 콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 .NET Compact Framework의 네트워크 프로그래밍을 참조하세요.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary>요청 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체를 가져오고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</summary>
      <param name="context">
        <see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns>요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.Exception">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드는 <see cref="T:System.IO.Stream" />를 얻을 수 없었습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우
또는
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.NotSupportedException">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우
또는
<see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
요청의 제한 시간이 만료된 경우
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary>인터넷 리소스에서의 응답을 반환합니다.</summary>
      <returns>인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용되고 있는 경우
또는
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0 이상이거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />인 경우
또는
<see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우
또는
<see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 메서드가 호출되었습니다.
또는
<see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 이 요청에는 서버로 보낼 데이터가 포함되어 있음을 나타내는 경우. 데이터를 보내는 요청의 경우에는 캐시를 사용하지 말아야 합니다. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.
또는
요청의 제한 시간이 만료된 경우
또는
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>인터넷 리소스로부터 응답을 받았는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>응답을 받았으면 <see langword="true" />이고, 받지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>HTTP 헤더를 구성하는 이름/값 쌍의 컬렉션을 지정합니다.</summary>
      <returns>HTTP 요청의 헤더를 구성하는 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary>요청 URI와 독립적인 HTTP 요청에 사용할 Host 헤더 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP 요청의 Host 헤더 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException">호스트 헤더는 <see langword="null" />로 설정할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">호스트 헤더 잘못된 값으로 설정할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.HttpWebRequest" />가 이미 전송되기 시작한 다음에는 호스트 헤더를 설정할 수 없습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary>HTTP <see langword="If-Modified-Since" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="If-Modified-Since" /> HTTP 헤더의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />입니다. 기본값이 현재 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary>인터넷 리소스에 영구 연결을 할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 대한 요청의 <see langword="true" /> HTTP 헤더 값이 Keep-alive이면 <see langword="Connection" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary>요청이 따르는 최대 리디렉션 수를 가져오거나 설정합니다.</summary>
      <returns>요청이 따르는 최대 리디렉션 응답 수입니다. 기본값은 50입니다.</returns>
      <exception cref="T:System.ArgumentException">값이 0 이하로 설정된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary>응답 헤더의 허용되는 최대 길이를 가져오거나 설정합니다.</summary>
      <returns>응답 헤더의 킬로바이트(1024바이트) 단위 길이입니다.</returns>
      <exception cref="T:System.InvalidOperationException">요청이 제출된 후에 속성이 설정된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작고 -1이 아닌 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary>요청의 미디어 형식을 가져오거나 설정합니다.</summary>
      <returns>요청의 미디어 형식입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>요청에 대한 메서드를 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 접속하는 데 사용할 요청 메서드입니다. 기본값은 GET입니다.</returns>
      <exception cref="T:System.ArgumentException">메서드를 지정하지 않은 경우
또는
메서드 문자열에 잘못된 문자가 들어 있는 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary>요청을 인터넷 리소스에 파이프라인할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>요청을 파이프라인해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary>요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인증을 수행한 이후 요청과 함께 HTTP 권한 부여 헤더를 함께 보내는 경우 <see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary>요청에 사용할 HTTP의 버전을 가져오거나 설정합니다.</summary>
      <returns>요청에 사용할 HTTP 버전입니다. 기본값은 <see cref="F:System.Net.HttpVersion.Version11" />입니다.</returns>
      <exception cref="T:System.ArgumentException">HTTP 버전이 1.0이나 1.1 이외의 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary>요청에 대한 프록시 정보를 가져오거나 설정합니다.</summary>
      <returns>요청을 프록시하는 데 사용할 <see cref="T:System.Net.IWebProxy" /> 개체입니다. 기본값은 <see cref="P:System.Net.GlobalProxySelection.Select" /> 속성을 호출함으로써 설정됩니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.HttpWebRequest.Proxy" />이 <see langword="null" />로 설정됩니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />를 호출하여 요청이 시작된 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 작업에 대한 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary>스트림에 쓰거나 스트림에서 읽을 때의 제한 시간을 밀리초 단위로 가져오거나 설정합니다.</summary>
      <returns>쓰기 또는 읽기가 가능한 제한 시간(밀리초)입니다. 기본값은 300,000밀리초(5분)입니다.</returns>
      <exception cref="T:System.InvalidOperationException">요청을 이미 보낸 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary>HTTP <see langword="Referer" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Referer" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>요청의 원래 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 메서드에 전달된 인터넷 리소스의 URI가 들어 있는 <see cref="M:System.Net.WebRequest.Create(System.String)" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary>인터넷 리소스에 데이터를 분할된 형태로 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 데이터를 분할된 형태로 보내려면 <see langword="true" />로 설정하고 그렇지 않으면 <see langword="false" />로 설정합니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <summary>서버 인증서의 유효성을 검사할 콜백 함수를 가져오거나 설정합니다.</summary>
      <returns>서버 인증서의 유효성을 검사할 콜백 함수입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary>요청에 사용할 서비스 지점을 가져옵니다.</summary>
      <returns>인터넷 리소스에 네트워크 연결을 나타내는 <see cref="T:System.Net.ServicePoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>요청이 <see cref="T:System.Net.CookieContainer" />를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요청에서 <see cref="T:System.Net.CookieContainer" />을 지원 하는지 여부를 <see langword="true" /> 합니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary>
        <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 및 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드의 제한 시간 값을 밀리초 단위로 가져오거나 설정합니다.</summary>
      <returns>요청 시간이 초과 될 때까지 대기 하는 시간 (밀리초)입니다. 기본값은 10만 밀리초 (100 초)입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary>HTTP <see langword="Transfer-encoding" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="Transfer-encoding" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />가 <see langword="false" />일 때, <see cref="P:System.Net.HttpWebRequest.SendChunked" />이 설정된 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 "Chunked" 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary>고속 NTLM 인증 연결 공유가 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인증된 연결을 열어 두려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary>기본 자격 증명을 요청과 함께 보내는지 여부를 제어하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns>기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">요청을 보낸 후에 이 속성을 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>HTTP <see langword="User-agent" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns>HTTP <see langword="User-agent" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.

이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다. WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>
        <see cref="T:System.Net.WebResponse" /> 클래스의 HTTP 관련 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>
        <see cref="T:System.Net.HttpWebResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>지정된 <see cref="T:System.Net.HttpWebResponse" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Net.HttpWebRequest" />을 직렬화하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Net.HttpWebRequest" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary>응답의 문자 집합을 가져옵니다.</summary>
      <returns>응답의 문자 집합을 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>응답 스트림을 닫습니다.</summary>
      <exception cref="T:System.ObjectDisposedException">.NET Core만 해당: 이 <see cref="T:System.Net.HttpWebResponse" /> 개체가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary>응답 본문을 인코드하는 데 사용되는 메서드를 가져옵니다.</summary>
      <returns>응답 본문을 인코드하는 데 사용되는 메서드를 설명하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>요청이 반환하는 콘텐츠의 길이를 가져옵니다.</summary>
      <returns>요청이 반환한 바이트 수입니다. 콘텐츠 길이에는 헤더 정보가 포함되지 않습니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>응답의 콘텐츠 형식을 가져옵니다.</summary>
      <returns>응답의 콘텐츠 형식이 들어 있는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>이 응답과 관련된 쿠키를 가져오거나 설정합니다.</summary>
      <returns>이 응답과 관련된 쿠키가 들어 있는 <see cref="T:System.Net.CookieCollection" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.HttpWebResponse" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary>응답과 함께 반환된 헤더 내용을 가져옵니다.</summary>
      <param name="headerName">반환할 헤더 값입니다.</param>
      <returns>지정된 헤더의 내용입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>서버에서 응답 본문을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns>응답 본문을 포함하는 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">응답 스트림이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>서버에서 이 응답과 관련된 헤더를 가져옵니다.</summary>
      <returns>응답과 함께 반환되는 헤더 정보를 포함하는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary>클라이언트와 서버가 모두 인증되었는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <returns>상호 인증이 발생했으면 <see langword="true" />이고, 발생하지 않았으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary>응답 콘텐츠를 마지막으로 수정한 날짜와 시간을 가져옵니다.</summary>
      <returns>응답 콘텐츠를 수정한 날짜와 시간을 포함하는 <see cref="T:System.DateTime" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>응답을 반환하는 데 사용되는 메서드를 가져옵니다.</summary>
      <returns>응답을 반환하는 데 사용되는 HTTP 메서드를 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary>응답에 사용되는 HTTP 프로토콜의 버전을 가져옵니다.</summary>
      <returns>응답의 HTTP 프로토콜 버전을 포함하는 <see cref="T:System.Version" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>요청에 응답한 인터넷 리소스의 URI를 가져옵니다.</summary>
      <returns>요청에 응답 한 인터넷 리소스의 URI입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary>응답을 보낸 서버의 이름을 가져옵니다.</summary>
      <returns>응답을 보낸 서버의 이름을 포함하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>응답 상태를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.HttpStatusCode" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>응답과 함께 반환되는 상태 설명을 가져옵니다.</summary>
      <returns>응답의 상태를 설명하는 문자열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">현재 인스턴스가 삭제된 경우</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.SupportsHeaders">
      <summary>헤더가 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>헤더가 지원되면 <see langword="true" />이고, 지원되지 않으면 <see langword="false" />입니다. 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo">이 <see cref="T:System.Net.HttpWebResponse" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext">직렬화 대상입니다.</param>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary>웹 클라이언트 인증 모듈에 기본 인증 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>서버의 인증 요구에 응답하여 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="challenge">서버에서 보낸 인증 요구입니다.</param>
      <param name="request">인증 요구와 관련된 <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</param>
      <param name="credentials">인증 요구와 관련된 자격 증명입니다.</param>
      <returns>요청에 대한 인증 메시지가 포함된 <see cref="T:System.Net.Authorization" /> 인스턴스이거나 인증 요구를 처리할 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary>이 인증 모듈에서 제공한 인증 형식을 가져옵니다.</summary>
      <returns>이 인증 모듈에서 제공하는 인증 형식을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary>인증 모듈의 사전 인증 지원 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>권한 부여 모듈에서 사전 인증을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>서버에 인증을 요청하면 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="request">인증 요청과 관련된 <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</param>
      <param name="credentials">인증 요청과 관련된 자격 증명입니다.</param>
      <returns>요청에 대한 인증 메시지가 포함된 <see cref="T:System.Net.Authorization" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary>
        <see cref="T:System.Net.WebRequest" />와 이 클래스의 파생 클래스를 통한 리소스 요청에 사용할 자격 증명 정책을 정의합니다.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>
        <see cref="T:System.Boolean" /> 클래스의 인스턴스를 사용하여 리소스를 요청할 때 클라이언트의 자격 증명을 함께 보내는지 여부를 나타내는 <see cref="T:System.Net.WebRequest" />을 반환합니다.</summary>
      <param name="challengeUri">요청을 받을 <see cref="T:System.Uri" />입니다.</param>
      <param name="request">요청할 리소스를 나타내는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credential">이 메서드가 <see langword="true" />를 반환하는 경우 요청과 함께 보낼 <see cref="T:System.Net.NetworkCredential" />입니다.</param>
      <param name="authenticationModule">인증이 필요한 경우 인증을 수행할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <returns>요청과 함께 자격 증명을 보내는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>
        <see cref="T:System.Net.WebRequest" /> 인스턴스를 만들기 위해 기본 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>
        <see cref="T:System.Net.WebRequest" /> 인스턴스를 만듭니다.</summary>
      <param name="uri">웹 리소스의 URI(Uniform Resource Identifier)입니다.</param>
      <returns>
        <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="uri" />에 지정된 요청 체계가 이 <see cref="T:System.Net.IWebRequestCreate" /> 인스턴스에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.UriFormatException">Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.  
  

            
  
 <paramref name="uri" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>네트워크 프로토콜을 사용하는 동안 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>
        <see cref="T:System.Net.ProtocolViolationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>지정된 <see cref="T:System.Net.ProtocolViolationException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 deserialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.ProtocolViolationException" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Net.ProtocolViolationException" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.Net.ProtocolViolationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지 문자열입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo">이 <see cref="T:System.Net.ProtocolViolationException" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext">직렬화 대상입니다.</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary>플러그형 프로토콜로 네트워크에 액세스하는 동안 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>
        <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>지정된 <see cref="T:System.Net.WebException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Net.WebException" />을 직렬화하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Net.WebException" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지 텍스트입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 중첩된 예외를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지 텍스트입니다.</param>
      <param name="inner">중첩된 예외입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>지정된 오류 메시지, 중첩된 예외, 상태 및 응답을 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지 텍스트입니다.</param>
      <param name="inner">중첩된 예외입니다.</param>
      <param name="status">
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</param>
      <param name="response">원격 호스트에서 보낸 응답이 들어 있는 <see cref="T:System.Net.WebResponse" /> 인스턴스입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>지정된 오류 메시지와 상태를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류 메시지 텍스트입니다.</param>
      <param name="status">
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebException" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo">사용할 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">사용할 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>원격 호스트에서 반환된 응답을 가져옵니다.</summary>
      <returns>인터넷 리소스에서 응답을 가져올 수 있으면 인터넷 리소스의 오류 응답이 포함된 <see cref="T:System.Net.WebResponse" /> 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>응답 상태를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo">이 <see cref="T:System.Net.WebException" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext">직렬화 대상입니다.</param>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>
        <see cref="T:System.Net.WebException" /> 클래스에 대한 상태 코드를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary>지정된 캐시 엔트리를 찾지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>전송 수준에서 원격 서비스 지점에 접속할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>연결이 중간에 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>Keep-alive 머리글을 지정하는 요청에 대한 연결이 예기치 않게 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>요청을 보내거나 서버에서 응답을 받을 때 지정된 제한을 초과한 메시지를 받았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>이름 확인자 서비스가 해당 호스트 이름을 확인하지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>내부 비동기 요청이 보류 중입니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>요청이 파이프라인 요청이고 응답을 받기 전에 연결이 닫혔습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>서버에서 응답을 모두 수신했지만 프로토콜 수준의 오류가 표시되었습니다. 예를 들어, 401 액세스 거부와 같은 HTTP 프로토콜 오류가 이러한 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>이름 확인자 서비스가 프록시 호스트 이름을 확인할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>전체 응답이 원격 서버에서 수신되지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>요청이 취소되었거나, <see cref="M:System.Net.WebRequest.Abort" /> 메서드가 호출되었거나, 알 수 없는 오류가 발생했습니다. <see cref="P:System.Net.WebException.Status" />의 기본값입니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary>요청을 캐시 정책에서 허용하지 않았습니다. 일반적으로 요청을 캐시할 수 없고 적용되는 정책에서 서버로 요청을 보내는 것을 금지하는 경우가 이에 해당합니다. 요청 메서드가 요청 본문이 있음을 의미하거나, 요청 메서드가 서버와 직접 상호 작용해야 하거나, 요청에 조건부 헤더가 들어 있는 경우 이 상태가 발생할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary>이 요청을 프록시에서 허용하지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>SSL을 사용하여 연결을 설정하는 동안 오류가 발생했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>전체 요청을 원격 서버로 보낼 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>서버 응답이 유효한 HTTP 응답이 아니었습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>오류가 발생하지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>시간 초과로 요청에 대해 아무런 응답도 받지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>서버 인증서를 유효성 검사할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>알 수 없는 형식의 예외가 발생했습니다.</summary>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>URI(Uniform Resource Identifier)에 대한 요청을 만듭니다. 이 클래스는 <see langword="abstract" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>
        <see cref="T:System.Net.WebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Net.WebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 연결된 serialize된 스트림의 소스를 나타내는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <exception cref="T:System.NotImplementedException">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>요청을 중단합니다.</summary>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary>이 요청에 사용되는 인증 및 가장 수준을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Security.AuthenticationLevel" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />입니다.
상호 인증에서는 클라이언트와 서버가 모두 자격 증명을 제공해야 ID를 구성할 수 있습니다. <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 및 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> 값은 Kerberos 인증과 관련이 있습니다. Kerberos 인증은 직접 지원될 수도 있고, 보안 협상 프로토콜을 사용하여 실제 보안 프로토콜을 선택하는 경우에 사용할 수도 있습니다. 인증 프로토콜에 대 한 자세한 내용은 참조 하세요. 인터넷 인증합니다.
상호 인증이 발생했는지 여부를 확인하려면 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 속성을 확인합니다.
<see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 인증 플래그 값을 지정할 경우 상호 인증이 발생하지 않으면 애플리케이션에서는 상호 인증이 실패했음을 나타내는 내부 예외인 <see cref="T:System.Net.ProtocolViolationException" />과 함께 <see cref="T:System.IO.IOException" />이 발생합니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>서브클래스에서 재정의될 때, <see cref="M:System.Net.WebRequest.GetRequestStream" /> 메서드의 비동기 버전을 제공합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</param>
      <returns>비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</param>
      <returns>비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary>이 요청에 대한 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns>캐시 정책을 정의하는 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary>파생 클래스에서 재정의될 때 요청에 대한 연결 그룹 이름을 가져오거나 설정합니다.</summary>
      <returns>요청에 대한 연결 그룹 이름입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>서브클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</summary>
      <returns>전송 중인 요청 데이터의 바이트 수입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>서브클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <returns>요청 데이터의 콘텐츠 형식입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUriString">인터넷 리소스를 식별하는 URI입니다.</param>
      <returns>특정 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUriString" />에 지정된 요청 체계가 등록되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException">Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.  
  

            
  
 <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <returns>지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary>지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <returns>지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>지정된 URI 문자열에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUriString">인터넷 리소스를 식별하는 URI 문자열입니다.</param>
      <returns>지정한 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUriString" />에 지정된 요청 체계가 http 또는 https 체계인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>지정된 URI에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri">인터넷 리소스를 식별하는 URI입니다.</param>
      <returns>지정한 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUri" />에 지정된 요청 체계가 http 또는 https 체계인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="requestUri" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스를 사용하여 요청을 인증하는 데 사용되는 네트워크 자격 증명을 가져오거나 설정합니다.</summary>
      <returns>요청과 연결된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다. 기본값은 <see langword="null" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary>이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns>다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary>글로벌 HTTP 프록시를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <param name="asyncResult">스트림에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <returns>데이터를 쓸 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>파생 클래스에서 재정의될 때, <see cref="T:System.Net.WebResponse" />를 반환합니다.</summary>
      <param name="asyncResult">응답에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <returns>인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <returns>인터넷 리소스에 데이터를 쓰기 위한 <see cref="T:System.IO.Stream" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스에 비동기 작업으로 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary>서브클래스에 재정의될 때, 인터넷 요청에 대한 응답을 반환합니다.</summary>
      <returns>인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetResponseAsync">
      <summary>서브클래스에 재정의될 때, 인터넷 요청에 대한 응답을 비동기 작업으로 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary>현재 가장한 사용자의 Internet Explorer 설정에 구성된 프록시를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>서브클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>요청과 연결된 헤더 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary>현재 요청에 대한 가장 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>서브클래스에서 재정의될 때, 이 요청에서 사용할 프로토콜 메서드를 가져오거나 설정합니다.</summary>
      <returns>이 요청에서 사용할 프로토콜 메서드입니다.</returns>
      <exception cref="T:System.NotImplementedException">서브클래스에서 재정의되지 않은 속성을 가져오거나 설정하려는 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary>서브클래스에서 재정의될 때, 요청을 사전 인증할지 여부를 나타냅니다.</summary>
      <returns>요청을 사전 인증하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary>서브클래스에서 재정의될 때, 이 인터넷 리소스에 액세스하기 위해 사용할 네트워크 프록시를 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에 액세스하기 위해 사용할 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>지정된 URI에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목을 등록합니다.</summary>
      <param name="prefix">
        <see cref="T:System.Net.WebRequest" /> 하위 항목이 서비스하는 완전한 URI나 URI 접두사입니다.</param>
      <param name="creator">
        <see cref="T:System.Net.WebRequest" /> 하위 항목을 만들기 위해 <see cref="T:System.Net.WebRequest" />가 호출하는 생성 메서드입니다.</param>
      <returns>등록이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" />가 <see langword="null" />인 경우
또는
<paramref name="creator" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>서브클래스에서 재정의될 때, 요청과 연결된 인터넷 리소스의 URI를 가져옵니다.</summary>
      <returns>요청과 연결된 리소스를 나타내는 <see cref="T:System.Uri" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>서브클래스에서 재정의될 때, <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebRequest" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유하는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />과 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <exception cref="T:System.NotImplementedException">해당 인터페이스가 서브클래스에서 재정의되지 않았는데 개체를 serialize하려고 한 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary>요청이 시간 초과되기 전의 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>요청 시간이 초과 될 때까지 걸리는 시간 (밀리초) 이거나, 요청 시간이 초과 되지 않음을 나타내는 <see cref="F:System.Threading.Timeout.Infinite" /> 값입니다. 기본값은 하위 클래스에 의해 정의 됩니다.</returns>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>서브클래스에서 재정의된 경우 <see cref="T:System.Boolean" />를 요청과 함께 보낼지 여부를 제어하는 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 값을 가져오거나 설정합니다.</summary>
      <returns>기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">요청을 보낸 후에 이 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.NotImplementedException">속성이 서브클래스에서 재정의되지 않았는데 속성에 액세스를 시도할 경우</exception>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary>
        <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" /> 및 <see cref="T:System.Net.WebRequestMethods.Http" /> 클래스의 컨테이너 클래스입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary>FILE 요청과 함께 사용할 수 있는 파일 프로토콜 메서드의 형식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary>지정된 위치에서 파일을 검색하는 데 사용할 FILE GET 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary>지정된 위치에 파일을 복사하는 데 사용할 FILE PUT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary>FTP 요청과 함께 사용할 수 있는 FTP 프로토콜 메서드의 형식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary>FTP 서버의 기존 파일에 파일을 추가하는 데 사용되는 FTP APPE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary>FTP 서버의 파일을 삭제하는 데 사용되는 FTP DELE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary>FTP 서버에서 파일을 다운로드하는 데 사용되는 FTP RETR 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary>FTP 서버의 파일에서 날짜-타임스탬프를 검색하는 데 사용되는 FTP MDTM 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary>FTP 서버의 파일 크기를 검색하는 데 사용되는 FTP SIZE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary>FTP 서버에 있는 파일의 간단한 목록을 가져오는 FTP NLIST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary>FTP 서버에 있는 파일의 자세한 목록을 가져오는 FTP LIST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary>FTP 서버에 디렉터리를 만드는 FTP MKD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary>현재 작업 중인 디렉터리의 이름을 출력하는 FTP PWD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary>디렉터리를 제거하는 FTP RMD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary>디렉터리의 이름을 바꾸는 FTP RENAME 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary>FTP 서버에 파일을 업로드하는 FTP STOR 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary>FTP 서버에 파일을 고유한 이름으로 업로드하는 FTP STOU 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary>HTTP 요청과 함께 사용할 수 있는 HTTP 프로토콜 메서드의 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary>SSL 터널링의 경우와 같이 동적으로 터널링으로 전환할 수 있는 프록시와 함께 사용되는 HTTP CONNECT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary>HTTP GET 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary>HTTP HEAD 프로토콜 메서드를 나타냅니다. HEAD 메서드는 서버에서 응답의 메시지 본문 없이 메시지 헤더만 반환한다는 점을 제외하고는 GET 메서드와 동일합니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary>요청 URI(Uniform Resource Identifier)로 지정된 위치에 페이지 컬렉션과 같은 새 컬렉션을 만드는 HTTP MKCOL 요청을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary>새 엔터티를 URI에 추가할 항목으로 게시하는 데 사용되는 HTTP POST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary>URI로 식별된 엔터티를 바꾸는 데 사용되는 HTTP PUT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>URI(Uniform Resource Identifier)에서 응답을 제공합니다. 이 클래스는 <see langword="abstract" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>
        <see cref="T:System.Net.WebResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Net.WebResponse" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 포함된 <see cref="T:System.Net.WebRequest" /> 클래스의 인스턴스입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련된 serialize된 스트림의 소스를 나타내는 <see cref="T:System.Net.WebRequest" /> 클래스의 인스턴스입니다.</param>
      <exception cref="T:System.NotSupportedException">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>서브클래스에서 재정의될 때, 응답 스트림을 닫습니다.</summary>
      <exception cref="T:System.NotSupportedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>서브클래스에서 재정의될 때, 수신 중인 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</summary>
      <returns>인터넷 리소스에서 반환된 바이트 수입니다.</returns>
      <exception cref="T:System.NotSupportedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>파생 클래스에서 재정의될 때, 수신 중인 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <returns>응답의 콘텐츠 형식이 들어 있는 문자열입니다.</returns>
      <exception cref="T:System.NotSupportedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>
        <see cref="T:System.Net.WebResponse" /> 개체에서 사용하는 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.WebResponse" /> 개체에서 사용하는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 삭제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>서브클래스에서 재정의될 때, 인터넷 리소스에서 데이터 스트림을 반환합니다.</summary>
      <returns>인터넷 리소스에서 데이터를 읽기 위한 <see cref="T:System.IO.Stream" /> 클래스의 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>파생 클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>이 응답과 관련된 헤더 값을 포함하는 <see cref="T:System.Net.WebHeaderCollection" /> 클래스의 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary>이 응답을 캐시에서 가져왔는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <returns>응답을 캐시에서 가져왔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary>상호 인증이 발생했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <returns>클라이언트와 서버가 모두 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>파생 클래스에서 재정의될 때, 요청에 실제로 응답하는 인터넷 리소스의 URI를 가져옵니다.</summary>
      <returns>요청에 실제로 응답하는 인터넷 리소스의 URI가 들어 있는 <see cref="T:System.Uri" /> 클래스의 인스턴스입니다.</returns>
      <exception cref="T:System.NotSupportedException">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>머리글이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.
헤더가 지원되면 <see langword="true" />이고, 지원되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebResponse" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유할 <see cref="T:System.Net.WebResponse" />입니다.</param>
      <param name="streamingContext">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</param>
    </member>
  </members>
</doc>