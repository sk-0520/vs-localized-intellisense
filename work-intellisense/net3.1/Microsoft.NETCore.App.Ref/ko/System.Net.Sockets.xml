<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> 메서드에서 지원되는 IO 컨트롤 코드를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>이 값은 Winsock 2 SIO_ABSORB_RTRALERT 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>인덱스로 식별된 인터페이스를 사용하여 멀티캐스트 그룹을 추가합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_INDEX_ADD_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>소켓의 프로토콜 패밀리에 대한 로컬 인터페이스 목록이 변경될 때 알림을 받을 수 있도록 설정합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>소켓이 바인딩될 수 있는 로컬 인터페이스의 목록을 반환합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_QUERY 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>
        <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> 필드에서 반환되는 구조체를 정렬하고 IPv6 주소에 대한 범위 ID 정보를 추가합니다. 이 컨트롤 코드는 Windows XP 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_SORT 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>이 소켓을 관련 인터페이스의 지정된 핸들과 연결합니다. 자세한 내용은 특정 관련 인터페이스에 대한 Winsock 2 참조 또는 설명서에서 해당 프로토콜 관련 부록을 참조하십시오. 소켓에서 지원할 수 있는 다른 인터페이스를 검색하고 추적하려면 이 IOCTL 대신 COM(Component Object Model)을 사용하는 것이 좋습니다. 이 컨트롤 코드는 COM이 사용되지 않거나 다른 이유로 COM을 사용할 수 없는 이전 버전 시스템과의 호환성을 위해 제공됩니다. 이 값은 Winsock 2 SIO_ASSOCIATE_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>데이터가 수신 대기 중일 때 알림을 사용합니다. 이 값은 Winsock 2 FIOASYNC 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>소켓을 지정된 인터페이스 인덱스에 바인딩합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_INDEX_BIND 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>읽을 수 있는 바이트 수를 반환합니다. 이 값은 Winsock 2 FIONREAD 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>멀티캐스트 그룹에서 소켓을 제거합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_INDEX_ADD_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>들어오는 메시지 큐가 가득 차면 큐에 있는 가장 오래된 데이터그램을 들어오는 데이터그램으로 바꿉니다. 이 값은 Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>보내는 큐의 내용을 삭제합니다. 이 값은 Winsock 2 SIO_FLUSH 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>현재 소켓의 주소 패밀리에 대한 브로드캐스트 주소가 들어 있는 SOCKADDR 구조체를 반환합니다. 반환된 주소는 <see cref="Overload:System.Net.Sockets.Socket.SendTo" /> 메서드와 함께 사용할 수 있습니다. 이 값은 Winsock 2 SIO_GET_BROADCAST_ADDRESS 상수와 같습니다. 이 값은 UDP(User Datagram Protocol) 소켓에서만 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Winsock 사양에 포함되지 않은 공급자별 함수를 가져옵니다. 함수는 해당 공급자에 할당된 GUID를 사용하여 지정됩니다. 이 값은 Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>소켓 그룹의 QOS(서비스 품질) 특성을 반환합니다. 이 값은 나중에 사용할 수 있도록 예약되어 있으며 Winsock 2 SIO_GET_GROUP_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>소켓과 관련된 QOS 구조체를 검색합니다. 이 컨트롤 코드는 QOS를 사용할 수 있는 전송 수단을 제공하는 플랫폼(Windows Me, Windows 2000 이상)에서만 지원합니다. 이 값은 Winsock 2 SIO_GET_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>TCP Keep-alive 패킷 보내기와 이 패킷을 보낼 간격을 제어합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 자세한 내용은 RFC 1122 4.2.3.6절을 참조하십시오. 이 값은 Winsock 2 SIO_KEEPALIVE_VALS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>이 값은 Winsock 2 SIO_LIMIT_BROADCASTS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>나가는 멀티캐스트 패킷에 사용되는 인터페이스를 설정합니다. 이 인터페이스는 인덱스로 식별됩니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다.  이 값은 Winsock 2 SIO_INDEX_MCASTIF 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>라우터에서 멀티캐스트 패킷을 전달할 수 있는 횟수, 즉 TTL(Time-to-Live) 또는 홉 수를 제어합니다. 이 값은 Winsock 2 SIO_MULTICAST_SCOPE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>소켓에서 보낸 멀티캐스트 데이터가 소켓 수신 큐에서 들어오는 데이터로 나타나는지 여부를 제어합니다. 이 값은 Winsock 2 SIO_MULTIPOINT_LOOPBACK 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>네임스페이스 쿼리가 잘못되었을 때 소켓에서 알림을 받을지 여부를 제어합니다. 이 컨트롤 코드는 Windows XP 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_NSP_NOTIFY_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>소켓의 블로킹 동작을 제어합니다. 이 컨트롤 코드로 지정된 인수가 0이면 소켓이 블로킹 모드로 설정됩니다. 인수가 0이 아니면 소켓이 비블로킹 모드로 설정됩니다. 이 값은 Winsock 2 FIONBIO 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>수신 대기 중인 out-of-band 데이터에 대한 정보를 반환합니다. 스트림 소켓에서 이 컨트롤 코드를 사용할 경우 반환 값은 사용 가능한 바이트 수를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>내부 공급자의 SOCKET 핸들을 검색합니다. 이 핸들은 플러그 앤 플레이 이벤트 알림을 받는 데 사용할 수 있습니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>네트워크에서 모든 IPv4 패킷을 받을 수 있도록 설정합니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.IP" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_RCVALL 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>네트워크에서 모든 IGMP(Internet Group Management Protocol) 패킷을 받을 수 있도록 설정합니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_RCVALL_IGMPMCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>네트워크에서 모든 멀티캐스트 IPv4 패킷을 받을 수 있도록 설정합니다. 멀티캐스트 패킷은 대상 주소 범위가 224.0.0.0부터 239.255.255.255까지인 패킷입니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.Udp" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 컨트롤 코드는 Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_RCVALL_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>원격 엔드포인트에 액세스하는 데 사용되는 로컬 인터페이스가 변경될 때 알림을 받을 수 있도록 설정합니다. 이 값은 Winsock 2 SIO_ROUTING_INTERFACE_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>지정된 원격 주소에 연결하는 데 사용할 수 있는 인터페이스 주소를 반환합니다. 이 값은 Winsock 2 SIO_ROUTING_INTERFACE_QUERY 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>소켓 그룹의 QOS(서비스 품질) 특성을 설정합니다. 이 값은 나중에 사용할 수 있도록 예약되어 있으며 Winsock 2 SIO_SET_GROUP_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>소켓의 QOS(서비스 품질) 특성을 설정합니다. QOS는 소켓에 대한 대역폭 요구 사항을 정의합니다. 이 컨트롤 코드는 Windows Me, Windows 2000 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_SET_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>관련 인터페이스의 컨텍스트에서 유효한 소켓의 핸들을 반환합니다. 이 값은 Winsock 2 SIO_TRANSLATE_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>나가는 유니캐스트 패킷에 사용되는 인터페이스를 설정합니다. 이 값은 Winsock 2 SIO_UCAST_IF 상수와 같습니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 또는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />을 호출하여 받은 패킷 정보를 나타냅니다.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드나 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드를 호출한 결과로 받은 패킷의 원본 정보를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> 메서드나 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드를 호출한 결과로 받은 패킷의 원본 정보를 나타내는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />입니다. 유니캐스트 주소에서 보낸 패킷의 경우 <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 속성은 송신자의 <see cref="T:System.Net.IPAddress" />를 반환하고, 멀티캐스트 또는 브로드캐스트 패킷의 경우 <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 속성은 멀티캐스트 또는 브로드캐스트 <see cref="T:System.Net.IPAddress" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="comparand">이 인스턴스와 비교할 개체입니다.</param>
      <returns>
        <paramref name="comparand" />가 <see cref="T:System.Net.Sockets.IPPacketInformation" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>Int32 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 또는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 호출과 관련된 네트워크 인터페이스 정보를 가져옵니다.</summary>
      <returns>네트워크 인터페이스의 인덱스를 나타내는 <see cref="T:System.Int32" /> 값입니다. <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />에 이 인덱스를 사용하면 관련 인터페이스에 대해 더 많은 정보를 가져올 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>지정된 두 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스가 같은지 여부를 테스트합니다.</summary>
      <param name="packetInformation1">같음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <param name="packetInformation2">같음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <returns>
        <paramref name="packetInformation1" />과 <paramref name="packetInformation2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>지정된 두 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스가 서로 다른지 여부를 테스트합니다.</summary>
      <param name="packetInformation1">같지 않음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <param name="packetInformation2">같지 않음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <returns>
        <paramref name="packetInformation1" />와 <paramref name="packetInformation2" />가 다르면 <see langword="true" />이고,다르지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>링크 로컬 또는 사이트 로컬 접두사가 동일한 주소와 같이 지정된 범위에 IPv6 소켓 제한을 설정하는 값입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>IP 보호 수준이 경계 제한됨입니다. 이 값은 인터넷을 통해 작동하도록 디자인된 애플리케이션에서 사용됩니다. 이 설정은 Windows Teredo 구현을 사용하는 NAT(Network Address Translation) 통과를 허용하지 않습니다. 이러한 애플리케이션에서는 IPv4 방화벽이 무시될 수 있으므로 열린 포트로 향하는 인터넷 공격을 막기 위해 애플리케이션의 보안 기능을 강화해야 합니다. Windows Server 2003 및 Windows XP에서는 소켓에 대한 IP 보호 수준이 기본적으로 경계 제한됨으로 설정됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>IP 보호 수준이 제한됨입니다. 이 값은 인터넷 시나리오를 구현하지 않는 인트라넷 애플리케이션에서 사용됩니다. 일반적으로 이러한 애플리케이션은 인터넷형 공격에 대해 테스트되거나 보안이 강화되어 있지 않습니다. 이 설정은 링크 로컬에서만 트래픽을 받도록 제한합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>IP 보호 수준이 제한하지 않음입니다. 이 값은 Windows에 구축된 IPv6 NAT 통과 기능(예: Teredo)을 이용하는 애플리케이션을 비롯하여 인터넷을 통해 작동하도록 디자인된 애플리케이션에서 사용됩니다. 이러한 애플리케이션에서는 IPv4 방화벽이 무시될 수 있으므로 열린 포트로 향하는 인터넷 공격을 막기 위해 애플리케이션의 보안 기능을 강화해야 합니다. Windows Server 2008 R2 및 Windows Vista에서는 소켓에 대한 IP 보호 수준이 기본적으로 제한되지 않음으로 설정됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>IP 보호 수준이 지정되지 않음입니다. Windows 7 및 Windows Server 2008 R2에서는 소켓에 대한 IP 보호 수준이 기본적으로 지정되지 않음으로 설정됩니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>IPv6 멀티캐스트 그룹에 추가하기 위한 옵션 값이 포함됩니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>지정된 IP 멀티캐스트 그룹에 대한 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 클래스의 새 버전을 초기화합니다.</summary>
      <param name="group">멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>지정된 IP 멀티캐스트 그룹 및 로컬 인터페이스 주소를 사용하여 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> 그룹입니다.</param>
      <param name="ifindex">로컬 인터페이스 주소입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" />가 0보다 작은 경우
또는
<paramref name="ifindex" />가 0x00000000FFFFFFFF보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>멀티캐스트 그룹의 IP 주소를 가져오거나 설정합니다.</summary>
      <returns>멀티캐스트 그룹의 인터넷 주소가 들어 있는 <see cref="T:System.Net.IPAddress" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>멀티캐스트 그룹과 관련된 인터페이스 인덱스를 가져오거나 설정합니다.</summary>
      <returns>인터페이스의 주소를 지정하는 <see cref="T:System.UInt64" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 0보다 작거나 0x00000000FFFFFFFF보다 큰 경우</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>데이터가 전송 대기 상태일 때 <see cref="T:System.Net.Sockets.Socket" /> 또는 <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 <see cref="M:System.Net.Sockets.TcpClient.Close" />이 연결 상태로 유지될지 여부와 연결 상태로 유지될 시간을 지정합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.LingerOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enable">
        <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="seconds">
        <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지하는 시간(초)입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 후 링거할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />를 호출한 후 <see cref="M:System.Net.Sockets.Socket.Close" />이 링거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>데이터가 전송 대기 상태인 경우 <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지할 시간을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="M:System.Net.Sockets.Socket.Close" />를 호출한 후 연결 상태를 유지하는 시간(초)입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>멀티캐스트 그룹을 추가하거나 삭제하는 데 사용되는 <see cref="T:System.Net.IPAddress" /> 값이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>지정된 IP 멀티캐스트 그룹에 대한 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 버전을 초기화합니다.</summary>
      <param name="group">멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>지정된 IP 멀티캐스트 그룹 주소 및 인터페이스 인덱스를 사용하여 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group">멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="interfaceIndex">멀티캐스트 패킷을 보내거나 받는 데 사용되는 인터페이스의 인덱스입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>지정된 IP 멀티캐스트 그룹 주소 및 네트워크 인터페이스와 관련된 로컬 IP 주소를 사용하여 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> 그룹입니다.</param>
      <param name="mcint">로컬 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" />가 <see langword="null" />입니다.
또는
<paramref name="mcint" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>멀티캐스트 그룹의 IP 주소를 가져오거나 설정합니다.</summary>
      <returns>멀티캐스트 그룹의 인터넷 주소가 들어 있는 <see cref="T:System.Net.IPAddress" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>멀티캐스트 패킷을 보내거나 받는 데 사용되는 인터페이스의 인덱스를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 배열 요소의 인덱스를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>멀티캐스트 그룹과 관련된 로컬 주소를 가져오거나 설정합니다.</summary>
      <returns>멀티캐스트 그룹과 관련된 로컬 주소가 들어 있는 <see cref="T:System.Net.IPAddress" />입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>네트워크 액세스를 위한 데이터의 기본 스트림을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>새 인스턴스를 만듭니다는 <see cref="T:System.Net.Sockets.NetworkStream" /> 지정 된 클래스 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="socket">합니다 <see cref="T:System.Net.Sockets.Socket" /> 는 <see cref="T:System.Net.Sockets.NetworkStream" /> 데이터를 받고 보내는 데 사용 됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> 매개 변수에 연결 되어 있지 않습니다.
-또는-
합니다 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 의 속성을 <paramref name="socket" /> 매개 변수가 아닙니다 <see cref="F:System.Net.Sockets.SocketType.Stream" />합니다.
-또는-
<paramref name="socket" /> 매개 변수가 비블로킹 상태입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Net.Sockets.NetworkStream" /> 지정 된 클래스 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 <see cref="T:System.Net.Sockets.Socket" /> 소유 합니다.</summary>
      <param name="socket">합니다 <see cref="T:System.Net.Sockets.Socket" /> 는 <see cref="T:System.Net.Sockets.NetworkStream" /> 데이터를 받고 보내는 데 사용 됩니다.</param>
      <param name="ownsSocket">로 <see langword="true" /> 나타내는 합니다 <see cref="T:System.Net.Sockets.NetworkStream" /> 의 소유권을 갖게 됩니다 합니다 <see cref="T:System.Net.Sockets.Socket" />고, 그렇지 않으면 <see langword="false" />합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> 매개 변수에 연결 되어 있지 않습니다.
-또는-
값을 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 의 속성을 <paramref name="socket" /> 매개 변수가 아닙니다 <see cref="F:System.Net.Sockets.SocketType.Stream" />.
-또는-
<paramref name="socket" /> 매개 변수가 비블로킹 상태입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>새 인스턴스를 만듭니다는 <see cref="T:System.Net.Sockets.NetworkStream" /> 지정 된 클래스 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 액세스 권한을 사용 합니다.</summary>
      <param name="socket">합니다 <see cref="T:System.Net.Sockets.Socket" /> 는 <see cref="T:System.Net.Sockets.NetworkStream" /> 데이터를 받고 보내는 데 사용 됩니다.</param>
      <param name="access">비트 조합 합니다 <see cref="T:System.IO.FileAccess" /> 에 지정 된 액세스 형식을 지정 하는 값을 <see cref="T:System.Net.Sockets.NetworkStream" /> 위에 제공 된 <see cref="T:System.Net.Sockets.Socket" />합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> 매개 변수에 연결 되어 있지 않습니다.
-또는-
합니다 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 의 속성을 <paramref name="socket" /> 매개 변수가 아닙니다 <see cref="F:System.Net.Sockets.SocketType.Stream" />합니다.
-또는-
<paramref name="socket" /> 매개 변수가 비블로킹 상태입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>새 인스턴스를 만듭니다는 <see cref="T:System.Net.Sockets.NetworkStream" /> 지정 된 클래스 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 액세스 권한 및 지정 된 <see cref="T:System.Net.Sockets.Socket" /> 소유권입니다.</summary>
      <param name="socket">합니다 <see cref="T:System.Net.Sockets.Socket" /> 는 <see cref="T:System.Net.Sockets.NetworkStream" /> 데이터를 받고 보내는 데 사용 됩니다.</param>
      <param name="access">비트 조합 합니다 <see cref="T:System.IO.FileAccess" /> 에 지정 된 액세스 형식을 지정 하는 값을 <see cref="T:System.Net.Sockets.NetworkStream" /> 위에 제공 된 <see cref="T:System.Net.Sockets.Socket" />합니다.</param>
      <param name="ownsSocket">로 <see langword="true" /> 나타내는 합니다 <see cref="T:System.Net.Sockets.NetworkStream" /> 의 소유권을 갖게 됩니다 합니다 <see cref="T:System.Net.Sockets.Socket" />고, 그렇지 않으면 <see langword="false" />합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> 매개 변수에 연결 되어 있지 않습니다.
-또는-
합니다 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 의 속성을 <paramref name="socket" /> 매개 변수가 아닙니다 <see cref="F:System.Net.Sockets.SocketType.Stream" />합니다.
-또는-
<paramref name="socket" /> 매개 변수가 비블로킹 상태입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>비동기 읽기를 시작 합니다 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</summary>
      <param name="buffer">형식의 배열 <see cref="T:System.Byte" /> 에서 읽은 데이터를 저장 하기 위해 메모리에 위치 합니다 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 데이터를 저장 하기 시작 합니다.</param>
      <param name="size">읽을 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="callback">합니다 <see cref="T:System.AsyncCallback" /> 대리자 때 실행 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 완료 합니다.</param>
      <param name="state">추가 사용자 정의 데이터를 포함 하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 호출을 나타내는입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 매개 변수가 0 보다 작습니다.
-또는-
합니다 <paramref name="offset" /> 매개 변수 길이 보다 큽니다.는 <paramref name="buffer" /> 매개 변수입니다.
-또는-
<paramref name="size" /> 0 보다 작습니다.
-또는-
<paramref name="size" /> 의 길이 보다 크면 <paramref name="buffer" /> 값을 뺀는 <paramref name="offset" /> 매개 변수입니다.</exception>
      <exception cref="T:System.IO.IOException">기본 <see cref="T:System.Net.Sockets.Socket" /> 닫혀 있습니다.
-또는-
네트워크에서 읽는 동안 오류가 발생 합니다.
-또는-
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>스트림에 비동기 쓰기를 시작합니다.</summary>
      <param name="buffer">형식의 배열을 <see cref="T:System.Byte" /> 에 쓸 데이터를 포함 하는 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 데이터 전송을 시작 합니다.</param>
      <param name="size">쓸 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="callback">합니다 <see cref="T:System.AsyncCallback" /> 대리자 때 실행 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 완료 합니다.</param>
      <param name="state">추가 사용자 정의 데이터를 포함 하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 호출을 나타내는입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 매개 변수가 0 보다 작습니다.
-또는-
합니다 <paramref name="offset" /> 매개 변수 길이 보다 큽니다. <paramref name="buffer" />합니다.
-또는-
<paramref name="size" /> 매개 변수가 0 보다 작습니다.
-또는-
<paramref name="size" /> 매개 변수가 길이 보다 크면 <paramref name="buffer" /> 변수의 값을 뺀는 <paramref name="offset" /> 매개 변수입니다.</exception>
      <exception cref="T:System.IO.IOException">기본 <see cref="T:System.Net.Sockets.Socket" /> 닫혀 있습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생이 했습니다.
-또는-
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>나타내는 값을 가져옵니다 여부는 <see cref="T:System.Net.Sockets.NetworkStream" /> 읽기를 지원 합니다.</summary>
      <returns>
        <see langword="true" /> 스트림에서 데이터를 읽을 수 있는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>스트림이 검색을 지원 하는지 여부를 나타내는 값을 가져옵니다. 이 속성은 현재 지원 되지 않습니다. 이 속성은 항상 반환 <see langword="false" />합니다.</summary>
      <returns>
        <see langword="false" /> 나타내는 경우도 <see cref="T:System.Net.Sockets.NetworkStream" /> 스트림에서 특정 위치를 검색할 수 없습니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>시간 제한 속성에 사용할 수 있는지 여부를 나타내는 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</summary>
      <returns>모든 경우에 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>나타내는 값을 가져옵니다 여부는 <see cref="T:System.Net.Sockets.NetworkStream" /> 쓰기를 지원 합니다.</summary>
      <returns>
        <see langword="true" /> 데이터를 쓸 수 있으면 합니다 <see cref="T:System.Net.Sockets.NetworkStream" />이 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>닫습니다는 <see cref="T:System.Net.Sockets.NetworkStream" /> 데이터를 보낼 수 있도록 지정 된 시간 동안 대기한 후 합니다.</summary>
      <param name="timeout">닫기 전에 나머지 데이터를 보낼 때까지 대기할 시간 (밀리초)의 수를 지정 하는 부호 있는 32 비트 정수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 매개 변수가 -1보다 작습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>사용할 수 있는 데이터 인지 여부를 나타내는 값을 가져옵니다는 <see cref="T:System.Net.Sockets.NetworkStream" /> 를 읽을 수 있습니다.</summary>
      <returns>
        <see langword="true" /> 읽을 스트림에서 데이터를 사용할 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
      <exception cref="T:System.IO.IOException">기본 <see cref="T:System.Net.Sockets.Socket" /> 닫혀 있습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조하세요.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>비동기 읽기의 끝을 처리 합니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 비동기 호출을 나타내는입니다.</param>
      <returns>읽은 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">기본 <see cref="T:System.Net.Sockets.Socket" /> 닫혀 있습니다.
-또는-
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>비동기 쓰기의 끝을 처리 합니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 비동기 호출을 나타내는입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">기본 <see cref="T:System.Net.Sockets.Socket" /> 닫혀 있습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생 했습니다.
-또는-
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>스트림에서 데이터를 플러시합니다. 이 메서드는 나중에 사용할 수 있도록 예약되어 있습니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>스트림에서 데이터를에서 비동기 작업으로 플러시합니다.</summary>
      <param name="cancellationToken">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>스트림에서 사용 가능한 데이터의 길이 가져옵니다. 이 속성은 현재 지원 되지 않으며 항상 throw를 <see cref="T:System.NotSupportedException" />입니다.</summary>
      <returns>스트림에서 사용할 수 있는 데이터의 길이입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 속성의 사용 합니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>스트림 내의 현재 위치를 가져오거나 설정 합니다. 이 속성은 현재 지원 되지 않으며 항상 throw를 <see cref="T:System.NotSupportedException" />입니다.</summary>
      <returns>스트림 내의 현재 위치입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 속성의 사용 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 바이트 배열에 저장합니다.</summary>
      <param name="buffer">형식의 배열 <see cref="T:System.Byte" /> 에서 읽은 데이터를 저장 하기 위해 메모리에 위치 합니다 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 에 데이터를 저장 하기 시작 합니다.</param>
      <param name="size">읽을 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <returns>읽은 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" /> 길이 보다 크면 <paramref name="buffer" /> 빼기 <paramref name="offset" />합니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에서 읽기 오류가 발생 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 메모리의 바이트 범위에 저장합니다.</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 데이터를 저장할 메모리 영역입니다.</param>
      <returns>읽은 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에서 읽기 오류가 발생 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>나타내는 값을 가져오거나 설정 합니다. 여부는 <see cref="T:System.Net.Sockets.NetworkStream" /> 읽을 수 있습니다.</summary>
      <returns>
        <see langword="true" /> 나타내는 합니다 <see cref="T:System.Net.Sockets.NetworkStream" /> 이 고, 그렇지 않으면 수 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 비동기 작업으로 지정된 범위의 바이트 배열에 저장합니다.</summary>
      <param name="buffer">데이터를 쓸 버퍼입니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 에 데이터를 저장 하기 시작 합니다.</param>
      <param name="size">읽을 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성의 값에는 <paramref name="buffer" /> 안으로 읽어들인 총 바이트 수가 포함됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에서 읽기 오류가 발생 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 비동기 작업으로 바이트 메모리 범위에 저장합니다.</summary>
      <param name="buffer">데이터를 쓸 버퍼입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 읽기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask`1" />입니다. 해당 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 속성의 값에는 <paramref name="buffer" /> 안으로 읽어들인 총 바이트 수가 포함됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에서 읽기 오류가 발생 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 바이트를 읽고 스트림 내 위치를 한 바이트씩 앞으로 이동하거나 스트림 끝일 경우 -1을 반환합니다.</summary>
      <returns>
        <see langword="Int32" />로 캐스팅된 부호 없는 바이트이거나 스트림의 끝에 있는 경우 -1입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에서 읽기 오류가 발생 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>데이터를 기다리는 중 읽기 작업이 차단 하는 시간을 가져오거나 설정 합니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 밀리초 읽기 작업이 실패할 때까지 걸리는 시간을 지정 하는 합니다. 기본값인 <see cref="F:System.Threading.Timeout.Infinite" />, 읽기 작업에 제한 시간이 없음을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정 된 값은 0 보다 작거나 아니며 <see cref="F:System.Threading.Timeout.Infinite" />합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>스트림의 현재 위치를 지정된 된 값으로 설정합니다. 이 메서드는 현재 지원 되지 않으며 항상 throw를 <see cref="T:System.NotSupportedException" />입니다.</summary>
      <param name="offset">이 매개 변수는 사용되지 않습니다.</param>
      <param name="origin">이 매개 변수는 사용되지 않습니다.</param>
      <returns>스트림 내의 위치입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 속성의 사용 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>스트림의 길이를 설정합니다. 이 메서드는 항상 throw를 <see cref="T:System.NotSupportedException" />입니다.</summary>
      <param name="value">이 매개 변수는 사용되지 않습니다.</param>
      <exception cref="T:System.NotSupportedException">이 속성의 사용 합니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>기본 <see cref="T:System.Net.Sockets.Socket" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> 내부 네트워크 연결을 나타내는입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 범위의 바이트 배열에서 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer">형식의 배열을 <see cref="T:System.Byte" /> 에 쓸 데이터를 포함 하는 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 데이터를 쓰기 시작할입니다.</param>
      <param name="size">쓸 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 매개 변수가 0 보다 작습니다.
-또는-
합니다 <paramref name="offset" /> 매개 변수 길이 보다 큽니다. <paramref name="buffer" />합니다.
-또는-
<paramref name="size" /> 매개 변수가 0 보다 작습니다.
-또는-
<paramref name="size" /> 매개 변수가 길이 보다 크면 <paramref name="buffer" /> 변수의 값을 뺀는 <paramref name="offset" /> 매개 변수입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생이 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>읽기 전용 바이트 범위에서 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생이 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>나타내는 값을 가져옵니다 여부를 <see cref="T:System.Net.Sockets.NetworkStream" /> 쓸 수 있습니다.</summary>
      <returns>
        <see langword="true" /> 스트림에; 데이터를 쓸 수 있는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>지정된 범위의 바이트 배열에서 비동기 작업으로 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터를 포함하는 바이트 배열입니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 데이터를 쓰기 시작할입니다.</param>
      <param name="size">쓸 바이트 수를 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 매개 변수가 0 보다 작습니다.
-또는-
합니다 <paramref name="offset" /> 매개 변수 길이 보다 큽니다. <paramref name="buffer" />합니다.
-또는-
<paramref name="size" /> 매개 변수가 0 보다 작습니다.
-또는-
<paramref name="size" /> 매개 변수가 길이 보다 크면 <paramref name="buffer" /> 변수의 값을 뺀는 <paramref name="offset" /> 매개 변수입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">네트워크에 쓰는 동안 오류가 발생이 했습니다.
-또는-
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>읽기 전용 메모리 바이트 메모리 범위에서 비동기 작업으로 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터를 포함하는 메모리 영역입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생이 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" />의 현재 위치에 바이트를 쓰고 스트림 내 위치를 1바이트씩 앞으로 이동합니다.</summary>
      <param name="value">스트림에 쓸 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">소켓에 액세스할 때 오류가 발생했습니다.
-또는-
네트워크에 쓰는 동안 오류가 발생이 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>데이터를 기다리는 중 쓰기 작업이 차단 하는 시간을 가져오거나 설정 합니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> (밀리초), 쓰기 작업이 실패할 때까지 걸리는 시간을 지정 하는 합니다. 기본값인 <see cref="F:System.Threading.Timeout.Infinite" />, 쓰기 작업에 제한 시간이 없음을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정 된 값은 0 보다 작거나 아니며 <see cref="F:System.Threading.Timeout.Infinite" />합니다.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 인스턴스가 사용할 수 있는 프로토콜의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Native ATM 서비스 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>X.25와 같은 CCITT 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft Cluster 제품 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>컨트롤러 영역 네트워크 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>직접 데이터 연결 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>ECMA(European Computer Manufacturers Association) 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>IEEE 1284.4 작업 그룹 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP 버전 4 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP 버전 6 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX 또는 SPX 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Network Designers OSI 게이트웨이 사용 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>하위 수준 패킷 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>호스트에 대한 Unix 로컬 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>알 수 없는 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>지정되지 않은 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView 프로토콜입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 클래스가 지원하는 프로토콜을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Gateway To Gateway 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Internet Control Message 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>IPv6용 Internet Control Message Protocol입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Internet Datagram 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Internet Group Management 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>인터넷 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6 Authentication 헤더입니다. 자세한 내용은 https://www.ietf.org에서 사용할 수 있는 RFC 2292 섹션 2.2.1을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6 Encapsulating Security Payload 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>인터넷 프로토콜 버전 4입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>IPv6(인터넷 프로토콜 버전 6)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6 Destination Options 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6 Fragment 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6 Hop-by-Hop Options 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6 No Next 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6 Routing 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Internet Packet Exchange 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Net Disk 프로토콜(비공식)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC Universal Packet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Raw IP Packet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Sequenced Packet Exchange 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Sequenced Packet Exchange 버전 2 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Transmission Control 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>User Datagram 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>알 수 없는 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>지정되지 않은 프로토콜입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>소켓 핸들의 래퍼 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.SafeSocketHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preexistingHandle">사용할 기존 핸들입니다.</param>
      <param name="ownsHandle">종료 단계에서 핸들을 안정적으로 해제하려면 <see langword="true" />이고, 안정적으로 해제할 수 없게 하려면 <see langword="false" />(권장되지 않음)입니다.</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> 메서드에 대한 폴링 모드를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>오류 상태 모드입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>읽기 상태 모드입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>쓰기 상태 모드입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> 배열의 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>지정된 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 범위의 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <param name="offset">
        <paramref name="buffer" />의 시작 부분부터 <paramref name="buffer" />에서 <paramref name="buffer" /> 매개 변수에 지정된 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 바이트가 전송되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우
<paramref name="offset" /> 및 <paramref name="count" />가 버퍼 크기보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <param name="offset">
        <paramref name="buffer" />의 시작 부분부터 <paramref name="buffer" />에서 <paramref name="buffer" /> 매개 변수에 지정된 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 바이트가 전송되지 않습니다.</param>
      <param name="endOfPacket">소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정하는 부울 값입니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우
<paramref name="offset" /> 및 <paramref name="count" />가 버퍼 크기보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>지정된 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" />은 비동기 읽기 및 쓰기용으로 열려 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" />이 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>지정된 범위의 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일의 바이트를 보내기 시작하는 파일의 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수부터 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentException">비동기 읽기 및 쓰기를 위해 <paramref name="fileStream" /> 매개 변수를 열어야 합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일의 바이트를 보내기 시작하는 파일의 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">오프셋 매개 변수에서 시작하여 보낼 바이트 수입니다. count가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정합니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">비동기 읽기 및 쓰기를 위해 <paramref name="fileStream" /> 매개 변수를 열어야 합니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>지정된 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket">소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정하는 부울 값입니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수부터 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정합니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>
        <paramref name="buffer" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 버퍼를 가져옵니다.</summary>
      <returns>
        <paramref name="buffer" /> 매개 변수를 사용 하 여 개체 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 를 초기화 한 경우 보낼 바이트 버퍼입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>보낼 바이트 수를 가져옵니다.</summary>
      <returns>
        <paramref name="count" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스를 초기화하는 경우 보낼 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않는지 여부를 나타내는 부울 값입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>
        <paramref name="filepath" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 파일의 이름을 가져옵니다.</summary>
      <returns>
        <paramref name="filepath" /> 매개 변수를 사용 하 여 개체를 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 초기화 하는 경우 보낼 파일의 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>
        <see cref="T:System.IO.FileStream" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 파일의 개체 표현을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.FileStream" /> 매개 변수를 사용 하 여 개체를 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 초기화 하는 경우 보낼 파일의 개체 표현입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)을 가져옵니다.</summary>
      <returns>데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)을 가져옵니다.</summary>
      <returns>데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Berkeley 소켓 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 지정 된 주소 패밀리, 소켓 종류 및 프로토콜을 사용 합니다.</summary>
      <param name="addressFamily">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">조합 <paramref name="addressFamily" />, <paramref name="socketType" />, 및 <paramref name="protocolType" /> 했을 때 소켓이 잘못 된 결과입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Net.Sockets.Socket" /> 에서 반환 되는 지정 된 값을 사용 하 여 클래스 <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />합니다.</summary>
      <param name="socketInformation">반환 된 소켓 정보 <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 지정 된 소켓 종류 및 프로토콜을 사용 합니다.</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">조합 <paramref name="socketType" /> 고 <paramref name="protocolType" /> 했을 때 소켓이 잘못 된 결과입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>새 <see cref="T:System.Net.Sockets.Socket" /> 새로 만든된 연결에 대 한 합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> 새로 만든된 연결에 대 한 합니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">받아들이는 소켓이 연결을 수신 하지 않습니다. 호출 해야 합니다 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 하 고 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 호출 하기 전에 <see cref="M:System.Net.Sockets.Socket.Accept" />입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>들어오는 연결 시도 수락 하기 위한 비동기 작업을 시작 합니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException">인수가 잘못된 경우 제공 된 버퍼 크기가 충분 하지 않은 경우이 예외가 발생 합니다. 버퍼에는 2 이상 이어야 합니다 * (sizeof(SOCKADDR_STORAGE + 16) 바이트입니다.
버퍼를 여러 개 지정 하는 경우에이 예외가 발생 합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수가 범위를 벗어났습니다. 예외가 발생 합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> 0 보다 작습니다.</exception>
      <exception cref="T:System.InvalidOperationException">잘못 된 작업이 요청 되었습니다. 이 예외가 발생 받아들이는 <see cref="T:System.Net.Sockets.Socket" /> 연결 또는 허용 되는 수신 하지 않고는 소켓이 바인딩되어 있습니다.
호출 해야 합니다 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 및 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 메서드를 호출 하기 전에 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드.
소켓이 이미 연결 되어 있거나 소켓 작업이 이미 진행 중인 지정 된 경우에이 예외가 발생 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>주소 패밀리를 가져옵니다는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <returns>네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>들어오는 연결 시도 수락 하기 위한 비동기 작업을 시작 합니다.</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 를 참조 하는 비동기 <see cref="T:System.Net.Sockets.Socket" /> 생성 합니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.InvalidOperationException">받아들이는 소켓이 연결을 수신 하지 않습니다. 호출 해야 합니다 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 하 고 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 호출 하기 전에 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />입니다.
-또는-
받아들여진된 소켓이 바인딩되어 있습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" />가 0보다 작습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>들어오는 연결 시도를 받아들이는 비동기 작업을 시작하고 클라이언트 애플리케이션에서 보낸 데이터의 첫 번째 블록을 받습니다.</summary>
      <param name="receiveSize">송신자 로부터 받아들일 바이트 수입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 를 참조 하는 비동기 <see cref="T:System.Net.Sockets.Socket" /> 생성 합니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.InvalidOperationException">받아들이는 소켓이 연결을 수신 하지 않습니다. 호출 해야 합니다 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 하 고 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 호출 하기 전에 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />입니다.
-또는-
받아들여진된 소켓이 바인딩되어 있습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" />가 0보다 작습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>지정된 소켓에서 들어오는 연결 시도를 받아들이는 비동기 작업을 시작하고 클라이언트 애플리케이션에서 보낸 데이터의 첫 번째 블록을 받습니다.</summary>
      <param name="acceptSocket">허용되는 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="receiveSize">수신 바이트의 최대 수입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 참조 하는 개체 <see cref="T:System.Net.Sockets.Socket" /> 개체 작성 합니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.InvalidOperationException">받아들이는 소켓이 연결을 수신 하지 않습니다. 호출 해야 합니다 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 하 고 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 호출 하기 전에 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />입니다.
-또는-
받아들여진된 소켓이 바인딩되어 있습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" />가 0보다 작습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다.</summary>
      <param name="remoteEP">원격 호스트를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호로 지정됩니다.</summary>
      <param name="address">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Sockets.Socket" />이 소켓 패밀리에 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" />의 길이가 0인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호로 지정됩니다.</summary>
      <param name="addresses">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />를 사용하는 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" />의 길이가 0인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="host">원격 호스트의 이름입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>원격 끝점에서 연결을 끊으려면 비동기 요청을 시작 합니다.</summary>
      <param name="reuseSocket">
        <see langword="true" /> 이 소켓 연결을 닫은 다음 다시 사용할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 작업을 참조 하는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows 2000 또는 이전 버전의 경우 및이 메서드에 Windows XP가 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>연결 된 데이터를 비동기적으로 받으려면 시작 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset">0부터 시작 위치는 <paramref name="buffer" /> 받은 데이터를 저장 하는 매개 변수입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">수신 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 사용 중지 되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>연결 된 데이터를 비동기적으로 받으려면 시작 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 받은 데이터를 저장 합니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">수신 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 사용 중지 되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>연결 된 데이터를 비동기적으로 받으려면 시작 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffers">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">수신 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 사용 중지 되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>연결 된 데이터를 비동기적으로 받으려면 시작 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffers">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">수신 작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 사용 중지 되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>지정된 네트워크 디바이스에서 비동기적으로 데이터를 받기 시작합니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset">0부터 시작 위치는 <paramref name="buffer" /> 데이터를 저장 하는 매개 변수입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터 소스를 나타내는입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>비동기적으로 지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 특정 위치로 지정된 바이트 수의 데이터를 받고 엔드포인트 및 패킷 정보를 저장하기 시작합니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset">0부터 시작 위치는 <paramref name="buffer" /> 데이터를 저장 하는 매개 변수입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터 소스를 나타내는입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 읽기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows 2000 또는 이전 버전의 경우 및이 메서드에 Windows XP가 필요 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>에 연결 된 데이터를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">형식 배열의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="offset">0부터 시작 위치는 <paramref name="buffer" /> 데이터 전송을 시작 하는 매개 변수입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 길이 보다 작으면 <paramref name="buffer" />합니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>에 연결 된 데이터를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">형식 배열의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="offset">0부터 시작 위치는 <paramref name="buffer" /> 데이터 전송을 시작 하는 매개 변수입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 길이 보다 작으면 <paramref name="buffer" />합니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>에 연결 된 데이터를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffers">형식 배열의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>에 연결 된 데이터를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffers">형식 배열의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>파일을 전송 합니다 <paramref name="fileName" /> 를 연결 <see cref="T:System.Net.Sockets.Socket" /> 사용 하 여 개체를 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 플래그입니다.</summary>
      <param name="fileName">보낼 파일의 이름과 경로 포함 하는 문자열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 나타내는 개체입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException">소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>에 연결 된 파일 및 데이터 버퍼를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</summary>
      <param name="fileName">보낼 파일의 이름과 경로 포함 하는 문자열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="preBuffer">파일이 전송되기 전에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="postBuffer">파일이 전송된 후에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="flags">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 값의 비트 조합입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 이 작업이 완료 될 때 호출 될 대리자입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="state">이 요청에 대 한 상태 정보를 포함 하는 사용자 정의 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 작업을 나타내는 개체입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows NT 아닙니다. 이상.
-또는-
소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer">형식 배열의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="offset">0부터 시작 위치 <paramref name="buffer" /> 데이터 전송을 시작입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 비동기 보내기를 참조 하는 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>연결을 <see cref="T:System.Net.Sockets.Socket" /> 로컬 끝점을 사용 합니다.</summary>
      <param name="localEP">로컬 <see cref="T:System.Net.EndPoint" /> 연결할는 <see cref="T:System.Net.Sockets.Socket" />합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>나타내는 값을 가져오거나 설정 합니다. 여부는 <see cref="T:System.Net.Sockets.Socket" /> 블로킹 모드 인지 합니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 프로그램이;이 고, 그렇지 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>원격 호스트 연결에 대 한 비동기 요청을 취소 합니다.</summary>
      <param name="e">합니다 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 중 하나를 호출 하 여 원격 호스트에 대 한 연결을 요청 하는 데 사용 되는 개체는 <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드.</param>
      <exception cref="T:System.ArgumentNullException">합니다 <paramref name="e" /> 매개 변수는 null 일 수 없습니다 및 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>닫습니다는 <see cref="T:System.Net.Sockets.Socket" /> 연결과 관련 된 모든 릴리스 리소스입니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 연결을 닫고 지정된 시간 제한의 모든 관련 리소스를 해제하여 대기 중인 데이터가 전송될 수 있도록 합니다.</summary>
      <param name="timeout">나머지 데이터가 전송될 때까지 <paramref name="timeout" />초까지 기다린 후 소켓을 닫습니다.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="remoteEP">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소와 포트 번호로 지정됩니다.</summary>
      <param name="address">원격 호스트의 IP 주소입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" />의 길이가 0인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소의 배열과 포트 번호로 지정됩니다.</summary>
      <param name="addresses">원격 호스트의 IP 주소입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" />의 길이가 0인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="host">원격 호스트의 이름입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>원격 호스트에 대 한 연결에 대 한 비동기 요청을 시작 합니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException">인수가 잘못된 경우 버퍼를 여러 개 지정 하는 경우이 예외가 발생 합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">합니다 <paramref name="e" /> 매개 변수는 null 일 수 없습니다 및 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 는 수신 또는 소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다. 경우에이 예외가 발생 로컬 끝점 및 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 같은 주소 패밀리를 하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>원격 호스트에 대 한 연결에 대 한 비동기 요청을 시작 합니다.</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException">인수가 잘못된 경우 버퍼를 여러 개 지정 하는 경우이 예외가 발생 합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">합니다 <paramref name="e" /> 매개 변수는 null 일 수 없습니다 및 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 는 수신 또는 소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다. 경우에이 예외가 발생 로컬 끝점 및 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 같은 주소 패밀리를 하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>나타내는 값을 가져옵니다 여부를 <see cref="T:System.Net.Sockets.Socket" /> 마지막 일부 터는 원격 호스트에 연결 되어 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 또는 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 작업 합니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 이 고, 그렇지 않으면 가장 최근 작업 원격 리소스에 연결 된 <see langword="false" />합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>소켓 연결을 닫고 소켓을 다시 사용할 수 있습니다.</summary>
      <param name="reuseSocket">
        <see langword="true" /> 현재 연결을 닫은 다음이 소켓을 다시 사용할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</param>
      <exception cref="T:System.PlatformNotSupportedException">이 메서드를 사용 하려면 Windows 2000 또는 이전 버전의 경우 또는 예외가 throw 됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>원격 끝점에서 연결을 끊으려면 비동기 요청을 시작 합니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수는 null일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>가져오거나를 <see cref="T:System.Boolean" /> 지정 하는 값 여부를 <see cref="T:System.Net.Sockets.Socket" /> IP (인터넷 프로토콜) 데이터 그램의 조각화를 허용 합니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 데이터 그램 조각화를 허용 하면이 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">소켓에만이 속성을 설정할 수 있습니다 합니다 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>
        <see cref="T:System.Boolean" />이 IPv4 및 IPv6 둘 다에 사용되는 이중 모드 소켓인지 여부를 지정하는 <see cref="T:System.Net.Sockets.Socket" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" />이 이중 모드 소켓이면 <see cref="T:System.Net.Sockets.Socket" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>대상 프로세스에 대 한 소켓 참조를 복제 하 고이 프로세스에 대 한 소켓을 닫습니다.</summary>
      <param name="targetProcessId">소켓 참조의 중복 만들어지는 대상 프로세스의 ID입니다.</param>
      <returns>대상 프로세스에 전달 될 소켓 참조입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> 올바른 프로세스 id가 아닙니다.
-또는-
소켓 참조의 중복 제거 하지 못했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>가져오거나를 <see cref="T:System.Boolean" /> 지정 하는 값 여부를 <see cref="T:System.Net.Sockets.Socket" /> 브로드캐스트 패킷 수를 주고받을 수 있습니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 브로드캐스트 패킷을 허용이 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">이 옵션은 데이터 그램 소켓이 아닌 소켓에 유효 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>비동기적으로 들어오는 연결 시도 허용 하 고 새 <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트 통신을 처리 하는 개체입니다. 이 메서드는 전송 된 초기 데이터가 들어 있는 버퍼를 반환 합니다.</summary>
      <param name="buffer">형식 배열의 <see cref="T:System.Byte" /> 전송 된 바이트가 들어 있는입니다.</param>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 사용자 뿐만 아니라이 비동기 작업에 대 한 상태 정보를 저장 하는 개체 데이터를 정의 합니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트와의 통신을 처리 하는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 호출 하 여 만들어지지 않은 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />합니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>비동기적으로 들어오는 연결 시도 허용 하 고 새 <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트 통신을 처리 하는 개체입니다. 이 메서드는 초기 데이터 및 전송 된 바이트 수가 들어 있는 버퍼를 반환 합니다.</summary>
      <param name="buffer">형식 배열의 <see cref="T:System.Byte" /> 전송 된 바이트가 들어 있는입니다.</param>
      <param name="bytesTransferred">전송 된 바이트 수입니다.</param>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 사용자 뿐만 아니라이 비동기 작업에 대 한 상태 정보를 저장 하는 개체 데이터를 정의 합니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트와의 통신을 처리 하는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 호출 하 여 만들어지지 않은 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />합니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">에 액세스 하려고 할 때 오류가 발생 했습니다는 <see cref="T:System.Net.Sockets.Socket" />합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>비동기적으로 들어오는 연결 시도 허용 하 고 새 <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트 통신을 처리 하도록 합니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 모든 사용자 정의 데이터 뿐만 아니라이 비동기 작업에 대 한 상태 정보를 저장 하는 합니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트와의 통신을 처리 하도록 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 호출 하 여 만들어지지 않은 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 자세한 내용은 설명 섹션을 참조하십시오.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출 되었습니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>보류 중인 비동기 연결 요청을 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> 비동기 연결을 위해 이미 호출 된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>보류 중인 비동기 연결 끊기 요청을 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows 2000 또는 이전 버전의 경우 및이 메서드에 Windows XP가 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> 비동기 연결을 위해 이미 호출 된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.Net.WebException">연결 끊기 요청 시간이 초과 되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 비동기 읽기를 위해 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 비동기 읽기를 위해 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>특정 끝점에서 보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <param name="endPoint">소스 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>성공할 경우 받은 바이트 수입니다. 실패 하면 0을 반환 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> 비동기 읽기를 위해 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>특정 끝점에서 보류 중인 비동기 읽기를 끝냅니다. 이 메서드는 보다 패킷에 대 한 자세한 내용은 힌트도 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />합니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <param name="socketFlags">비트 조합 된 <see cref="T:System.Net.Sockets.SocketFlags" /> 받은 패킷에 대 한 값입니다.</param>
      <param name="endPoint">소스 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="ipPacketInformation">
        <see cref="T:System.Net.IPAddress" /> 받은 패킷의 및 인터페이스입니다.</param>
      <returns>성공할 경우 받은 바이트 수입니다. 실패 하면 0을 반환 합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우
-또는-
<paramref name="endPoint" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 비동기 읽기를 위해 이미 호출 되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 상태 정보를 저장 하는 합니다.</param>
      <returns>경우 성공 하면 바이트 수가 전송할 합니다 <see cref="T:System.Net.Sockets.Socket" />이 고, 그렇지 않으면 잘못 된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> 가 비동기 보내기를 위해 이미 호출 됩니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 상태 정보를 저장 하는 합니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>경우 성공 하면 바이트 수가 전송할 합니다 <see cref="T:System.Net.Sockets.Socket" />이 고, 그렇지 않으면 잘못 된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> 가 비동기 보내기를 위해 이미 호출 됩니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>파일의 보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 상태 정보를 저장 하는 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">Windows NT가이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> 비동기에 대 한 이전에 호출한 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>특정 위치에 보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 이 비동기 작업에 대 한 모든 사용자 정의 데이터 및 상태 정보를 저장 하는 합니다.</param>
      <returns>성공적 이면 보낸 바이트 수를이; 그렇지 않으면 잘못 된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 에 대 한 호출에서 반환 하지 않았습니다는 <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 메서드.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> 가 비동기 보내기를 위해 이미 호출 됩니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>가져오거나를 <see cref="T:System.Boolean" /> 지정 하는 값 여부를 <see cref="T:System.Net.Sockets.Socket" /> 하나의 프로세스에서 포트를 바인딩할 수 있습니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 하나의 소켓만 특정 포트에 바인딩할 수이 고, 그렇지 <see langword="false" />합니다. 기본값은 <see langword="true" /> Windows Server 2003 및 Windows XP 서비스 팩 2 및 <see langword="false" /> 다른 모든 버전.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 이 호출한 <see cref="T:System.Net.Sockets.Socket" />합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>지정 된 값을 반환 합니다 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 개체로 나타냅니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <returns>옵션의 값을 나타내는 개체입니다. 경우는 <paramref name="optionName" /> 매개 변수는 설정 <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> 반환 값은의 인스턴스는 <see cref="T:System.Net.Sockets.LingerOption" /> 클래스입니다. 때 <paramref name="optionName" /> 로 설정 된 <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> 또는 <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />를 반환 값은의 인스턴스는 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스입니다. 때 <paramref name="optionName" /> 다른 값은 반환 값은 정수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.
-또는-
<paramref name="optionName" /> 지원 되지 않는 값으로 설정 된 <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>반환 된 <see cref="T:System.Net.Sockets.Socket" /> 옵션 설정을 바이트 배열로 표시 합니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue">형식 배열의 <see cref="T:System.Byte" /> 옵션 설정의 받을입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.
-또는-
.NET Compact Framework 애플리케이션에서 Windows CE 기본 버퍼 공간을 32768바이트로 설정한 경우. 변경할 수는 소켓 당 버퍼 공간 호출 하 여 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />입니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>지정 된 값을 반환 합니다 <see cref="T:System.Net.Sockets.Socket" /> 배열에 대 한 옵션입니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionLength">예상된 반환 값의 길이 (바이트) 합니다.</param>
      <returns>형식 배열의 <see cref="T:System.Byte" /> 소켓 옵션의 값이 들어 있는입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.
-또는-
.NET Compact Framework 애플리케이션에서 Windows CE 기본 버퍼 공간을 32768바이트로 설정한 경우. 변경할 수는 소켓 당 버퍼 공간 호출 하 여 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />입니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>에 대 한 운영 체제 핸들을 가져옵니다는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>
        <see cref="T:System.IntPtr" /> 에 대 한 운영 체제 핸들을 나타내는 <see cref="T:System.Net.Sockets.Socket" />합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>하위 수준 운영 모드를 설정 합니다 <see cref="T:System.Net.Sockets.Socket" /> 숫자 컨트롤 코드를 사용 하 여 합니다.</summary>
      <param name="ioControlCode">
        <see cref="T:System.Int32" /> 수행할 작업의 컨트롤 코드를 지정 하는 값입니다.</param>
      <param name="optionInValue">
        <see cref="T:System.Byte" /> 작업에 필요한 입력된 데이터를 포함 하는 배열입니다.</param>
      <param name="optionOutValue">
        <see cref="T:System.Byte" /> 작업에서 반환 되는 출력 데이터를 포함 하는 배열입니다.</param>
      <returns>바이트 수를 <paramref name="optionOutValue" /> 매개 변수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">사용 하지 않고 블로킹 모드를 변경 하려고 합니다 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 속성입니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>하위 수준 운영 모드를 설정 합니다 <see cref="T:System.Net.Sockets.Socket" /> 를 사용 하 여는 <see cref="T:System.Net.Sockets.IOControlCode" /> 제어 코드를 지정 하는 열거형입니다.</summary>
      <param name="ioControlCode">
        <see cref="T:System.Net.Sockets.IOControlCode" /> 수행할 작업의 컨트롤 코드를 지정 하는 값입니다.</param>
      <param name="optionInValue">형식 배열의 <see cref="T:System.Byte" /> 작업에 필요한 입력된 데이터를 포함 하는 합니다.</param>
      <param name="optionOutValue">형식 배열의 <see cref="T:System.Byte" /> 작업에서 반환 되는 출력 데이터를 포함 하는 합니다.</param>
      <returns>바이트 수를 <paramref name="optionOutValue" /> 매개 변수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">사용 하지 않고 블로킹 모드를 변경 하려고 합니다 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 속성입니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>나타내는 값을 가져옵니다 여부를 <see cref="T:System.Net.Sockets.Socket" /> 특정 로컬 포트에 바인딩되어 있습니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 이 고, 그렇지 않으면 로컬 포트에 바인딩된 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>지정 하는 값을 가져오거나 설정 합니다. 여부는 <see cref="T:System.Net.Sockets.Socket" /> 모든 보류 중인 데이터를 보내기 위해에서 소켓 닫기를 지연할지 합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" /> 소켓을 닫는 동안 링거 하는 방법을 지정 하는 합니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>위치는 <see cref="T:System.Net.Sockets.Socket" /> 수신 상태에 있습니다.</summary>
      <param name="backlog">보류 중인 연결 큐의 최대 길이입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>로컬 끝점을 가져옵니다.</summary>
      <returns>합니다 <see cref="T:System.Net.EndPoint" /> 는 <see cref="T:System.Net.Sockets.Socket" /> 통신을 위해 사용 됩니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>나가는 멀티캐스트 패킷을 보내는 애플리케이션에 전달할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> 나가는; 멀티 캐스트 패킷을 받으면이 고, 그렇지 <see langword="false" />합니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>가져오거나를 <see cref="T:System.Boolean" /> 지정 하는 값 여부를 스트림에 <see cref="T:System.Net.Sockets.Socket" /> Nagle 알고리즘을 사용 하는 합니다.</summary>
      <returns>
        <see langword="false" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> Nagle 알고리즘을 사용 하 고, 그렇지 않으면 <see langword="true" />합니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">에 액세스 하려고 할 때 오류가 발생 했습니다는 <see cref="T:System.Net.Sockets.Socket" />합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>기본 운영 체제 및 네트워크 어댑터 (IPv4) 인터넷 프로토콜 버전 4를 지원 하는지 여부를 나타냅니다.</summary>
      <returns>
        <see langword="true" /> 운영 체제 및 네트워크 어댑터에서 IPv4 프로토콜을 지원 합니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>기본 운영 체제 및 네트워크 어댑터 인터넷 프로토콜 버전 6(ipv6)을 지원 하는지 여부를 나타냅니다.</summary>
      <returns>
        <see langword="true" /> 운영 체제 및 네트워크 어댑터의 IPv6 프로토콜;을 지원 합니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>상태를 결정 합니다 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="microSeconds">마이크로초에서 응답을 기다릴 시간입니다.</param>
      <param name="mode">
        <see cref="T:System.Net.Sockets.SelectMode" /> 값 중 하나입니다.</param>
      <returns>상태를 <see cref="T:System.Net.Sockets.Socket" /> 전달 된 폴링 모드 값을 기반으로 합니다 <paramref name="mode" /> 매개 변수입니다.
  모드 
  반환 값 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see langword="true" /> 경우 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 호출한 연결이 보류 중이면 및 
-또는- 
 <see langword="true" /> 데이터 읽기에 사용할 수 있는 경우 
-또는- 
 <see langword="true" /> 연결 종료, 다시 설정 되거나; 종료 된 경우 
그렇지 않으면 반환 <see langword="false" />합니다.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see langword="true" />를 처리 하는 경우는 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />, 하 고 연결 했습니다. 
-또는- 
 <see langword="true" /> 데이터를 보낼 수 있는 경우 
그렇지 않으면 반환 <see langword="false" />합니다.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectError" /><see langword="true" /> 처리 하는 경우는 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> 차단 되지 않는 및 연결에 실패 합니다. 
-또는- 
 <see langword="true" /> 경우 <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> 설정 되어 있지 않고 대역의 데이터를 사용할 수 있습니다. 
그렇지 않으면 반환 <see langword="false" />합니다.</returns>
      <exception cref="T:System.NotSupportedException">합니다 <paramref name="mode" /> 매개 변수 중 하나가 아닌는 <see cref="T:System.Net.Sockets.SelectMode" /> 값입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래 주의를 참조하십시오.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>프로토콜 종류를 가져옵니다는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>데이터 바인딩된에서 수신 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 있습니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>범위에서 지정 된 바이트 수를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼의 지정된 된 오프셋된 위치에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">위치 <paramref name="buffer" /> 받은 데이터를 저장 합니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되어 있지 않은 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>바인딩된에서 데이터의 바이트 수를 받고 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> 크기를 초과 <paramref name="buffer" />합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>데이터 바인딩된에서 수신 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼 목록에 있습니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 받은 데이터를 포함 하는 합니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스 하는 동안 오류가 발생 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼 목록에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 받은 데이터를 포함 하는 합니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우
-또는-
<paramref name="buffers" />. 카운트가 0이 됩니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스 하는 동안 오류가 발생 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼 목록에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 받은 데이터를 포함 하는 합니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우
-또는-
<paramref name="buffers" />. 카운트가 0이 됩니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스 하는 동안 오류가 발생 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary>데이터 바인딩된에서 수신 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 있습니다.</summary>
      <param name="buffer">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <param name="socketFlags">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>바인딩된에서 데이터를 받는 <see cref="T:System.Net.Sockets.Socket" /> 수신 버퍼에 지정 된을 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffer">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <param name="socketFlags">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="errorCode">이 메서드가 반환될 때 소켓에 대한 오류 코드를 정의하는 열거형 값 중 하나를 포함합니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>연결 된 데이터를 받기 위해 비동기 요청을 시작 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException">인수가 잘못 되었습니다. 합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 또는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성에는 <paramref name="e" /> 매개 변수는 유효한 버퍼를 참조 해야 합니다. 이러한 속성 중 하나 또는 집합 중 하나만 동시 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>수신 버퍼의 크기를 지정 하는 값을 가져오거나 설정 합니다.는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 수신 버퍼를 바이트 단위로 크기를 포함 하는 합니다. 기본값은 8192입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Set 작업에 지정 된 값이 0 보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트를 저장합니다.</summary>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 오프셋 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우
-또는-
소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>지정 된 데이터 버퍼에 지정 된 바이트 수를 받고 <see cref="T:System.Net.Sockets.SocketFlags" />, 끝점을 저장 합니다.</summary>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" /> 이 <paramref name="buffer" />의 길이보다 큽니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>데이터 버퍼에 데이터 그램을 받고 끝점을 저장 합니다.</summary>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="remoteEP">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>지정 된 데이터 버퍼에 데이터 그램을 받고 <see cref="T:System.Net.Sockets.SocketFlags" />, 끝점을 저장 합니다.</summary>
      <param name="buffer">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>지정된 네트워크 디바이스에서 비동기적으로 데이터를 받기 시작합니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트 및 패킷 정보를 저장합니다.</summary>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size">수신 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="ipPacketInformation">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> 보유 주소 및 인터페이스 정보입니다.</param>
      <returns>받은 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 오프셋 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우
-또는-
.NET Framework는 AMD 64 비트 프로세서에서 실행 됩니다.
-또는-
소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows 2000 또는 이전 버전의 경우 및이 메서드에 Windows XP가 필요 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>지정 된 데이터 버퍼의 지정된 된 위치에 지정 된 데이터의 바이트 수를 비동기적으로 받으려면 시작 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, 끝점 및 패킷 정보를 저장 합니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>되기까지의 기간을 지정 하는 값을 가져오거나 설정 합니다. 동기 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 호출 시간이 초과 됩니다.</summary>
      <returns>시간 제한 값(밀리초)입니다. 기본값은 0으로, 시간 제한이 없음을 나타냅니다. -1을 지정에 또한 시간 제한이 없음을 나타냅니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 -1보다 작습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>원격 끝점을 가져옵니다.</summary>
      <returns>합니다 <see cref="T:System.Net.EndPoint" /> 있는 <see cref="T:System.Net.Sockets.Socket" /> 통신 합니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>현재 <see cref="T:System.Net.Sockets.SafeSocketHandle" /> 개체가 캡슐화하는 소켓 핸들을 나타내는 <see cref="T:System.Net.Sockets.Socket" />을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Net.Sockets.Socket" /> 개체가 캡슐화 하는 소켓에 안전 하 게 노출 되는 소켓 핸들입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>하나 이상의 소켓 상태를 확인합니다.</summary>
      <param name="checkRead">가독성을 확인할 <see cref="T:System.Collections.IList" /> 인스턴스의 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <param name="checkWrite">쓰기 가능성을 확인할 <see cref="T:System.Collections.IList" /> 인스턴스의 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <param name="checkError">오류를 확인할 <see cref="T:System.Collections.IList" /> 인스턴스의 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <param name="microSeconds">시간 제한 값(마이크로초)입니다. 값 -1은 시간 제한이 없음을 나타냅니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="checkRead" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우
및
<paramref name="checkWrite" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우
및
<paramref name="checkError" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>연결 된 데이터를 보내는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>지정된 오프셋에서 시작하고 지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 지정된 바이트 수의 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />으로 전송합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>연결 된 데이터의 바이트 수를 지정 된 보냅니다 <see cref="T:System.Net.Sockets.Socket" />, 지정된 된 오프셋에서 시작 하 고 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" /></summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>연결 된 데이터의 바이트 수를 지정 된 보냅니다 <see cref="T:System.Net.Sockets.Socket" />를 사용 하 여 지정 된 <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> 가 0 미만 또는 버퍼의 크기를 초과 합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
소켓에 액세스 하는 동안 운영 체제 오류가 발생 했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>에 연결 된 데이터를 보냅니다 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>보낼 버퍼 집합 목록에서 연결 된 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 섹션을 참조 하세요.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>연결 된 목록에서 버퍼 집합을 보냅니다 <see cref="T:System.Net.Sockets.Socket" />를 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>연결 된 목록에서 버퍼 집합을 보냅니다 <see cref="T:System.Net.Sockets.Socket" />를 사용 하 여 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</summary>
      <param name="buffers">목록을 <see cref="T:System.ArraySegment`1" />형식의 <see cref="T:System.Byte" /> 보낼 데이터가 들어 있는입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode">
        <see cref="T:System.Net.Sockets.SocketError" /> 소켓 오류를 저장 하는 개체입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary>연결 된 데이터를 보내는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="buffer">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>에 연결 된 데이터를 보냅니다 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <param name="socketFlags">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>에 연결 된 데이터를 보냅니다 <see cref="T:System.Net.Sockets.Socket" /> 지정 된 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <param name="socketFlags">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="errorCode">이 메서드가 반환될 때 소켓에 대한 오류 코드를 정의하는 열거형 값 중 하나를 포함합니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>에 연결 된 데이터를 비동기적으로 보냅니다 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentException">합니다 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 또는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성에는 <paramref name="e" /> 매개 변수는 유효한 버퍼를 참조 해야 합니다. 이러한 속성 중 하나 또는 집합 중 하나만 동시 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">합니다 <see cref="T:System.Net.Sockets.Socket" /> 아직 연결 되어 있지 않거나 통해 가져오지 못한 경우는 <see cref="M:System.Net.Sockets.Socket.Accept" />를 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />, 또는 <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />, 메서드.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>송신 버퍼의 크기를 지정 하는 값을 가져오거나 설정 합니다.는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 송신 버퍼의 바이트 크기를 포함 하는 합니다. 기본값은 8192입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Set 작업에 지정 된 값이 0 보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>파일을 전송 합니다 <paramref name="fileName" /> 를 연결 <see cref="T:System.Net.Sockets.Socket" /> 개체는 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 플래그를 전송 합니다.</summary>
      <param name="fileName">전송할 파일의 경로 및 이름을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 차단 모드가 아니며 이 동기 호출을 수락할 수 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>지정된 <paramref name="fileName" /> 값을 사용하여 연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에 파일 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 및 데이터 버퍼를 전송합니다.</summary>
      <param name="fileName">전송할 파일의 경로 및 이름을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="preBuffer">파일이 전송되기 전에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="postBuffer">파일이 전송된 후에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="flags">하나 이상의 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 값입니다.</param>
      <exception cref="T:System.NotSupportedException">운영 체제가 Windows NT 아닙니다. 이상.
-또는-
소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 차단 모드가 아니며 이 동기 호출을 수락할 수 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>컬렉션 메모리 또는 파일의 데이터 버퍼를 비동기적으로 보냅니다 연결 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.IO.FileNotFoundException">에 지정 된 파일을 <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> 속성 찾을 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다. 경우에이 예외가 발생 합니다 <see cref="T:System.Net.Sockets.Socket" /> 원격 호스트에 연결 되지 않은 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">연결 없는 <see cref="T:System.Net.Sockets.Socket" /> 사용량 및 파일 전송 되는 기본 전송의 최대 패킷 크기를 초과 합니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>되기까지의 기간을 지정 하는 값을 가져오거나 설정 합니다. 동기 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 호출 시간이 초과 됩니다.</summary>
      <returns>시간 제한 값(밀리초)입니다. 1부터 499 사이의 값을 사용 하 여 속성을 설정 하는 경우 값이 500으로 변경 됩니다. 기본값은 0으로, 시간 제한이 없음을 나타냅니다. -1을 지정에 또한 시간 제한이 없음을 나타냅니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 -1보다 작습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>데이터의 바이트 수를 지정 된 버퍼의 지정된 된 위치에서 시작 하 고 사용 하 여 지정된 된 끝점에 보내는 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터에 대 한 대상 위치를 나타내는입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 0보다 작습니다.
-또는-
<paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.
-또는-
<paramref name="size" />가 0보다 작습니다.
-또는-
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우
-또는-
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 호출자에 필요한 사용 권한이 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>데이터의 바이트 수를 지정된 된를 사용 하 여 지정된 된 끝점에 보내는 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size">보낼 바이트 수입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터에 대 한 대상 위치를 나타내는입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">지정 된 <paramref name="size" /> 크기를 초과 <paramref name="buffer" />합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>지정된 된 끝점에 데이터를 보냅니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터에 대 한 대상을 나타내는입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>지정 된 특정 끝점에 데이터를 보냅니다 <see cref="T:System.Net.Sockets.SocketFlags" />합니다.</summary>
      <param name="buffer">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> 데이터에 대 한 대상 위치를 나타내는입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />가 <see langword="null" />인 경우
-또는-
<paramref name="remoteEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 이 비동기 소켓 작업에 사용할 개체입니다.</param>
      <returns>I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 합니다 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 작업이 완료 되 면 발생 합니다.
I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트에는 <paramref name="e" /> 매개 변수는 발생 하지 것입니다 및 <paramref name="e" /> 개체 전달 작업의 결과 검색할 메서드 호출이 반환 된 직후 매개 변수를 검사할 수 있습니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> null 일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">소켓 작업이 이미 사용 하 여 진행률을 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 에 지정 된 개체는 <paramref name="e" /> 매개 변수입니다.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP 이상이이 메서드에 대 한 필요 합니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">지정 된 프로토콜은 연결 지향 하지만 <see cref="T:System.Net.Sockets.Socket" /> 아직 연결 되지 않았습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>IP 보호 수준이 소켓을 설정 합니다.</summary>
      <param name="level">이 소켓에 설정할 IP 보호 수준이 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="level" /> 매개 변수는 <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />일 수 없습니다. IP 보호 수준이 지정 되지 않은로 설정할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">합니다 <see cref="T:System.Net.Sockets.AddressFamily" /> 소켓의 여야 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>지정 된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 지정 된 <see cref="T:System.Boolean" /> 값입니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue">옵션의 값으로 표현 된 <see cref="T:System.Boolean" />합니다.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>지정 된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 지정된 된 값을 바이트 배열로 표시 합니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue">형식 배열의 <see cref="T:System.Byte" /> 옵션의 값을 나타내는입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>지정 된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 지정 된 정수 값입니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue">옵션의 값입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>지정 된 <see cref="T:System.Net.Sockets.Socket" /> 지정된 된 값을 개체로 나타낼 수 있습니다.</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue">A <see cref="T:System.Net.Sockets.LingerOption" /> 또는 <see cref="T:System.Net.Sockets.MulticastOption" /> 옵션의 값이 들어 있는입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>받고 보내는 사용 하지 않도록 설정 된 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <param name="how">중 하나는 <see cref="T:System.Net.Sockets.SocketShutdown" /> 더 이상 사용할 수 있는 작업을 지정 하는 값입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />의 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>IPv4 지원이 제공 되며 현재 호스트에서 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 현재 호스트에서 IPv4 프로토콜에서 지 원하는 경우 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>프레임 워크에 대 한 특정 사용 되지 않는 IPv6를 지원 하는지 여부를 나타내는 값을 가져옵니다 <see cref="T:System.Net.Dns" /> 멤버입니다.</summary>
      <returns>
        <see langword="true" /> 사용 되지 않는 프레임 워크 특정 IPv6를 지원 하면 <see cref="T:System.Net.Dns" /> 메서드가 고, 그렇지 않으면 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>보낸 IP (인터넷 프로토콜) 패킷의 TTL Time To Live () 값을 지정 하는 값을 가져오거나 설정 합니다.는 <see cref="T:System.Net.Sockets.Socket" />합니다.</summary>
      <returns>TTL 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">TTL 값은 음수로 설정할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">소켓에만이 속성을 설정할 수 있습니다 합니다 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다. TTL을 255 보다 큰 값으로 설정 하려고 하는 경우에이 오류가 반환 됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>소켓만 겹쳐진 I/O 모드를 사용 해야 하는지 여부를 지정 합니다.</summary>
      <returns>
        <see langword="true" /> 경우는 <see cref="T:System.Net.Sockets.Socket" /> I/O 모드만 사용이 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">소켓이 완료 포트에 바인딩 되었습니다.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>비동기 소켓 작업을 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>빈 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.NotSupportedException">플랫폼이 지원되지 않는 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>비동기 소켓 메서드를 통해 연결을 허용하기 위해 만들었거나 사용할 소켓을 가져오거나 설정합니다.</summary>
      <returns>비동기 소켓 메서드를 통해 연결을 허용하기 위해 만들었거나 사용할 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>비동기 소켓 메서드에 사용할 데이터 버퍼를 가져옵니다.</summary>
      <returns>비동기 소켓 메서드에 사용할 데이터 버퍼를 나타내는 <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>비동기 소켓 메서드에 사용할 데이터 버퍼의 배열을 가져오거나 설정합니다.</summary>
      <returns>비동기 소켓 메서드에 사용할 데이터 버퍼의 배열을 나타내는 <see cref="T:System.Collections.IList" />입니다.</returns>
      <exception cref="T:System.ArgumentException">설정 작업에 지정된 버퍼가 명확하지 않은 경우. <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성이 null이 아닌 값으로 설정되고, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />속성을 null이 아닌 값으로 설정하고자 하는 경우, 이러한 예외가 발생합니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>소켓 작업에서 전송된 바이트 수를 가져옵니다.</summary>
      <returns>소켓 작업에서 전송된 바이트 수를 포함하는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>비동기 작업을 완료하는 데 사용할 이벤트입니다.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>
        <see cref="T:System.Net.DnsEndPoint" />를 사용할 때 연결 실패가 발생하는 경우의 예외를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Exception" />가 <see cref="T:System.Net.DnsEndPoint" /> 속성에 지정된 경우 연결 오류의 원인을 나타내는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 메서드가 성공적으로 완료된 후 만들어지고 연결되는 <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> 개체입니다.</summary>
      <returns>연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>비동기 작업을 통해 보내거나 받을 최대 데이터 양(바이트)을 가져옵니다.</summary>
      <returns>보내거나 받을 최대 데이터 양(바이트)을 포함하는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>연결 끊기 작업이 완료된 후 소켓을 다시 사용할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>연결 끊기 작업이 완료된 후 소켓을 다시 사용할 수 있는지 여부를 지정하는 <see cref="T:System.Boolean" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>이 컨텍스트 개체를 사용하여 가장 최근에 수행한 소켓 작업의 유형을 가져옵니다.</summary>
      <returns>이 컨텍스트 개체를 사용하여 가장 최근에 수행한 소켓 작업의 유형을 나타내는 <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary>비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역을 가져옵니다.</summary>
      <returns>비동기 소켓 메서드에 사용할 데이터 버퍼를 나타내는 메모리 영역입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에서 참조하는 데이터 버퍼의 오프셋(바이트)을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 속성에서 참조하는 데이터 버퍼의 오프셋(바이트)이 포함된 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>비동기 작업이 완료되면 호출할 메서드를 나타냅니다.</summary>
      <param name="e">신호를 받는 이벤트입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>받은 패킷의 IP 주소 및 인터페이스를 가져옵니다.</summary>
      <returns>받은 패킷의 대상 IP 주소 및 인터페이스를 포함하는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>비동기 작업의 원격 IP 엔드포인트를 가져오거나 설정합니다.</summary>
      <returns>비동기 작업의 원격 IP 엔드포인트를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드로 비동기 작업을 수행할 때 보낼 버퍼의 배열을 가져오거나 설정합니다.</summary>
      <returns>보낼 버퍼의 배열을 나타내는 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체 배열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 메서드로 비동기 작업을 수행할 때 사용하는 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 값의 비트 조합을 가져오거나 설정합니다.</summary>
      <returns>비동기 작업에 사용되는 값의 비트 조합을 포함하는 <see cref="T:System.Net.Sockets.TransmitFileOptions" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>보내기 작업에 사용되는 데이터 블록의 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>보내기 작업에 사용되는 데이터 블록의 크기(바이트)가 포함된 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>비동기 소켓 메서드에 사용할 데이터 버퍼를 설정합니다.</summary>
      <param name="buffer">비동기 소켓 메서드에 사용할 데이터 버퍼입니다.</param>
      <param name="offset">데이터 버퍼에서 작업이 시작되는 오프셋(바이트)입니다.</param>
      <param name="count">버퍼에서 보내거나 받을 최대 데이터 양(바이트)입니다.</param>
      <exception cref="T:System.ArgumentException">지정된 버퍼가 명확하지 않은 경우. <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성도 null이 아니고 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성도 null이 아니면 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수가 범위를 벗어난 경우. <paramref name="offset" /> 매개 변수가 0보다 작거나 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이보다 크면 이 예외가 발생합니다. 또한 <paramref name="count" /> 매개 변수가 0보다 작거나, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이에서 <paramref name="offset" /> 매개 변수를 뺀 값보다 큰 경우에도 이 예외가 발생합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>비동기 소켓 메서드에 사용할 데이터 버퍼를 설정합니다.</summary>
      <param name="offset">데이터 버퍼에서 작업이 시작되는 오프셋(바이트)입니다.</param>
      <param name="count">버퍼에서 보내거나 받을 최대 데이터 양(바이트)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">인수가 범위를 벗어난 경우. <paramref name="offset" /> 매개 변수가 0보다 작거나 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이보다 크면 이 예외가 발생합니다. 또한 <paramref name="count" /> 매개 변수가 0보다 작거나, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이에서 <paramref name="offset" /> 매개 변수를 뺀 값보다 큰 경우에도 이 예외가 발생합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary>비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역을 설정합니다.</summary>
      <param name="buffer">비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>비동기 소켓 작업의 결과를 가져오거나 설정합니다.</summary>
      <returns>비동기 소켓 작업의 결과를 나타내는 <see cref="T:System.Net.Sockets.SocketError" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>비동기 소켓 작업의 결과를 가져오거나 비동기 작업의 동작을 설정합니다.</summary>
      <returns>비동기 소켓 작업의 결과를 나타내는 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>이 비동기 소켓 작업과 연결된 사용자 또는 애플리케이션 개체를 가져오거나 설정합니다.</summary>
      <returns>이 비동기 소켓 작업과 연결된 사용자 또는 애플리케이션 개체를 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>이 컨텍스트 개체로 가장 최근에 수행한 비동기 소켓 작업의 형식입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>소켓 Accept 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>소켓 Connect 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>소켓 Disconnect 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>소켓 작업이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>소켓 Receive 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>소켓 ReceiveFrom 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>소켓 ReceiveMessageFrom 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>소켓 Send 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>소켓 SendPackets 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>소켓 SendTo 작업입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>소켓 전송 및 수신 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>브로드캐스트 패킷을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>컨트롤 데이터가 내부 64KB 버퍼에 맞지 않아 잘렸음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>라우팅 테이블을 사용하지 않고 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>멀티캐스트 패킷을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>이 호출에 대해 플래그를 사용하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>대역 외 데이터를 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>메시지에 대한 부분 전송 또는 수신입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>들어오는 메시지를 미리 봅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>메시지가 너무 커서 지정된 버퍼에 맞지 않아 잘렸습니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />을 복제하는 데 필요한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />의 옵션을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketInformationOptions" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />의 프로토콜 정보를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 형식의 배열입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />의 상태를 설명합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />이 연결되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />이 새 연결을 수신 대기하고 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />이 비블로킹 상태입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />이 겹쳐진 I/O를 사용합니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> 메서드에 대한 소켓 옵션 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 IP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 IPv6 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 옵션이 모든 소켓에 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 옵션이 TCP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 UDP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>구성 옵션 이름을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>소켓이 수신 중입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>IP 그룹 구성원을 추가합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>원본 그룹을 조인합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>원본의 데이터를 차단합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>소켓의 브로드캐스트 메시지 보내기를 허용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>RFC-1222에 정의된 대로 긴급한 데이터를 사용합니다. 이 옵션은 한 번만 설정할 수 있으며, 설정한 후에는 해제할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>UDP 체크섬 범위를 설정하거나 가져옵니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>디버깅 정보를 기록합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>IP 데이터그램을 조각화하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>소켓을 즉시 자동으로 닫습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>라우팅하지 않고 인터페이스 주소로 직접 패킷을 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>IP 그룹 구성원을 드롭합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>원본 그룹을 삭제합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>오류 상태를 가져온 다음, 지웁니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>단독 액세스를 위해 소켓에 바인딩할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>RFC-1222에 정의된 대로 긴급 데이터를 사용합니다. 이 옵션은 한 번만 설정할 수 있으며, 설정한 후에는 해제할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>나가는 데이터그램의 IP 헤더를 애플리케이션이 제공함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>IPv6(인터넷 프로토콜 버전 6) 패킷에 대한 최대 라우터 홉 수를 지정합니다. 이 옵션은 인터넷 프로토콜 버전 4의 TTL(Time to Live)과 유사합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>나가는 데이터그램에 삽입될 IP 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>링크 로컬 또는 사이트 로컬 접두사가 동일한 주소와 같이 지정된 범위에 IPv6 소켓 제한을 사용합니다. 이 소켓 옵션을 사용하면 애플리케이션에서 IPv6 소켓에 대한 액세스 제한을 적용할 수 있습니다. 이러한 제한을 사용하면 사설 LAN에서 실행되는 애플리케이션을 간단하고 강력하게 외부 공격으로부터 보호할 수 있습니다. 이 소켓 옵션을 통해 적절한 경우 퍼블릭 및 프라이빗 사용자의 무제한 액세스를 허용하거나 필요에 따라 같은 사이트로만 액세스를 제한하여 수신 소켓의 범위를 넓히거나 좁힐 수 있습니다. 이 소켓 옵션은 <see cref="T:System.Net.Sockets.IPProtectionLevel" /> 열거형에 지정된 보호 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>IP 헤더의 TTL(Time to Live) 필드를 설정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 통신에만 사용하도록 제한할지 여부를 나타냅니다. AF_INET6 주소 패밀리에 대해 만든 소켓은 IPv6 및 IPv4 통신 모두에 사용할 수 있습니다. 애플리케이션에 따라 AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 통신에만 사용하도록 제한할 수 있습니다. 이 값이 0이 아니면(Windows의 경우 기본값) AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 패킷을 보내고 받는 데만 사용할 수 있습니다. 이 값이 0이면 AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 주소 또는 IPv4 주소에서 패킷을 보내고 받는 데 사용할 수 있습니다. IPv4 주소를 조작할 수 있으려면 IPv4로 매핑된 주소를 사용해야 합니다. 이 소켓 옵션은 Windows Vista 이상에서 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>연결 유지를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>보내지 않은 데이터가 있으면 닫기가 지연됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>지원되지 않는 값이므로 이 값을 사용하면 <see cref="T:System.Net.Sockets.SocketException" />이 throw됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>나가는 멀티캐스트 패킷에 대한 인터페이스를 설정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>IP 멀티캐스트 루프백입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>IP 멀티캐스트  TTL(Time to Live)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>체크섬을 0으로 설정하여 UDP 데이터그램을 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>보내기 통합을 위해 Nagle 알고리즘을 비활성화합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>정상 데이터 스트림 내의 대역 외 데이터를 받습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>받은 패킷에 관한 정보를 반환합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>받기용으로 예약된 소켓당 버퍼 공간 전체를 지정합니다. 이 크기는 최대 메시지 크기나 TCP 창의 크기와는 관련이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>
        <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 작업에 대해 하위 워터마크를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>받기 제한 시간을 지정합니다. 이 옵션은 동기 메서드에만 적용되고 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드와 같은 비동기 메서드에는 적용되지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>소켓이 이미 사용 중인 주소에 바인딩될 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>시스템이 아웃바운드 연결에 대한 임시 포트 할당을 연기 해야 함을 나타냅니다. Winsock2 SO_REUSE_UNICASTPORT 소켓 옵션을 사용하는 것과 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>보내기용으로 예약된 소켓당 버퍼 공간 전체를 지정합니다. 이 크기는 최대 메시지 크기나 TCP 창의 크기와는 관련이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>
        <see cref="Overload:System.Net.Sockets.Socket.Send" /> 작업에 대해 하위 워터마크를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>보내기 제한 시간을 지정합니다. 이 옵션은 동기 메서드에만 적용되고 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드와 같은 비동기 메서드에는 적용되지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>TCP 연결에서 다른 keepalive 프로브를 보내기 전에 keepalive 응답을 대기하는 시 (초)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>연결이 종료되기 전에 전송되는 TCP 연결 유지 프로브 수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>Keepalive 프로브를 원격으로 보내기 전에 TCP 연결이 활성/유휴 상태로 유지되는 시간(초)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>소켓 형식을 가져옵니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>서비스 필드의 IP 헤더 형식을 변경합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>이전에 차단된 원본의 차단을 해제합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>기존 소켓의 속성을 사용하여 받아들인 소켓의 속성을 업데이트합니다. 이 옵션은 Winsock2 SO_UPDATE_ACCEPT_CONTEXT 소켓 옵션을 사용하는 것과 동일하며 연결 지향 소켓에서만 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>기존 소켓의 속성을 사용하여 연결된 소켓의 속성을 업데이트합니다. 이 옵션은 Winsock2 SO_UPDATE_CONNECT_CONTEXT 소켓 옵션을 사용하는 것과 동일하며 연결 지향 소켓에서만 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>가능한 경우 하드웨어를 건너뜁니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업의 결과입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>받은 바이트 수입니다. <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업에 실패하는 경우 0입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>소스 <see cref="T:System.Net.EndPoint" />입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업의 결과입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> 보유 주소 및 인터페이스 정보입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>받은 바이트 수입니다. <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업에 실패하는 경우 값은 0이 됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>소스 <see cref="T:System.Net.EndPoint" />입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>받은 패킷에 대한 <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> 메서드에서 사용하는 상수를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />을 보내기와 받기 모두에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />을 받기에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />을 보내기에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>이 클래스에는 <see cref="T:System.Net.Sockets.Socket" /> 클래스에 대한 확장 메서드가 포함됩니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</summary>
      <param name="socket">연결을 수신하는 소켓입니다.</param>
      <returns>원격 호스트와의 통신을 처리하기 위해 <see cref="T:System.Net.Sockets.Socket" />에서 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</summary>
      <param name="socket">들어오는 연결을 수신하는 소켓입니다.</param>
      <param name="acceptSocket">허용되는 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns>원격 호스트와의 통신을 처리하기 위해 <see cref="T:System.Net.Sockets.Socket" />에서 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket">연결 설정에 사용되는 소켓입니다.</param>
      <param name="remoteEP">원격 디바이스를 나타내는 엔드포인트입니다.</param>
      <returns>비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소와 포트 번호로 지정됩니다.</summary>
      <param name="socket">연결 작업을 수행할 소켓입니다.</param>
      <param name="address">원격 호스트의 IP 주소입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소의 배열과 포트 번호로 지정됩니다.</summary>
      <param name="socket">연결 작업이 수행되는 소켓입니다.</param>
      <param name="addresses">원격 호스트의 IP 주소입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <returns>비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>원격 호스트에 대한 연결을 설정합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="socket">연결 작업을 수행할 소켓입니다.</param>
      <param name="host">원격 호스트의 이름입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <returns>비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>비동기 수신 작업을 나타내는 작업입니다. <paramref name="TResult" /> 매개 변수의 값은 수신된 바이트 수를 포함합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffers">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>비동기 수신 작업을 나타내는 작업입니다. <paramref name="TResult" /> 매개 변수의 값은 수신된 바이트 수를 포함합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffer">받는 데이터에 대한 스토리지 위치인 메모리의 영역입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="cancellationToken">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns>받은 바이트 수로 완료되는 작업이거나, 스트림의 끝에 도달한 경우 0입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>지정한 네트워크 디바이스에서 데이터를 수신합니다.</summary>
      <param name="socket">ReceiveFrom 작업을 수행할 소켓입니다.</param>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 Byte 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEndPoint">데이터 원본을 나타내는 엔드포인트입니다.</param>
      <returns>SocketReceiveFromResult 구조체로 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트 및 패킷 정보를 저장합니다.</summary>
      <param name="socket">작업을 수행할 소켓입니다.</param>
      <param name="buffer">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEndPoint">원격 서버를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" /> 구조체로 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket">작업을 수행할 소켓입니다.</param>
      <param name="buffer">전송할 데이터를 포함하는 Byte 형식의 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket">작업을 수행할 소켓입니다.</param>
      <param name="buffers">전송할 데이터가 들어 있는 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns>작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket">작업을 수행할 소켓입니다.</param>
      <param name="buffer">전송할 데이터를 포함하는 메모리 영역입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="cancellationToken">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns>작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="socket">작업을 수행할 소켓입니다.</param>
      <param name="buffer">전송할 데이터가 들어 있는 배열입니다.</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns>작업에 성공한 경우 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 인스턴스가 나타내는 소켓의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>고정된 최대 길이(대개 작음)의 신뢰할 수 없고 연결 없는 메시지인 데이터그램을 지원합니다. 메시지가 손실되거나 중복될 수 있으며 메시지 순서가 잘못될 수도 있습니다. <see cref="T:System.Net.Sockets.Socket" /> 종류의 <see cref="F:System.Net.Sockets.SocketType.Dgram" />은 데이터를 보내고 받기 전에 연결하지 않고도 여러 피어와 통신할 수 있습니다. <see cref="F:System.Net.Sockets.SocketType.Dgram" />은 Datagram Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />)과 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 주소 패밀리를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>내부 전송 프로토콜에 대한 액세스를 지원합니다. <see cref="F:System.Net.Sockets.SocketType.Raw" />를 사용하면 Internet Control Message Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) 및 Internet Group Management Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) 같은 프로토콜을 사용하여 통신할 수 있습니다. 애플리케이션은 전송 시 전체 IP 헤더를 제공해야 합니다. 받은 데이터그램은 변경되지 않은 IP 헤더 및 옵션과 함께 반환됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>연결 없고, 메시지 지향적이고, 신뢰성 있게 배달되는 메시지를 지원하고, 데이터 내의 메시지 경계를 유지합니다. RDM(Reliably Delivered Message) 메시지는 복제되지 않은 상태로 순서에 따라 도착합니다. 또한 메시지가 손실되면 보낸 사람에게 알립니다. <see cref="F:System.Net.Sockets.SocketType.Rdm" />을 사용하여 <see cref="T:System.Net.Sockets.Socket" />을 초기화하면 데이터를 보내고 받기 전에 원격 호스트에 연결하지 않아도 됩니다. 또한 <see cref="F:System.Net.Sockets.SocketType.Rdm" />을 사용하면 여러 피어와 통신할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>네트워크를 통해 연결 지향적이고, 양방향으로 신뢰성 있게 전송되며, 순서가 지정된 바이트 스트림을 제공합니다. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" />은 데이터를 중복하지 않고 데이터 스트림 내의 경계를 유지합니다. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 종류의 <see cref="T:System.Net.Sockets.Socket" />은 단일 피어와 통신하며 통신을 시작하기 전에 원격 호스트에 연결해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>데이터 중복이나 경계 유지 없이 신뢰성 있는 양방향 연결 기반의 바이트 스트림을 지원합니다. 이 종류의 <see cref="T:System.Net.Sockets.Socket" />은 단일 피어와 통신하며 이 소켓을 사용할 경우 통신을 시작하기 전에 원격 호스트에 연결해야 합니다. <see cref="F:System.Net.Sockets.SocketType.Stream" />은 Transmission Control Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) 및 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 주소 패밀리를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>알 수 없는 <see cref="T:System.Net.Sockets.Socket" /> 종류를 지정합니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>TCP 네트워크 서비스에 대한 클라이언트 연결을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</summary>
      <param name="localEP">TCP <see cref="T:System.Net.Sockets.Socket" />을 바인딩할 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> 매개 변수가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>지정된 패밀리를 사용하여 <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="family">IP 프로토콜의 <see cref="P:System.Net.IPAddress.AddressFamily" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> 매개 변수가 AddressFamily.InterNetwork와 같지 않은 경우
또는
<paramref name="family" /> 매개 변수가 AddressFamily.InterNetworkV6와 같지 않은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 지정된 호스트의 지정된 포트에 연결합니다.</summary>
      <param name="hostname">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port">연결한 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <returns>네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="address">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="addresses">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 호스트 이름(<see cref="T:System.String" />)과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="host">원격 호스트의 이름입니다.</param>
      <param name="port">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>내부 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</summary>
      <returns>내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>이 <see cref="T:System.Net.Sockets.TcpClient" /> 인스턴스를 삭제하고 내부 TCP 연결을 닫도록 요청합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="address">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="ipAddresses">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</param>
      <param name="port">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>지정된 네트워크 엔드포인트를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="remoteEP">연결할 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEp" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>지정된 호스트의 지정된 포트에 클라이언트를 연결합니다.</summary>
      <param name="hostname">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port">연결한 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="address">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">연결할 포트 번호입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="addresses">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</param>
      <param name="port">연결할 포트 번호입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</summary>
      <param name="host">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port">연결한 원격 호스트의 포트 번호입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" />의 내부 <see cref="T:System.Net.Sockets.TcpClient" />이 원격 호스트에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>가장 최근 작업에서 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 소켓이 원격 리소스에 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>보류 중인 비동기 연결 시도를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 메서드를 호출했지만 <paramref name="asyncResult" /> 매개 변수가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 메서드가 비동기 연결을 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpClient" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.NetworkStream" />을 반환합니다.</summary>
      <returns>내부 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpClient" />가 원격 호스트에 연결되어 있지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>연결된 소켓의 링거 상태에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" /> 기본적으로 링거는 비활성화됩니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>송신 또는 수신 버퍼가 꽉 차지 않았을 때 지연을 비활성화하는 값을 가져오거나 설정합니다.</summary>
      <returns>지연이 사용 하지 않도록 설정 된 경우 <see langword="true" /> 합니다. 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>수신 버퍼의 크기를 가져오거나 설정합니다.</summary>
      <returns>수신 버퍼의 크기(바이트)입니다. 기본값은 8192,536바이트입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">버퍼 크기를 설정하는 동안 오류가 발생한 경우
또는
.NET Compact Framework 애플리케이션에서 이 속성을 설정할 수 없는 경우. 해결 방법은 설명 부분의 플랫폼 참고를 참조하십시오.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>읽기 작업이 시작된 후에 <see cref="T:System.Net.Sockets.TcpClient" />가 데이터를 수신하기 위해 대기하는 기간을 가져오거나 설정합니다.</summary>
      <returns>해당 연결의 제한 시간 값(밀리초)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>송신 버퍼의 크기를 가져오거나 설정합니다.</summary>
      <returns>송신 버퍼의 크기(바이트)입니다. 기본값은 8192,536바이트입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>보내기 작업을 성공적으로 완료하기 위해 <see cref="T:System.Net.Sockets.TcpClient" />가 대기하는 기간을 가져오거나 설정합니다.</summary>
      <returns>송신 제한 시간 값(밀리초)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>TCP 네트워크 클라이언트에서 연결을 수신합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>지정된 포트에서 수신하는 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="port">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>지정된 로컬 IP 주소와 포트 번호에서 들어오는 연결 시도를 수신하는 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="localaddr">로컬 IP 주소를 나타내는 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>지정된 로컬 엔드포인트를 사용하여 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" />수신기를 바인딩할 로컬 엔드포인트를 나타내는 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>보류 중인 연결 요청을 받아들입니다.</summary>
      <returns>데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>보류 중인 연결 요청을 비동기 작업으로 허용합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Sockets.Socket" />을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>보류 중인 연결 요청을 받아들입니다.</summary>
      <returns>데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>보류 중인 연결 요청을 비동기 작업으로 허용합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Sockets.TcpClient" />을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>
        <see cref="T:System.Net.Sockets.TcpListener" />가 클라이언트 연결을 실제로 수신하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpListener" />가 실제로 수신하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스에 대해 NAT(Network Address Translation) 통과를 설정하거나 해제합니다.</summary>
      <param name="allowed">NAT 통과를 설정 또는 해제할지를 지정하는 부울 값입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> 메서드를 호출한 후 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 메서드를 호출한 경우입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결을 받아들이는 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" />의 비동기 생성을 참조하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="callback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">연결을 받아들이는 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <returns>
        <see cref="T:System.IAsyncResult" />의 비동기 생성을 참조하는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>지정된 포트에서 수신 대기할 새 <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스를 만듭니다.</summary>
      <param name="port">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <returns>지정된 포트에서 수신 대기할 새 <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새로운 <see cref="T:System.Net.Sockets.Socket" />을 만듭니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />
데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 <paramref name="asyncResult" /> 매개 변수를 만들지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새로운 <see cref="T:System.Net.Sockets.TcpClient" />을 만듭니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />입니다.</param>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" />
데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Boolean" />가 특정 포트를 하나의 내부 소켓에서만 수신하는 것을 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpListener" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpListener" />가 특정 포트를 하나의 <see cref="T:System.Net.Sockets.TcpListener" />에서만 수신하는 것을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 을 선택합니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpListener" />가 시작된 경우. <see cref="M:System.Net.Sockets.TcpListener.Stop" /> 메서드를 호출한 다음 <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> 속성을 설정하십시오.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>현재 <see cref="T:System.Net.EndPoint" />의 내부 <see cref="T:System.Net.Sockets.TcpListener" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" />이 바인딩될 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>보류 중인 연결 요청이 있는지 여부를 확인합니다.</summary>
      <returns>연결이 보류 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />을 가져옵니다.</summary>
      <returns>내부 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>들어오는 연결 요청의 수신을 시작합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>최대 보류 연결 수로 들어오는 연결 요청에 대한 수신을 시작합니다.</summary>
      <param name="backlog">보류 중인 연결 큐의 최대 길이입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="backlog" /> 매개 변수가 0보다 작거나 허용된 최대 연결 수를 초과한 경우.</exception>
      <exception cref="T:System.InvalidOperationException">내부 <see cref="T:System.Net.Sockets.Socket" />이 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>수신기를 닫습니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 열거형은 파일 전송 요청에 사용되는 값을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>전송을 위해 모든 파일 데이터를 큐에 대기시킨 후 전송 수준에서 연결 끊기를 시작합니다. <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>요청이 완료되면 소켓 핸들을 다시 사용할 수 있습니다. 이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />도 지정된 경우에만 유효합니다. <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>기본 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>작업자 스레드 대신 커널 APC(Asynchronous Procedure Call)를 사용하여 긴 파일 전송 요청을 처리합니다. 긴 요청은 파일 또는 캐시에서 두 번 이상 읽어야 하는 요청으로 정의됩니다. 따라서 이 요청은 파일 크기와 지정된 송신 패킷 길이에 따라 달라집니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>시스템 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>파일 전송 요청을 보류하지 않고 즉시 완료합니다. 이 플래그를 지정한 경우 파일이 성공적으로 전송되면 시스템에서 데이터를 받아들인 것이지만 원격 끝점에서 데이터를 승인했는지 여부는 보장할 수 없습니다. 이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 및 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> 플래그와 함께 사용하지 마십시오.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>UDP(User Datagram Protocol) 네트워크 서비스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</summary>
      <param name="port">통신할 로컬 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</summary>
      <param name="port">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <param name="family">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</summary>
      <param name="localEP">UDP 연결을 바인딩할 로컬 엔드포인트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="family">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 기본 원격 호스트를 설정합니다.</summary>
      <param name="hostname">연결할 원격 DNS 호스트의 이름입니다.</param>
      <param name="port">연결할 원격 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>기본 원격 호스트가 설정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>연결이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> 인스턴스에 대해 NAT(Network Address Translation) 통과를 설정하거나 해제합니다.</summary>
      <param name="allowed">NAT 통과를 설정 또는 해제할지를 지정하는 부울 값입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>네트워크에서 받은 데이터 중 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <returns>네트워크에서 받은 데이터의 바이트 수입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>데이터그램을 원격 호스트에서 비동기적으로 받습니다.</summary>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 수신을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>데이터그램을 원격 호스트에 비동기적으로 보냅니다. 대상은 이전에 <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />를 호출할 때 지정됩니다.</summary>
      <param name="datagram">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes">보낼 바이트 수입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>데이터그램을 대상에 비동기적으로 보냅니다. 대상은 <see cref="T:System.Net.EndPoint" />에 지정됩니다.</summary>
      <param name="datagram">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes">보낼 바이트 수입니다.</param>
      <param name="endPoint">데이터의 대상을 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>데이터그램을 대상에 비동기적으로 보냅니다. 대상은 호스트 이름과 포트 번호를 사용하여 지정합니다.</summary>
      <param name="datagram">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes">보낼 바이트 수입니다.</param>
      <param name="hostname">대상 호스트입니다.</param>
      <param name="port">대상 포트 번호입니다.</param>
      <param name="requestCallback">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns>비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</summary>
      <returns>내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>UDP 연결을 닫습니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>지정된 IP 주소와 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="addr">데이터를 보낼 원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port">데이터를 보낼 포트 번호입니다.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>지정된 네트워크 엔드포인트를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="endPoint">데이터를 보낼 네트워크 엔드포인트를 지정하는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>지정된 호스트 이름과 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="hostname">데이터를 보낼 원격 호스트의 DNS 이름입니다.</param>
      <param name="port">데이터를 보낼 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>
        <see cref="T:System.Boolean" />에서 IP(인터넷 프로토콜) 데이터그램의 조각화를 허용하는지 여부를 나타내는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" />에서 데이터그램 조각화를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 속성은 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그나 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에만 설정할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>멀티캐스트 그룹을 나갑니다.</summary>
      <param name="multicastAddr">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>멀티캐스트 그룹을 나갑니다.</summary>
      <param name="multicastAddr">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="ifindex">나갈 멀티캐스트 그룹의 로컬 주소입니다.</param>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>
        <see cref="T:System.Boolean" />가 브로드캐스트 패킷을 보내거나 받을 수 있는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" />이 브로드캐스트 패킷을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>보류 중인 비동기 수신을 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 개체입니다.</param>
      <param name="remoteEP">지정된 원격 엔드포인트입니다.</param>
      <returns>성공하면 데이터그램 데이터가 포함된 바이트 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">내부 <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> 개체입니다.</param>
      <returns>메서드가 성공할 경우 <see cref="T:System.Net.Sockets.UdpClient" />에 보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="ifindex">멀티캐스트 그룹을 연결할 로컬 IP 주소에 연결된 인터페이스 인덱스입니다.</param>
      <param name="multicastAddr">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>지정된 TTL(Time to Live)을 사용하여 멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr">가입할 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="timeToLive">라우터 홉 수 단위로 측정된 TTL(Time to Live)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">제공된 TTL이 0에서 255 사이에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="localAddress">로컬 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>나가는 멀티캐스트 패킷을 보내는 애플리케이션에 전달할지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" />이 나가는 멀티캐스트 패킷을 받으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>원격 호스트가 보낸 UDP 데이터그램을 반환합니다.</summary>
      <param name="remoteEP">데이터를 보낸 원격 호스트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <returns>데이터그램 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>원격 호스트가 보낸 UDP 데이터그램을 비동기적으로 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>원격 호스트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>지정된 원격 엔드포인트에서 호스트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <param name="endPoint">데이터그램을 보낼 호스트와 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서 기본 원격 호스트를 이미 설정했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>지정된 원격 호스트의 지정된 포트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <param name="hostname">데이터그램을 보낼 원격 호스트의 이름입니다.</param>
      <param name="port">통신할 원격 포트 번호입니다.</param>
      <returns>보낸 바이트 수입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <param name="endPoint">데이터그램을 보낼 호스트와 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서 기본 원격 호스트를 이미 설정했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytes">데이터그램 내의 바이트 수입니다.</param>
      <param name="hostname">데이터그램을 보낼 원격 호스트의 이름입니다.</param>
      <param name="port">통신할 원격 포트 번호입니다.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" />에서 보낸 IP(인터넷 프로토콜) 패킷의 TTL(Time to Live) 값을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>TTL 값입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>UDP가 <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" /> 메서드에 대한 호출에서 결과 정보를 수신하도록 합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">UDP 패킷에서 수신할 데이터 버퍼입니다.</param>
      <param name="remoteEndPoint">UDP 패킷의 원격 엔드포인트입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>UDP 패킷에 수신한 데이터가 포함된 버퍼를 가져옵니다.</summary>
      <returns>UDP 패킷에 수신한 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="other">이 인스턴스와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" />가 <see cref="T:System.Net.Sockets.UdpReceiveResult" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Net.Sockets.UdpReceiveResult" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>지정된 두 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스가 같은지 여부를 테스트합니다.</summary>
      <param name="left">같음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <param name="right">같음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <returns>
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>지정된 두 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스가 서로 다른지 여부를 테스트합니다.</summary>
      <param name="left">같지 않음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <param name="right">같지 않음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <returns>
        <paramref name="left" />와 <paramref name="right" />가 다르면 <see langword="true" />이고,다르지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>UDP 패키지를 수신한 원격 엔드포인트를 가져옵니다.</summary>
      <returns>UDP 패키지를 수신한 원격 엔드포인트입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>Unix 도메인 소켓 엔드포인트를 경로로 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary>Unix 도메인 소켓을 연결하는 데 사용되는 파일 경로를 사용하여 <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">Unix 도메인 소켓을 연결할 경로입니다.</param>
    </member>
  </members>
</doc>