<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.InteropServices.RuntimeInformation</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.InteropServices.Architecture">
      <summary>프로세서 아키텍처를 나타냅니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Architecture.Arm">
      <summary>32비트 ARM 프로세서 아키텍처입니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Architecture.Arm64">
      <summary>64비트 ARM 프로세서 아키텍처입니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Architecture.X64">
      <summary>Intel 기반 64비트 프로세서 아키텍처입니다.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Architecture.X86">
      <summary>Intel 기반 32비트 프로세서 아키텍처입니다.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OSPlatform">
      <summary>운영 체제 플랫폼을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.Create(System.String)">
      <summary>새 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스를 만듭니다.</summary>
      <param name="osPlatform">이 인스턴스가 나타내는 플랫폼의 이름입니다.</param>
      <returns>
        <paramref name="osPlatform" /> 운영 체제를 나타내는 개체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="osPlatform" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="osPlatform" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스가 지정된 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj">
        <see langword="true" />가 <paramref name="obj" /> 인스턴스이고 이름이 현재 개체와 같은 경우 <see cref="T:System.Runtime.InteropServices.OSPlatform" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <returns>
        <see langword="true" />가 <paramref name="obj" /> 인스턴스이고 이름이 현재 개체와 같은 경우 <see cref="T:System.Runtime.InteropServices.OSPlatform" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)">
      <summary>현재 인스턴스와 지정한 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스가 같은지를 확인합니다.</summary>
      <param name="other">현재 인스턴스와 비교할 개체입니다.</param>
      <returns>현재 인스턴스와 <see langword="true" />가 같으면 <paramref name="other" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.OSPlatform.FreeBSD">
      <summary>FreeBSD 운영 체제를 나타내는 개체를 가져옵니다.</summary>
      <returns>FreeBSD 운영 체제를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>이 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.OSPlatform.Linux">
      <summary>Linux 운영 체제를 나타내는 개체를 가져옵니다.</summary>
      <returns>Linux 운영 체제를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)">
      <summary>두 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 개체가 서로 같은지 확인합니다.</summary>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
      <returns>
        <see langword="true" />과 <paramref name="left" />가 같으면 <paramref name="right" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)">
      <summary>두 개의 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스가 다른지를 확인합니다.</summary>
      <param name="left">비교할 첫 번째 개체입니다.</param>
      <param name="right">비교할 두 번째 개체입니다.</param>
      <returns>
        <see langword="true" />와 <paramref name="left" />가 다르면 <paramref name="right" />이고,다르지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.OSPlatform.OSX">
      <summary>OSX 운영 체제를 나타내는 개체를 가져옵니다.</summary>
      <returns>OSX 운영 체제를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.OSPlatform.ToString">
      <summary>이 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Runtime.InteropServices.OSPlatform" /> 인스턴스를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.OSPlatform.Windows">
      <summary>Windows 운영 체제를 나타내는 개체를 가져옵니다.</summary>
      <returns>Windows 운영 체제를 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeInformation">
      <summary>.NET 런타임 설치에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription">
      <summary>앱이 실행되는 .NET 설치의 이름을 나타내는 문자열을 반환합니다.</summary>
      <returns>앱이 실행되는 .NET 설치의 이름입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform)">
      <summary>현재 애플리케이션이 지정된 플랫폼에서 실행되고 있는지 여부를 나타냅니다.</summary>
      <param name="osPlatform">플랫폼입니다.</param>
      <returns>현재 앱이 지정된 플랫폼에서 실행 중이면 <see langword="true" />이고, 그러지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeInformation.OSArchitecture">
      <summary>현재 앱이 실행되는 플랫폼 아키텍처를 가져옵니다.</summary>
      <returns>현재 앱이 실행되는 플랫폼 아키텍처입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeInformation.OSDescription">
      <summary>앱이 실행되는 운영 체제를 설명하는 문자열을 가져옵니다.</summary>
      <returns>앱이 실행 되는 운영 체제에 대 한 설명입니다.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture">
      <summary>현재 실행 중인 앱의 프로세스 아키텍처를 가져옵니다.</summary>
      <returns>현재 실행 중인 앱의 프로세스 아키텍처입니다.</returns>
    </member>
  </members>
</doc>