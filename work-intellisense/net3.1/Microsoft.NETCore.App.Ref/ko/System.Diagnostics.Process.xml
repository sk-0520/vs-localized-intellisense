<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary vsli:raw="Provides a managed wrapper for a process handle.">프로세스 핸들에 대한 관리형 래퍼를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafeProcessHandle&quot; /&gt; class from the specified handle, indicating whether to release the handle during the finalization phase.">지정한 핸들에서 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 클래스의 새 인스턴스를 초기화하여, 종료 단계에서 핸들을 해제할지 여부를 나타냅니다.</summary>
      <param name="existingHandle" vsli:raw="The handle to be wrapped.">래핑할 핸들입니다.</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably let &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafeProcessHandle&quot; /&gt; release the handle during the finalization phase; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">종료 단계에 <see langword="true" />에서 핸들을 안정적으로 해제할 수 있게 하려면 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Diagnostics.Process.OutputDataReceived&quot; /&gt; and &lt;see cref=&quot;E:System.Diagnostics.Process.ErrorDataReceived&quot; /&gt; events.">
        <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 및 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary vsli:raw="Gets the line of characters that was written to a redirected &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; output stream.">리디렉션된 <see cref="T:System.Diagnostics.Process" /> 출력 스트림에 쓰여진 문자 줄을 가져옵니다.</summary>
      <returns vsli:raw="The line that was written by an associated &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; or &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">연결된 <see cref="T:System.Diagnostics.Process" />가 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 또는 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓴 줄입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Diagnostics.Process.OutputDataReceived&quot; /&gt; event or &lt;see cref=&quot;E:System.Diagnostics.Process.ErrorDataReceived&quot; /&gt; event of a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.">
        <see cref="E:System.Diagnostics.Process.OutputDataReceived" />의 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 이벤트 또는 <see cref="T:System.Diagnostics.Process" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.DataReceivedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Diagnostics.DataReceivedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">속성 또는 이벤트에 대한 설명을 지정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.MonitoringDescriptionAttribute&quot; /&gt; class, using the specified description.">지정된 설명을 사용하여 <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description" vsli:raw="The application-defined description text.">애플리케이션에서 정의한 설명입니다.</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary vsli:raw="Gets description text associated with the item monitored.">모니터링된 항목과 관련된 설명 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="An application-defined description.">애플리케이션에서 정의한 설명입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary vsli:raw="Provides access to local and remote processes and enables you to start and stop local system processes.">로컬 및 원격 프로세스에 대한 액세스를 제공하고 로컬 시스템 프로세스를 시작하고 중지할 수 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Process" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary vsli:raw="Gets the base priority of the associated process.">연결된 프로세스의 기본 우선 순위를 가져옵니다.</summary>
      <returns vsli:raw="The base priority, which is computed from the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityClass&quot; /&gt; of the associated process.">연결된 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityClass" />에서 계산되는 기본 우선 순위입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has exited.&#xA;&#xA; -or-&#xA;&#xA; The process has not started, so there is no process ID.">프로세스가 종료되었습니다.
또는
프로세스가 시작되지 않아서 프로세스 ID가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary vsli:raw="Begins asynchronous read operations on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream of the application.">애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 대해 비동기 읽기 작업을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; An asynchronous read operation is already in progress on the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has been used by a synchronous read operation.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 속성은 <see langword="false" />입니다.
또는
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에서 비동기 읽기 작업이 이미 진행 중입니다.
또는
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 동기적 읽기 작업에 사용되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary vsli:raw="Begins asynchronous read operations on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream of the application.">애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 대해 비동기 읽기 작업을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; An asynchronous read operation is already in progress on the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has been used by a synchronous read operation.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 속성은 <see langword="false" />입니다.
또는
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에서 비동기 읽기 작업이 이미 진행 중입니다.
또는
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 동기적 읽기 작업에 사용되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary vsli:raw="Cancels the asynchronous read operation on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream of an application.">애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 대해 비동기 읽기 작업을 취소합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream is not enabled for asynchronous read operations.">
        <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림을 비동기 읽기 작업용으로 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary vsli:raw="Cancels the asynchronous read operation on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream of an application.">애플리케이션의 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 대해 비동기 읽기 작업을 취소합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream is not enabled for asynchronous read operations.">
        <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림을 비동기 읽기 작업용으로 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary vsli:raw="Frees all the resources that are associated with this component.">해당 구성 요소에 연결된 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary vsli:raw="Closes a process that has a user interface by sending a close message to its main window.">주 창에 닫기 메시지를 보내 사용자 인터페이스가 있는 프로세스를 닫습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the close message was successfully sent; &lt;see langword=&quot;false&quot; /&gt; if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).">닫기 메시지를 보낸 경우에는 <see langword="true" />이고 연결된 프로세스에 주 창이 없거나 모달 대화 상자가 표시된 때 같이 주 창을 사용할 수 없는 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">프로세스가 이미 종료되었습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary vsli:raw="Release all resources used by this process.">이 프로세스에서 사용하는 리소스를 모두 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary vsli:raw="Gets or sets whether the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event should be raised when the process terminates.">프로세스가 종료될 때 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트를 발생시켜야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event should be raised when the associated process is terminated (through either an exit or a call to &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt;); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Note that even if the value of &lt;see cref=&quot;P:System.Diagnostics.Process.EnableRaisingEvents&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event will be raised by the &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property accessor, if it determines that the process has exited.">종료 명령 또는 <see cref="M:System.Diagnostics.Process.Kill" /> 호출을 통해 연결된 프로세스가 종료될 때 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트가 발생해야 한다면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다. 사용자가 <see cref="P:System.Diagnostics.Process.HasExited" /> 검사를 수행 하는 동안 이나 <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" />의 값이 <see langword="false" /> 경우에도 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트가 발생 합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary vsli:raw="Puts a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component in state to interact with operating system processes that run in a special mode by enabling the native property &lt;see langword=&quot;SeDebugPrivilege&quot; /&gt; on the current thread.">현재 스레드에서 네이티브 속성 <see cref="T:System.Diagnostics.Process" />를 활성화하여 <see langword="SeDebugPrivilege" /> 구성 요소를 특수 모드에서 실행되는 운영 체제 프로세스와 상호 작용하는 상태로 만듭니다.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary vsli:raw="Occurs when an application writes to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">애플리케이션이 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓸 때 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary vsli:raw="Gets the value that the associated process specified when it terminated.">연결된 프로세스가 종료될 때 연결된 프로세스에서 지정한 값을 가져옵니다.</summary>
      <returns vsli:raw="The code that the associated process specified when it terminated.">연결된 프로세스가 종료될 때 연결된 프로세스에서 지정한 코드입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has not exited.&#xA;&#xA; -or-&#xA;&#xA; The process &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; is not valid.">프로세스가 끝나지 않았습니다.
또는
프로세스 <see cref="P:System.Diagnostics.Process.Handle" />이 유효하지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ExitCode&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.ExitCode" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary vsli:raw="Occurs when a process exits.">프로세스가 종료될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary vsli:raw="Gets the time that the associated process exited.">연결된 프로세스가 종료된 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that indicates when the associated process was terminated.">연결된 프로세스가 종료된 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ExitTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.ExitTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary vsli:raw="Gets a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component and associates it with the currently active process.">새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 가져온 후 현재 활성화되어 있는 프로세스에 연결합니다.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component associated with the process resource that is running the calling application.">호출하는 애플리케이션에서 실행 중인 프로세스 리소스에 연결된 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component, given the identifier of a process on the local computer.">로컬 컴퓨터의 프로세서에 대한 식별자가 주어지면 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 반환합니다.</summary>
      <param name="processId" vsli:raw="The system-unique identifier of a process resource.">프로세스 리소스의 시스템 고유 식별자입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component that is associated with the local process resource identified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter.">
        <paramref name="processId" /> 매개 변수에 의해 식별되는 로컬 프로세스 리소스에 연결된 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The process specified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter is not running. The identifier might be expired.">
        <paramref name="processId" /> 매개 변수로 지정된 프로세스가 실행되고 있지 않습니다. 식별자가 만료되었을 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이 개체에 의해 시작되지 않았습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component, given a process identifier and the name of a computer on the network.">프로세스 식별자 및 네트워크에 있는 컴퓨터의 이름이 주어지면 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 반환합니다.</summary>
      <param name="processId" vsli:raw="The system-unique identifier of a process resource.">프로세스 리소스의 시스템 고유 식별자입니다.</param>
      <param name="machineName" vsli:raw="The name of a computer on the network.">네트워크에 있는 컴퓨터 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component that is associated with a remote process resource identified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter.">
        <paramref name="processId" /> 매개 변수에 의해 식별되는 원격 프로세스 리소스에 연결된 <see cref="T:System.Diagnostics.Process" /> 구성 요소입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The process specified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter is not running. The identifier might be expired.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. The name might have length zero (0).">
        <paramref name="processId" /> 매개 변수로 지정된 프로세스가 실행되고 있지 않습니다. 식별자가 만료되었을 수 있습니다.
또는
<paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 이름의 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 이 개체에 의해 시작되지 않았습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component for each process resource on the local computer.">로컬 컴퓨터의 각 프로세스 리소스에 대해 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 만듭니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents all the process resources running on the local computer.">로컬 컴퓨터에서 실행 중인 모든 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component for each process resource on the specified computer.">지정한 컴퓨터의 각 프로세스 리소스에 대해 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 만듭니다.</summary>
      <param name="machineName" vsli:raw="The computer from which to read the list of processes.">프로세스 목록을 읽어 올 컴퓨터입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents all the process resources running on the specified computer.">지정된 컴퓨터에서 실행 중인 모든 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. It might have length zero (0).">
        <paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The operating system platform does not support this operation on remote computers.">운영 체제 플랫폼이 원격 컴퓨터에서 이 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A problem occurred accessing an underlying system API.">내부 시스템 API에 액세스하는 동안 문제가 발생했습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary vsli:raw="Creates an array of new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; components and associates them with all the process resources on the local computer that share the specified process name.">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소로 이루어진 새 배열을 만들어 지정한 프로세스 이름을 공유하는 로컬 컴퓨터의 모든 프로세스 리소스에 연결합니다.</summary>
      <param name="processName" vsli:raw="The friendly name of the process.">프로세스의 이름입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents the process resources running the specified application or file.">지정한 애플리케이션 또는 파일을 실행 중인 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary vsli:raw="Creates an array of new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; components and associates them with all the process resources on a remote computer that share the specified process name.">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소로 이루어진 새 배열을 만들어 지정한 프로세스 이름을 공유하는 원격 컴퓨터에 있는 모든 프로세스 리소스에 연결합니다.</summary>
      <param name="processName" vsli:raw="The friendly name of the process.">프로세스의 이름입니다.</param>
      <param name="machineName" vsli:raw="The name of a computer on the network.">네트워크에 있는 컴퓨터 이름입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents the process resources running the specified application or file.">지정한 애플리케이션 또는 파일을 실행 중인 프로세스 리소스를 나타내는 <see cref="T:System.Diagnostics.Process" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. It might have length zero (0).">
        <paramref name="machineName" /> 매개 변수 구문이 잘못되었습니다. 길이가 0일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The operating system platform does not support this operation on remote computers.">운영 체제 플랫폼이 원격 컴퓨터에서 이 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The attempt to connect to &lt;paramref name=&quot;machineName&quot; /&gt; has failed.&#xA;&#xA; -or-&#xA;&#xA;There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">
        <paramref name="machineName" />에 연결하려는 시도가 실패했습니다.
또는
프로세스 정보를 가져오는 데 사용되는  성능 카운터 API에 액세스하는 데 문제가 있습니다. 이 예외는 Windows NT, Windows 2000 및 Windows XP에 해당됩니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A problem occurred accessing an underlying system API.">내부 시스템 API에 액세스하는 동안 문제가 발생했습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary vsli:raw="Gets the native handle of the associated process.">연결된 프로세스의 기본 핸들을 가져옵니다.</summary>
      <returns vsli:raw="The handle that the operating system assigned to the associated process when the process was started. The system uses this handle to keep track of process attributes.">연결된 프로세스가 시작될 때 운영 체제에서 해당 프로세스에 할당한 핸들입니다. 시스템에서는 이 핸들을 사용하여 프로세스 특성을 추적합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has not been started or has exited. The &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; property cannot be read because there is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.">프로세스가 시작되지 않았거나 종료되었습니다. 이 <see cref="P:System.Diagnostics.Process.Handle" /> 인스턴스에 연결된 프로세스가 없으므로 <see cref="T:System.Diagnostics.Process" /> 속성을 읽을 수 없습니다.
또는
<see cref="T:System.Diagnostics.Process" /> 인스턴스가 실행 프로세스에 연결되었지만 모든 액세스 권한을 가진 핸들을 가져오는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.Handle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary vsli:raw="Gets the number of handles opened by the process.">프로세스에서 연 핸들 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of operating system handles the process has opened.">프로세스에서 연 운영 체제 핸들의 수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary vsli:raw="Gets a value indicating whether the associated process has been terminated.">연결된 프로세스가 종료되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system process referenced by the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component has terminated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소가 참조하는 운영 체제 프로세스가 종료되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with the object.">개체와 연결된 프로세스가 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The exit code for the process could not be retrieved.">프로세스의 종료 코드를 검색할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary vsli:raw="Gets the unique identifier for the associated process.">연결된 프로세스의 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The system-generated unique identifier of the process that is referenced by this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.Process" /> 인스턴스에서 참조하는 프로세스의 고유 식별자입니다. 이 식별자는 시스템에서 생성됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process's &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property has not been set.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">프로세스의 <see cref="P:System.Diagnostics.Process.Id" /> 속성이 설정되어 있지 않습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary vsli:raw="Immediately stops the associated process.">연결된 프로세스를 즉시 중지합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The associated process could not be terminated.">연결된 프로세스를 종료할 수 없습니다.
또는
프로세스가 종료됩니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt; for a process that is running on a remote computer. The method is available only for processes running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.Kill" />를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">프로세스가 이미 종료되었습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary vsli:raw="Immediately stops the associated process, and optionally its child/descendent processes.">연결된 프로세스를 즉시 중지하고, 선택적으로 자식/하위 프로세스를 중지합니다.</summary>
      <param name="entireProcessTree" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to kill the associated process and its descendants; &lt;see langword=&quot;false&quot; /&gt; to kill only the associated process.">연결된 프로세스 및 해당 하위 항목을 종료하려면 <see langword="true" />, 연결된 프로세스만 종료하려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The associated process could not be terminated.&#xA;&#xA; -or-&#xA;&#xA; The process is terminating.">연결된 프로세스를 종료할 수 없습니다.
또는
프로세스가 종료됩니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt; for a process that is running on a remote computer. The method is available only for processes running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.Kill" />를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework and .NET Core 3.0 and earlier versions only: The process has already exited.&#xA;&#xA;-or-&#xA;&#xA;There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA;-or-&#xA;&#xA;The calling process is a member of the associated process's descendant tree.">프로세스가 이미 종료되었습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.
또는
호출 프로세스는 연결된 프로세스의 하위 트리의 멤버입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="Not all processes in the associated process's descendant tree could be terminated.">연결된 프로세스의 하위 트리에 있는 일부 프로세스를 종료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary vsli:raw="Takes a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component out of the state that lets it interact with operating system processes that run in a special mode.">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소를 특수 모드에서 실행되는 운영 체제 프로세스와 상호 작용할 수 없는 상태로 만듭니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary vsli:raw="Gets the name of the computer the associated process is running on.">연결된 프로세스가 실행 중인 컴퓨터 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the computer that the associated process is running on.">연결된 프로세스가 실행 중인 컴퓨터 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary vsli:raw="Gets the main module for the associated process.">연결된 프로세스의 주 모듈을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that was used to start the process.">프로세스를 시작하는 데 사용된 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainModule&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainModule" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A 32-bit process is trying to access the modules of a 64-bit process.">32비트 프로세스가 64비트 프로세스의 모듈에 액세스하려고 합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.
또는
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary vsli:raw="Gets the window handle of the main window of the associated process.">연결된 프로세스의 주 창에 대한 창 핸들을 가져옵니다.</summary>
      <returns vsli:raw="The system-generated window handle of the main window of the associated process.">연결된 프로세스의 주 창에 대한 창 핸들입니다. 이 창 핸들은 시스템에서 생성됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowHandle&quot; /&gt; is not defined because the process has exited.">프로세스가 종료되었으므로 <see cref="P:System.Diagnostics.Process.MainWindowHandle" />이 정의되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowHandle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary vsli:raw="Gets the caption of the main window of the process.">프로세스의 주 창에 대한 캡션을 가져옵니다.</summary>
      <returns vsli:raw="The main window title of the process.">프로세스의 주 창 제목입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowTitle&quot; /&gt; property is not defined because the process has exited.">프로세스가 종료되었으므로 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 속성이 정의되지 않았습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowTitle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary vsli:raw="Gets or sets the maximum allowable working set size, in bytes, for the associated process.">연결된 프로세스에 대한 최대 허용 작업 집합 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum working set size that is allowed in memory for the process, in bytes.">프로세스에 대해 메모리에서 허용된 작업 집합의 최대 크기(바이트)입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The maximum working set size is invalid. It must be greater than or equal to the minimum working set size.">최대 작업 집합 크기가 잘못 되었습니다. 최소 작업 집합 크기보다 크거나 같아야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Working set information cannot be retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero because the process has not been started.">작업 집합 정보를 연결된 프로세스 리소스에서 검색할 수 없습니다.
또는
프로세스가 시작되지 않아서 프로세스 식별자 또는 프로세스 핸들이 0입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MaxWorkingSet&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.
또는
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary vsli:raw="Gets or sets the minimum allowable working set size, in bytes, for the associated process.">연결된 프로세스에 대해 허용되는 작업 집합의 최소 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The minimum working set size that is required in memory for the process, in bytes.">프로세스에 대해 메모리에서 필요로 하는 작업 집합의 최소 크기(바이트)입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The minimum working set size is invalid. It must be less than or equal to the maximum working set size.">최소 작업 집합 크기가 잘못되었습니다. 최대 작업 집합 크기와 작거나 같아야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Working set information cannot be retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero because the process has not been started.">작업 집합 정보를 연결된 프로세스 리소스에서 검색할 수 없습니다.
또는
프로세스가 시작되지 않아서 프로세스 식별자 또는 프로세스 핸들이 0입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MinWorkingSet&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스에 대한 <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.
또는
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary vsli:raw="Gets the modules that have been loaded by the associated process.">연결된 프로세스에 의해 로드된 모듈을 가져옵니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that represents the modules that have been loaded by the associated process.">연결된 프로세스에 의해 로드된 모듈을 나타내는 <see cref="T:System.Diagnostics.ProcessModule" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Modules&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.Modules" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Modules&quot; /&gt; property for either the system process or the idle process. These processes do not have modules.">시스템 프로세스 또는 유휴 프로세스에 대한 <see cref="P:System.Diagnostics.Process.Modules" /> 속성에 액세스하려고 합니다. 이러한 프로세스에 모듈이 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary vsli:raw="Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 비페이징 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of memory, in bytes, the system has allocated for the associated process that cannot be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 없는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary vsli:raw="Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 비페이징 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 없는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event.">
        <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트를 발생시킵니다.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary vsli:raw="Occurs each time an application writes a line to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.">애플리케이션이 리디렉션된 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 쓸 때마다 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary vsli:raw="Gets the amount of paged memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 페이징 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated by the associated process that can be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 의해 할당된 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary vsli:raw="Gets the amount of paged memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 페이징 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.">연결된 프로세스의 가상 메모리 페이징 파일에 할당된 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary vsli:raw="Gets the amount of pageable system memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 페이징할 수 있는 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of memory, in bytes, the system has allocated for the associated process that can be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 대해 시스템에서 할당한 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary vsli:raw="Gets the amount of pageable system memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 페이징할 수 있는 시스템 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 대해 할당된 시스템 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary vsli:raw="Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.">연결된 프로세스에서 사용하는 가상 메모리 페이징 파일의 최대 메모리 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of memory, in bytes, allocated by the associated process that could be written to the virtual memory paging file.">가상 메모리 페이징 파일에 쓸 수 있는 연결된 프로세스에 의해 할당된 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary vsli:raw="Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.">연결된 프로세스에서 사용하는 가상 메모리 페이징 파일의 최대 메모리 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.">연결된 프로세스가 시작된 이후 연결된 프로세스의 가상 메모리 페이징 파일에 할당된 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary vsli:raw="Gets the maximum amount of virtual memory, in bytes, used by the associated process.">연결된 프로세스에서 사용되는 가상 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of virtual memory, in bytes, that the associated process has requested.">연결된 프로세스에서 요청한 가상 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary vsli:raw="Gets the maximum amount of virtual memory, in bytes, used by the associated process.">연결된 프로세스에서 사용되는 가상 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.">연결된 프로세스가 시작된 이후 해당 프로세스에 할당된 가상 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary vsli:raw="Gets the peak working set size for the associated process, in bytes.">연결된 프로세스의 최대 작업 집합 크기(바이트)를 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of physical memory that the associated process has required all at once, in bytes.">연결된 프로세스에서 한 번에 요청한 실제 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary vsli:raw="Gets the maximum amount of physical memory, in bytes, used by the associated process.">연결된 프로세스에서 사용되는 실제 메모리의 최대 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.">연결된 프로세스가 시작된 이후 해당 프로세스에 할당된 실제 메모리의 최대 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.">포커스가 주 창에 있을 때 운영 체제가 연결된 프로세스의 우선 순위를 일시적으로 높일지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">프로세스가 대기 상태에서 빠져나올 때 프로세스의 우선 순위를 동적으로 높여야 하는 경우<see langword="true" /> 이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Priority boost information could not be retrieved from the associated process resource.">연결된 프로세스 리소스에서 우선순위 높임 정보를 검색할 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The process identifier or process handle is zero. (The process has not been started.)">프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityBoostEnabled&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary vsli:raw="Gets or sets the overall priority category for the associated process.">연결된 프로세스에 대한 전체 우선 순위 범주를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The priority category for the associated process, from which the &lt;see cref=&quot;P:System.Diagnostics.Process.BasePriority&quot; /&gt; of the process is calculated.">연결된 프로세스에 대한 우선 순위 범주입니다. 이를 통해 해당 프로세스의 <see cref="P:System.Diagnostics.Process.BasePriority" />를 계산할 수 있습니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Process priority information could not be set or retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero. (The process has not been started.)">프로세스 우선 순위 정보를 연결된 프로세스 리소스에서 설정하거나 검색할 수 없습니다.
또는
프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityClass&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="Priority class cannot be set because it does not use a valid value, as defined in the &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt; enumeration.">
        <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 열거형에 정의된 유효한 값이 사용되지 않으므로 우선 순위 클래스를 설정할 수 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary vsli:raw="Gets the amount of private memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 프라이빗 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The number of bytes allocated by the associated process that cannot be shared with other processes.">연결된 프로세스에서 할당하여 다른 프로세스에서는 공유할 수 없는 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary vsli:raw="Gets the amount of private memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 전용 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.">연결된 프로세스에 할당되어 다른 프로세스와는 공유할 수 없는 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary vsli:raw="Gets the privileged processor time for this process.">해당 프로세스의 권한 있는 프로세서 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the process has spent running code inside the operating system core.">프로세스가 운영 체제 코어 내부에서 코드를 실행하는 데 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PrivilegedProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary vsli:raw="Gets the name of the process.">프로세스의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name that the system uses to identify the process to the user.">사용자가 프로세스를 식별할 수 있도록 시스템에서 사용하는 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have an identifier, or no process is associated with the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The associated process has exited.">프로세스에 식별자가 없거나 <see cref="T:System.Diagnostics.Process" />와 연결된 프로세스가 없습니다.
또는
연결된 프로세스가 종료되었습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is not on this computer.">이 컴퓨터에서 진행되는 프로세스가 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary vsli:raw="Gets or sets the processors on which the threads in this process can be scheduled to run.">이 프로세스에 포함된 스레드의 실행을 예약할 수 있는 프로세서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A bitmask representing the processors that the threads in the associated process can run on. The default depends on the number of processors on the computer. The default value is 2 n -1, where n is the number of processors.">연결된 프로세스의 스레드가 실행될 수 있는 프로세서를 나타내는 비트 마스크입니다. 기본값은 컴퓨터의 프로세서 수에 따라 다릅니다. 기본값은 2 n -1입니다. 여기서 n은 프로세서 수입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.Process.ProcessorAffinity&quot; /&gt; information could not be set or retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero. (The process has not been started.)">
        <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 정보를 연결된 프로세스 리소스에서 설정하거나 검색할 수 없습니다.
또는
프로세스 식별자 또는 프로세스 핸들이 0입니다. (프로세스가 시작되지 않았습니다.)</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ProcessorAffinity&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; was not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스를 사용할 수 없습니다.
또는
프로세스가 종료되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary vsli:raw="Discards any information about the associated process that has been cached inside the process component.">프로세스 구성 요소 내에 캐시되어 있는 연결된 프로세스 정보를 모두 삭제합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary vsli:raw="Gets a value indicating whether the user interface of the process is responding.">프로세스의 사용자 인터페이스가 응답하는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user interface of the associated process is responding to the system; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 프로세스의 사용자 인터페이스가 시스템에 응답하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Responding&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.Responding" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary vsli:raw="Gets the native handle to this process.">이 프로세스에 대한 기본 핸들을 가져옵니다.</summary>
      <returns vsli:raw="The native handle to this process.">이 프로세스에 대한 기본 핸들입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary vsli:raw="Gets the Terminal Services session identifier for the associated process.">연결된 프로세스의 터미널 서비스 세션 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The Terminal Services session identifier for the associated process.">연결된 프로세스의 터미널 서비스 세션 식별자입니다.</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="There is no session associated with this process.">이 프로세스에 연결된 세션이 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this session identifier.&#xA;&#xA; -or-&#xA;&#xA; The associated process is not on this machine.">이 세션 식별자와 연결된 프로세스가 없습니다.
또는
연결된 프로세스가 이 컴퓨터에 있지 않습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary vsli:raw="Gets a stream used to read the error output of the application.">애플리케이션의 오류 출력을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; that can be used to read the standard error stream of the application.">애플리케이션의 표준 오류 스트림을 읽는 데 사용할 수 있는 <see cref="T:System.IO.StreamReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has not been defined for redirection; ensure &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has been opened for asynchronous read operations with &lt;see cref=&quot;M:System.Diagnostics.Process.BeginErrorReadLine&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 리디렉션에 대해 정의되지 않았습니다. <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />가 <see langword="true" />로 설정되고 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="false" />로 설정되어 있는지 확인하세요.
또는
<see cref="P:System.Diagnostics.Process.StandardError" /> 스트림이 <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />을 사용한 비동기 읽기 작업을 위해 열려 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary vsli:raw="Gets a stream used to write the input of the application.">애플리케이션의 입력을 쓰는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; that can be used to write the standard input stream of the application.">애플리케이션의 표준 입력 스트림을 쓰는 데 사용할 수 있는 <see cref="T:System.IO.StreamWriter" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt; stream has not been defined because &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />이 <see langword="false" />로 설정되어 있어서 <see cref="P:System.Diagnostics.Process.StandardInput" /> 스트림이 정의되지 않았습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary vsli:raw="Gets a stream used to read the textual output of the application.">애플리케이션의 텍스트 출력을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; that can be used to read the standard output stream of the application.">애플리케이션의 표준 출력 스트림을 읽는 데 사용할 수 있는 <see cref="T:System.IO.StreamReader" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has not been defined for redirection; ensure &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has been opened for asynchronous read operations with &lt;see cref=&quot;M:System.Diagnostics.Process.BeginOutputReadLine&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 리디렉션에 대해 정의되지 않았습니다. <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />가 <see langword="true" />로 설정되고 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="false" />로 설정되어 있는지 확인하세요.
또는
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림이 <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />을 사용한 비동기 읽기 작업을 위해 열려 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary vsli:raw="Starts (or reuses) the process resource that is specified by the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; property of this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component and associates it with the component.">이 <see cref="P:System.Diagnostics.Process.StartInfo" /> 구성 요소의 <see cref="T:System.Diagnostics.Process" /> 속성으로 지정된 프로세스 리소스를 시작하거나 다시 사용하여 구성 요소에 연결합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a process resource is started; &lt;see langword=&quot;false&quot; /&gt; if no new process resource is started (for example, if an existing process is reused).">프로세스 리소스가 시작된 경우에는 <see langword="true" />이고 기존 프로세스를 다시 사용한 경우처럼 새 프로세스 리소스가 시작되지 않은 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified in the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component's &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; member of the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; while &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt;, &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt;, or &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Process" /> 구성 요소의 <see cref="P:System.Diagnostics.Process.StartInfo" />에 파일 이름이 지정되지 않았습니다.
또는
<see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> , <see cref="P:System.Diagnostics.Process.StartInfo" /> 또는 <see langword="true" /> 가 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />인 동안 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />속성의 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 멤버는 <see langword="true" />입니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="There was an error in opening the associated file.">연결된 파일을 여는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Method not supported on operating systems without shell support such as Nano Server (.NET Core only).">메서드는 Nano Server와 같은 셸 지원 없이 운영 체제에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary vsli:raw="Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">시작할 프로세스의 파일 이름 같은 프로세스 시작 정보가 포함된 매개 변수에 의해 지정된 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="startInfo" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; that contains the information that is used to start the process, including the file name and any command-line arguments.">파일 이름 및 모든 명령줄 인수를 포함하여 프로세스를 시작하는 데 사용되는 정보가 들어 있는 <see cref="T:System.Diagnostics.ProcessStartInfo" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified in the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property of the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt;, &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt;, or &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; property is also &lt;see langword=&quot;true&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property of the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property is not &lt;see langword=&quot;null&quot; /&gt; or empty or the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Password&quot; /&gt; property is not &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 파일 이름이 지정되지 않았습니다.
또는
<paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="true" /> 및 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />이고, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 또는 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 속성 또한 <see langword="true" />입니다.
또는
<paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="true" />이고 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성이 <see langword="null" /> 또는 비어 있거나 <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> 속성이 <see langword="null" />이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA; -or-&#xA;&#xA; The file specified in the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">연결된 파일을 열 때 오류가 발생합니다.
또는
<paramref name="startInfo" /> 매개 변수의 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 지정된 파일을 찾을 수 없습니다.
또는
인수의 길이와 프로세스에 대한 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Method not supported on operating systems without shell support such as Nano Server (.NET Core only).">메서드는 Nano Server와 같은 셸 지원 없이 운영 체제에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of a document or application file and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">문서 또는 애플리케이션 파일 이름을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName" vsli:raw="The name of a document or application file to run in the process.">프로세스에서 실행될 문서 또는 애플리케이션 파일의 이름입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.">연결된 파일을 열 때 오류가 발생합니다.
또는
<paramref name="fileName" />에서 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The PATH environment variable has a string containing quotes.">PATH 환경 변수에 따옴표를 포함하는 문자열이 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">애플리케이션 이름 및 명령줄 인수 집합을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass when starting the process.">프로세스를 시작할 때 전달할 명령줄 인수입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;arguments&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> 또는 <paramref name="arguments" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">연결된 파일을 열 때 오류가 발생합니다.
또는
<paramref name="fileName" />에서 지정된 파일을 찾을 수 없습니다.
또는
인수의 길이와 프로세스에 대한 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The PATH environment variable has a string containing quotes.">PATH 환경 변수에 따옴표를 포함하는 문자열이 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">애플리케이션 이름, 사용자 이름, 암호 및 도메인을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="userName" vsli:raw="The user name to use when starting the process.">프로세스를 시작할 때 사용할 사용자 이름입니다.</param>
      <param name="password" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; that contains the password to use when starting the process.">프로세스를 시작할 때 사용할 암호가 포함된 <see cref="T:System.Security.SecureString" />입니다.</param>
      <param name="domain" vsli:raw="The domain to use when starting the process.">프로세스를 시작할 때 사용할 도메인입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified.">파일 이름을 지정하지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="There was an error in opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.">연결된 파일을 여는 동안 오류가 발생했습니다.
또는
<paramref name="fileName" />에서 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="This member is not supported on Linux or macOS (.NET Core only).">이 메서드는 Linux 또는 macOS에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">애플리케이션 이름, 명령줄 인수 집합, 사용자 이름, 암호 및 도메인을 지정하여 프로세스 리소스를 시작하고 해당 리소스를 새 <see cref="T:System.Diagnostics.Process" /> 구성 요소에 연결합니다.</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">프로세스에서 실행될 애플리케이션 파일 이름입니다.</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass when starting the process.">프로세스를 시작할 때 전달할 명령줄 인수입니다.</param>
      <param name="userName" vsli:raw="The user name to use when starting the process.">프로세스를 시작할 때 사용할 사용자 이름입니다.</param>
      <param name="password" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; that contains the password to use when starting the process.">프로세스를 시작할 때 사용할 암호가 포함된 <see cref="T:System.Security.SecureString" />입니다.</param>
      <param name="domain" vsli:raw="The domain to use when starting the process.">프로세스를 시작할 때 사용할 도메인입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">프로세스 리소스와 연결되거나 시작된 프로세스가 없는 경우 <see langword="null" />에 연결되는 새 <see cref="T:System.Diagnostics.Process" />입니다. 같은 프로세스에서 이미 실행 중인 인스턴스와 함께 시작되는 새 프로세스는 서로 독립적인 관계입니다. 뿐만 아니라 시작 시 <see cref="P:System.Diagnostics.Process.HasExited" /> 속성이 이미 <see langword="true" />로 설정되어 있는 null이 아닌 프로세스가 반환될 수 있습니다. 이 경우 시작된 프로세스가 자체의 기존 인스턴스를 활성화한 후 종료될 수 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified.">파일 이름을 지정하지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">연결된 파일을 열 때 오류가 발생합니다.
또는
<paramref name="fileName" />에서 지정된 파일을 찾을 수 없습니다.
또는
인수의 길이와 연결된 파일의 전체 경로 길이를 합하면 2080을 초과합니다. 이 예외와 관련된 오류 메시지는 다음 중 하나일 수 있습니다. "시스템 호출에 전달된 데이터 영역이 너무 작습니다." 또는 “액세스가 거부되었습니다.”</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">프로세스 개체가 이미 삭제되었습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="This member is not supported on Linux or macOS (.NET Core only).">이 메서드는 Linux 또는 macOS에서 지원되지 않습니다(.NET Core에만 해당).</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary vsli:raw="Gets or sets the properties to pass to the &lt;see cref=&quot;M:System.Diagnostics.Process.Start&quot; /&gt; method of the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.">
        <see cref="T:System.Diagnostics.Process" />의 <see cref="M:System.Diagnostics.Process.Start" /> 메서드에 전달할 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; that represents the data with which to start the process. These arguments include the name of the executable file or document used to start the process.">프로세스를 시작하는 데 사용된 데이터를 나타내는 <see cref="T:System.Diagnostics.ProcessStartInfo" />입니다. 이러한 인수에는 프로세스를 시작하는 데 사용된 실행 파일이나 문서 이름이 포함됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value that specifies the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Process.StartInfo" />를 지정하는 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: The &lt;see cref=&quot;M:System.Diagnostics.Process.Start&quot; /&gt; method was not used to start the process.">
        <see cref="M:System.Diagnostics.Process.Start" /> 메서드는 프로세스를 시작하는 데 사용되지 않습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary vsli:raw="Gets the time that the associated process was started.">연결된 프로세스가 시작된 시간을 가져옵니다.</summary>
      <returns vsli:raw="An object  that indicates when the process started. An exception is thrown if the process is not running.">해당 프로세스가 시작된 시간을 나타내는 개체입니다. 프로세스가 실행되고 있지 않으면 예외가 throw됩니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.StartTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.StartTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has exited.&#xA;&#xA; -or-&#xA;&#xA; The process has not been started.">프로세스가 종료되었습니다.
또는
프로세스가 시작되지 않았습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred in the call to the Windows function.">Windows 함수 호출 시 오류가 발생 했습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary vsli:raw="Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.">프로세스 종료 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISynchronizeInvoke&quot; /&gt; used to marshal event handler calls that are issued as a result of an &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event on the process.">프로세스에서 <see cref="E:System.Diagnostics.Process.Exited" /> 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary vsli:raw="Gets the set of threads that are running in the associated process.">연결된 프로세스에서 실행 중인 스레드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; representing the operating system threads currently running in the associated process.">연결된 프로세스에서 현재 실행 중인 운영 체제 스레드를 나타내는 <see cref="T:System.Diagnostics.ProcessThread" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The process does not have an &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt;, or no process is associated with the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.&#xA;&#xA; -or-&#xA;&#xA; The associated process has exited.">프로세스에 <see cref="P:System.Diagnostics.Process.Id" />가 없거나 <see cref="T:System.Diagnostics.Process" /> 인스턴스와 연결된 프로세스가 없습니다.
또는
연결된 프로세스가 종료되었습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary vsli:raw="Formats the process's name as a string, combined with the parent component type, if applicable.">가능한 경우 부모 구성 요소 형식을 결합하여 프로세스 이름을 문자열로 서식화합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.ProcessName&quot; /&gt;, combined with the base component's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; return value.">기본 구성 요소의 <see cref="P:System.Diagnostics.Process.ProcessName" /> 반환 값과 결합된 <see cref="M:System.Object.ToString" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary vsli:raw="Gets the total processor time for this process.">이 프로세스의 총 프로세서 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the associated process has spent utilizing the CPU. This value is the sum of the &lt;see cref=&quot;P:System.Diagnostics.Process.UserProcessorTime&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.Process.PrivilegedProcessorTime&quot; /&gt;.">연결된 프로세스에서 CPU를 사용해 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다. 이 값은 <see cref="P:System.Diagnostics.Process.UserProcessorTime" />과 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />의 합입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.TotalProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary vsli:raw="Gets the user processor time for this process.">이 프로세스의 사용자 프로세서 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).">연결된 프로세스가 운영 체제 코어 내부가 아닌 프로세스의 애플리케이션 부분 내부에서 코드를 실행하는 데 소비한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.UserProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">원격 컴퓨터에서 실행 중인 프로세스의 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 속성에 액세스하려고 합니다. 이 속성은 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary vsli:raw="Gets the size of the process's virtual memory, in bytes.">프로세스의 가상 메모리 크기(바이트)를 가져옵니다.</summary>
      <returns vsli:raw="The amount of virtual memory, in bytes, that the associated process has requested.">연결된 프로세스에서 요청한 가상 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary vsli:raw="Gets the amount of the virtual memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 가상 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of virtual memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 가상 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait indefinitely for the associated process to exit.">연결된 프로세스가 종료될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 무기한 대기하게 합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The wait setting could not be accessed.">대기 설정에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; has been set, and a &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; from which the &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property can be determined does not exist.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA; -or-&#xA;&#xA; You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.WaitForExit&quot; /&gt; for a process that is running on a remote computer. This method is available only for processes that are running on the local computer.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스가 설정되지 않았으며, <see cref="P:System.Diagnostics.Process.Id" /> 속성을 파악할 수 있는 <see cref="P:System.Diagnostics.Process.Handle" />이 없습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.
또는
원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.WaitForExit" /> 를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait the specified number of milliseconds for the associated process to exit.">연결된 프로세스가 종료되도록 지정한 밀리초 동안 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 대기하게 합니다.</summary>
      <param name="milliseconds" vsli:raw="The amount of time, in milliseconds, to wait for the associated process to exit. A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.">연결된 프로세스가 종료될 때까지 대기하는 시간(밀리초)입니다. 최대값은 사용 가능한 가장 큰 32비트 정수 값이며, 이는 운영 체제에서 사실상 무기한 대기한다는 것을 나타냅니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has exited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 프로세스가 종료된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The wait setting could not be accessed.">대기 설정에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; has been set, and a &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; from which the &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property can be determined does not exist.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA; -or-&#xA;&#xA; You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.WaitForExit(System.Int32)&quot; /&gt; for a process that is running on a remote computer. This method is available only for processes that are running on the local computer.">
        <see cref="P:System.Diagnostics.Process.Id" /> 프로세스가 설정되지 않았으며, <see cref="P:System.Diagnostics.Process.Id" /> 속성을 파악할 수 있는 <see cref="P:System.Diagnostics.Process.Handle" />이 없습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.
또는
원격 컴퓨터에서 실행 중인 프로세스의 <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> 를 호출하려고 합니다. 이 메서드는 로컬 컴퓨터에서 실행되는 프로세스에만 사용할 수 있습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;milliseconds&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="milliseconds" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait indefinitely for the associated process to enter an idle state. This overload applies only to processes with a user interface and, therefore, a message loop.">연결된 프로세스가 유휴 상태가 될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 무기한 대기하도록 합니다. 이 오버로드는 사용자 인터페이스가 있는, 즉 메시지 루프가 있는 프로세스에만 적용됩니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has reached an idle state.">연결된 프로세스가 유휴 상태에 도달한 경우 <see langword="true" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have a graphical interface.&#xA;&#xA; -or-&#xA;&#xA; An unknown error occurred. The process failed to enter an idle state.&#xA;&#xA; -or-&#xA;&#xA; The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">프로세스에 그래픽 인터페이스가 없습니다.
또는
알 수 없는 오류가 발생했습니다. 프로세스가 유휴 상태로 전환하지 못했습니다.
또는
프로세스가 이미 종료되었습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait the specified number of milliseconds for the associated process to enter an idle state. This overload applies only to processes with a user interface and, therefore, a message loop.">연결된 프로세스가 유휴 상태가 될 때까지 <see cref="T:System.Diagnostics.Process" /> 구성 요소를 지정한 시간(밀리초) 동안 대기하도록 합니다. 이 오버로드는 사용자 인터페이스가 있는, 즉 메시지 루프가 있는 프로세스에만 적용됩니다.</summary>
      <param name="milliseconds" vsli:raw="A value of 1 to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; that specifies the amount of time, in milliseconds, to wait for the associated process to become idle. A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.">
        <see cref="F:System.Int32.MaxValue" />에 대한 값 1은 연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다. 값이 0이면 즉시 반환이 이루어지고, 값이 -1이면 무기한 대기하게 됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has reached an idle state; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 프로세스가 유휴 상태에 도달한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have a graphical interface.&#xA;&#xA; -or-&#xA;&#xA; An unknown error occurred. The process failed to enter an idle state.&#xA;&#xA; -or-&#xA;&#xA; The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">프로세스에 그래픽 인터페이스가 없습니다.
또는
알 수 없는 오류가 발생했습니다. 프로세스가 유휴 상태로 전환하지 못했습니다.
또는
프로세스가 이미 종료되었습니다.
또는
이 <see cref="T:System.Diagnostics.Process" /> 개체와 연결된 프로세스가 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary vsli:raw="Gets the associated process's physical memory usage, in bytes.">연결된 프로세스의 실제 메모리 사용량(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The total amount of physical memory the associated process is using, in bytes.">연결된 프로세스에서 사용 중인 실제 메모리의 총 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary vsli:raw="Gets the amount of physical memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 실제 메모리의 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The amount of physical memory, in bytes, allocated for the associated process.">연결된 프로세스에 할당된 실제 메모리의 양(바이트)입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary vsli:raw="Represents a .dll or .exe file that is loaded into a particular process.">특정 프로세스에 로드된 .dll 또는 .exe 파일을 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary vsli:raw="Gets the memory address where the module was loaded.">모듈이 로드된 메모리 주소를 가져옵니다.</summary>
      <returns vsli:raw="The load address of the module.">모듈의 로드 주소입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary vsli:raw="Gets the memory address for the function that runs when the system loads and runs the module.">시스템에서 모듈을 로드하고 실행할 때 실행되는 함수의 메모리 주소를 가져옵니다.</summary>
      <returns vsli:raw="The entry point of the module.">모듈의 진입점입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary vsli:raw="Gets the full path to the module.">모듈의 전체 경로를 가져옵니다.</summary>
      <returns vsli:raw="The fully qualified path that defines the location of the module.">모듈의 위치를 정의하는 정규화된 경로입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary vsli:raw="Gets version information about the module.">모듈의 버전 정보를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.FileVersionInfo&quot; /&gt; that contains the module's version information.">모듈의 버전 정보가 포함된 <see cref="T:System.Diagnostics.FileVersionInfo" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary vsli:raw="Gets the amount of memory that is required to load the module.">모듈을 로드하는 데 필요한 메모리의 양을 가져옵니다.</summary>
      <returns vsli:raw="The size, in bytes, of the memory that the module occupies.">모듈이 차지하는 메모리의 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary vsli:raw="Gets the name of the process module.">프로세스 모듈의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the module.">모듈의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary vsli:raw="Converts the name of the module to a string.">모듈 이름을 문자열로 변환합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Diagnostics.ProcessModule.ModuleName&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> 속성 값</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.ProcessModule" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; class, with no associated &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances.">연결된 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 인스턴스가 없는 상태에서 <see cref="T:System.Diagnostics.ProcessModule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; class, using the specified array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 인스턴스의 지정된 배열을 사용하여 <see cref="T:System.Diagnostics.ProcessModule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="processModules" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 인스턴스의 배열입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary vsli:raw="Determines whether the specified process module exists in the collection.">지정된 프로세스 모듈이 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="module" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instance that indicates the module to find in this collection.">이 컬렉션에서 찾을 모듈을 나타내는 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the module exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">모듈이 컬렉션에 있으면 <see langword="true" />이고, 있지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary vsli:raw="Copies an array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances to the collection, at the specified index.">컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 배열을 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances to add to the collection.">컬렉션에 추가할 <see cref="T:System.Diagnostics.ProcessModule" /> 인스턴스의 배열입니다.</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">새 인스턴스를 추가할 위치입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary vsli:raw="Provides the location of a specified module within the collection.">컬렉션 내의 지정된 모듈 위치를 제공합니다.</summary>
      <param name="module" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; whose index is retrieved.">해당 인덱스가 검색되는 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</param>
      <returns vsli:raw="The zero-based index that defines the location of the module within the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt;.">
        <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 내의 모듈 위치를 정의하는 0부터 시작하는 인덱스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an index for iterating over the set of process modules.">프로세스 모듈의 집합을 반복하기 위한 인덱스를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index value of the module in the collection.">컬렉션에 있는 모듈의 0부터 시작하는 인덱스 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that indexes the modules in the collection.">컬렉션에 있는 모듈을 인덱싱하는 <see cref="T:System.Diagnostics.ProcessModule" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary vsli:raw="Indicates the priority that the system associates with a process. This value, together with the priority value of each thread of the process, determines each thread's base priority level.">시스템이 프로세스와 연결되는 우선 순위를 나타냅니다. 이 값은 각 프로세스 스레드의 우선 순위 값과 더불어 각 스레드의 기본 우선 순위 수준을 결정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary vsli:raw="Specifies that the process has priority higher than &lt;see langword=&quot;Normal&quot; /&gt; but lower than &lt;see langword=&quot;High&quot; /&gt;.">프로세스 우선 순위를 <see langword="Normal" />보다는 높지만, <see langword="High" />보다는 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary vsli:raw="Specifies that the process has priority above &lt;see langword=&quot;Idle&quot; /&gt; but below &lt;see langword=&quot;Normal&quot; /&gt;.">프로세스 우선 순위를 <see langword="Idle" />보다는 높게, <see langword="Normal" />보다는 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary vsli:raw="Specifies that the process performs time-critical tasks that must be executed immediately, such as the &lt;see langword=&quot;Task List&quot; /&gt; dialog, which must respond quickly when called by the user, regardless of the load on the operating system. The threads of the process preempt the threads of normal or idle priority class processes. &lt;br /&gt;Use extreme care when specifying &lt;see langword=&quot;High&quot; /&gt; for the process's priority class, because a high priority class application can use nearly all available processor time.">운영 체제의 부하와 관계없이 사용자가 호출하면 즉시 응답해야 하는 <see langword="Task List" /> 대화 상자 같이 즉각 실행되어야 하는 시간 위험 작업을 프로세스가 수행하도록 지정합니다. 프로세스의 스레드는 정상 또는 유휴 우선 순위 클래스 프로세스의 스레드를 우선합니다. 지정 하는 경우 주의 사용 하 여 <see langword="High" /> 프로세스의 우선 순위 클래스에 대 한 애플리케이션을 높은 우선 순위 클래스는 거의 모든 사용 가능한 프로세서 시간을 사용할 수 있으므로 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary vsli:raw="Specifies that the threads of this process run only when the system is idle, such as a screen saver. The threads of the process are preempted by the threads of any process running in a higher priority class. This priority class is inherited by child processes.">화면 보호기와 같이 시스템이 유휴 상태일 때에만 이 프로세스의 스레드가 실행되도록 지정합니다. 프로세스의 스레드는 더 높은 우선 순위 클래스에서 실행되는 프로세스의 스레드가 우선합니다. 자식 프로세스는 이 우선 순위 클래스를 상속합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary vsli:raw="Specifies that the process has no special scheduling needs.">프로세스를 특별히 예약할 필요가 없도록 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary vsli:raw="Specifies that the process has the highest possible priority. &lt;br /&gt;The threads of a process with &lt;see langword=&quot;RealTime&quot; /&gt; priority preempt the threads of all other processes, including operating system processes performing important tasks. Thus, a &lt;see langword=&quot;RealTime&quot; /&gt; priority process that executes for more than a very brief interval can cause disk caches not to flush or cause the mouse to be unresponsive.">프로세스의 우선 순위가 최고가 되도록 지정합니다. <see langword="RealTime" /> 우선 순위가 포함된 프로세스의 스레드는 중요 작업을 수행하는 운영 체제 프로세스를 포함하여 다른 모든 프로세스의 스레드를 선점합니다. 따라서 매우 짧은 간격 이상으로 실행되는 <see langword="RealTime" /> 우선 순위 프로세스로 인해 디스크 캐시가 플러시되지 않거나 마우스가 응답하지 않을 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary vsli:raw="Specifies a set of values that are used when you start a process.">프로세스를 시작할 때 사용되는 값 집합을 지정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class without specifying a file name with which to start the process.">프로세스를 시작할 때 사용할 파일 이름을 지정하지 않고 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class and specifies a file name such as an application or document with which to start the process.">
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고 프로세스를 시작할 때 사용할 애플리케이션이나 문서와 같은 파일 이름을 지정합니다.</summary>
      <param name="fileName" vsli:raw="An application or document with which to start a process.">프로세스를 시작할 때 사용할 애플리케이션이나 문서입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.">
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고, 프로세스를 시작할 애플리케이션 파일 이름과 애플리케이션에 전달할 명령줄 인수 집합을 지정합니다.</summary>
      <param name="fileName" vsli:raw="An application with which to start a process.">프로세스를 시작할 때 사용할 애플리케이션입니다.</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass to the application when the process starts.">프로세스가 시작될 때 애플리케이션에 전달할 명령줄 인수입니다.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary vsli:raw="Gets a collection of command-line arguments to use when starting the application. Strings added to the list don't need to be previously escaped.">애플리케이션을 시작할 때 사용할 명령줄 인수 컬렉션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A collection of command-line arguments.">컬렉션 명령줄 인수입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary vsli:raw="Gets or sets the set of command-line arguments to use when starting the application.">애플리케이션을 시작할 때 사용할 명령줄 인수 집합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A single string containing the arguments to pass to the target application specified in the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property. The default is an empty string (&quot;&quot;).">
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 지정된 대상 애플리케이션으로 전달할 인수를 포함한 단일 문자열입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary vsli:raw="Gets or sets a value indicating whether to start the process in a new window.">프로세스를 새 창에서 시작할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the process should be started without creating a new window to contain it; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">프로세스를 포함할 새 창을 만들지 않고 프로세스를 시작해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" /> 입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary vsli:raw="Gets or sets a value that identifies the domain to use when starting the process. If this value is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property must be specified in UPN format.">프로세스를 시작할 때 사용할 도메인을 식별하는 값을 가져오거나 설정합니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</summary>
      <returns vsli:raw="The Active Directory domain to use when starting the process. If this value is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property must be specified in UPN format.">프로세스를 시작할 때 사용할 Active Directory 도메인입니다. 이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary vsli:raw="Gets the environment variables that apply to this process and its child processes.">이 프로세스와 자식 프로세스에 적용되는 환경 변수를 가져옵니다.</summary>
      <returns vsli:raw="A generic dictionary containing the environment variables that apply to this process and its child processes. The default is &lt;see langword=&quot;null&quot; /&gt;.">이 프로세스와 해당 자식 프로세스에 적용되는 환경 변수를 포함하는 제네릭 사전입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary vsli:raw="Gets search paths for files, directories for temporary files, application-specific options, and other similar information.">파일 검색 경로, 임시파일의 디렉터리, 애플리케이션별 옵션 및 기타 유사한 정보를 가져옵니다.</summary>
      <returns vsli:raw="A string dictionary that provides environment variables that apply to this process and child processes. The default is &lt;see langword=&quot;null&quot; /&gt;.">이 프로세스와 자식 프로세스에 적용되는 환경 변수를 제공하는 문자열 사전입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary vsli:raw="Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.">프로세스를 시작할 수 없는 경우 사용자에게 오류 대화 상자를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">프로세스를 시작할 수 없는 경우 화면에 오류 대화 상자를 표시하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary vsli:raw="Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.">프로세스를 시작할 수 없음을 알리는 오류 대화 상자가 표시될 때 사용할 창 핸들을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A pointer to the handle of the error dialog box that results from a process start failure.">프로세스를 시작할 수 없을 때 표시되는 오류 대화 상자의 핸들에 대한 포인터입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary vsli:raw="Gets or sets the application or document to start.">시작할 애플리케이션 또는 문서를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it. The default is an empty string (&quot;&quot;).">애플리케이션과 연결되며 그 애플리케이션에서 사용할 수 있는 기본 열기 동작이 있는 파일 형식의 문서 이름 또는 시작할 애플리케이션의 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary vsli:raw="Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.">Windows 사용자 프로필을 레지스트리에서 로드할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Windows user profile should be loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Windows 사용자 프로필을 로드해야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary vsli:raw="Gets or sets a secure string that contains the user password to use when starting the process.">프로세스를 시작할 때 사용할 사용자 암호가 포함된 보안 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The user password to use when starting the process.">프로세스를 시작할 때 사용할 사용자 암호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary vsli:raw="Gets or sets the user password in clear text to use when starting the process.">프로세스를 시작할 때 사용할 일반 텍스트 형식의 사용자 암호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The user password in clear text.">일반 텍스트 형식의 사용자 암호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary vsli:raw="Gets or sets a value that indicates whether the error output of an application is written to the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">애플리케이션의 오류 출력을 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if error output should be written to &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">오류 출력을 <see langword="true" />에 써야 하는 경우 <see cref="P:System.Diagnostics.Process.StandardError" />이고, 그러지 않으면<see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary vsli:raw="Gets or sets a value indicating whether the input for an application is read from the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt; stream.">애플리케이션의 입력을 <see cref="P:System.Diagnostics.Process.StandardInput" /> 스트림에서 읽을지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input should be read from &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">입력을 <see langword="true" />에서 읽어야 하는 경우 <see cref="P:System.Diagnostics.Process.StandardInput" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary vsli:raw="Gets or sets a value that indicates whether the textual output of an application is written to the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.">애플리케이션의 텍스트 출력을 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if output should be written to &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">출력을 <see langword="true" />에 써야 하는 경우 <see cref="P:System.Diagnostics.Process.StandardOutput" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary vsli:raw="Gets or sets the preferred encoding for error output.">오류 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the preferred encoding for error output. The default is &lt;see langword=&quot;null&quot; /&gt;.">오류 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding">
      <summary vsli:raw="Gets or sets the preferred encoding for standard input.">표준 입력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the preferred encoding for standard input. The default is &lt;see langword=&quot;null&quot; /&gt;.">표준 입력의 기본 설정 인코딩을 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary vsli:raw="Gets or sets the preferred encoding for standard output.">표준 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the preferred encoding for standard output. The default is &lt;see langword=&quot;null&quot; /&gt;.">표준 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary vsli:raw="Gets or sets the user name to use when starting the process. If you use the UPN format, &lt;paramref name=&quot;user&quot; /&gt;@&lt;paramref name=&quot;DNS_domain_name&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Domain&quot; /&gt; property must be &lt;see langword=&quot;null&quot; /&gt;.">프로세스를 시작할 때 사용할 사용자 이름을 가져오거나 설정합니다. <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</summary>
      <returns vsli:raw="The user name to use when starting the process. If you use the UPN format, &lt;paramref name=&quot;user&quot; /&gt;@&lt;paramref name=&quot;DNS_domain_name&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Domain&quot; /&gt; property must be &lt;see langword=&quot;null&quot; /&gt;.">프로세스를 시작할 때 사용할 사용자 이름입니다. <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary vsli:raw="Gets or sets a value indicating whether to use the operating system shell to start the process.">프로세스를 시작할 때 운영 체제 셸을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the shell should be used when starting the process; &lt;see langword=&quot;false&quot; /&gt; if the process should be created directly from the executable file. The default is &lt;see langword=&quot;true&quot; /&gt; on .NET Framework apps and &lt;see langword=&quot;false&quot; /&gt; on .NET Core apps.">프로세스를 시작할 때 셸을 사용하려면 <see langword="true" />이고, 실행 파일에서 직접 프로세스를 만들어야 하면 <see langword="false" />입니다. 기본값은 <see langword="true" /> .NET Framework 앱 및 <see langword="false" /> .NET Core 앱에서.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="An attempt to set the value to &lt;see langword=&quot;true&quot; /&gt; on Universal Windows Platform (UWP) apps occurs.">UWP(유니버설 Windows 플랫폼) 앱에서 값을 <see langword="true" />로 설정하려고 시도합니다.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary vsli:raw="Gets or sets the verb to use when opening the application or document specified by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 애플리케이션이나 문서를 열 때 사용할 동사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The action to take with the file that the process opens. The default is an empty string (&quot;&quot;), which signifies no action.">프로세스가 여는 파일을 사용하여 수행할 작업입니다. 기본값은 작업이 없음을 나타내는 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary vsli:raw="Gets the set of verbs associated with the type of file specified by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 파일 형식과 연결된 동사 집합을 가져옵니다.</summary>
      <returns vsli:raw="The actions that the system can apply to the file indicated by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 나타내는 파일에 시스템이 적용할 수 있는 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary vsli:raw="Gets or sets the window state to use when the process is started.">프로세스가 시작될 때 사용할 창 상태를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible. The default is &lt;see langword=&quot;Normal&quot; /&gt;.">최대화, 최소화, 표준(최대화되거나 최소화되지 않은) 또는 표시되지 않는 창 중 어느 상태에서 프로세스가 시작되는지 나타내는 열거형 값 중 하나입니다. 기본값은 <see langword="Normal" />입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The window style is not one of the &lt;see cref=&quot;T:System.Diagnostics.ProcessWindowStyle&quot; /&gt; enumeration members.">창 스타일이 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 열거형 멤버 중 하나가 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary vsli:raw="When the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;, gets or sets the working directory for the process to be started. When &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, gets or sets the directory that contains the process to be started.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리를 가져오거나 설정합니다. <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />인 경우 시작할 프로세스가 포함된 디렉터리를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="When &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the fully qualified name of the directory that contains the process to be started. When the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;, the working directory for the process to be started. The default is an empty string (&quot;&quot;).">
        <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />이면 시작할 프로세스가 들어 있는 디렉터리의 정규화된 이름입니다. <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary vsli:raw="Represents an operating system process thread.">운영 체제 프로세스 스레드를 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary vsli:raw="Gets the base priority of the thread.">스레드의 기본 우선 순위를 가져옵니다.</summary>
      <returns vsli:raw="The base priority of the thread, which the operating system computes by combining the process priority class with the priority level of the associated thread.">프로세스 우선 순위 클래스와 관련 스레드의 우선 순위 수준을 결합하여 계산되는 스레드의 기본 우선 순위입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary vsli:raw="Gets the current priority of the thread.">스레드의 현재 우선 순위를 가져옵니다.</summary>
      <returns vsli:raw="The current priority of the thread, which may deviate from the base priority based on how the operating system is scheduling the thread. The priority may be temporarily boosted for an active thread.">운영 체제에서 스레드를 예약하는 방법에 따라 기본 우선 순위에서 벗어날 수도 있는 스레드의 현재 우선 순위입니다. 활성 스레드의 경우 우선 순위가 일시적으로 높아질 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary vsli:raw="Gets the unique identifier of the thread.">스레드의 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The unique identifier associated with a specific thread.">특정 스레드와 관련된 고유 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary vsli:raw="Sets the preferred processor for this thread to run on.">이 스레드가 실행될 기본 설정 프로세서를 설정합니다.</summary>
      <returns vsli:raw="The preferred processor for the thread, used when the system schedules threads, to determine which processor to run the thread on.">스레드를 실행할 프로세서를 결정하기 위해 시스템에서 스레드를 예약할 때 사용하는 스레드의 기본 설정 프로세서입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The system could not set the thread to start on the specified processor.">지정한 프로세스에서 스레드가 시작되도록 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether the operating system should temporarily boost the priority of the associated thread whenever the main window of the thread's process receives the focus.">스레드 프로세스의 주 창이 포커스를 받을 때마다 운영 체제에서 관련 스레드의 우선 순위를 일시적으로 높여야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to boost the thread's priority when the user interacts with the process's interface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">프로세스의 인터페이스와 상호 작용할 때 스레드의 우선 순위를 높이려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The priority boost information could not be retrieved.  &#xA;  &#xA; -or-  &#xA;  &#xA; The priority boost information could not be set.">우선 순위 높임 정보를 검색할 수 없는 경우
또는
우선 순위 높임 정보를 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary vsli:raw="Gets or sets the priority level of the thread.">스레드의 우선 순위 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.ThreadPriorityLevel&quot; /&gt; values, specifying a range that bounds the thread's priority.">스레드의 우선 순위를 한정하는 범위를 지정하는 <see cref="T:System.Diagnostics.ThreadPriorityLevel" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread priority level information could not be retrieved.  &#xA;  &#xA; -or-  &#xA;  &#xA; The thread priority level could not be set.">스레드 우선 순위 수준 정보를 검색할 수 없는 경우
또는
스레드 우선 순위 수준을 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary vsli:raw="Gets the amount of time that the thread has spent running code inside the operating system core.">스레드가 운영 체제 코어 내부에서 코드를 실행하는데 사용한 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; indicating the amount of time that the thread has spent running code inside the operating system core.">스레드가 운영 체제 코어 내부에서 코드를 실행하는데 사용한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary vsli:raw="Sets the processors on which the associated thread can run.">관련 스레드가 실행될 수 있는 프로세서를 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that points to a set of bits, each of which represents a processor that the thread can run on.">비트 집합을 가리키는 <see cref="T:System.IntPtr" />입니다. 각각의 비트는 스레드가 실행될 수 있는 프로세서를 나타냅니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The processor affinity could not be set.">프로세서 선호도를 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary vsli:raw="Resets the ideal processor for this thread to indicate that there is no single ideal processor. In other words, so that any processor is ideal.">이 스레드의 최적 프로세서를 다시 설정하여 단일 최적 프로세서가 없음을 나타냅니다. 다시 말해서 모든 프로세서가 최적 프로세서가 되도록 다시 설정합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The ideal processor could not be reset.">최적 프로세서를 다시 설정할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary vsli:raw="Gets the memory address of the function that the operating system called that started this thread.">이 스레드를 시작한 운영 체제가 호출한 함수의 메모리 주소를 가져옵니다.</summary>
      <returns vsli:raw="The thread's starting address, which points to the application-defined function that the thread executes.">스레드가 실행하는 애플리케이션 정의 함수를 가리키는 스레드의 시작 주소입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary vsli:raw="Gets the time that the operating system started the thread.">운영 체제가 스레드를 시작한 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; representing the time that was on the system when the operating system started the thread.">운영 체제가 스레드를 시작했을 때의 시스템 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary vsli:raw="Gets the current state of this thread.">이 스레드의 현재 상태를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ThreadState&quot; /&gt; that indicates the thread's execution, for example, running, waiting, or terminated.">실행, 대기, 종료 등 스레드의 실행을 나타내는 <see cref="T:System.Diagnostics.ThreadState" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary vsli:raw="Gets the total amount of time that this thread has spent using the processor.">이 스레드가 프로세서를 사용하는데 소비한 총 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the thread has had control of the processor.">스레드가 프로세서의 제어를 받고 있던 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary vsli:raw="Gets the amount of time that the associated thread has spent running code inside the application.">관련 스레드가 애플리케이션 내부에서 코드를 실행하는데 사용한 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; indicating the amount of time that the thread has spent running code inside the application, as opposed to inside the operating system core.">운영 체제 코어 내부와 반대로 스레드가 애플리케이션 내부에서 코드를 실행하는데 사용한 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">스레드 시간을 검색할 수 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary vsli:raw="Gets the reason that the thread is waiting.">스레드가 대기 상태에 있는 이유를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ThreadWaitReason&quot; /&gt; representing the reason that the thread is in the wait state.">
        <see cref="T:System.Diagnostics.ThreadWaitReason" />은 스레드가 대기 상태에 있는 이유를 나타냅니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is not in the wait state.">스레드가 대기 상태에 있지 않은 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">프로세스가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.ProcessThread" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; class, with no associated &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances.">연결된 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스가 없는 상태에서 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; class, using the specified array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 지정된 배열을 사용하여 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="processThreads" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Appends a process thread to the collection.">컬렉션에 프로세스 스레드를 추가합니다.</summary>
      <param name="thread" vsli:raw="The thread to add to the collection.">컬렉션에 추가할 스레드입니다.</param>
      <returns vsli:raw="The zero-based index of the thread in the collection.">컬렉션 스레드의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Determines whether the specified process thread exists in the collection.">지정한 프로세스 스레드가 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="thread" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instance that indicates the thread to find in this collection.">이 컬렉션에서 찾을 스레드를 나타내는 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 스레드가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary vsli:raw="Copies an array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances to the collection, at the specified index.">컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열을 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances to add to the collection.">컬렉션에 추가할 <see cref="T:System.Diagnostics.ProcessThread" /> 인스턴스의 배열입니다.</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">새 인스턴스를 추가할 위치입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Provides the location of a specified thread within the collection.">컬렉션 내에서 지정된 스레드의 위치를 제공합니다.</summary>
      <param name="thread" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; whose index is retrieved.">해당 인덱스가 검색되는 <see cref="T:System.Diagnostics.ProcessThread" />입니다.</param>
      <returns vsli:raw="The zero-based index that defines the location of the thread within the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt;.">
        <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 내에서 스레드의 위치를 정의하는 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Inserts a process thread at the specified location in the collection.">컬렉션의 지정된 위치에 프로세스 스레드를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index indicating the location at which to insert the thread.">스레드가 삽입될 위치를 나타내는 인덱스(0부터 시작)입니다.</param>
      <param name="thread" vsli:raw="The thread to insert into the collection.">컬렉션에 삽입할 스레드입니다.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an index for iterating over the set of process threads.">프로세스 스레드 집합 전체를 반복하기 위한 인덱스를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index value of the thread in the collection.">컬렉션 내의 스레드 값에 대한 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; that indexes the threads in the collection.">컬렉션의 스레드를 인덱싱하는 <see cref="T:System.Diagnostics.ProcessThread" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Deletes a process thread from the collection.">컬렉션에서 프로세스 스레드를 삭제합니다.</summary>
      <param name="thread" vsli:raw="The thread to remove from the collection.">컬렉션에서 제거할 스레드입니다.</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary vsli:raw="Specified how a new window should appear when the system starts a process.">시스템에서 프로세스가 시작될 때 새 창이 나타나는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary vsli:raw="The hidden window style. A window can be either visible or hidden. The system displays a hidden window by not drawing it. If a window is hidden, it is effectively disabled. A hidden window can process messages from the system or from other windows, but it cannot process input from the user or display output. Frequently, an application may keep a new window hidden while it customizes the window's appearance, and then make the window style &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt;. To use &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Hidden&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property must be &lt;see langword=&quot;true&quot; /&gt;.">숨겨진 창 스타일입니다. 창은 표시하거나 숨길 수 있습니다. 시스템은 창을 그리지 않고 숨겨진 창을 표시합니다. 창이 숨겨지면 효과적으로 사용할 수 없습니다. 숨겨진 창은 시스템 또는 다른 창에서 발생한 메시지를 처리할 수 있지만, 사용자가 입력한 내용을 처리하거나 출력 내용을 표시할 수 없습니다. 애플리케이션에서는 창 모양을 사용자 지정하는 동안 새 창을 숨겨 놓고 그 과정이 끝난 후에는 다시 창 스타일을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />로 만들 수 있습니다. <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />을 사용하려면 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성은 <see langword="true" />여야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary vsli:raw="The maximized window style. By default, the system enlarges a maximized window so that it fills the screen or, in the case of a child window, the parent window's client area. If the window has a title bar, the system automatically moves it to the top of the screen or to the top of the parent window's client area. Also, the system disables the window's sizing border and the window-positioning capability of the title bar so that the user cannot move the window by dragging the title bar.">최대화된 창 스타일입니다. 기본적으로 시스템은 화면을 채우거나 자식 창인 경우에는 부모 창의 클라이언트 영역을 채우도록 최대화된 창을 확대합니다. 제목 표시줄이 있는 창은 자동으로 화면 또는 부모 창의 클라이언트 영역에 나타납니다. 또한 사용자가 제목 표시줄을 끌어 창을 옮길 수 없도록 제목 표시줄의 창 크기 조정 테두리와 창 위치 지정 기능이 비활성화됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary vsli:raw="The minimized window style. By default, the system reduces a minimized window to the size of its taskbar button and moves the minimized window to the taskbar.">최소화된 창 스타일입니다. 기본적으로 시스템은 최소화된 창을 작업 표시줄 단추 크기로 줄인 다음 작업 표시줄로 이동합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary vsli:raw="The normal, visible window style. The system displays a window with &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt; style on the screen, in a default location. If a window is visible, the user can supply input to the window and view the window's output. Frequently, an application may initialize a new window to the &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Hidden&quot; /&gt; style while it customizes the window's appearance, and then make the window style &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt;.">일반적으로 볼 수 있는 창 스타일입니다. 시스템은 화면의 기본 위치에 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> 스타일의 창을 표시합니다. 창이 표시되면 사용자는 창에 입력을 하고 창의 출력을 볼 수 있습니다. 애플리케이션에서는 창 모양을 사용자 지정하는 동안 새 창을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> 스타일로 초기화하고 그 과정이 끝난 후에는 다시 창 스타일을 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />로 만들 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary vsli:raw="Specifies the priority level of a thread.">스레드의 우선 순위 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary vsli:raw="Specifies one step above the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위 보다 한 단계 높게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary vsli:raw="Specifies one step below the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위 보다 한 단계 낮게 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary vsli:raw="Specifies highest priority. This is two steps above the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">최고 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위보다 두 단계 높습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary vsli:raw="Specifies idle priority. This is the lowest possible priority value of all threads, independent of the value of the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">유휴 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 값에 관계없이 모든 스레드의 우선 순위 값중 가장 낮습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary vsli:raw="Specifies lowest priority. This is two steps below the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">최저 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위보다 두 단계 낮습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary vsli:raw="Specifies normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 보통 우선 순위를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary vsli:raw="Specifies time-critical priority. This is the highest priority of all threads, independent of the value of the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">시간 위험 우선 순위를 지정합니다. 이는 관련된 <see cref="T:System.Diagnostics.ProcessPriorityClass" />의 값에 관계없이 모든 스레드의 최고 우선 순위입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary vsli:raw="Specifies the current execution state of the thread.">스레드의 현재 실행 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary vsli:raw="A state that indicates the thread has been initialized, but has not yet started.">스레드가 초기화되었으나 아직 시작되지 않았음을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary vsli:raw="A state that indicates the thread is waiting to use a processor because no processor is free. The thread is prepared to run on the next available processor.">사용 가능한 프로세서가 없으므로 스레드가 프로세서를 사용하기 위해 대기 중임을 나타내는 상태입니다. 스레드는 사용 가능한 다음 프로세서에서 실행될 준비가 되어 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary vsli:raw="A state that indicates the thread is currently using a processor.">스레드가 현재 프로세서를 사용 중임을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary vsli:raw="A state that indicates the thread is about to use a processor. Only one thread can be in this state at a time.">스레드가 곧 프로세서를 사용할 것임을 나타내는 상태입니다. 한 번에 하나의 스레드만 이 상태가 될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary vsli:raw="A state that indicates the thread has finished executing and has exited.">스레드가 실행을 마치고 종료되었음을 나타내는 상태입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary vsli:raw="A state that indicates the thread is waiting for a resource, other than the processor, before it can execute. For example, it might be waiting for its execution stack to be paged in from disk.">스레드가 실행 전에 프로세서가 아닌 리소스를 대기하고 있음을 나타내는 상태입니다. 예를 들어, 디스크에서 해당 실행 스택을 페이지로 나누기 위해 대기하고 있을 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary vsli:raw="The state of the thread is unknown.">스레드의 상태를 알 수 없습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary vsli:raw="A state that indicates the thread is not ready to use the processor because it is waiting for a peripheral operation to complete or a resource to become free. When the thread is ready, it will be rescheduled.">스레드가 주변 작업이 완료되거나 리소스가 사용 가능해질 때까지 기다리고 있으므로 프로세서를 사용할 준비가 되어 있지 않음을 나타내는 상태입니다. 스레드가 준비 상태가 되면 다시 일정을 잡습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary vsli:raw="Specifies the reason a thread is waiting.">스레드 대기 원인을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary vsli:raw="The thread is waiting for event pair high.">스레드가 상위 이벤트 쌍을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary vsli:raw="The thread is waiting for event pair low.">스레드가 하위 이벤트 쌍을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary vsli:raw="Thread execution is delayed.">스레드 실행이 지연됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary vsli:raw="The thread is waiting for the scheduler.">스레드가 스케줄러를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary vsli:raw="The thread is waiting for a free virtual memory page.">스레드가 사용 가능한 가상 메모리 페이지를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary vsli:raw="The thread is waiting for a local procedure call to arrive.">스레드가 로컬 프로시저 호출이 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary vsli:raw="The thread is waiting for reply to a local procedure call to arrive.">스레드가 로컬 프로시저 호출의 응답이 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary vsli:raw="The thread is waiting for a virtual memory page to arrive in memory.">스레드가 메모리에 가상 메모리 페이지가 도착하기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary vsli:raw="The thread is waiting for a virtual memory page to be written to disk.">스레드가 디스크에 가상 메모리 페이지가 쓰여지기를 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary vsli:raw="Thread execution is suspended.">스레드 실행이 일시 중단됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary vsli:raw="The thread is waiting for system allocation.">스레드가 시스템 할당을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary vsli:raw="The thread is waiting for an unknown reason.">스레드가 알 수 없는 이유로 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary vsli:raw="The thread is waiting for a user request.">스레드가 사용자 요청을 기다리고 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary vsli:raw="The thread is waiting for the system to allocate virtual memory.">스레드가 시스템에서 가상 메모리를 할당하기를 기다리고 있습니다.</summary>
    </member>
  </members>
</doc>