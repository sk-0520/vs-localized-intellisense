<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Csp</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AesCryptoServiceProvider">
      <summary>AES(Advanced Encryption Standard) 알고리즘의 CAPI(Cryptographic Application Programming Interfaces) 구현을 사용하여 대칭 암호화 및 암호 해독을 수행합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException">현재 플랫폼에 지원되는 키 크기가 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.BlockSize">
      <summary>암호화 작업의 블록 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <returns>블록 크기(비트 단위)입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">블록 크기가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <summary>현재 키 및 IV(초기화 벡터)를 사용하여 대칭 AES decryptor 개체를 만듭니다.</summary>
      <returns>대칭 AES 암호 해독기 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">현재 키가 잘못되었거나 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키와 IV(초기화 벡터)를 사용하여 대칭 AES decryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 AES 암호 해독기 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 또는 <paramref name="iv" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <summary>현재 키 및 IV(초기화 벡터)를 사용하여 대칭 AES encryptor 개체를 만듭니다.</summary>
      <returns>대칭 AES 암호기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키와 IV(초기화 벡터)를 사용하여 대칭 encryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 AES 암호기 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 또는 <paramref name="iv" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize">
      <summary>CFB(Cipher Feedback) 및 OFB(Output Feedback) 암호화 모드에 대한 암호화 작업의 피드백 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <returns>피드백 크기(비트 단위)입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">피드백 크기가 블록 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV">
      <summary>알고리즘에 사용할 무작위 IV(초기화 벡터)를 생성합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">IV(초기화 벡터)를 생성할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey">
      <summary>알고리즘에 사용할 무작위 키를 생성합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 생성할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.IV">
      <summary>대칭 알고리즘에 대한 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 가져오거나 설정합니다.</summary>
      <returns>초기화 벡터입니다.</returns>
      <exception cref="T:System.ArgumentNullException">초기화 벡터를 <see langword="null" />로 설정하려고 한 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">초기화 벡터를 잘못된 크기로 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Key">
      <summary>암호화 및 암호 해독에 사용되는 대칭 키를 가져오거나 설정합니다.</summary>
      <returns>암호화 및 암호 해독에 사용되는 대칭 키입니다.</returns>
      <exception cref="T:System.ArgumentNullException">키의 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키 크기가 잘못된 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize">
      <summary>비밀 키의 크기를 비트 단위로 가져오거나 설정합니다.</summary>
      <returns>키의 크기(비트 단위)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes">
      <summary>대칭 알고리즘에서 지원하는 블록 크기(비트 단위)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 블록 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes">
      <summary>대칭 알고리즘에서 지원하는 키 크기(비트 단위)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Mode">
      <summary>대칭 알고리즘의 작업 모드를 가져오거나 설정합니다.</summary>
      <returns>대칭 알고리즘의 작업 모드입니다. 기본값은 <see cref="F:System.Security.Cryptography.CipherMode.CBC" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 모드가 <see cref="T:System.Security.Cryptography.CipherMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Padding">
      <summary>대칭 알고리즘에 사용된 패딩 모드를 가져오거나 설정합니다.</summary>
      <returns>대칭 알고리즘에 사용된 패딩 모드입니다. 기본값은 <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">패딩 모드가 <see cref="T:System.Security.Cryptography.PaddingMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Security.Cryptography.CspKeyContainerInfo">
      <summary>암호화 키 쌍에 대한 추가 정보를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters">키에 대한 정보를 제공하는 <see cref="T:System.Security.Cryptography.CspParameters" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible">
      <summary>키 컨테이너에 있는 키에 액세스할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">해당 키 형식이 지원되지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable">
      <summary>키 컨테이너에서 키를 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키를 내보낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">해당 키 형식이 지원되지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 서비스 공급자를 찾을 수 없는 경우
또는
키 컨테이너를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice">
      <summary>키가 하드웨어 키인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키가 하드웨어 키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 서비스 공급자를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName">
      <summary>키 컨테이너 이름을 가져옵니다.</summary>
      <returns>키 컨테이너 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber">
      <summary>비대칭 키가 서명 키로 만들어졌는지 또는 교환 키로 만들어졌는지를 설명하는 값을 가져옵니다.</summary>
      <returns>비대칭 키가 서명 키로 만들어졌는지 또는 교환 키로 만들어졌는지를 설명하는 <see cref="T:System.Security.Cryptography.KeyNumber" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore">
      <summary>키가 컴퓨터 키 집합에 속한 키인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키가 컴퓨터 키 집합에 속한 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Protected">
      <summary>키 쌍이 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키 쌍이 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.NotSupportedException">해당 키 형식이 지원되지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 서비스 공급자를 찾을 수 없는 경우
또는
키 컨테이너를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName">
      <summary>키의 공급자 이름을 가져옵니다.</summary>
      <returns>공급자 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType">
      <summary>키의 공급자 형식을 가져옵니다.</summary>
      <returns>공급자 형식입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated">
      <summary>키 컨테이너가 관리되는 암호화 클래스에서 무작위로 생성되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키 컨테이너가 무작위로 생성되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Removable">
      <summary>키 컨테이너에서 키를 제거할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>키를 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자))를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName">
      <summary>고유 키 컨테이너 이름을 가져옵니다.</summary>
      <returns>고유 키 컨테이너 이름입니다.</returns>
      <exception cref="T:System.NotSupportedException">해당 키 형식이 지원되지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 서비스 공급자를 찾을 수 없는 경우
또는
키 컨테이너를 찾을 수 없는 경우</exception>
    </member>
    <member name="T:System.Security.Cryptography.CspParameters">
      <summary>암호화 계산을 수행하는 CSP(암호화 서비스 공급자)에 전달된 매개 변수가 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)">
      <summary>지정된 공급자 형식 코드를 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)">
      <summary>지정된 공급자 형식 코드와 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
      <param name="strProviderNameIn">공급자 이름입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)">
      <summary>지정된 공급자 형식 코드와 이름 및 지정한 컨테이너 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
      <param name="strProviderNameIn">공급자 이름입니다.</param>
      <param name="strContainerNameIn">컨테이너 이름입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.Flags">
      <summary>CSP(암호화 서비스 공급자)의 동작을 수정하는 <see cref="T:System.Security.Cryptography.CspParameters" />의 플래그를 나타냅니다.</summary>
      <returns>열거형 값 또는 열거형 값의 비트 조합입니다.</returns>
      <exception cref="T:System.ArgumentException">값이 유효한  열거형 값이 아닌 경우</exception>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyContainerName">
      <summary>
        <see cref="T:System.Security.Cryptography.CspParameters" />에 대한 키 컨테이너 이름을 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyNumber">
      <summary>비대칭 키를 서명 키로 만들 것인지 교환 키로 만들 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.KeyPassword">
      <summary>스마트 카드 키와 관련된 암호를 가져오거나 설정합니다.</summary>
      <returns>스마트 카드 키와 관련된 암호입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.ParentWindowHandle">
      <summary>스마트 카드 암호 대화 상자의 비관리 부모 창에 대한 핸들을 가져오거나 설정합니다.</summary>
      <returns>스마트 카드 암호 대화 상자의 부모 창에 대한 핸들입니다.</returns>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderName">
      <summary>
        <see cref="T:System.Security.Cryptography.CspParameters" />에 대한 공급자 이름을 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderType">
      <summary>
        <see cref="T:System.Security.Cryptography.CspParameters" />에 대한 공급자 형식 코드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CspProviderFlags">
      <summary>CSP(암호화 서비스 공급자)의 동작을 수정하는 플래그를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.CreateEphemeralKey">
      <summary>연결된 RSA(Rivest-Shamir-Adleman) 개체가 닫힐 때 해제되는 임시 키를 만듭니다. 키가 RSA 개체와 관련이 없도록 하려면 이 플래그를 사용하지 마십시오.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoFlags">
      <summary>어떤 설정도 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoPrompt">
      <summary>이 컨텍스트에 대해 CSP의 UI(사용자 인터페이스)가 표시되지 않도록 합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseArchivableKey">
      <summary>보관이나 복구를 위해 키를 내보낼 수 있도록 허용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer">
      <summary>기본 키 컨테이너의 키 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseExistingKey">
      <summary>현재 키의 키 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore">
      <summary>컴퓨터 키 저장소의 키 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseNonExportableKey">
      <summary>내보낼 수 없는 키 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseUserProtectedKey">
      <summary>특정 작업에서 키를 사용하려고 시도하면 대화 상자나 다른 방법을 통해 사용자에게 알립니다.  이 플래그는 <see cref="F:System.Security.Cryptography.CspProviderFlags.NoPrompt" /> 플래그와 호환되지 않습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DESCryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘의 CSP(암호화 서비스 공급자) 버전에 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 암호화 서비스 공급자를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor">
      <summary>현재 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 속성 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 decryptor 개체를 만듭니다.</summary>
      <returns>대칭 decryptor 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="T:System.Security.Cryptography.DES" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 데이터 암호화 표준(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) decryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.DES" /> decryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우
또는
<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor">
      <summary>현재 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 속성 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 encryptor 개체를 만듭니다.</summary>
      <returns>대칭 encryptor 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="T:System.Security.Cryptography.DES" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 데이터 암호화 표준(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) encryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.DES" /> encryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우
또는
<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV">
      <summary>알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey">
      <summary>알고리즘에 사용할 임의의 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 생성합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.DSA" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>지정된 키 크기를 사용하여 <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwKeySize">비대칭 알고리즘에 대한 키 크기입니다(단위: 비트).</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>CSP(암호화 서비스 공급자)의 지정된 키 크기 및 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwKeySize">암호화 알고리즘에 대한 키 크기입니다(단위: 비트).</param>
      <param name="parameters">CSP에 대한 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP를 가져올 수 없는 경우
또는
키를 만들 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dwKeySize" />이 범위에서 벗어난 경우.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>CSP(암호화 서비스 공급자)의 지정된 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters">CSP에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
      <summary>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명을 만듭니다.</summary>
      <param name="rgbHash">서명할 데이터입니다.</param>
      <returns>지정된 데이터의 디지털 서명입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체를 가져옵니다.</summary>
      <returns>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 개체와 관련된 키 정보가 들어 있는 BLOB을 내보냅니다.</summary>
      <param name="includePrivateParameters">프라이빗 키를 포함하려면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 개체와 관련된 키 정보가 들어 있는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.DSAParameters" />를 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Security.Cryptography.DSA" />에 대한 매개 변수입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보낼 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>DSA 키 정보를 나타내는 BLOB을 가져옵니다.</summary>
      <param name="keyBlob">DSA 키 BLOB을 나타내는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.DSAParameters" />를 가져옵니다.</summary>
      <param name="parameters">
        <see cref="T:System.Security.Cryptography.DSA" />에 대한 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
또는
<paramref name="parameters" /> 매개 변수에 빠진 필드가 있는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>키 교환 알고리즘의 이름을 가져옵니다.</summary>
      <returns>키 교환 알고리즘의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
      <summary>비대칭 알고리즘에서 사용되는 키 크기를 가져옵니다(단위: 비트).</summary>
      <returns>비대칭 알고리즘에서 사용되는 키 크기입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes">
      <summary>비대칭 알고리즘에서 지원하는 키 크기를 가져옵니다.</summary>
      <returns>비대칭 알고리즘에서는 이 배열에 있는 항목과 일치하는 키 크기만 지원합니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
      <summary>키가 CSP(암호화 서비스 공급자)에서 지속되어야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>키가 CSP에서 지속되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
      <summary>
        <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 개체에 공개 키만 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> 개체에 공개 키만 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm">
      <summary>서명 알고리즘의 이름을 가져옵니다.</summary>
      <returns>서명 알고리즘의 이름입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
      <summary>지정된 바이트 배열의 해시 값을 계산하여 결과 해시 값에 서명합니다.</summary>
      <param name="buffer">해시를 컴퓨팅할 입력 데이터입니다.</param>
      <returns>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 시작점에서 지정된 끝점까지 바이트 배열에 서명합니다.</summary>
      <param name="buffer">서명할 입력 데이터입니다.</param>
      <param name="offset">데이터 사용을 시작할 배열의 오프셋입니다.</param>
      <param name="count">데이터로 사용할 배열의 바이트 수입니다.</param>
      <returns>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
      <summary>지정된 입력 스트림의 해시 값을 계산하여 결과 해시 값에 서명합니다.</summary>
      <param name="inputStream">해시를 컴퓨팅할 입력 데이터입니다.</param>
      <returns>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>프라이빗 키로 암호화하여 지정된 해시 값의 서명을 계산합니다.</summary>
      <param name="rgbHash">서명할 데이터의 해시 값입니다.</param>
      <param name="str">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘의 이름입니다.</param>
      <returns>지정된 해시 값에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
또는
프라이빗 키가 없습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
      <summary>키가 사용자 프로필 저장소 대신 컴퓨터의 키 저장소에 보관되어야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>키가 컴퓨터 키 저장소에 보관되어야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
      <summary>지정된 서명 데이터를 지정된 데이터에 대해 계산된 서명과 비교하여 확인합니다.</summary>
      <param name="rgbData">서명된 데이터입니다.</param>
      <param name="rgbSignature">확인할 서명 데이터입니다.</param>
      <returns>서명이 올바른 것으로 확인되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>지정된 서명 데이터를 지정된 해시 값에 대해 계산된 서명과 비교하여 확인합니다.</summary>
      <param name="rgbHash">서명할 데이터의 해시 값입니다.</param>
      <param name="str">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘의 이름입니다.</param>
      <param name="rgbSignature">확인할 서명 데이터입니다.</param>
      <returns>서명이 올바른 것으로 확인되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> 매개 변수가 <see langword="null" />인 경우
또는
<paramref name="rgbSignature" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
또는
서명을 확인할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
      <summary>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명을 확인합니다.</summary>
      <param name="rgbHash">
        <paramref name="rgbSignature" />로 서명된 데이터입니다.</param>
      <param name="rgbSignature">
        <paramref name="rgbData" />에 대해 확인할 서명입니다.</param>
      <returns>
        <paramref name="rgbSignature" />가 지정된 해시 알고리즘 및 <paramref name="rgbHash" />의 키를 사용하여 계산된 서명과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ICspAsymmetricAlgorithm">
      <summary>
        <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스에서 키 컨테이너 정보를 열거하며 Microsoft CAPI(암호화 API) 호환 키 Blob을 가져오고 내보낼 수 있도록 하는 메서드를 정의합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
      <summary>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체를 가져옵니다.</summary>
      <returns>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체와 관련된 키 정보가 들어 있는 BLOB을 내보냅니다.</summary>
      <param name="includePrivateParameters">프라이빗 키를 포함하려면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체와 관련된 키 정보가 들어 있는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
      <summary>비대칭 키 정보를 나타내는 BLOB을 가져옵니다.</summary>
      <param name="rawData">비대칭 키 blob을 나타내는 바이트 배열입니다.</param>
    </member>
    <member name="T:System.Security.Cryptography.KeyNumber">
      <summary>비대칭 서명 키를 만들지 비대칭 교환 키를 만들지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Exchange">
      <summary>세션 키를 안전하게 저장하고 다른 사용자와 교환할 수 있도록 암호화하는 데 사용되는 교환 키 쌍입니다. 이 값은 관리되지 않는 Microsoft CAPI(Cryptographic API)에 사용되는 AT_KEYEXCHANGE 값에 해당합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Signature">
      <summary>디지털 서명된 메시지나 파일 인증에 사용되는 서명 키 쌍입니다. 이 값은 관리되지 않는 Microsoft CAPI(Cryptographic API)에 사용되는 AT_SIGNATURE 값에 해당합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.MD5CryptoServiceProvider">
      <summary>CSP(암호화 서비스 공급자)가 제공하는 구현을 사용하는 입력 데이터에 대해 <see cref="T:System.Security.Cryptography.MD5" /> 해시 값을 계산합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.InvalidOperationException">FIPS 규격 알고리즘 정책을 사용하지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.Initialize">
      <summary>
        <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PasswordDeriveBytes">
      <summary>PBKDF1 알고리즘의 확장을 사용하여 암호에서 키를 파생시킵니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
      <summary>키를 파생시키는 데 사용할 암호 및 키 솔트를 지정하는 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="password">키를 파생시킬 암호입니다.</param>
      <param name="salt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트 및 CSP(암호화 서비스 공급자)를 지정하는 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="password">키를 파생시킬 암호입니다.</param>
      <param name="salt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="cspParams">작업의 CSP(암호화 서비스 공급자) 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트, 해시 이름 및 반복을 지정하는 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="password">키를 파생시킬 암호입니다.</param>
      <param name="salt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="hashName">키를 파생시키는 데 사용할 해시 알고리즘입니다.</param>
      <param name="iterations">키를 파생시키는 데 사용할 키 반복 횟수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트, 해시 이름, 반복 횟수 및 CSP(암호화 서비스 공급자)를 지정하는 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="password">키를 파생시킬 암호입니다.</param>
      <param name="salt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="hashName">키를 파생시키는 데 사용할 해시 알고리즘입니다.</param>
      <param name="iterations">키를 파생시키는 데 사용할 키 반복 횟수입니다.</param>
      <param name="cspParams">작업의 CSP(암호화 서비스 공급자) 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
      <summary>키를 파생시키는 데 사용할 암호 및 키 솔트를 사용하여 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strPassword">키를 파생시킬 암호입니다.</param>
      <param name="rgbSalt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트 및 CSP(암호화 서비스 공급자) 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strPassword">키를 파생시킬 암호입니다.</param>
      <param name="rgbSalt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="cspParams">작업에 대한 CSP 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트, 해시 이름 및 반복 횟수를 사용하여 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strPassword">키를 파생시킬 암호입니다.</param>
      <param name="rgbSalt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="strHashName">작업에 대한 해시 알고리즘의 이름입니다.</param>
      <param name="iterations">작업의 반복 횟수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>키를 파생시키는 데 사용할 암호, 키 솔트, 해시 이름, 반복 횟수 및 CSP(암호화 서비스 공급자) 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="strPassword">키를 파생시킬 암호입니다.</param>
      <param name="rgbSalt">키를 파생시키는 데 사용할 키 솔트입니다.</param>
      <param name="strHashName">작업에 대한 해시 알고리즘의 이름입니다.</param>
      <param name="iterations">작업의 반복 횟수입니다.</param>
      <param name="cspParams">작업에 대한 CSP 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
      <summary>
        <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 개체에서 암호화 키를 파생시킵니다.</summary>
      <param name="algname">키를 파생시킬 알고리즘 이름입니다.</param>
      <param name="alghashname">키를 파생시키는 데 사용할 해시 알고리즘 이름입니다.</param>
      <param name="keySize">파생할 키의 크기(비트 단위)입니다.</param>
      <param name="rgbIV">키를 파생시키는 데 사용할 IV(초기화 벡터)입니다.</param>
      <returns>파생된 키입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" /> 매개 변수가 잘못되었습니다.
또는
CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
또는
<paramref name="algname" /> 매개 변수가 유효한 알고리즘 이름이 아닌 경우
또는
<paramref name="alghashname" /> 매개 변수가 유효한 해시 알고리즘 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
      <summary>의사(pseudo) 무작위 키 바이트를 반환합니다.</summary>
      <param name="cb">생성할 의사(pseudo) 난수 키 바이트의 수입니다.</param>
      <returns>의사(pseudo) 난수 키 바이트로 채워진 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
      <summary>작업에 대한 해시 알고리즘의 이름을 가져오거나 설정합니다.</summary>
      <returns>작업에 대한 해시 알고리즘의 이름입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">해시 값의 이름이 고정되어 있는데 이 값을 변경하려고 한 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
      <summary>작업의 반복 횟수를 가져오거나 설정합니다.</summary>
      <returns>작업의 반복 횟수입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">반복 횟수가 고정되어 있는데 이 값을 변경하려고 한 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">값이 범위를 벗어나서 속성을 설정할 수 없는 경우 이 속성에는 0 또는 양의 정수가 필요합니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Reset">
      <summary>작업의 상태를 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
      <summary>작업의 키 솔트 값을 가져오거나 설정합니다.</summary>
      <returns>작업의 키 솔트 값입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키 솔트 값이 고정되어 있는데 이 값을 변경하려고 한 경우</exception>
    </member>
    <member name="T:System.Security.Cryptography.RC2CryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.RC2" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">비규격 FIPS 알고리즘을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 <see cref="T:System.Security.Cryptography.RC2" /> 암호 해독기 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.RC2" /> decryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> 암호화 모드가 사용된 경우
또는
사용된 <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> 암호화 모드의 피드백 크기가 8비트가 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="T:System.Security.Cryptography.RC2" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> encryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.RC2" /> encryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> 암호화 모드가 사용된 경우
또는
사용된 <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> 암호화 모드의 피드백 크기가 8비트가 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
      <summary>
        <see cref="T:System.Security.Cryptography.RC2" /> 알고리즘에서 사용하는 비밀 키의 효과적인 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.RC2" /> 알고리즘에서 사용하는 효과적인 키 크기(비트 단위)입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
        <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> 속성에 설정된 값이 <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> 속성과 다른 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
      <summary>알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
      <summary>알고리즘에 사용할 임의의 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 생성합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
      <summary>11바이트 길이의 0값 솔트를 사용하여 키를 만들 것인지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
      <returns>11바이트 길이의 0값 솔트를 사용하여 키를 만들어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.RNGCryptoServiceProvider">
      <summary>CSP(암호화 서비스 공급자)가 제공한 구현을 사용하여 암호화 RNG(임의의 수 생성기)를 구현합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="rgb">바이트 배열입니다. 이 값은 무시됩니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cspParams">CSP(암호화 서비스 공급자)에 전달할 매개 변수입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="str">문자열 입력입니다. 이 매개 변수는 무시됩니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
      <summary>임의의 암호화 수준 시퀀스 값으로 바이트 배열을 채웁니다.</summary>
      <param name="data">임의의 암호화 수준 시퀀스 값으로 채워질 배열입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 바이트에 대해 지정된 인덱스로 시작하는 임의의 암호화 수준 값 시퀀스로 지정된 바이트 배열을 채웁니다.</summary>
      <param name="data">임의의 암호화 수준 바이트로 채울 배열입니다.</param>
      <param name="offset">채우기 작업을 시작할 배열의 인덱스입니다.</param>
      <param name="count">채울 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 또는 <paramref name="count" />가 0 미만입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 더하기 <paramref name="count" />가 <paramref name="data" />의 길이를 초과합니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Span{System.Byte})">
      <summary>임의의 암호화 수준 바이트로 범위를 채웁니다.</summary>
      <param name="data">임의의 암호화 수준 바이트로 채울 범위입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
      <summary>0이 아닌 임의의 암호화 수준 시퀀스 값으로 바이트 배열을 채웁니다.</summary>
      <param name="data">0이 아닌 임의의 암호화 수준 시퀀스 값으로 채워질 배열입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Span{System.Byte})">
      <summary>0이 아닌 임의의 암호화 수준 값 시퀀스로 바이트 범위를 채웁니다.</summary>
      <param name="data">0이 아닌 임의의 암호화 수준 바이트로 채울 범위입니다.</param>
    </member>
    <member name="T:System.Security.Cryptography.RSACryptoServiceProvider">
      <summary>CSP(암호화 서비스 공급자)가 제공하는 <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘의 구현을 사용하여 비대칭 암호화 및 암호 해독을 수행합니다. 이 클래스는 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
      <summary>기본 키를 사용하여 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 지정 된 키 크기를 사용 합니다.</summary>
      <param name="dwKeySize">사용할 키의 크기(비트)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>지정된 키 크기 및 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dwKeySize">사용할 키의 크기(비트)입니다.</param>
      <param name="parameters">CSP(암호화 서비스 공급자)에 전달할 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP를 가져올 수 없습니다.
-또는-
키를 만들 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters">CSP(암호화 서비스 공급자)에 전달할 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP를 가져올 수 없습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체를 가져옵니다.</summary>
      <returns>암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘에 따라 데이터를 해독합니다.</summary>
      <param name="rgb">해독할 데이터입니다.</param>
      <param name="fOAEP">OAEP 안쪽 여백(Microsoft Windows XP 이상을 실행하는 컴퓨터에서만 사용 가능)을 사용하여 직접 <see langword="true" />를 수행하려면 <see cref="T:System.Security.Cryptography.RSA" />이고, 그러지 않으려면 PKCS#1 v1.5 안쪽 여백을 사용하려면 <see langword="false" />입니다.</param>
      <returns>해독된 데이터로, 암호화하기 전의 원래 일반 텍스트입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
-또는-
<paramref name="fOAEP" /> 매개 변수가 <see langword="true" />이고 <paramref name="rgb" /> 매개 변수의 길이가 <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />보다 큽니다.
-또는-
<paramref name="fOAEP" /> 매개 변수가 <see langword="true" /> 이고 OAEP가 지원되지 않습니다.
-또는-
키가 암호화된 데이터와 일치하지 않습니다. 그러나 예외 표현이 정확하지 않을 수 있습니다. 예를 들어 <c>이 명령을 처리할 만큼 충분한 스토리지 공간이 없습니다.</c>라는 메시지가 표시될 수 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>지정한 패딩을 사용하여 이전에 <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘으로 암호화된 데이터의 암호를 해독합니다.</summary>
      <param name="data">해독할 데이터입니다.</param>
      <param name="padding">패딩입니다.</param>
      <returns>암호 해독된 데이터입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />가 <see langword="null" />인 경우
-또는-
<paramref name="padding" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">패딩 모드가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
      <summary>이 메서드는 현재 버전에서 지원되지 않습니다.</summary>
      <param name="rgb">해독할 데이터입니다.</param>
      <returns>해독된 데이터로, 암호화하기 전의 원래 일반 텍스트입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 메서드는 현재 버전에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘으로 데이터를 암호화합니다.</summary>
      <param name="rgb">암호화할 데이터입니다.</param>
      <param name="fOAEP">OAEP 안쪽 여백(Windows XP 이상을 실행하는 컴퓨터에서만 사용 가능)을 사용하여 직접 <see langword="true" /> 암호화를 수행하려면 <see cref="T:System.Security.Cryptography.RSA" />이고, PKCS#1 v1.5 안쪽 여백을 사용하려면 <see langword="false" />입니다.</param>
      <returns>암호화된 데이터입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
-또는-
<paramref name="rgb" /> 매개 변수의 길이가 최대 허용 길이보다 큽니다.
-또는-
<paramref name="fOAEP" /> 매개 변수가 <see langword="true" />이고 OAEP가 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>지정된 패딩을 사용하여 <see cref="T:System.Security.Cryptography.RSA" /> 알고리즘으로 데이터를 암호화합니다.</summary>
      <param name="data">암호화할 데이터입니다.</param>
      <param name="padding">패딩입니다.</param>
      <returns>암호화된 데이터입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />가 <see langword="null" />인 경우
-또는-
<paramref name="padding" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">패딩 모드가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
      <summary>이 메서드는 현재 버전에서 지원되지 않습니다.</summary>
      <param name="rgb">암호화할 데이터입니다.</param>
      <returns>암호화된 데이터입니다.</returns>
      <exception cref="T:System.NotSupportedException">이 메서드는 현재 버전에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>연결 된 키 정보를 포함 하는 blob을 내보냅니다는 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 개체입니다.</summary>
      <param name="includePrivateParameters">개인 키를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>연결 된 키 정보를 포함 하는 바이트 배열은 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.RSAParameters" />를 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Security.Cryptography.RSA" />에 대한 매개 변수입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">이 키는 내보낼 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>RSA 키 정보를 나타내는 blob을 가져옵니다.</summary>
      <param name="keyBlob">RSA 키 blob을 나타내는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.RSAParameters" />를 가져옵니다.</summary>
      <param name="parameters">
        <see cref="T:System.Security.Cryptography.RSA" />에 대한 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
-또는-
<paramref name="parameters" /> 매개 변수에 누락된 필드가 있습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>
        <see cref="T:System.Security.Cryptography.RSA" /> 구현과 함께 사용 가능한 키 교환 알고리즘의 이름을 가져옵니다.</summary>
      <returns>있는 경우 키 교환 알고리즘의 이름이고, 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
      <summary>현재 키의 크기를 가져옵니다.</summary>
      <returns>키의 크기(비트)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes">
      <summary>비대칭 알고리즘에서 지원하는 키 크기를 가져옵니다.</summary>
      <returns>비대칭 알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
      <summary>키를 CSP(암호화 서비스 공급자)에 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>CSP에 키가 유지되어야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
      <summary>
        <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 개체에 공용 키만 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 개체에 공용 키만 들어 있으면 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
      <summary>이 <see cref="T:System.Security.Cryptography.RSA" /> 구현과 함께 사용 가능한 서명 알고리즘의 이름을 가져옵니다.</summary>
      <returns>서명 알고리즘의 이름입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>지정된 해시 알고리즘을 사용하여 지정된 바이트 배열 하위 집합의 해시 값을 계산하고 결과 해시 값을 서명합니다.</summary>
      <param name="buffer">해시를 컴퓨팅할 입력 데이터입니다.</param>
      <param name="offset">데이터 사용을 시작할 배열의 오프셋입니다.</param>
      <param name="count">데이터로 사용할 배열의 바이트 수입니다.</param>
      <param name="halg">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</param>
      <returns>지정된 데이터의 <see cref="T:System.Security.Cryptography.RSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="halg" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="halg" /> 매개 변수가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
      <summary>지정된 해시 알고리즘을 사용하여 지정된 바이트 배열의 해시 값을 계산하고 결과 해시 값을 서명합니다.</summary>
      <param name="buffer">해시를 컴퓨팅할 입력 데이터입니다.</param>
      <param name="halg">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</param>
      <returns>지정된 데이터의 <see cref="T:System.Security.Cryptography.RSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="halg" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="halg" /> 매개 변수가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
      <summary>지정된 해시 알고리즘을 사용하여 지정된 입력 스트림의 해시 값을 계산하고 결과 해시 값을 서명합니다.</summary>
      <param name="inputStream">해시를 컴퓨팅할 입력 데이터입니다.</param>
      <param name="halg">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</param>
      <returns>지정된 데이터의 <see cref="T:System.Security.Cryptography.RSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="halg" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="halg" /> 매개 변수가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>지정된 패딩을 사용해서 프라이빗 키로 암호화하여 지정된 해시 값의 시그니처를 컴퓨팅합니다.</summary>
      <param name="hash">서명할 데이터의 해시 값입니다.</param>
      <param name="hashAlgorithm">데이터의 해시 값을 만드는 데 사용되는 해시 알고리즘 이름입니다.</param>
      <param name="padding">패딩입니다.</param>
      <returns>지정된 해시 값의 <see cref="T:System.Security.Cryptography.RSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />이 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" />가 <see langword="null" />인 경우
-또는-
<paramref name="padding" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />이 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />와 다릅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>개인 키로 암호화하여 지정된 해시 값의 서명을 계산합니다.</summary>
      <param name="rgbHash">서명할 데이터의 해시 값입니다.</param>
      <param name="str">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘 식별자(OID)입니다.</param>
      <returns>지정된 해시 값의 <see cref="T:System.Security.Cryptography.RSA" /> 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
-또는-
개인 키가 없습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
      <summary>사용자 프로필 저장소 대신 컴퓨터의 키 저장소에 키를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>키를 컴퓨터 키 저장소에 유지해야 하면 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
      <summary>제공된 공용 키를 사용하여 서명의 해시 값을 판별한 다음 제공된 데이터의 해시 값과 비교하여 디지털 서명이 유효한지 확인합니다.</summary>
      <param name="buffer">서명된 데이터입니다.</param>
      <param name="halg">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘의 이름입니다.</param>
      <param name="signature">확인할 서명 데이터입니다.</param>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="halg" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="halg" /> 매개 변수가 올바른 형식이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>지정된 해시 알고리즘 및 패딩을 사용해서 시그니처의 해시 값을 확인하고 지정된 해시 값과 비교하여 디지털 시그니처가 유효한지 확인합니다.</summary>
      <param name="hash">서명된 데이터의 해시 값입니다.</param>
      <param name="signature">확인할 서명 데이터입니다.</param>
      <param name="hashAlgorithm">해시 값을 만드는 데 사용되는 해시 알고리즘 이름입니다.</param>
      <param name="padding">패딩입니다.</param>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />이 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" />가 <see langword="null" />인 경우
-또는-
<paramref name="padding" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />이 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />와 다릅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>제공된 공용 키를 사용하여 서명의 해시 값을 판별한 다음 제공된 해시 값과 비교하여 디지털 서명이 유효한지 확인합니다.</summary>
      <param name="rgbHash">서명된 데이터의 해시 값입니다.</param>
      <param name="str">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘 식별자(OID)입니다.</param>
      <param name="rgbSignature">확인할 서명 데이터입니다.</param>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> 매개 변수가 <see langword="null" />인 경우
-또는-
<paramref name="rgbSignature" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.
-또는-
서명을 확인할 수 없습니다.</exception>
    </member>
    <member name="T:System.Security.Cryptography.SHA1CryptoServiceProvider">
      <summary>CSP(암호화 서비스 공급자)가 제공하는 구현을 사용하는 입력 데이터에 대해 <see cref="T:System.Security.Cryptography.SHA1" /> 해시 값을 계산합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize">
      <summary>
        <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.SHA256" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize">
      <summary>해시 알고리즘의 인스턴스를 초기화하거나 다시 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.SHA384" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.SHA384CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize">
      <summary>해시 알고리즘의 인스턴스를 초기화하거나 다시 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.SHA512" /> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize">
      <summary>해시 알고리즘의 인스턴스를 초기화하거나 다시 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCryptoServiceProvider">
      <summary>래퍼 개체를 정의하여 <see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘의 CSP(암호화 서비스 공급자) 버전에 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.TripleDES" /> 암호화 서비스 공급자를 사용할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize">
      <summary>암호화 작업의 블록 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <returns>블록 크기(비트 단위)입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor">
      <summary>현재 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 속성 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 decryptor 개체를 만듭니다.</summary>
      <returns>대칭 decryptor 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 <see cref="T:System.Security.Cryptography.TripleDES" /> 암호 해독기 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.TripleDES" /> decryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우
또는
<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor">
      <summary>현재 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 속성 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 encryptor 개체를 만듭니다.</summary>
      <returns>대칭 encryptor 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키(<see cref="T:System.Security.Cryptography.TripleDES" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> encryptor 개체를 만듭니다.</summary>
      <param name="rgbKey">대칭 알고리즘에 사용할 비밀 키입니다.</param>
      <param name="rgbIV">대칭 알고리즘에 사용할 초기화 벡터입니다.
 참고: 초기화 벡터의 길이는 8바이트여야 합니다. 8바이트보다 긴 경우 잘리고 예외가 throw되지 않습니다. <see cref="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />를 호출하기 전에 초기화 벡터의 길이를 확인하고 너무 긴 경우 예외를 throw합니다.</param>
      <returns>대칭 <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor 개체입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우
또는
<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우
또는
잘못된 키 크기가 사용된 경우
또는
알고리즘 키 크기를 사용할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize">
      <summary>CFB(Cipher Feedback) 및 OFB(Output Feedback) 암호화 모드에 대한 암호화 작업의 피드백 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <returns>피드백 크기(비트 단위)입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">피드백 크기가 블록 크기보다 큰 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV">
      <summary>알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey">
      <summary>알고리즘에 사용할 임의의 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />를 생성합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.IV">
      <summary>대칭 알고리즘에 대한 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 가져오거나 설정합니다.</summary>
      <returns>초기화 벡터입니다.</returns>
      <exception cref="T:System.ArgumentNullException">초기화 벡터를 <see langword="null" />로 설정하려고 한 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">초기화 벡터를 잘못된 크기로 설정하려고 한 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Key">
      <summary>
        <see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘에 대한 비밀 키를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘에 대한 비밀 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize">
      <summary>비밀 키의 크기를 비트 단위로 가져오거나 설정합니다.</summary>
      <returns>키의 크기(비트 단위)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes">
      <summary>대칭 알고리즘에서 지원하는 블록 크기(비트 단위)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 블록 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes">
      <summary>대칭 알고리즘에서 지원하는 키 크기(비트 단위)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode">
      <summary>대칭 알고리즘의 작업 모드를 가져오거나 설정합니다.</summary>
      <returns>대칭 알고리즘의 작업 모드입니다. 기본값은 <see cref="F:System.Security.Cryptography.CipherMode.CBC" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 모드가 <see cref="T:System.Security.Cryptography.CipherMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding">
      <summary>대칭 알고리즘에 사용된 패딩 모드를 가져오거나 설정합니다.</summary>
      <returns>대칭 알고리즘에 사용된 패딩 모드입니다. 기본값은 <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">패딩 모드가 <see cref="T:System.Security.Cryptography.PaddingMode" /> 값 중 하나가 아닌 경우</exception>
    </member>
  </members>
</doc>