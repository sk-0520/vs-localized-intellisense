<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">LINQ to XML 확장 메서드를 포함합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 요소 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 요소 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">소스 컬렉션에 있는 모든 요소의 특성 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">소스 컬렉션에 있는 모든 요소의 특성이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소의 필터링된 특성 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소의 필터링된 특성 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">소스 컬렉션에 있는 모든 문서 및 요소의 하위 노드 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">소스 컬렉션에 있는 모든 문서 및 요소의 하위 노드에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 노드가 들어 있는 노드 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 노드가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 요소 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 요소가 들어 있는 요소 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 요소가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 항목이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">소스 컬렉션에 있는 모든 요소 및 문서의 자식 요소 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">소스 컬렉션에 있는 모든 요소 또는 문서의 자식 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소 및 문서의 필터링된 자식 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">소스 컬렉션에 있는 모든 요소 및 문서의 자식 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">소스 컬렉션의 모든 노드가 문서 순으로 정렬되어 들어 있는 노드 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">소스 컬렉션의 모든 노드가 문서 순으로 정렬되어 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">소스 컬렉션에 있는 모든 문서 및 요소의 자식 노드 컬렉션을 반환합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XContainer" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">소스 컬렉션에 있는 모든 문서 및 요소의 자식 노드에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">부모 요소에서 소스 컬렉션의 모든 특성을 제거합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">부모 노드에서 소스 컬렉션의 모든 노드를 제거합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">소스 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />로 제한된 <paramref name="source" />의 개체 형식입니다.</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">XML을 구문 분석할 때 적용되는 로드 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">의미 없는 공백을 유지하지 않고 기본 URI 및 줄 정보를 로드하지 않습니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">구문 분석할 때 의미 없는 공백을 유지합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">
        <see cref="T:System.Xml.XmlReader" />에서 기본 URI 정보를 요청하고 <see cref="P:System.Xml.Linq.XObject.BaseUri" /> 속성을 통해 사용할 수 있게 합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />에서 줄 정보를 <see cref="T:System.Xml.Linq.XObject" />의 속성을 통해 사용할 수 있게 합니다.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />를 사용하여 <see cref="T:System.Xml.XmlReader" />를 로드할 때 중복 네임스페이스를 생략할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">판독기 옵션을 지정하지 않았습니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />를 로드할 때 중복 네임스페이스를 생략합니다.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">serialization 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">serialize할 때 의미 없는 공백을 모두 유지합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">serialize할 때 XML을 서식 지정(들여쓰기)합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">serialize하는 동안 중복된 네임스페이스 선언을 제거합니다.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">XML 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">다른 <see cref="T:System.Xml.Linq.XAttribute" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">복사할 <see cref="T:System.Xml.Linq.XAttribute" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">지정된 이름 및 값을 사용하여 <see cref="T:System.Xml.Linq.XAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">특성의 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">특성의 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 또는 <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">특성의 빈 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">빈 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">이 특성이 네임스페이스 선언인지 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 특성이 네임스페이스 선언이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">이 특성의 확장된 이름을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">이 특성의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">부모 요소의 다음 특성을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">부모 요소의 다음 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XAttribute" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Attribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Boolean" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Boolean" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Boolean" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Boolean" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.DateTime" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.DateTime" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">특성에 유효한 <see cref="T:System.DateTime" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.DateTimeOffset" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.DateTimeOffset" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">특성에 유효한 <see cref="T:System.DateTimeOffset" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Decimal" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Decimal" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Decimal" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Decimal" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Double" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Double" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Double" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Double" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Guid" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Guid" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Guid" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Guid" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Int32" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Int32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Int32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Int32" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Int64" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Int64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Int64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Int64" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Boolean" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Boolean" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Boolean" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Boolean" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTime" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">특성에 유효한 <see cref="T:System.DateTime" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTimeOffset" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTimeOffset" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">특성에 유효한 <see cref="T:System.DateTimeOffset" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Decimal" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Decimal" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Decimal" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Decimal" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Double" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Double" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Double" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Double" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Guid" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Guid" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Guid" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Guid" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int32" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int32" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int64" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int64" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Int64" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Single" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Single" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Single" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Single" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.TimeSpan" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.TimeSpan" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">특성에 유효한 <see cref="T:System.TimeSpan" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt32" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt32" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">특성에 유효한 <see cref="T:System.UInt32" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt64" />로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt64" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">특성에 유효한 <see cref="T:System.UInt64" /> 값이 들어 있지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Single" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Single" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.Single" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">특성에 유효한 <see cref="T:System.Single" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.String" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.String" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.TimeSpan" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.TimeSpan" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">특성에 유효한 <see cref="T:System.TimeSpan" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.UInt32" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.UInt32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.UInt32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">특성에 유효한 <see cref="T:System.UInt32" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.UInt64" />으로 캐스팅합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.UInt64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">이 <see cref="T:System.UInt64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">특성에 유효한 <see cref="T:System.UInt64" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">부모 요소의 이전 특성을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">부모 요소의 이전 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">부모 요소에서 이 특성을 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">부모 요소가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">이 특성의 값을 설정합니다.</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">이 특성에 할당할 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Xml.Linq.XObject" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">현재 <see cref="T:System.Xml.Linq.XAttribute" /> 개체를 문자열 표현으로 변환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">특성 및 해당 값의 XML 텍스트 표현이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">이 특성의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">이 특성의 값이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">설정 시 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">CDATA가 들어 있는 텍스트 노드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XCData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">
        <see cref="T:System.Xml.Linq.XCData" /> 노드의 값이 들어 있는 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XCData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">복사할 <see cref="T:System.Xml.Linq.XCData" /> 노드입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XCData" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.CDATA" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 CDATA 개체를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to the given &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XCData" />를 지정된 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XCData" />를 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">XML 주석을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">지정된 문자열 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XComment" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">새 <see cref="T:System.Xml.Linq.XComment" /> 개체의 콘텐츠가 들어 있는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">기존 주석 노드를 사용하여 <see cref="T:System.Xml.Linq.XComment" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">복사할 <see cref="T:System.Xml.Linq.XComment" /> 노드입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XComment" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Comment" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">이 주석의 문자열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">이 주석의 문자열 값이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 주석을 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XComment" />를 지정된 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XComment" />를 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">다른 노드를 포함하는 노드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">지정된 콘텐츠를 이 <see cref="T:System.Xml.Linq.XContainer" />의 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">추가할 단순 콘텐츠 또는 콘텐츠 컬렉션이 들어 있는 콘텐츠 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">지정된 콘텐츠를 이 <see cref="T:System.Xml.Linq.XContainer" />의 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">지정된 콘텐츠를 이 문서 또는 요소의 첫 번째 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">추가할 단순 콘텐츠 또는 콘텐츠 컬렉션이 들어 있는 콘텐츠 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">지정된 콘텐츠를 이 문서 또는 요소의 첫 번째 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />에 노드를 추가하는 데 사용할 수 있는 <see cref="T:System.Xml.Linq.XContainer" />를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">콘텐츠를 쓸 준비가 된 <see cref="T:System.Xml.XmlWriter" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">이 문서 또는 요소의 하위 노드가 문서순으로 들어 있는 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />의 하위 노드가 문서순으로 들어 있는 <see cref="T:System.Xml.Linq.XNode" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">이 문서 또는 요소의 하위 요소가 문서순으로 들어 있는 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />의 하위 요소가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 문서 또는 요소의 하위 요소가 문서순으로 들어 있는 필터링된 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />에서 지정된 <see cref="T:System.Xml.Linq.XElement" />과 일치하는 하위 요소가 들어 있는 <see cref="T:System.Xml.Linq.XContainer" />의 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XName" />을 갖는 문서순으로 첫 번째 자식 요소를 가져옵니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XElement" />과 일치하는 <see cref="T:System.Xml.Linq.XName" />이거나 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">이 요소 또는 문서의 자식 요소가 문서순으로 들어 있는 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">이 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 자식 요소가 문서순으로 들어 있는 <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소 또는 문서의 자식 요소가 문서순으로 들어 있는 필터링된 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />에서 <see cref="T:System.Xml.Linq.XElement" />이 일치하는 자식 요소가 문서 순으로 들어 있는 <see cref="T:System.Xml.Linq.XContainer" />의 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">이 노드의 첫 번째 자식 노드를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />의 첫 번째 자식 노드가 들어 있는 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">이 노드의 마지막 자식 노드를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />의 마지막 자식 노드가 들어 있는 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">이 요소 또는 문서의 자식 노드가 문서순으로 들어 있는 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">이 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 콘텐츠가 문서순으로 들어 있는 <see cref="T:System.Xml.Linq.XNode" />의 <see cref="T:System.Xml.Linq.XContainer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">이 문서 또는 요소에서 자식 노드를 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">이 문서 또는 요소의 자식 노드를 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">단순 콘텐츠가 들어 있는 콘텐츠 개체이거나 자식 노드를 바꾸는 콘텐츠 개체 컬렉션입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">이 문서 또는 요소의 자식 노드를 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">XML 선언을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">지정된 버전, 인코딩 및 독립 실행형 상태를 사용하여 <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">XML의 버전이며, 일반적으로 "1.0"입니다.</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">XML 문서의 인코딩입니다.</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">XML이 독립 실행형인지 아니면 외부 엔터티를 확인해야 하는지 여부를 지정하는 "yes" 또는 "no"가 들어 있는 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">다른 <see cref="T:System.Xml.Linq.XDeclaration" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">이 <see cref="T:System.Xml.Linq.XDeclaration" /> 개체를 초기화하는 데 사용되는 <see cref="T:System.Xml.Linq.XDeclaration" />입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">이 문서의 인코딩을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">이 문서의 코드 페이지 이름이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">이 문서의 독립 실행형 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">이 문서의 독립 실행형 속성이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">선언을 형식 지정 문자열로 제공합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">형식 지정 XML 문자열이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">이 문서의 버전 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">이 문서의 버전 속성이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">XML 문서를 나타냅니다. <see cref="T:System.Xml.Linq.XDocument" /> 개체의 구성 요소 및 사용에 대한 자세한 내용은 XDocument 클래스 개요를 참조하세요.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">지정된 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">이 문서에 추가할 콘텐츠 개체의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">지정된 <see cref="T:System.Xml.Linq.XDocument" /> 및 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">문서의 <see cref="T:System.Xml.Linq.XDeclaration" />입니다.</param>
      <param name="content" vsli:raw="The content of the document.">문서의 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">기존 <see cref="T:System.Xml.Linq.XDocument" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">복사할 <see cref="T:System.Xml.Linq.XDocument" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">이 문서의 XML 선언을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">이 문서의 XML 선언이 들어 있는 <see cref="T:System.Xml.Linq.XDeclaration" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">이 문서의 DTD(문서 종류 정의)를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">이 문서의 DTD가 들어 있는 <see cref="T:System.Xml.Linq.XDocumentType" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" /> 인스턴스를 만듭니다.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">XML 데이터가 포함된 스트림입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">스트림에 들어 있는 데이터를 읽는 <see cref="T:System.Xml.Linq.XDocument" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" /> 인스턴스를 만들고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">XML 데이터가 들어 있는 스트림입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">기본 URI 및 줄 정보의 로드 여부를 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">스트림에 들어 있는 데이터를 읽는 <see cref="T:System.Xml.Linq.XDocument" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />에서 새 <see cref="T:System.IO.TextReader" />을 만듭니다.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XDocument" />의 콘텐츠가 들어 있는 <see cref="T:System.IO.TextReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.Linq.XDocument" />를 사용하여 새 <see cref="T:System.IO.TextReader" />를 만들고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XDocument" />에서 읽은 XML이 들어 있는 <see cref="T:System.IO.TextReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">파일을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" />를 만듭니다.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">새 <see cref="T:System.Xml.Linq.XDocument" />에 로드할 파일을 참조하는 URI 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">지정된 파일의 내용이 들어 있는 <see cref="T:System.Xml.Linq.XDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">파일을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" />를 만들고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">새 <see cref="T:System.Xml.Linq.XDocument" />에 로드할 파일을 참조하는 URI 문자열입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">지정된 파일의 내용이 들어 있는 <see cref="T:System.Xml.Linq.XDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />를 사용하여 새 <see cref="T:System.Xml.XmlReader" />를 만듭니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XDocument" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.Linq.XDocument" />에서 <see cref="T:System.Xml.XmlReader" />를 로드하고, 선택적으로 기본 URI를 설정하고 줄 정보를 유지합니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 콘텐츠를 읽어올 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">기본 URI 및 줄 정보의 로드 여부를 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XDocument" />에서 읽은 XML이 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree from the specified stream, optionally preserving white space.">새 <see cref="T:System.Xml.Linq.XDocument" />를 비동기적으로 만들고 지정된 스트림에서 기본 XML 트리를 초기화하고 필요에 따라 공백을 유지합니다.</summary>
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">새로 만든 <see cref="T:System.Xml.Linq.XDocument" />로 읽어올 원시 XML이 들어 있는 스트림입니다.</param>
      <param name="options" vsli:raw="A set of load options.">로드 옵션 집합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">지정된 <see cref="T:System.IO.Stream" />의 내용이 들어 있는 새 XDocument입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; parameter, optionally preserving white space.">새 <see cref="T:System.Xml.Linq.XDocument" />를 만들고 지정된 <see cref="T:System.IO.TextReader" /> 매개 변수를 사용하여 기본 XML 트리를 초기화하고 필요에 따라 공백을 유지합니다.</summary>
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">새로 만든 <see cref="T:System.Xml.Linq.XDocument" />로 읽어올 원시 XML이 들어 있는 판독기입니다.</param>
      <param name="options" vsli:raw="A set of load options.">로드 옵션 집합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.IO.TextReader" />의 내용이 들어 있는 새 XDocument입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />의 내용이 들어 있는 새 <see cref="T:System.Xml.Linq.XDocument" />를 만듭니다.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">새 <see cref="T:System.Xml.Linq.XDocument" />로 읽어올 XML이 들어 있는 판독기입니다.</param>
      <param name="options" vsli:raw="A set of load options.">로드 옵션 집합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.XmlReader" />의 내용이 들어 있는 새 XDocument입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XDocument" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Document" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">문자열을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" />를 만듭니다.</summary>
      <param name="text" vsli:raw="A string that contains XML.">XML이 들어 있는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">XML이 들어 있는 문자열을 사용하여 채운 <see cref="T:System.Xml.Linq.XDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">문자열을 사용하여 새 <see cref="T:System.Xml.Linq.XDocument" />를 만들고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="text" vsli:raw="A string that contains XML.">XML이 들어 있는 문자열입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">XML이 들어 있는 문자열을 사용하여 채운 <see cref="T:System.Xml.Linq.XDocument" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">이 문서에 대한 XML 트리의 루트 요소를 가져옵니다.</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">XML 트리의 루트 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />를 지정된 <see cref="T:System.IO.Stream" />에 출력합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XDocument" />를 출력할 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">이 <see cref="T:System.Xml.Linq.XDocument" />를 지정된 <see cref="T:System.IO.Stream" />에 출력하고 선택적으로 형식 지정 동작을 지정합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XDocument" />를 출력할 스트림입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.IO.TextWriter" />로 serialize합니다.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" />를 쓸 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">이 <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.IO.TextWriter" />로 serialize하고, 선택적으로 형식 지정을 해제합니다.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML을 출력할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">이 <see cref="T:System.Xml.Linq.XDocument" />를 파일로 serialize하여 기존 파일이 있는 경우 덮어씁니다.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">파일 이름이 들어 있는 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">이 <see cref="T:System.Xml.Linq.XDocument" />를 파일로 serialize하고, 선택적으로 형식 지정을 해제합니다.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">파일 이름이 들어 있는 문자열입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.Xml.XmlWriter" />로 serialize합니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" />를 쓸 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.IO.Stream" />에 출력합니다.</summary>
      <param name="stream" vsli:raw="The stream to write the XML to.">XML을 쓸 스트림입니다.</param>
      <param name="options" vsli:raw="A set of load options.">로드 옵션 집합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.IO.TextWriter" />에 씁니다.</summary>
      <param name="textWriter" vsli:raw="The text writer to output the XML to.">XML을 출력할 텍스트 기록기입니다.</param>
      <param name="options" vsli:raw="A set of load options.">로드 옵션 집합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">XML을 출력할 기록기입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 문서를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this XDocument's underlying XML tree to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 XDocument의 기본 XML 트리를 지정된 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />의 내용을 출력할 기록기입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">XML DTD(문서 종류 정의)를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">DTD의 정규화된 이름이 들어 있는 <see cref="T:System.String" />이며, 이 이름은 XML 문서에 있는 루트 요소의 정규화된 이름과 같습니다.</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">외부 공용 DTD의 공용 식별자가 들어 있는 <see cref="T:System.String" />입니다.</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">외부 프라이빗 DTD의 시스템 식별자가 들어 있는 <see cref="T:System.String" />입니다.</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">내부 DTD의 내부 하위 집합이 들어 있는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">다른 <see cref="T:System.Xml.Linq.XDocumentType" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XDocumentType" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">복사할 <see cref="T:System.Xml.Linq.XDocumentType" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 내부 하위 집합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 내부 하위 집합이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 이름이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XDocumentType" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.DocumentType" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 공용 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 공용 식별자가 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 시스템 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">이 DTD(문서 종류 정의)의 시스템 식별자가 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocumentType" />을 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocumentType" />을 지정된 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XDocumentType" />를 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">XML 요소를 나타냅니다.  사용 정보 및 예제를 보려면 이 페이지의 XElement 클래스 개요와 설명 부분을 참조하세요.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">다른 <see cref="T:System.Xml.Linq.XElement" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">복사할 <see cref="T:System.Xml.Linq.XElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">지정된 이름을 사용하여 <see cref="T:System.Xml.Linq.XElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">요소의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">지정된 이름 및 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">요소 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="content" vsli:raw="The contents of the element.">요소의 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">지정된 이름 및 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">요소 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="content" vsli:raw="The initial content of the element.">요소의 초기 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XElement" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XStreamingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XStreamingElement" />의 콘텐츠에 대해 반복할 실행되지 않은 쿼리가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">이 요소와 이 요소의 상위 요소가 포함된 요소 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">이 요소와 이 요소의 상위 요소가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소와 이 요소의 상위 요소가 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소와 이 요소의 상위 요소가 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XAttribute" />이 있는 이 <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Xml.Linq.XName" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">가져올 <see cref="T:System.Xml.Linq.XName" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">지정된 <see cref="T:System.Xml.Linq.XAttribute" />이 있는 <see cref="T:System.Xml.Linq.XName" />이거나, 지정된 이름의 특성이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">이 요소의 특성 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">이 요소에 있는 특성에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소의 필터링된 특성 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소의 특성이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">이 요소와 이 요소의 모든 하위 노드가 문서 순으로 들어 있는 노드 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">이 요소와 이 요소의 모든 하위 노드가 문서 순으로 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">이 요소와 이 요소의 모든 하위 요소가 문서 순으로 들어 있는 요소 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">이 요소와 이 요소의 모든 하위 요소가 문서 순으로 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소와 이 요소의 모든 하위 요소가 문서 순으로 들어 있는 필터링된 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 요소와 이 요소의 모든 하위 요소가 문서 순으로 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">요소의 빈 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">빈 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">이 요소의 첫 번째 특성을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">이 요소의 첫 번째 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 기본 <see cref="T:System.Xml.Linq.XElement" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 기본 네임스페이스가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 특정 접두사에 연결된 네임스페이스를 가져옵니다.</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">조회할 네임스페이스 접두사가 들어 있는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 접두사에 연결된 네임스페이스의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 네임스페이스에 연결된 접두사를 가져옵니다.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">조회할 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">네임스페이스 접두사가 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">이 요소에 특성이 하나 이상 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 요소에 특성이 최소한 하나 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">이 요소에 자식 요소가 최소한 하나 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 요소에 자식 요소가 최소한 하나 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">이 요소에 콘텐츠가 없는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 요소에 콘텐츠가 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">이 요소의 마지막 특성을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">이 요소의 마지막 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.Linq.XElement" /> 인스턴스를 만듭니다.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">XML 데이터가 포함된 스트림입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">스트림에 포함된 데이터를 읽는 데 사용되는 <see cref="T:System.Xml.Linq.XElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">지정된 스트림을 사용하여 새 <see cref="T:System.Xml.Linq.XElement" /> 인스턴스를 만들고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">XML 데이터가 들어 있는 스트림입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">기본 URI 및 줄 정보의 로드 여부를 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">스트림에 포함된 데이터를 읽는 데 사용되는 <see cref="T:System.Xml.Linq.XElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />에서 <see cref="T:System.IO.TextReader" />를 로드합니다.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> 콘텐츠를 읽어올 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XElement" />에서 읽은 XML이 들어 있는 <see cref="T:System.IO.TextReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">
        <see cref="T:System.Xml.Linq.XElement" />에서 <see cref="T:System.IO.TextReader" />를 로드하고, 선택적으로 공백 및 줄 정보를 유지합니다.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> 콘텐츠를 읽어올 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XElement" />에서 읽은 XML이 들어 있는 <see cref="T:System.IO.TextReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">파일에서 <see cref="T:System.Xml.Linq.XElement" />를 로드합니다.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">새 <see cref="T:System.Xml.Linq.XElement" />에 로드할 파일을 참조하는 URI 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">지정된 파일의 내용이 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">파일에서 <see cref="T:System.Xml.Linq.XElement" />를 로드하고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />에 로드할 파일을 참조하는 URI 문자열입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">지정된 파일의 내용이 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />에서 <see cref="T:System.Xml.XmlReader" />를 로드합니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 콘텐츠를 읽어올 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XElement" />에서 읽은 XML이 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">
        <see cref="T:System.Xml.Linq.XElement" />에서 <see cref="T:System.Xml.XmlReader" />를 로드하고, 선택적으로 공백 및 줄 정보를 유지하고 기본 URI를 설정합니다.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />의 콘텐츠를 읽어올 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XElement" />에서 읽은 XML이 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified stream, optionally preserving white space.">새 <see cref="T:System.Xml.Linq.XElement" />를 비동기적으로 만들고 지정된 스트림을 사용하여 기본 XML 트리를 초기화하고 필요에 따라 공백을 유지합니다.</summary>
      <param name="stream" vsli:raw="The stream containing the raw XML to read.">읽을 원시 XML 데이터가 들어 있는 스트림입니다.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML을 구문 분석할 로드 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified stream.">지정된 스트림의 내용이 들어 있는 새 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified text reader, optionally preserving white space.">새 <see cref="T:System.Xml.Linq.XElement" />를 비동기적으로 만들고 지정된 텍스트 판독기를 사용하여 기본 XML 트리를 초기화하고 필요에 따라 공백을 유지합니다.</summary>
      <param name="textReader" vsli:raw="A reader containing the raw XML to read.">읽을 원시 XML이 들어 있는 판독기입니다.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML을 구문 분석할 로드 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">지정된 판독기의 내용이 들어 있는 새 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified XML reader, optionally preserving white space.">새 <see cref="T:System.Xml.Linq.XElement" />를 비동기적으로 만들고 지정된 XML 판독기를 사용하여 기본 XML 트리를 초기화하고 필요에 따라 공백을 유지합니다.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read.">읽어을 XML이 들어 있는 판독기입니다.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">XML을 구문 분석할 로드 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">지정된 판독기의 내용이 들어 있는 새 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">이 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">이 요소의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XElement" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Element" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Boolean" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Boolean" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Boolean" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Boolean" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.DateTime" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.DateTime" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">요소에 유효한 <see cref="T:System.DateTime" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.DateTimeOffset" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.DateTimeOffset" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">요소에 유효한 <see cref="T:System.DateTimeOffset" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Decimal" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Decimal" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Decimal" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Decimal" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Double" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Double" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Double" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Double" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Guid" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Guid" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Guid" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Guid" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Int32" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Int32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Int32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Int32" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Int64" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Int64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Int64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Int64" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Boolean" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Boolean" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Boolean" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Boolean" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTime" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTime" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.DateTime" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTimeOffset" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTimeOffset" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.DateTimeOffset" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Decimal" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Decimal" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Decimal" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Decimal" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Double" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Double" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Double" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Double" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Guid" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Guid" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Guid" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Guid" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int32" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int32" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Int32" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int64" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int64" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Int64" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Single" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Single" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Single" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.Single" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.TimeSpan" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.TimeSpan" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.TimeSpan" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt32" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt32" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.UInt32" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt64" />로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt64" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">요소가 <see langword="null" />이 아니고 유효한 <see cref="T:System.UInt64" /> 값을 포함하지 않습니다.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.Single" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.Single" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Single" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">요소에 유효한 <see cref="T:System.Single" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.String" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.String" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.TimeSpan" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.TimeSpan" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">요소에 유효한 <see cref="T:System.TimeSpan" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.UInt32" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.UInt32" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.UInt32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">요소에 유효한 <see cref="T:System.UInt32" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 값을 <see cref="T:System.UInt64" />으로 캐스팅합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />으로 캐스팅할 <see cref="T:System.UInt64" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.UInt64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">요소에 유효한 <see cref="T:System.UInt64" /> 값이 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">XML이 들어 있는 문자열에서 <see cref="T:System.Xml.Linq.XElement" />를 로드합니다.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">XML이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">XML이 들어 있는 문자열을 사용하여 채운 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">XML이 들어 있는 문자열에서 <see cref="T:System.Xml.Linq.XElement" />를 로드하고, 선택적으로 공백 및 줄 정보를 유지합니다.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">XML이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">기본 URI와 줄 정보의 로드 여부 및 공백 동작을 지정하는 <see cref="T:System.Xml.Linq.LoadOptions" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">XML이 들어 있는 문자열을 사용하여 채운 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />에서 노드 및 특성을 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 특성을 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">이 요소의 자식 노드 및 특성을 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">이 요소의 자식 노드 및 특성을 대체할 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">이 요소의 자식 노드 및 특성을 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">이 요소의 특성을 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">이 요소의 특성을 대체할 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">이 요소의 특성을 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />를 지정된 <see cref="T:System.IO.Stream" />에 출력합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XElement" />를 출력할 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">이 <see cref="T:System.Xml.Linq.XElement" />를 지정된 <see cref="T:System.IO.Stream" />에 출력하고 선택적으로 형식 지정 동작을 지정합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XElement" />를 출력할 스트림입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">서식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">이 요소를 <see cref="T:System.IO.TextWriter" />로 serialize합니다.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" />를 쓸 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">이 요소를 <see cref="T:System.IO.TextWriter" />로 serialize하고, 선택적으로 형식 지정을 해제합니다.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML을 출력할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">이 요소를 파일로 serialize합니다.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">파일 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">이 요소를 파일로 serialize하고, 선택적으로 형식 지정을 해제합니다.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">파일 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 요소를 <see cref="T:System.Xml.XmlWriter" />로 serialize합니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" />를 쓸 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />를 <see cref="T:System.IO.Stream" />에 비동기적으로 출력합니다.</summary>
      <param name="stream" vsli:raw="The stream to output the XML to.">XML을 출력할 스트림입니다.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">직렬화 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />를 <see cref="T:System.IO.TextWriter" />에 비동기적으로 출력합니다.</summary>
      <param name="textWriter" vsli:raw="The writer to output the XML to.">XML을 출력할 기록기입니다.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">직렬화 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />를 <see cref="T:System.Xml.XmlWriter" />에 비동기적으로 출력합니다.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">XML을 출력할 기록기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">비동기 저장 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">특성 값을 설정하거나 특성을 추가 또는 제거합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">변경할 특성의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">특성에 할당할 값입니다. 값이 <see langword="null" />이면 특성이 제거됩니다. 그렇지 않으면 값이 문자열 표현으로 변환되어 특성의 <see cref="P:System.Xml.Linq.XAttribute.Value" /> 속성에 할당됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Xml.Linq.XObject" />의 인스턴스인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">자식 요소의 값을 설정하거나 자식 요소를 추가 또는 제거합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">변경할 자식 요소의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">자식 요소에 할당할 값입니다. 값이 <see langword="null" />이면 자식 요소가 제거됩니다. 그렇지 않으면 값이 문자열 표현으로 변환되어 자식 요소의 <see cref="P:System.Xml.Linq.XElement.Value" /> 속성에 할당됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Xml.Linq.XObject" />의 인스턴스인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">이 요소의 값을 설정합니다.</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">이 요소에 할당할 값입니다. 값은 문자열 표현으로 변환되어 특성의 <see cref="P:System.Xml.Linq.XElement.Value" /> 속성에 할당됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Xml.Linq.XObject" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">이 개체의 XML 표현을 설명하는 XML 스키마 정의를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">개체의 XML 표현에서 개체를 생성합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">개체를 deserialize할 <see cref="T:System.Xml.XmlReader" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">개체를 XML 표현으로 변환합니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">이 개체를 serialize할 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">이 요소의 연결된 텍스트 콘텐츠를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">이 요소의 모든 텍스트 콘텐츠가 들어 있는 <see cref="T:System.String" />입니다. 텍스트 노드가 여러 개인 경우 노드가 결합됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 요소를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified writer.">이 <see cref="T:System.Xml.Linq.XElement" />를 지정된 기록기에 비동기적으로 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XElement" />를 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">XML 요소 또는 특성의 이름을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XName" />이 이 <see cref="T:System.Xml.Linq.XName" />과 같은지 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">현재 <see cref="T:System.Xml.Linq.XName" />와 비교할 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XName" />이 현재 <see cref="T:System.Xml.Linq.XName" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">확장된 이름을 사용하여 <see cref="T:System.Xml.Linq.XName" /> 개체를 가져옵니다.</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> 형식의 확장된 XML 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">확장된 이름을 사용하여 생성한 <see cref="T:System.Xml.Linq.XName" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">로컬 이름 및 네임스페이스를 사용하여 <see cref="T:System.Xml.Linq.XName" /> 개체를 가져옵니다.</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">정규화되지 않은 로컬 이름입니다.</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">XML 네임스페이스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">지정된 로컬 이름 및 네임스페이스를 사용하여 만든 <see cref="T:System.Xml.Linq.XName" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XName" />의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Int32" />에 대한 해시 코드가 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">이름의 정규화되지 않은 로컬 부분을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">이름의 정규화되지 않은 로컬 부분이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">정규화된 이름의 네임스페이스 부분을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">이름의 네임스페이스 부분이 들어 있는 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />에 대한 <see cref="T:System.Xml.Linq.XName" />의 URI를 반환합니다.</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />에 대한 <see cref="T:System.Xml.Linq.XName" />의 URI입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">
        <see cref="T:System.Xml.Linq.XName" />의 두 인스턴스가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">확장된 XML 이름 형식(<c>{namespace}localname</c>)의 문자열을 <see cref="T:System.Xml.Linq.XName" /> 개체로 변환합니다.</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> 형식의 확장된 XML 이름이 들어 있는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">확장된 이름을 사용하여 생성한 <see cref="T:System.Xml.Linq.XName" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">
        <see cref="T:System.Xml.Linq.XName" />의 두 인스턴스가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />가 같지 않으면 <see langword="true" />이고, 같으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">현재 <see cref="T:System.Xml.Linq.XName" />이 지정된 <see cref="T:System.Xml.Linq.XName" />과 같은지 확인합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XName" />과 비교할 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XName" />이 지정된 <see cref="T:System.Xml.Linq.XName" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> 형식의 확장된 XML 이름을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <c>{namespace}localname</c> 형식의 확장된 XML 이름이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">XML 네임스페이스를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">지정한 <see cref="T:System.Xml.Linq.XNamespace" />가 현재 <see cref="T:System.Xml.Linq.XNamespace" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">현재 <see cref="T:System.Xml.Linq.XNamespace" />와 비교할 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">지정된 <see cref="T:System.Boolean" />가 현재 <see cref="T:System.Xml.Linq.XNamespace" />와 같은지 여부를 나타내는 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">지정된 URI(Uniform Resource Identifier)에 대한 <see cref="T:System.Xml.Linq.XNamespace" />를 가져옵니다.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">네임스페이스 URI가 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">지정된 URI로 만든 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Int32" />에 대한 해시 코드가 들어 있는 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">이 <see cref="T:System.Xml.Linq.XName" /> 및 지정된 로컬 이름을 사용하여 만든 <see cref="T:System.Xml.Linq.XNamespace" /> 개체를 반환합니다.</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">로컬 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">이 <see cref="T:System.Xml.Linq.XName" /> 및 지정된 로컬 이름을 사용하여 만든 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">이 네임스페이스의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">네임스페이스의 URI가 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">어떠한 네임스페이스에도 해당하지 않는 <see cref="T:System.Xml.Linq.XNamespace" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">어떠한 네임스페이스에도 해당하지 않는 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> 개체를 로컬 이름과 결합하여 <see cref="T:System.Xml.Linq.XName" />을 만듭니다.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">네임스페이스가 들어 있는 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">로컬 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">네임스페이스 및 로컬 이름을 사용하여 만든 새 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">
        <see cref="T:System.Xml.Linq.XNamespace" />의 두 인스턴스가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">
        <paramref name="left" />와 <paramref name="right" />가 서로 같은지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">URI(Uniform Resource Identifier)가 들어 있는 문자열을 <see cref="T:System.Xml.Linq.XNamespace" />로 변환합니다.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">네임스페이스 URI가 들어 있는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">URI 문자열로 만든 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">
        <see cref="T:System.Xml.Linq.XNamespace" />의 두 인스턴스가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNamespace" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">
        <paramref name="left" />와 <paramref name="right" />가 서로 다른지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 URI를 반환합니다.</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNamespace" />의 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">XML URI(<c>http://www.w3.org/XML/1998/namespace</c>)에 해당하는 <see cref="T:System.Xml.Linq.XNamespace" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">XML URI (<c>http://www.w3.org/XML/1998/namespace</c>)에 해당 하는입니다. <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">xmlns URI(<c>http://www.w3.org/2000/xmlns/</c>)에 해당하는 <see cref="T:System.Xml.Linq.XNamespace" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Xmlns URI<c>(</c>)에 해당 하는입니다. **** <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">XML 트리에서 노드(요소, 주석, 문서 형식, 처리 명령 또는 텍스트 노드)의 추상 개념을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">이 노드 바로 뒤에 지정된 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">이 노드 뒤에 추가할 단순 콘텐츠 또는 콘텐츠 개체 컬렉션이 들어 있는 콘텐츠 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">이 노드 바로 뒤에 지정된 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">이 노드 바로 앞에 지정된 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">이 노드 앞에 추가할 단순 콘텐츠 또는 콘텐츠 개체 컬렉션이 들어 있는 콘텐츠 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">이 노드 바로 앞에 지정된 콘텐츠를 추가합니다.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">콘텐츠 개체의 매개 변수 목록입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">이 노드의 상위 요소 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">이 노드의 상위 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 노드의 필터링된 상위 요소 컬렉션을 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">이 노드의 상위 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.
반환된 컬렉션의 노드 순서는 문서와 반대입니다.
이 메서드는 지연된 실행을 사용합니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">두 노드를 비교하여 상대적인 XML 문서 순서를 확인합니다.</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">노드가 서로 같으면 0, <paramref name="n1" />이 <paramref name="n2" />보다 앞에 나오면 -1, <paramref name="n1" />이 <paramref name="n2" />보다 뒤에 나오면 1이 들어 있는 <see langword="int" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">두 노드가 공통 상위 노드를 공유하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">이 노드에 대한 <see cref="T:System.Xml.XmlReader" />를 만듭니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">이 노드 및 하위 요소를 읽는 데 사용할 수 있는 <see cref="T:System.Xml.XmlReader" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">
        <paramref name="readerOptions" /> 매개 변수에서 지정된 옵션을 사용하여 <see cref="T:System.Xml.XmlReader" />를 만듭니다.</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">중복된 네임스페이스를 생략할지 여부를 지정하는 <see cref="T:System.Xml.Linq.ReaderOptions" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 개체</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">모든 하위 노드의 값을 포함하여 두 노드의 값을 비교합니다.</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">노드가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">두 노드의 상대 위치를 비교할 수 있는 비교자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">두 노드의 상대 위치를 비교할 수 있는 <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">이 노드 뒤에 있는 형제 요소의 컬렉션을 문서 순으로 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">이 노드 뒤에 있는 형제 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 노드 뒤에 있는 형제 요소의 필터링된 컬렉션을 문서 순으로 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 노드 뒤에 있는 형제 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">이 노드 앞에 있는 형제 요소의 컬렉션을 문서 순으로 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">이 노드 앞에 있는 형제 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 노드 앞에 있는 형제 요소의 필터링된 컬렉션을 문서 순으로 반환합니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">일치시킬 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">이 노드 앞에 있는 형제 요소에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XElement" />입니다. 일치하는 <see cref="T:System.Xml.Linq.XName" />이 있는 요소만 컬렉션에 포함됩니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">두 노드의 값이 같은지 비교할 수 있는 비교자를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">두 노드의 값이 같은지 비교할 수 있는 <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">문서 순서를 기준으로 현재 노드가 지정된 노드보다 뒤에 나오는지 확인합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">문서 순서를 비교할 <see cref="T:System.Xml.Linq.XNode" /> 입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 노드가 지정된 노드보다 뒤에 나오면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">문서 순서를 기준으로 현재 노드가 지정된 노드보다 앞에 나오는지 확인합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">문서 순서를 비교할 <see cref="T:System.Xml.Linq.XNode" /> 입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 노드가 지정된 노드보다 앞에 나오면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">이 노드의 다음 형제 노드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">다음 형제 노드가 들어 있는 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">이 노드 뒤에 있는 형제 노드의 컬렉션을 문서 순으로 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">이 노드 뒤에 있는 형제 노드에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">이 노드 앞에 있는 형제 노드의 컬렉션을 문서 순으로 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">이 노드 앞에 있는 형제 노드에 대한 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 문서 순 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">이 노드의 이전 형제 노드를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">이전 형제 노드가 들어 있는 <see cref="T:System.Xml.Linq.XNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />를 사용하여 <see cref="T:System.Xml.XmlReader" />를 만듭니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">이 <see cref="T:System.Xml.XmlReader" />로 읽어올 노드에 배치된 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">판독기에서 읽은 노드 및 해당 하위 노드가 들어 있는 <see cref="T:System.Xml.Linq.XNode" />입니다. 노드의 런타임 형식은 판독기에서 읽은 첫 번째 노드의 형식(<see cref="P:System.Xml.Linq.XObject.NodeType" />)에 따라 결정됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" />가 인식 가능한 노드 형식에 배치되지 않은 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">내부 <see cref="T:System.Xml.XmlReader" />에서 예외를 throw한 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The runtime type of the node is determined by the &lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt; of the first node encountered in the reader.">
        <see cref="T:System.Xml.Linq.XNode" />를 사용하여 <see cref="T:System.Xml.XmlReader" />를 만듭니다. 노드의 런타임 형식은 판독기에서 읽은 첫 번째 노드의 <see cref="P:System.Xml.Linq.XObject.NodeType" />에 따라 결정됩니다.</summary>
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XNode" />로 읽어올 노드에 배치된 판독기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="An XNode that contains the nodes read from the reader.">판독기에서 읽은 노드를 포함하는 XNode입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" />가 인식 가능한 노드 형식에 배치되지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">부모에서 이 노드를 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">부모 노드가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">이 노드를 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="Content that replaces this node.">이 노드를 대체할 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">이 노드를 지정된 콘텐츠로 바꿉니다.</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">새 콘텐츠의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">이 노드의 들여쓰기된 XML을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">들여쓰기된 XML이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">이 노드의 XML을 반환하고, 선택적으로 형식 지정을 해제합니다.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">XML이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 노드를 <see cref="T:System.Xml.XmlWriter" />로 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes the current node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">현재 노드를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write the current node into.">현재 노드를 쓸 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">노드의 문서 순서를 비교하는 기능이 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">두 노드를 비교하여 상대적인 문서 순서를 확인합니다.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">노드가 서로 같으면 0, <paramref name="x" />가 <paramref name="y" />보다 앞에 나오면 -1, <paramref name="x" />가 <paramref name="y" />보다 뒤에 나오면 1이 들어 있는 <see cref="T:System.Int32" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">두 노드가 공통 상위 노드를 공유하지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">두 노드를 비교하여 상대적인 문서 순서를 확인합니다.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">노드가 서로 같으면 0, <paramref name="x" />가 <paramref name="y" />보다 앞에 나오면 -1, <paramref name="x" />가 <paramref name="y" />보다 뒤에 나오면 1이 들어 있는 <see cref="T:System.Int32" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">두 노드가 공통 상위 노드를 공유하지 않는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">두 노드가 <see cref="T:System.Xml.Linq.XNode" />에서 파생되지 않는 경우</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">노드가 서로 같은지 비교합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">두 노드의 값을 비교합니다.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">노드가 서로 같은지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" />에 따른 해시 코드를 반환합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">해시할 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">노드에 대한 값 기반 해시 코드가 들어 있는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">두 노드의 값을 비교합니다.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Xml.Linq.XNode" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">노드가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">노드의 값에 따른 해시 코드를 반환합니다.</summary>
      <param name="obj" vsli:raw="The node to hash.">해시할 노드입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">노드에 대한 값 기반 해시 코드가 들어 있는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">X 트리의 노드 또는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />의 주석 목록에 개체를 추가합니다.</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">추가할 주석이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 첫 번째 주석 개체를 가져옵니다.</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">검색할 주석의 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">지정된 형식과 일치하는 첫 번째 주석 개체가 들어 있는 <see cref="T:System.Object" />이거나, 지정된 형식의 주석이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 첫 번째 주석 개체를 가져옵니다.</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">검색할 주석의 형식입니다.</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">지정된 형식과 일치하는 첫 번째 주석 개체이거나, 지정된 형식의 주석이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 주석 컬렉션을 가져옵니다.</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">검색할 주석의 형식입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Collections.Generic.IEnumerable`1" />에서 지정된 형식과 일치하는 주석이 들어 있는 <see cref="T:System.Object" />의 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 주석 컬렉션을 가져옵니다.</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">검색할 주석의 형식입니다.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 주석이 들어 있는 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />의 기본 URI를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.String" />의 기본 URI가 들어 있는 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">이 <see cref="T:System.Xml.Linq.XObject" /> 또는 해당 하위 항목이 변경될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">이 <see cref="T:System.Xml.Linq.XObject" /> 또는 해당 하위 항목이 변경되기 직전에 발생합니다.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />의 <see cref="T:System.Xml.Linq.XObject" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XDocument" />에 대한 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에 대한 노드 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XElement" />의 부모 <see cref="T:System.Xml.Linq.XObject" />를 가져옵니다.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" />의 부모 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 주석을 제거합니다.</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">제거할 주석의 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XObject" />에서 지정된 형식의 주석을 제거합니다.</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">제거할 주석의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">이 <see cref="T:System.Xml.Linq.XObject" />에 줄 정보가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" />에 줄 정보가 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">내부 <see cref="T:System.Xml.XmlReader" />에서 이 <see cref="T:System.Xml.Linq.XObject" />에 대해 보고하는 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" />에서 이 <see cref="T:System.Xml.XmlReader" />에 대해 보고한 줄 번호가 들어 있는 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">내부 <see cref="T:System.Xml.XmlReader" />에서 이 <see cref="T:System.Xml.Linq.XObject" />에 대해 보고하는 줄 위치를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" />에서 이 <see cref="T:System.Xml.XmlReader" />에 대해 보고한 줄 위치가 들어 있는 <see cref="T:System.Xml.Linq.XObject" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" />에 대한 이벤트가 발생할 때 이벤트 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" />에 추가되었거나 추가될 <see cref="T:System.Xml.Linq.XContainer" />입니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">이름이 변경되었거나 변경될 <see cref="T:System.Xml.Linq.XObject" />입니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XObject" />에서 제거되었거나 제거될 <see cref="T:System.Xml.Linq.XContainer" />입니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">변경되었거나 변경될 <see cref="T:System.Xml.Linq.XObject" />의 값입니다. 또한 빈 요소의 serialization이 변경된 경우(빈 태그가 시작/끝 태그 쌍으로 변경되었거나 그 반대로 변경된 경우) 이 이벤트가 발생합니다.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">
        <see cref="E:System.Xml.Linq.XObject.Changing" /> 및 <see cref="E:System.Xml.Linq.XObject.Changed" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">LINQ to XML 이벤트에 대한 이벤트 인수가 들어 있는 <see cref="T:System.Xml.Linq.XObjectChange" />입니다.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Add" /> 변경 이벤트에 대한 이벤트 인수입니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Name" /> 변경 이벤트에 대한 이벤트 인수입니다.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">변경 형식을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">변경 형식이 들어 있는 <see cref="T:System.Xml.Linq.XObjectChange" />입니다.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Remove" /> 변경 이벤트에 대한 이벤트 인수입니다.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">
        <see cref="F:System.Xml.Linq.XObjectChange.Value" /> 변경 이벤트에 대한 이벤트 인수입니다.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">XML 처리 명령을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">이 <see cref="T:System.String" />의 대상 애플리케이션이 들어 있는 <see cref="T:System.Xml.Linq.XProcessingInstruction" />입니다.</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XProcessingInstruction" />의 문자열 데이터입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> 또는 <paramref name="data" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" />이 XML 이름에 대한 제약 조건에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">복사할 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 노드입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">이 처리 명령의 문자열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">이 처리 명령의 문자열 값이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 문자열이 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">이 처리 명령의 대상 애플리케이션이 들어 있는 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">이 처리 명령의 대상 애플리케이션이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 문자열이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">
        <paramref name="target" />이 XML 이름에 대한 제약 조건에 맞지 않는 경우</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 처리 명령을 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">이 처리 명령을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XProcessingInstruction" />을 지정된 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XProcessingInstruction" />을 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">XML 트리에서 지연된 스트리밍 출력을 지원하는 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">지정된 <see cref="T:System.Xml.Linq.XName" />에서 <see cref="T:System.Xml.Linq.XElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">요소의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">지정된 이름 및 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XStreamingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">요소 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="content" vsli:raw="The contents of the element.">요소의 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">지정된 이름 및 콘텐츠를 사용하여 <see cref="T:System.Xml.Linq.XStreamingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">요소 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</param>
      <param name="content" vsli:raw="The contents of the element.">요소의 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">지정된 콘텐츠를 이 <see cref="T:System.Xml.Linq.XStreamingElement" />에 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">스트리밍 요소에 추가할 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">지정된 콘텐츠를 이 <see cref="T:System.Xml.Linq.XStreamingElement" />에 자식으로 추가합니다.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">스트리밍 요소에 추가할 콘텐츠입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">이 스트리밍 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">이 스트리밍 요소의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XStreamingElement" />를 지정된 <see cref="T:System.IO.Stream" />에 출력합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XDocument" />를 출력할 스트림입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">이 <see cref="T:System.Xml.Linq.XStreamingElement" />를 지정된 <see cref="T:System.IO.Stream" />에 출력하고 선택적으로 형식 지정 동작을 지정합니다.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XDocument" />를 출력할 스트림입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">서식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">이 스트리밍 요소를 <see cref="T:System.IO.TextWriter" />로 serialize합니다.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" />를 쓸 <see cref="T:System.Xml.Linq.XStreamingElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">이 스트리밍 요소를 <see cref="T:System.IO.TextWriter" />로 serialize하고, 선택적으로 서식 지정을 해제합니다.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">XML을 출력할 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">이 스트리밍 요소를 파일로 serialize합니다.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">파일 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">이 스트리밍 요소를 파일로 serialize하고, 선택적으로 서식 지정을 해제합니다.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">파일 이름이 들어 있는 <see cref="T:System.String" />입니다.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">서식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 스트리밍 요소를 <see cref="T:System.Xml.XmlWriter" />로 serialize합니다.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" />를 쓸 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">이 스트리밍 요소의 형식 지정(들여쓰기)된 XML을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">들여쓰기된 XML이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">이 스트리밍 요소의 XML을 반환하고, 선택적으로 서식 지정을 해제합니다.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">형식 지정 동작을 지정하는 <see cref="T:System.Xml.Linq.SaveOptions" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">XML이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 스트리밍 요소를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">텍스트 노드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">
        <see cref="T:System.Xml.Linq.XText" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" /> 노드의 값이 들어 있는 <see cref="T:System.Xml.Linq.XText" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">다른 <see cref="T:System.Xml.Linq.XText" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XText" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">복사할 <see cref="T:System.Xml.Linq.XText" /> 노드입니다.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">이 노드에 대한 노드 형식을 가져옵니다.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">노드 형식입니다. <see cref="T:System.Xml.Linq.XText" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Text" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">이 노드의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">이 노드의 값이 들어 있는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 노드를 <see cref="T:System.Xml.XmlWriter" />로 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">이 <see cref="T:System.Xml.Linq.XText" />를 지정된 <see cref="T:System.Xml.XmlWriter" />에 비동기적으로 씁니다.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to.">이 <see cref="T:System.Xml.Linq.XText" />를 작성할 작성기입니다.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">비동기 작업(asynchronous operation)의 취소를 요청하는 데 사용할 수 있는 토큰입니다.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">비동기 쓰기 작업을 나타내는 태스크입니다.</returns>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">이 클래스에는 XSD 유효성 검사에 대한 LINQ to XML 확장 메서드가 포함됩니다.</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">유효성이 검사된 특성의 PSVI(스키마 유효성 검사 이후 정보 집합)를 가져옵니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">이전에 유효성을 검사한 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />에 대한 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">유효성이 검사된 요소의 PSVI(스키마 유효성 검사 이후 정보 집합)를 가져옵니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">이전에 유효성을 검사한 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />에 대한 PSVI(스키마 유효성 검사 이후 정보 집합)가 포함된 <see cref="T:System.Xml.Linq.XElement" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">이 메서드는 <see cref="T:System.Xml.Linq.XAttribute" />가 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 준수하는지 확인합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">유효성을 검사할 하위 트리를 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XAttribute" />가 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">유효성을 검사할 하위 트리를 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">이 메서드는 <see cref="T:System.Xml.Linq.XDocument" />가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 XSD를 준수하는지 확인합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XDocument" />가 <see cref="T:System.Xml.Schema.XmlSchemaSet" />에서 XSD를 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XDocument" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">이 메서드는 <see cref="T:System.Xml.Linq.XElement" /> 하위 트리가 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 준수하는지 확인합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">유효성을 검사할 하위 트리를 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Xml.Linq.XElement" /> 하위 트리가 지정된 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaSet" />을 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">유효성을 검사할 <see cref="T:System.Xml.Linq.XElement" />입니다.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">유효성을 검사할 하위 트리를 지정하는 <see cref="T:System.Xml.Schema.XmlSchemaObject" />입니다.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">유효성을 검사할 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다. <see langword="null" />인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <see cref="T:System.Boolean" />입니다.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">XSD(XML 스키마 정의) 언어 유효성 검사 오류가 발생한 경우 throw됩니다.</exception>
    </member>
  </members>
</doc>