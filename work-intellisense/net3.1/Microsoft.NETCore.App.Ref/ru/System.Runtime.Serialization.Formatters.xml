<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>Предоставляет основные функциональные возможности для форматеров сериализации общеязыковой среды выполнения.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.SerializationBinder" />, используемый с текущим форматером.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" />, используемый с текущим модулем форматирования.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для текущей сериализации.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для текущей сериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>При переопределении в производном классе десериализует поток, подсоединенный к форматеру при его создании, создавая граф объектов, идентичный графу, первоначально сериализованному в этот поток.</summary>
      <param name="serializationStream">Десериализуемый поток.</param>
      <returns>Верхний объект десериализованного графа объектов.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>Возвращает следующий сериализуемый объект из внутренней рабочей очереди форматера.</summary>
      <param name="objID">Идентификатор, назначенный текущему объекту при сериализации.</param>
      <returns>Следующий сериализуемый объект.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">У следующего объекта, извлеченного из рабочей очереди, нет назначенного идентификатора.</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>Содержит <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />, используемый с текущим форматером.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>Содержит <see cref="T:System.Collections.Queue" /> объектов, предназначенных для сериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>Намечает объект для сериализации.</summary>
      <param name="obj">Объект, назначенный для сериализации.</param>
      <returns>Идентификатор объекта, назначенный объекту.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>При переопределении в производном классе сериализует граф объектов с заданным корнем в поток, уже подсоединенный к форматеру.</summary>
      <param name="serializationStream">Поток, в который сериализуются объекты.</param>
      <param name="graph">Объект в корне сериализуемого графа.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>При переопределении в производном классе возвращает или задает <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, используемый с текущим форматером.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, используемый с текущим модулем форматирования.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>При переопределении в производном классе записывает массив в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj">Записываемый массив.</param>
      <param name="name">Имя массива.</param>
      <param name="memberType">Тип элементов массива.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>При переопределении в производном классе записывает логическое значение в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>При переопределении в производном классе записывает 8-битовое целое число без знака в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>При переопределении в производном классе записывает знак Юникода в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>При переопределении в производном классе записывает значение <see cref="T:System.DateTime" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>При переопределении в производном классе записывает значение <see cref="T:System.Decimal" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>При переопределении в производном классе записывает число с плавающей запятой с удвоенной точностью в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>При переопределении в производном классе записывает 16-битовое целое число со знаком в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>При переопределении в производном классе записывает 32-битовое целое число со знаком в поток.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>При переопределении в производном классе записывает 64-битовое целое число со знаком в поток.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>Проверяет тип полученных данных и вызывает соответствующий метод <see langword="Write" /> для записи в поток, уже подсоединенный к форматеру.</summary>
      <param name="memberName">Сериализуемое имя элемента.</param>
      <param name="data">Объект, записываемый в поток, подсоединенный к форматеру.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>При переопределении в производном классе записывает ссылку на объект в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj">Записываемая ссылка на объект.</param>
      <param name="name">Имя элемента.</param>
      <param name="memberType">Тип объекта, на который указывает ссылка.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>При переопределении в производном классе записывает 8-битовое целое число со знаком в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>При переопределении в производном классе записывает число с плавающей запятой с обычной точностью в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>При переопределении в производном классе записывает значение <see cref="T:System.TimeSpan" /> в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>При переопределении в производном классе записывает 16-битовое целое число без знака в поток, уже подсоединенный к форматеру.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>При переопределении в производном классе записывает 32-битовое целое число без знака в поток, уже присоединенный к модулю форматирования.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>При переопределении в производном классе записывает 64-битовое целое число без знака в поток, уже присоединенный к модулю форматирования.</summary>
      <param name="val">Значение для записи.</param>
      <param name="name">Имя элемента.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>При переопределении в производном классе записывает значение заданного типа в поток, уже подсоединенный к форматеру.</summary>
      <param name="obj">Объект, представляющий тип значения.</param>
      <param name="name">Имя элемента.</param>
      <param name="memberType">
        <see cref="T:System.Type" /> типа значения.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>Представляет базовую реализацию интерфейса <see cref="T:System.Runtime.Serialization.IFormatterConverter" />, использующую класс <see cref="T:System.Convert" /> и интерфейс <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>Преобразует значение в заданный <see cref="T:System.Type" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <param name="type">
        <see cref="T:System.Type" />, в который преобразуется <paramref name="value" />.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>Преобразует значение в заданный <see cref="T:System.TypeCode" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <param name="typeCode">
        <see cref="T:System.TypeCode" />, в который преобразуется <paramref name="value" />.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>Преобразует значение в <see cref="T:System.Boolean" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>Преобразует значение в 8-битовое целое число без знака.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>Преобразует значение в знак Юникода.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>Преобразует значение в <see cref="T:System.DateTime" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>Преобразует значение в <see cref="T:System.Decimal" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>Преобразует значение в число удвоенной точности с плавающей запятой.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>Преобразует значение в 16-битовое знаковое целое число.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>Преобразует значение в 32-битовое целое число со знаком.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>Преобразует значение в 64-битовое целое число со знаком.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>Преобразует значение в <see cref="T:System.SByte" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>Преобразует значение в число обычной точности с плавающей запятой.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>Преобразует указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>Преобразует значение в 16-битовое целое число без знака.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>Преобразует значение в 32-битовое целое число без знака.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>Преобразует значение в 64-битовое целое число без знака.</summary>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение параметра <paramref name="value" /> или значение <see langword="null" />, если параметр <paramref name="type" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>Сериализует и десериализует объект или полный граф связанных объектов в двоичном формате.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> с заданными суррогатным селектором и потоковым контекстом.</summary>
      <param name="selector">Используемый <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />. Может иметь значение <see langword="null" />.</param>
      <param name="context">Новые источник и назначение для сериализованных данных.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>Получает или задает поведение десериализатора в части, касающейся поиска и загрузки сборок.</summary>
      <returns>Одно из значений <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, определяющее поведение десериализатора.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>Получает или задает объект типа <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который управляет привязкой сериализованного объекта к типу.</summary>
      <returns>Связыватель сериализации, используемый с этим форматером.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>Получает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" /> для этого форматера.</summary>
      <returns>Строковый контекст, используемый с этим форматером.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>Десериализует заданный поток в граф объекта.</summary>
      <param name="serializationStream">Поток, из которого десериализуется граф объекта.</param>
      <returns>Верхняя (корневая) позиция графы объектов.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serializationStream" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> поддерживает поиск, но его длина равна 0.

или -
Целевым типом является тип <see cref="T:System.Decimal" />, однако его значение находится за пределами диапазона типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>Получает или задает уровень <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> автоматической десериализации, которая осуществляется <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
      <returns>Уровень <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, предоставляющий текущий уровень автоматической десериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Сериализует объект или граф объектов с указанной вершиной (корнем) в заданный поток.</summary>
      <param name="serializationStream">Поток, для которого необходимо сериализовать граф.</param>
      <param name="graph">Объект в корне сериализуемого графа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="serializationStream" /> — <see langword="null" />.
-или-
Значением параметра <paramref name="graph" /> является null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Во время сериализации произошла ошибка, например, если объект в параметре <paramref name="graph" /> не отмечен как сериализуемый.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>Получает или задает <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, управляющий подстановкой типа при сериализации и десериализации.</summary>
      <returns>Суррогатный селектор, используемый с этим форматером.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>Получает или задает формат, в котором описания типов раскладываются в сериализованном потоке.</summary>
      <returns>Стиль разбивки типов для использования.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>Указывает метод, который будет использоваться во время десериализации для расположения и загрузки сборок.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>В полном режиме сборка, используемая во время десериализации, должна точно соответствовать сборке, используемой во время сериализации. Метод <see cref="Overload:System.Reflection.Assembly.Load" /> класса <see cref="T:System.Reflection.Assembly" /> используется для загрузки сборки.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>В простом режиме сборка, используемая во время десериализации, не должна точно соответствовать сборке, используемой во время сериализации. В частности, номера версий не должны совпадать, так как метод <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> используется для загрузки сборки.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>Указывает формат, в котором описания типов раскладываются в сериализованном потоке.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>Указывает, что этот тип можно задавать для всех членов объектов и <see cref="T:System.Runtime.Serialization.ISerializable" /> членов объектов.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>Указывает, что эти типы можно назначить для массивов объектов, членов объектов типа <see cref="T:System.Object" /> и неэлементарных типов значений <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>Указывает, что эти строки можно задавать в формате XSD вместо SOAP. Нет переданных строковых идентификаторов.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>Разрешает доступ к именам и типам полей объектов, которые поддерживают интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>Получает или задает имена полей сериализованных объектов.</summary>
      <returns>Имена полей сериализованных объектов.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>Получает или задает типы полей сериализованных объектов.</summary>
      <returns>Типы полей сериализованных объектов.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>Задает уровень автоматической десериализации для удаленного взаимодействия .NET Framework.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>Полный уровень десериализации для удаленного взаимодействия .NET Framework. Поддерживаются все типы, которые поддерживаются удаленным взаимодействием во всех ситуациях.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>Низкий уровень десериализации для удаленного взаимодействия .NET Framework. Поддерживаются типы, связанные с основными функциональными возможностями удаленного взаимодействия.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>Предоставляет статические методы, упрощающие реализацию <see cref="T:System.Runtime.Serialization.Formatter" /> для сериализации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>Определяет, возможно ли десериализовать заданный <see cref="T:System.Type" /> со значением свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, равным <see langword="Low" />.</summary>
      <param name="t">
        <see cref="T:System.Type" /> для проверки возможности десериализации.</param>
      <param name="securityLevel">Значение свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException">Параметр <paramref name="t" /> является дополнительным типом и его невозможно сериализовать, когда свойство <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> имеет значение <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>Извлекает данные из заданного объекта и возвращает их в виде массива объектов.</summary>
      <param name="obj">Объект, записываемый в форматер.</param>
      <param name="members">Элементы, извлекаемые из объекта.</param>
      <returns>Массив <see cref="T:System.Object" />, содержащий данные, сохраненные в <paramref name="members" /> и связанные с <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="obj" /> или параметра <paramref name="members" /> — <see langword="null" />.
Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Элемент <paramref name="members" /> не представляет поле.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>Создает новый экземпляр заданного типа объекта.</summary>
      <param name="type">Тип создаваемого объекта.</param>
      <returns>Обнуленный объект заданного типа.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Параметр <paramref name="type" /> недопустимого типа общеязыковой среды выполнения.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>Возвращает все сериализуемые элементы для класса заданного <see cref="T:System.Type" />.</summary>
      <param name="type">Сериализуемый тип.</param>
      <returns>Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Возвращает все сериализуемые элементы для класса заданного типа <see cref="T:System.Type" /> и в предоставленном <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="type">Сериализуемый или клонируемый тип.</param>
      <param name="context">Контекст, в котором происходит сериализация.</param>
      <returns>Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Возвращает суррогат сериализации для заданного <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</summary>
      <param name="innerSurrogate">Заданный суррогат.</param>
      <returns>Объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> для указанного узла <paramref name="innerSurrogate" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>Ведет поиск <see cref="T:System.Type" /> заданного объекта в предоставленном <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assem">Сборка, в которой необходимо найти объект.</param>
      <param name="name">Имя объекта.</param>
      <returns>
        <see cref="T:System.Type" /> именованного объекта.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assem" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>Создает новый экземпляр заданного типа объекта.</summary>
      <param name="type">Тип создаваемого объекта.</param>
      <returns>Обнуленный объект заданного типа.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>Заполняет заданный объект значениями для каждого поля, скопированного из массива данных объектов.</summary>
      <param name="obj">Объект для заполнения.</param>
      <param name="members">Массив <see cref="T:System.Reflection.MemberInfo" />, описывающий заполняемые поля и свойства.</param>
      <param name="data">Массив <see cref="T:System.Object" />, задающий значения для каждого заполняемого поля и свойства.</param>
      <returns>Вновь заполненный объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" />, <paramref name="members" /> или <paramref name="data" /> имеет значение <see langword="null" />.
Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина <paramref name="members" /> не совпадает с длиной <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Элемент <paramref name="members" /> не является экземпляром <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>Предоставляет функциональные возможности для форматирования сериализованных объектов.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>Десериализует данные в предоставленный поток и воспроизводит граф объектов.</summary>
      <param name="serializationStream">Поток, содержащий десериализуемые данные.</param>
      <returns>Верхний объект десериализованного графа.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Сериализует объект или граф объектов с заданным корнем в предоставляемом потоке.</summary>
      <param name="serializationStream">Поток, в который модуль форматирования помещает сериализованные данные. Этот поток способен ссылаться на многочисленные резервные хранилища (файлы, сеть, память и т.д.).</param>
      <param name="graph">Объект или корень графа объекта для сериализации. Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый текущим форматером.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый этим модулем форматирования.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>Реализует селектор суррогата сериализации, который позволяет одному объекту выполнять сериализацию и десериализацию другого.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет предоставленный <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации объекта.</summary>
      <param name="obj">Объект для сериализации.</param>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Заполняет объект с помощью сведений в <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Объект для заполнения.</param>
      <param name="info">Сведения для заполнения объекта.</param>
      <param name="context">Источник, из которого десериализуется объект.</param>
      <param name="selector">Суррогатный селектор, в котором начинается поиск совместимого знака-заместителя.</param>
      <returns>Заполняет десериализованный объект.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>Указывает класс селектора суррогата сериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Задает следующий <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> для суррогатов, если у текущего экземпляра отсутствует суррогат для заданного типа и сборки в заданном контексте.</summary>
      <param name="selector">Следующий проверяемый селектор суррогата.</param>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>Возвращает следующий селектор суррогата в цепочку.</summary>
      <returns>Следующий селектор суррогата в цепочке или <see langword="null" />.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Находит суррогат, который представляет тип заданного объекта, начиная с заданного селектора суррогата для заданного контекста сериализации.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта (класса), для которого необходим суррогат.</param>
      <param name="context">Контекст источника или назначения для текущей сериализации.</param>
      <param name="selector">Когда этот метод возвращается, содержит <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, хранящий ссылку на селектор суррогата, в котором найден соответствующий суррогат. Этот параметр передается неинициализированным.</param>
      <returns>Соответствующий суррогат для заданного типа в заданном контексте.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>Создает идентификаторы для объектов.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>Возвращает идентификатор для заданного объекта, создавая новый идентификатор, если заданный объект уже не был идентифицирован <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj">Объект, для которого необходим идентификатор.</param>
      <param name="firstTime">
        <see langword="true" />, если <paramref name="obj" /> не был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; в противном случае — <see langword="false" />.</param>
      <returns>Идентификатор объекта используется для сериализации. Параметру <paramref name="firstTime" /> присваивается значение <see langword="true" />, если объект идентифицируется в первый раз; в противном случае присваивается значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Сделан запрос <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> для сохранения дорожек слишком большого количества объектов.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>Определяет, был ли объекту уже присвоен идентификатор.</summary>
      <param name="obj">Запрашиваемый объект.</param>
      <param name="firstTime">
        <see langword="true" />, если <paramref name="obj" /> не был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; в противном случае — <see langword="false" />.</param>
      <returns>Идентификатор объекта имеет значение <paramref name="obj" />, если он был ранее известен <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />, в противном случае — ноль.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>Отслеживает объекты при их десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector">Используемый суррогатный селектор. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> определяет соответствующий суррогат для использования при десериализации объектов заданного типа. Во время десериализации суррогатный селектор создает новый экземпляр объекта из сведений, переданных на поток.</param>
      <param name="context">Контекст потоковой передачи. <see cref="T:System.Runtime.Serialization.StreamingContext" /> не используется <see langword="ObjectManager" />, но передается в качестве параметра любым объектам, реализующим <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеющим <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Эти объекты могут выполнять определенные действия в зависимости от источника сведений для десериализации.</param>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>Выполняет все записанные адресные привязки.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Неудачное завершение адресной привязки.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>Возвращает объект с заданным идентификатором объекта.</summary>
      <param name="objectID">Идентификатор запрашиваемого объекта.</param>
      <returns>Объект с заданным идентификатором объекта, если он был перед этим сохранен, или <see langword="null" />, если нет такого зарегистрированного объекта.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>Вызывает событие десериализации для любого зарегистрированного объекта, который реализует <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>Вызывает метод, помеченный <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj">Экземпляр типа, содержащего вызываемый метод.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>Записывает адресную привязку одного элемента в массив.</summary>
      <param name="arrayToBeFixed">Идентификатор массива, используемого для записи адресной привязки.</param>
      <param name="index">Индекс в <c>arrayFixup</c>, для которого запрашивается адресная привязка.</param>
      <param name="objectRequired">Идентификатор объекта, который указывает текущий элемент массива после завершения адресной привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="index" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>Записывает адресные привязки заданных элементов в массив, который будет выполнен позже.</summary>
      <param name="arrayToBeFixed">Идентификатор массива, используемого для записи адресной привязки.</param>
      <param name="indices">Индексы в многомерном массиве, для которого регистрируется адресная привязка.</param>
      <param name="objectRequired">Идентификатор объекта, который укажет элементы массива после завершения адресной привязки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="indices" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>Записывает адресную привязку для элемента объекта, который будет выполнен позже.</summary>
      <param name="objectToBeFixed">Идентификатор объекта, требующего ссылку на <paramref name="objectRequired" />.</param>
      <param name="memberName">Имя элемента <paramref name="objectToBeFixed" />, где будет выполнена адресная привязка.</param>
      <param name="objectRequired">Идентификатор объекта, требуемого <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="objectToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="memberName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>Записывает адресную привязку для элемента объекта, который будет выполнен позже.</summary>
      <param name="objectToBeFixed">Идентификатор объекта, требующего ссылку на объект <paramref name="objectRequired" />.</param>
      <param name="member">Элемент <paramref name="objectToBeFixed" />, где будет выполнена адресная привязка.</param>
      <param name="objectRequired">Идентификатор объекта, требуемого <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="objectToBeFixed" /> или <paramref name="objectRequired" /> меньше или равен нулю.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="member" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>Регистрирует объект при его десериализации, сопоставляя его с <paramref name="objectID" />.</summary>
      <param name="obj">Объект для регистрации.</param>
      <param name="objectID">Идентификатор объекта для регистрации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>Регистрирует объект при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая используемый с ним <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Объект для регистрации.</param>
      <param name="objectID">Идентификатор объекта для регистрации.</param>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>Регистрирует элемент объекта при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Объект для регистрации.</param>
      <param name="objectID">Идентификатор объекта для регистрации.</param>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <param name="idOfContainingObj">Идентификатор объекта, который содержит <paramref name="obj" />. Этот параметр требуется только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="member">Поле в содержащем объекте, где находится <paramref name="obj" />. Этот параметр имеет смысл только в случае, если <paramref name="obj" /> является типом значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />, или <paramref name="member" /> не является <see cref="T:System.Reflection.FieldInfo" />, а <paramref name="member" /> не имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>Регистрирует элемент массива, содержащийся в объекте при его десериализации, сопоставляя его с <paramref name="objectID" /> и записывая <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Объект для регистрации.</param>
      <param name="objectID">Идентификатор объекта для регистрации.</param>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> используется, если параметр <paramref name="obj" /> реализует объект <see cref="T:System.Runtime.Serialization.ISerializable" /> или имеет объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> завершается с помощью любых требуемых сведений об адресной привязке, а затем передается необходимому объекту, когда объект завершается.</param>
      <param name="idOfContainingObj">Идентификатор объекта, который содержит <paramref name="obj" />. Этот параметр требуется только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="member">Поле в содержащем объекте, где находится <paramref name="obj" />. Этот параметр имеет смысл только в случае, если <paramref name="obj" /> является типом значения.</param>
      <param name="arrayIndex">Если параметр <paramref name="obj" /> является объектом <see cref="T:System.ValueType" /> и элементом массива, параметр <paramref name="arrayIndex" /> содержит индекс в том массиве, где находится <paramref name="obj" />. Параметр <paramref name="arrayIndex" /> игнорируется, если параметр <paramref name="obj" /> не является ни объектом <see cref="T:System.ValueType" />, ни элементом массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="objectID" /> меньше или равно нулю.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> уже зарегистрирован для объекта, отличного от <paramref name="obj" />, или <paramref name="member" /> не является <see cref="T:System.Reflection.FieldInfo" />, а <paramref name="member" /> не имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>Позволяет пользователям управлять загрузкой классов и выбирать класс для загрузки.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>При переопределении в производном классе управляет привязкой сериализованного объекта к типу.</summary>
      <param name="serializedType">Тип объекта, экземпляр которого создается модулем форматирования.</param>
      <param name="assemblyName">Указывает имя <see cref="T:System.Reflection.Assembly" /> сериализованного объекта.</param>
      <param name="typeName">Указывает имя <see cref="T:System.Type" /> сериализованного объекта.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>При переопределении в производном классе управляет привязкой сериализованного объекта к типу.</summary>
      <param name="assemblyName">Задает имя <see cref="T:System.Reflection.Assembly" /> сериализованного объекта.</param>
      <param name="typeName">Указывает имя <see cref="T:System.Type" /> сериализованного объекта.</param>
      <returns>Тип объекта, экземпляр которого создается модулем форматирования.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>Управляет процессами сериализации во время исполнения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащего сведения о текущей операции сериализации.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>Вызывает событие обратного вызова OnSerializing, если тип объекта содержит его, и регистрирует объект для вызова события OnSerialized, если тип объекта содержит его.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>Регистрирует объект, по которому будут созданы события.</summary>
      <param name="obj">Объект для регистрации.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>Содействует форматерам при выборе знака-заместителя сериализации для делегирования в обработку сериализации или десериализации.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Добавляет суррогат в список проверенных суррогатов.</summary>
      <param name="type">
        <see cref="T:System.Type" />, для которого требуется суррогат.</param>
      <param name="context">Связанные с контекстом данные.</param>
      <param name="surrogate">Суррогат для вызова этого типа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="type" /> или параметра <paramref name="surrogate" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Для этого типа и контекста суррогат уже существует.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Добавляет заданный <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, который может обрабатывать конкретный тип объекта для списка суррогатов.</summary>
      <param name="selector">Добавляемый суррогатный селектор.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="selector" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Данный селектор уже находится в списке селекторов.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>Возвращает следующий селектор в цепочку селекторов.</summary>
      <returns>Следующий <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> в цепочке селекторов.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Возвращает суррогат для определенного типа.</summary>
      <param name="type">
        <see cref="T:System.Type" />, для которого запрашивается суррогат.</param>
      <param name="context">Потоковый контекст.</param>
      <param name="selector">Используемый суррогат.</param>
      <returns>Суррогат для определенного типа.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Удаляет суррогат, связанный с заданным типом.</summary>
      <param name="type">
        <see cref="T:System.Type" />, для которого удаляется суррогат.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> для текущего суррогата.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
  </members>
</doc>