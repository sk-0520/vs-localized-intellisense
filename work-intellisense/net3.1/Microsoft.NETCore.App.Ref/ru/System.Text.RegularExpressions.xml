<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Представляет результаты из одной успешной записи части выражения.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">Позиция в исходной строке, в которой обнаружен первый символ записанной подстроки.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">Начальная позиция с отсчетом с нуля в исходной строке, в которой обнаружена записанная подстрока.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Получает длину записанной подстроки.</summary>
      <returns vsli:raw="The length of the captured substring.">Длина записанной подстроки.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Извлекает записанную подстроку из входной строки путем вызова свойства <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns vsli:raw="The substring that was captured by the match.">Подстрока, записанная по совпадению.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Получает записанную подстроку из входной строки.</summary>
      <returns vsli:raw="The substring that is captured by the match.">Подстрока, записанная по совпадению.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Представляет набор записей, сделанных одной и той же группой записи.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">Позиция в конечном массиве, в которой следует начать копирование.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.
-или-
Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Получает количество подстрок, записанных группой.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Число элементов в объекте <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Объект, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Capture" /> коллекции <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Получает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Получает отдельный член коллекции.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Индекс в коллекцию записи.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Записанная подстрока в позиции <paramref name="i" /> в коллекции.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">Параметр <paramref name="i" /> имеет значение меньше 0 или больше <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Объект, который можно использовать для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Представляет результаты отдельной группы записи.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Получает коллекцию всех записей, соответствующих группе записи, в порядке, в котором первыми расположены внутренние слева направо (или внутренние справа налево, если регулярное выражение изменено с помощью параметра <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). Коллекция может иметь ноль и более элементов.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">Коллекция подстрок, соответствующих группе.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Возвращает имя группы записи, представляемой текущим экземпляром.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">Имя захватываемой группы, представляемое текущим экземпляром.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Получает значение, указывающее на то, успешно ли совпадение.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если совпадение успешно, иначе значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Возвращает объект <see langword="Group" />, эквивалентный тому из предоставленных, который можно безопасно разделить между несколькими потоками.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">Входной объект <see cref="T:System.Text.RegularExpressions.Group" />.</param>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Объект регулярного выражения <see langword="Group" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="inner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Возвращает набор записанных групп в одном сопоставлении.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Определяет, содержит ли коллекция группы захватываемую группу, обозначенную указанным именем.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Строка с именем захватываемой группы, которую нужно найти.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, если коллекция группы содержит захватываемую группу, обозначенную <paramref name="key" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">Позиция в конечном массиве, в которой необходимо начать копирование.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.

или -

Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Копирует элементы коллекции групп в массив <see cref="T:System.Text.RegularExpressions.Group" />, начиная с определенного индекса в массиве.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">Одномерный массив, куда копируются элементы из данной коллекции групп. Индекс в массиве должен начинаться с нуля.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">Значение параметра <paramref name="arrayIndex" /> меньше нуля.

или -

Значение <paramref name="arrayIndex" /> превышает длину <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">Длина <paramref name="array" /> - <paramref name="arrayIndex" /> меньше количества коллекции групп.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Возвращает количество групп в коллекции.</summary>
      <returns vsli:raw="The number of groups in the collection.">Число групп в коллекции.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Перечислитель, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Group" /> в коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" /> синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Включает доступ к члену коллекции с помощью целочисленного индекса.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">Отсчитываемый от нуля индекс извлекаемого элемента коллекции.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">Элемент коллекции, заданный параметром <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Включает доступ к члену коллекции с помощью строкового индекса.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">Имя группы записи.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">Элемент коллекции, заданный параметром <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Возвращает перечисление строк, содержащее ключи имени коллекции групп.</summary>
      <returns vsli:raw="The name keys of the group collection.">Ключи имени коллекции групп.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Копия объекта <see cref="T:System.Text.RegularExpressions.Match" /> для синхронизации.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Добавляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">Группа, добавляемая в коллекцию.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Очищает коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Определяет, содержит ли коллекция групп указанный элемент группы.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Группа, которую необходимо найти в коллекции групп.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to remove.">Удаляемая группа.</param>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Этот метод не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Перечислитель, содержащий все имена и объекты, расположенные в коллекции <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Перечислитель, содержащий все расположенные в коллекции групп объекты <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Определяет индекс определенной группы в коллекции групп.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Группа, которую необходимо найти в коллекции групп.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Индекс <paramref name="item" />, если он найден; в противном случае — значение –1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Позиция, в которую вставляется группа.</param>
      <param name="item" vsli:raw="The group to insert.">Вставляемая группа.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Помещает группу в заданную позицию в коллекции.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">Отсчитываемый от нуля индекс группы в коллекции групп.</param>
      <returns vsli:raw="The group in the desired position.">Группа в нужной должности.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Не удается задать элемент. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Отсчитываемый от нуля индекс удаляемой группы.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Добавляет объект в коллекцию групп. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">Объект, добавляемый в коллекцию групп.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Очищает коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Определяет, содержит ли коллекция групп указанный элемент группы.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Группа, которую необходимо найти в коллекции групп.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Определяет индекс определенной группы в коллекции групп.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Группа, которую необходимо найти в коллекции групп.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Индекс <paramref name="item" />, если он найден; в противном случае — значение –1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Позиция, в которую вставляется группа.</param>
      <param name="value" vsli:raw="The group to insert.">Вставляемая группа.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Получает значение, указывающее, имеет ли коллекция групп фиксированный размер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Всегда <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Возвращает группу в желаемой позиции.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">Отсчитываемый от нуля индекс позиции группы в коллекции групп.</param>
      <returns vsli:raw="The group in the desired position.">Группа в нужной должности.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Не удается задать элемент. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The group to remove.">Удаляемая группа.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Отсчитываемый от нуля индекс удаляемой группы.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Пытается получить группу, определяемую предоставленным ключом имени, если она существует в коллекции групп.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Строка с искомым ключом имени группы.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">Метод возвращает группу, имя которой <paramref name="key" />, если она найдена; в противном случае — значение <see langword="null" />, если она не найдена.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, если группа, определяемая предоставленным ключом имени, существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Возвращает перечисление групп со всеми группами в коллекции групп.</summary>
      <returns vsli:raw="A group enumeration.">Перечисление групп.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Представляет результаты из отдельного совпадения регулярного выражения.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Получает пустую группу. Все неудавшиеся совпадения возвращают это пустое совпадение.</summary>
      <returns vsli:raw="An empty match.">Пустое совпадение.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Получает коллекцию групп, соответствующих регулярному выражению.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Группы символов, соответствующие шаблону.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Возвращает новый объект <see cref="T:System.Text.RegularExpressions.Match" /> с результатами для следующего сопоставления, начиная с позиции, на которой завершилось последнее сопоставление (с символа после последнего сопоставленного символа).</summary>
      <returns vsli:raw="The next regular expression match.">Следующее сопоставление регулярному выражению.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Возвращает расширение указанного шаблона замены.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">Шаблон замены для использования.</param>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">Расширенная версия параметра <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">Расширение для этого шаблона не разрешено.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Возвращает экземпляр <see cref="T:System.Text.RegularExpressions.Match" />, эквивалентный одному из предоставленных экземпляров, пригодному для совместного использования несколькими потоками.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Сопоставление регулярному выражению, эквивалентное ожидаемому.</param>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Сопоставление регулярному выражению, пригодное для разделения между несколькими потоками.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="inner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Представляет набор успешных совпадений, обнаруженных путем итеративного применения шаблона регулярного выражения к входной строке.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">Позиция в массиве, в которой следует начать копирование.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> является многомерным массивом.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.

или -
Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Получает количество соответствий.</summary>
      <returns vsli:raw="The number of matches.">Количество соответствий.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Объект, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Match" /> коллекции <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Получает значение, указывающее на то, синхронизирован ли доступ к коллекции (потокобезопасный).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Получает отдельный член коллекции.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Индекс в коллекции <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Записанная подстрока в позиции <paramref name="i" /> в коллекции.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">Значение параметра <paramref name="i" /> меньше 0 или больше либо равно <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Объект, который можно использовать для синхронизации доступа к коллекции. Это свойство всегда возвращает сам объект.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Представляет метод, вызываемый каждый раз, когда обнаружено совпадение регулярного выражения во время работы метода <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Объект <see cref="T:System.Text.RegularExpressions.Match" />, представляющий отдельное совпадение регулярного выражения во время работы метода <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Строка, возвращенная методом, представленным делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Представляет постоянное регулярное выражение.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" />, используя сериализованные данные.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">Объект, содержащий сериализованный шаблон и сведения <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">Целевой объект этой сериализации. (Этот параметр не используется; задайте значение <see langword="null" />.)</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">Шаблон, содержащий <paramref name="info" />, имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> содержит недопустимый флаг <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для заданного регулярного выражения.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для указанного регулярного выражения с параметрами, изменяющими шаблон.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Побитовое сочетание значений перечисления, изменяющих регулярное выражение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> содержит недопустимый флаг.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для указанного регулярного выражения с параметрами, которые изменяют шаблон, и значение, указывающее, как долго метод сравнения с шаблоном должен пытаться найти совпадение, прежде чем время ожидания истечет.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Побитовое сочетание значений перечисления, изменяющих регулярное выражение.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

или -
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Возвращает или задает максимальное количество записей в текущей статической кэш-памяти скомпилированных регулярных выражений.</summary>
      <returns vsli:raw="The maximum number of entries in the static cache.">Максимальное количество записей в статической кэш-памяти.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">Значение в операции задания меньше нуля.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Получает или задает словарь, сопоставляющий именованные захватываемые группы со значениями их индексов.</summary>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Словарь, сопоставляющий именованные захватываемые группы со значениями их индексов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Значение, присвоенное свойству <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> в операции задания, равно <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Получает или задает словарь, сопоставляющий нумерованные захватываемые группы со значениями их индексов.</summary>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Словарь, сопоставляющий нумерованные захватываемые группы со значениями их индексов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Значение, присвоенное свойству <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> в операции задания, равно <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> в именованную сборку.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Имя файла сборки.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.

или -
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="assemblyname" /> или <paramref name="regexinfos" /> — <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> в именованную сборку с заданными атрибутами.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Имя файла сборки.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Массив, определяющий атрибуты, применяемые к сборке.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.
-или-
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="assemblyname" /> или <paramref name="regexinfos" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> и указанный файл ресурсов в именованную сборку с заданными атрибутами.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Имя файла сборки.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Массив, определяющий атрибуты, применяемые к сборке.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">Имя файла ресурса Win32 для включения в сборку.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.
-или-
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="assemblyname" /> или <paramref name="regexinfos" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">Параметр <paramref name="resourceFile" /> назначает недопустимый файл ресурсов Win32.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">Не удается найти файл, заданный свойством <paramref name="resourceFile" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Преобразует минимальный набор символов (\, *, +, ?, |, {, [, (,), ^, $,., # и пробел), заменяя их escape-кодами. При этом обработчику регулярных выражений дается команда интерпретировать эти символы буквально, а не как метасимволы.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">Входная строка, содержащая преобразуемый текст.</param>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Строка символов с метасимволами, приведенными в преобразованную форму.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> — <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Возвращает массив имен группы записи для регулярного выражения.</summary>
      <returns vsli:raw="A string array of group names.">Строковый массив имен группы.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Возвращает массив номеров групп записи, что соответствует именам групп в массиве.</summary>
      <returns vsli:raw="An integer array of group numbers.">Целочисленный массив номеров групп.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Получает имя группы, соответствующее указанному номеру группы.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">Номер группы для преобразования в соответствующее имя группы.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Строка, содержащая имя группы, связанное с указанным номером группы. При отсутствии имени группы, соответствующей параметру <paramref name="i" />, метод возвращает значение <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Возвращает номер группы, соответствующий указанному имени группы.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">Имя группы для преобразования в соответствующий номер группы.</param>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">Номер группы, соответствующий указанному имени группы, или -1, если <paramref name="name" /> является недопустимым именем группы.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Указывает, что для операции сравнения с шаблоном не используется конечное время ожидания.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">Ссылки уже инициализированы.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">Максимальное время, которое может пройти в операции сравнения с шаблоном перед истечением срока ожидания операции.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Указывает, обнаружено ли в указанной входной строке соответствие регулярному выражению, заданному в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Указывает, обнаружено ли в указанной входной строке соответствие (начинающееся с указанной позиции в этой строке) регулярному выражению, заданному в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">Расположение символа, с которого необходимо начать поиск.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр<paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению, используя указанные параметры сопоставления.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению, с помощью указанных параметров сопоставления и интервала времени ожидания.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

или -
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Ищет в указанной входной строке первое вхождение регулярного выражения, указанного в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Ищет во входной строке первое вхождение регулярного выражения, начиная с указанной начальной позиции.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">Отсчитываемая от нуля позиция символа, с которой начинается поиск.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Ищет во входной строке первое вхождение регулярного выражения, начиная с указанной начальной позиции и выполняя поиск только по указанному количеству символов.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">Отсчитываемая от нуля позиция символа во входной строке, определяющая самую левую позицию диапазона поиска.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">Количество символов в подстроке для включения в поиск.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр<paramref name="beginning" /> имеет значение меньше нуля или больше длины <paramref name="input" />.

или -
Параметр <paramref name="length" /> имеет значение меньше нуля или больше длины <paramref name="input" />.

-или-
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> определяет позицию, которая находится вне диапазона <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Ищет в указанной входной строке первое вхождение заданного регулярного выражения.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Ищет во входной строке первое вхождение заданного регулярного выражения, используя указанные параметры сопоставления.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Ищет во входной строке первое вхождение заданного регулярного выражения, используя указанные параметры сопоставления и интервал времени ожидания.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="An object that contains information about the match.">Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

или -
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Ищет в указанной входной строке все вхождения регулярного выражения.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Ищет в указанной входной строке все вхождения регулярного выражения, начиная с указанной начальной позиции.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">Позиция символа во входной строке, с которой необходимо начать поиск.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Ищет в указанной входной строке все вхождения заданного регулярного выражения.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Ищет в указанной входной строке все вхождения заданного регулярного выражения, используя указанные параметры сопоставления.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Побитовая комбинация значений перечисления, задающая параметры для сопоставления.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Ищет в указанной входной строке все вхождения заданного регулярного выражения, используя указанные параметры сопоставления и интервал времени ожидания.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Побитовая комбинация значений перечисления, задающая параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .
-или-
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Получает интервал времени ожидания текущего экземпляра.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Максимальный интервал времени, который может пройти в операции сравнения с шаблоном, прежде чем возникнет исключение <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, если контроль времени ожидания отключен.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Получает параметр, которые были переданы в конструктор <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Один или несколько членов перечисления <see cref="T:System.Text.RegularExpressions.RegexOptions" />, представляющих параметры, переданные в конструктор <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">В указанной входной строке заменяет все строки, соответствующие шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">В указанной входной строке заменяет указанное максимальное количество строк, соответствующих шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">Максимальное количество возможных случаев замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">В указанной входной подстроке заменяет указанное максимальное количество строк, соответствующих шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Максимальное возможное количество случаев замены.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement" vsli:raw="The replacement string.">Строка замены.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.
-или-
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">В указанной входной строке заменяет все подстроки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющих параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

или -
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="input" /> или <paramref name="evaluator" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">В указанной входной строке заменяется указанное максимальное количество строк, соответствующих шаблону регулярного выражения, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Максимальное количество возможных случаев замены.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="input" /> или <paramref name="evaluator" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">В указанной входной подстроке заменяется указанное максимальное количество строк, соответствующих шаблону регулярного выражения, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Строка для поиска соответствия.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Максимальное количество возможных случаев замены.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="evaluator" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Получает значение, указывающее на то, выполняется ли регулярным выражением поиск справа налево.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение выполняет поиск справа налево; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Разделяет входную строку в массив подстрок в позициях, определенных шаблоном регулярного выражения, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to split.">Строка для разделения.</param>
      <returns vsli:raw="An array of strings.">Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Разделяет входную строку указанное максимальное количество раз в массив подстрок в позициях, определенных регулярным выражением, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to be split.">Строка для разделения.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Максимальное количество возможных случаев разделения.</param>
      <returns vsli:raw="An array of strings.">Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Разделяет входную строку указанное максимальное количество раз в массив подстрок в позициях, определенных регулярным выражением, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />. Поиск шаблона регулярного выражения начинается с указанной позиции элемента во входной строке.</summary>
      <param name="input" vsli:raw="The string to be split.">Строка для разделения.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Максимальное количество возможных случаев разделения.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns vsli:raw="An array of strings.">Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Разделяет входную строку в массив подстрок в позициях, определенных шаблоном регулярного выражения.</summary>
      <param name="input" vsli:raw="The string to split.">Строка для разделения.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <returns vsli:raw="An array of strings.">Массив строк.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Разделяет входную строку в массив подстрок в позициях, определенных указанным шаблоном регулярного выражения. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input" vsli:raw="The string to split.">Строка для разделения.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns vsli:raw="An array of strings.">Массив строк.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Разделяет входную строку в массив подстрок в позициях, определенных указанным шаблоном регулярного выражения. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input" vsli:raw="The string to split.">Строка для разделения.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns vsli:raw="A string array.">Массив строк.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

или -
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными даты, необходимыми для десериализации текущего объекта <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">Объект, который требуется заполнить информацией о сериализации.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">Место для хранения и извлечения сериализованных данных. Этот параметр зарезервирован для использования в будущем.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Возвращает шаблон регулярного выражения, который был передан в конструктор <see langword="Regex" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Параметр <paramref name="pattern" />, который был передан в конструктор <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Преобразует все escape-символы во входной строке обратно в символы.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">Входная строка, содержащая текст для преобразования.</param>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Строка символов с любыми преобразованными символами, приведенными в их непреобразованную форму.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> включает нераспознанную escape-последовательность.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="str" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see cref="P:System.Text.RegularExpressions.Regex.Options" /> содержит параметр <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see cref="P:System.Text.RegularExpressions.Regex.Options" /> содержит параметр <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Проверяет, попадает ли интервал времени ожидания в допустимый диапазон.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">Время ожидания, которое требуется проверить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">Указанное время ожидания выходит за пределы допустимого диапазона.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Представляет сведения о регулярном выражении, используемые для компиляции регулярного выражения в отдельную сборку.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />, содержащего сведения о регулярном выражении, которое должно быть включено в сборку.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Регулярное выражение для компилирования.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Параметры регулярного выражения для использования при компилировании регулярного выражения.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Имя типа, представляющего скомпилированное регулярное выражение.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Пространство имен, к которому принадлежит новый тип.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы сделать скомпилированное регулярное выражение видимым для всех, иначе значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Свойство <paramref name="name" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.

или -
Свойство <paramref name="name" /> имеет значение <see langword="null" />.

или -
<paramref name="fullnamespace" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />, содержащего сведения о регулярном выражении с указанным значение времени ожидания, которое должно быть включено в сборку.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Регулярное выражение для компилирования.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Параметры регулярного выражения для использования при компилировании регулярного выражения.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Имя типа, представляющего скомпилированное регулярное выражение.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Пространство имен, к которому принадлежит новый тип.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы сделать скомпилированное регулярное выражение видимым для всех, иначе значение <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">Интервал времени ожидания по умолчанию для регулярного выражения.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Свойство <paramref name="name" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> — <see langword="null" />.

или -
<paramref name="name" /> — <see langword="null" />.

или -
<paramref name="fullnamespace" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Получает или задает значение, указывающее на то, обладает ли скомпилированное регулярное выражение общей видимостью.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регулярное выражение обладает общей видимостью, иначе значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Получает или задает интервал времени ожидания по умолчанию регулярного выражения.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Максимальный интервал времени по умолчанию, который может пройти в операции сравнения с шаблоном, прежде чем возникнет исключение <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, если контроль времени ожидания отключен.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Получает или задает имя типа, представляющего скомпилированное регулярное выражение.</summary>
      <returns vsli:raw="The name of the new type.">Имя нового типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Значением этого свойства является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">Значением для этого свойства является пустая строка.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Получает или задает пространство имен, к которому принадлежит новый тип.</summary>
      <returns vsli:raw="The namespace of the new type.">Пространство имен нового типа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Значением этого свойства является <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Получает или задает параметры для использования при компилировании регулярного выражения.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Побитовое сочетание значений перечисления.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Получает или задает регулярное выражение для компилирования.</summary>
      <returns vsli:raw="The regular expression to compile.">Регулярное выражение для компилирования.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Значением этого свойства является <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">Исключение, которое возникает, если время выполнения метода сопоставления шаблонов регулярного выражения превышает его интервал времени ожидания.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">Объект, содержащий сериализованные данные.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">Поток, содержащий сериализованные данные.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> указанной строкой сообщения.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Строка, описывающая исключение.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Строка, описывающая исключение.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> сведениями о шаблоне регулярного выражения, входном тексте и интервалом времени ожидания.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">Входной текст, обработанный обработчиком регулярных выражений, если истекло время ожидания.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">Шаблон, используемый обработчиком регулярных выражений, если истекло время ожидания.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">Интервал времени ожидания.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Получает входной текст, который обрабатывался обработчиком регулярных выражений, когда истекло время ожидания.</summary>
      <returns vsli:raw="The regular expression input text.">Входной текст регулярного выражения.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Получает интервал времени для сравнения регулярного выражения.</summary>
      <returns vsli:raw="The time-out interval.">Интервал времени ожидания.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Получает шаблон регулярного выражения, который использовался в операции сравнения, когда истекло время ожидания.</summary>
      <returns vsli:raw="The regular expression pattern.">Шаблон регулярного выражения.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации объекта <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">Объект, который требуется заполнить данными.</param>
      <param name="context" vsli:raw="The destination for this serialization.">Целевой объект этой сериализации.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Предоставляет перечисленные значения для использования при задании параметров регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Указывает, что регулярное выражение скомпилировано в сборку. Это порождает более быстрое исполнение, но увеличивает время запуска. Это значение не должно назначаться свойству <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> при обращении к методу <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Дополнительные сведения см. в подразделе "Скомпилированные регулярные выражения" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Указывает игнорирование региональных языковых различий. Дополнительные сведения см. в подразделе "Сравнение с использованием инвариантного языка и региональных параметров" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Включает ECMAScript-совместимое поведение для выражения. Это значение может быть использовано только вместе со значениями <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> и <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. Использование этого значения вместе с любыми другими приводит к исключению.
Дополнительные сведения о параметре <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> см. в подразделе "Поведение сопоставления ECMAScript" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Указывает, что единственные допустимые записи являются явно именованными или нумерованными группами в форме (?&lt;name&gt;...). Это позволяет использовать неименованные круглые скобки в качестве незахватываемых групп, тем самым не допуская синтаксической громоздкости выражения (?:...). Дополнительные сведения см. в подразделе "Только явные захваты" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Указывает соответствие, не учитывающее регистр. Дополнительные сведения см. в подразделе "Сопоставление без учета регистра" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Устраняет из шаблона неизбежные пробелы и включает комментарии, помеченные "#". Однако это значение не затрагивает и не устраняет пробелы в классах символов, числовых квантификаторах или токенах, отмечающих начало отдельных языковых элементов регулярных выражений. Дополнительные сведения см. в разделе "Пропуск пробелов" статьи Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Многострочный режим. Изменяет значение символов "^" и "$" так, что они совпадают, соответственно, в начале и конце любой строки, а не только в начале и конце целой строки. Дополнительные сведения см. в подразделе "Многострочный режим" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Указывает на отсутствие заданных параметров. Дополнительные сведения о поведении по умолчанию обработчика регулярных выражений см. в подразделе "Параметры по умолчанию" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Указывает, что поиск будет выполнен в направлении справа налево, а не слева направо. Дополнительные сведения см. в подразделе "Режим справа налево" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Указывает однострочный режим. Изменяет значение точки (.) так, что она соответствует любому символу (вместо любого символа, кроме "\n"). Дополнительные сведения см. в подразделе "Однострочный режим" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">Класс <see cref="T:System.Text.RegularExpressions.RegexRunner" /> является базовым классом для скомпилированных регулярных выражений.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Номер записи.</param>
      <param name="start" vsli:raw="The starting position of the capture.">Начальное положение записи.</param>
      <param name="end" vsli:raw="The ending position of the capture.">Конечное положение записи.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Определяет, находится ли символ в классе символов.</summary>
      <param name="ch" vsli:raw="A character to test.">Символ для проверки.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">Внутреннее имя класса символов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">Значение <see langword="true" />, если параметр <paramref name="ch" /> находится в классе символов, указанном параметром <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch" vsli:raw="A character.">Символ.</param>
      <param name="set" vsli:raw="The character set.">Набор символов.</param>
      <param name="category" vsli:raw="The character category.">Категория символов.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i" vsli:raw="A number to save.">Число для сохранения.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible boundary position.">Возможное положение границ.</param>
      <param name="startpos" vsli:raw="The starting position.">Начальное положение.</param>
      <param name="endpos" vsli:raw="The ending position.">Конечное положение.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">Возможное положение границ ECMA.</param>
      <param name="startpos" vsli:raw="The starting position.">Начальное положение.</param>
      <param name="endpos" vsli:raw="The ending position.">Конечное положение.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Номер записи.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Номер записи.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Номер записи.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Экземпляр механизма регулярных выражений.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Текст для проверки на соответствие шаблону.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Отсчитываемая с нуля начальная позиция в <paramref name="text" />, из которой механизм регулярных выражений начинает проверку на совпадения.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Отсчитываемая с нуля конечная позиция в <paramref name="text" />, в которой механизм регулярных выражений заканчивает проверку на совпадения.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Отсчитываемая с нуля начальная позиция для проверки на совпадения.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Число символов в предыдущем совпадении.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для проверки на совпадения в быстром режиме. В противном случае — <see langword="false" />.</param>
      <returns vsli:raw="A match.">Совпадение.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Экземпляр механизма регулярных выражений.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Текст для проверки на соответствие шаблону.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Отсчитываемая с нуля начальная позиция в <paramref name="text" />, из которой механизм регулярных выражений начинает проверку на совпадения.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Отсчитываемая с нуля конечная позиция в <paramref name="text" />, в которой механизм регулярных выражений заканчивает проверку на совпадения.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Отсчитываемая с нуля начальная позиция для проверки на совпадения.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Число символов в предыдущем совпадении.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для проверки на совпадения в быстром режиме. В противном случае — <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">Интервал времени ожидания.</param>
      <returns vsli:raw="A match.">Совпадение.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Номер записи.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Сохраненный номер записи.</param>
      <param name="start" vsli:raw="The starting position.">Начальное положение.</param>
      <param name="end" vsli:raw="The ending position.">Конечное положение.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Создает класс <see cref="T:System.Text.RegularExpressions.RegexRunner" /> для скомпилированного регулярного выражения.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">При переопределении в производный класс создает объект <see cref="T:System.Text.RegularExpressions.RegexRunner" /> для конкретного скомпилированного регулярного выражения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Объект <see cref="T:System.Text.RegularExpressions.RegexRunner" /> разработан для выполнения конкретного скомпилированного регулярного выражения.</returns>
    </member>
  </members>
</doc>