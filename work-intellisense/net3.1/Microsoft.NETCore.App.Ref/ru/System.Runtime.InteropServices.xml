<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.InteropServices</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <summary>Исключение, которое выбрасывается, когда единица данных считывается или записывается по адресу, не кратному размеру данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Объект <see cref="T:System.String" />, описывающий ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />, используя указанные сообщение об ошибке и исходное исключение.</summary>
      <param name="message">Объект <see cref="T:System.String" />, описывающий ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения <see cref="T:System.DataMisalignedException" />,. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary>Исключение, которое выбрасывается в случае невозможности найти библиотеку DLL, указанную при импорте DLL.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> с сериализованными данными.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.IO.UnmanagedMemoryAccessor">
      <summary>Предоставляет произвольный доступ к неуправляемым блокам памяти из управляемого кода.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" /> с указанными буфером, смещением и емкостью.</summary>
      <param name="buffer">Буфер, который должен содержать метод доступа.</param>
      <param name="offset">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity">Размер выделяемой памяти (в байтах).</param>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" /> с указанными буфером, смещением, емкостью и правами доступа.</summary>
      <param name="buffer">Буфер, который должен содержать метод доступа.</param>
      <param name="offset">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity">Размер выделяемой памяти (в байтах).</param>
      <param name="access">Тип разрешенного доступа к памяти. Значение по умолчанию — <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.

или -
<paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />.</exception>
      <exception cref="T:System.InvalidOperationException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanRead">
      <summary>Определяет, доступен ли метод доступа для чтения.</summary>
      <returns>Значение <see langword="true" />, если метод доступа доступен для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanWrite">
      <summary>Определяет, доступен ли метод доступа для записи.</summary>
      <returns>Значение <see langword="true" />, если метод доступа доступен для записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.Capacity">
      <summary>Получает емкость метода доступа.</summary>
      <returns>Емкость метода доступа.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryAccessor" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Задает начальные значения для метода доступа.</summary>
      <param name="buffer">Буфер, который должен содержать метод доступа.</param>
      <param name="offset">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity">Размер выделяемой памяти (в байтах).</param>
      <param name="access">Тип разрешенного доступа к памяти. Значение по умолчанию — <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.

или -
<paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />.</exception>
      <exception cref="T:System.InvalidOperationException">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.IsOpen">
      <summary>Определяет, открыт ли метод доступа процессом в данный момент.</summary>
      <returns>Значение <see langword="true" />, если метод доступа открыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)">
      <summary>Считывает из метода доступа структуру типа <paramref name="T" /> и передает ее по указанной ссылке.</summary>
      <param name="position">Позиция в методе доступа, с которой начинается чтение.</param>
      <param name="structure">Структура, которая будет содержать считываемые данные.</param>
      <typeparam name="T">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения в структуре типа <paramref name="T" />.

или -
<see langword="T" /> является типом значений, содержащим один или несколько ссылочных типов.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary>Считывает из метода доступа структуры типа <paramref name="T" /> и передает их в массив типа <paramref name="T" />.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <param name="array">Массив, который будет содержать считываемые из метода доступа структуры.</param>
      <param name="offset">Индекс в массиве <paramref name="array" />, по которому будет помещена первая скопированная структура.</param>
      <param name="count">Число структур типа <c>T</c>, которое необходимо считать из метода доступа.</param>
      <typeparam name="T">Тип структуры.</typeparam>
      <returns>Число структур, считанных в массив <paramref name="array" />. Это число может быть меньше значения <paramref name="count" />, если доступно меньшее число структур, или равняться нулю, если достигнут конец метода доступа.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> недостаточно велик для размещения <paramref name="count" /> структур (начиная с <paramref name="position" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)">
      <summary>Считывает из метода доступа логическое значение.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>
        <see langword="true" /> или <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)">
      <summary>Считывает из метода доступа значение байта.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)">
      <summary>Считывает из метода доступа символ.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)">
      <summary>Считывает из метода доступа десятичное число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.

или -
Считываемое десятичное число недопустимо.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)">
      <summary>Считывает из метода доступа значение с плавающей запятой двойной точности.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)">
      <summary>Считывает из метода доступа 16-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)">
      <summary>Считывает из метода доступа 32-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)">
      <summary>Считывает из метода доступа 64-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)">
      <summary>Считывает из метода доступа 8-разрядное целое число со знаком.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)">
      <summary>Считывает из метода доступа значение с плавающей запятой одиночной точности.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)">
      <summary>Считывает из метода доступа 16-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)">
      <summary>Считывает из метода доступа 32-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)">
      <summary>Считывает из метода доступа 64-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns>Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)">
      <summary>Записывает в метод доступа логическое значение.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)">
      <summary>Записывает в метод доступа значение байта.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)">
      <summary>Записывает в метод доступа символ.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)">
      <summary>Записывает в метод доступа десятичное число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.

или -
Десятичное число недопустимо.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)">
      <summary>Записывает в метод доступа значение типа <see langword="Double" />.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)">
      <summary>Записывает в метод доступа 16-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)">
      <summary>Записывает в метод доступа 32-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)">
      <summary>Записывает в метод доступа 64-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после позиции для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)">
      <summary>Записывает в метод доступа 8-разрядное целое число.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)">
      <summary>Записывает в метод доступа значение типа <see langword="Single" />.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)">
      <summary>Записывает в метод доступа 16-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)">
      <summary>Записывает в метод доступа 32-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)">
      <summary>Записывает в метод доступа 64-разрядное целое число без знака.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)">
      <summary>Записывает в метод доступа структуру.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="structure">Структура, которую требуется записать.</param>
      <typeparam name="T">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException">Не хватает байтов в методе доступа после <paramref name="position" /> для записи структуры типа <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary>Записывает в метод доступа структуры из массива типа <paramref name="T" />.</summary>
      <param name="position">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="array">Массив, из которого ведется запись в метод доступа.</param>
      <param name="offset">Индекс в <paramref name="array" />, с которого требуется начать запись.</param>
      <param name="count">Число структур в массиве <paramref name="array" />, которые требуется записать.</param>
      <typeparam name="T">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException">Не хватает байтов в методе доступа после <paramref name="position" /> для записи числа структур, указанных <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.

или -
Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект доступа был освобожден.</exception>
    </member>
    <member name="T:System.IO.UnmanagedMemoryStream">
      <summary>Предоставляет доступ к неуправляемым блокам памяти из управляемого кода.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />.</summary>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя заданное расположение и объем памяти.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> достаточно велико, чтобы привести к переполнению.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя указанные значения расположения, объема памяти, общего объема памяти и доступа к файлам.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <param name="capacity">Общий объем памяти, назначенный для потока.</param>
      <param name="access">Одно из значений перечисления <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="capacity" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> больше, чем значение <paramref name="capacity" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанным смещением и длиной.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанными смещением, длиной и правами доступа к файлам.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
      <param name="access">Режим доступа к файлам для потока неуправляемой памяти.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanRead">
      <summary>Получает значение, определяющее, поддерживает ли поток операции чтения.</summary>
      <returns>Значение <see langword="false" />, если объект был создан конструктором с использованием параметра <paramref name="access" />, не включающего чтение потока, и если поток закрыт; в противном случае — значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanSeek">
      <summary>Возвращает значение, определяющее, поддерживает ли поток операции поиска.</summary>
      <returns>Значение равно <see langword="false" />, если поток закрыт, в противном случае значение равно <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanWrite">
      <summary>Возвращает значение, определяющее, поддерживает ли поток операции записи.</summary>
      <returns>Значение <see langword="false" />, если объект был создан конструктором со значением параметра <paramref name="access" />, которое поддерживает запись, или если объект был создан конструктором без параметров, или если поток закрыт; в противном случае — значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Capacity">
      <summary>Возвращает длину потока (размер) или общий объем памяти, назначенный потоку (емкость).</summary>
      <returns>Размер или емкость потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryStream" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Flush">
      <summary>Переопределяет метод <see cref="M:System.IO.Stream.Flush" /> так, что никакие действия не выполняются.</summary>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Переопределяет метод <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> так, что операция отменяется, если это указано, но никакие другие действия не выполняются.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя указатель на неуправляемое расположение в памяти.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <param name="capacity">Общий объем памяти, назначенный для потока.</param>
      <param name="access">Одно из значений перечисления <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="capacity" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> достаточно велико, чтобы привести к переполнению.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанными смещением, длиной и правами доступа к файлам.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
      <param name="access">Режим доступа к файлам для потока неуправляемой памяти.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Length">
      <summary>Возвращает длину данных в потоке.</summary>
      <returns>Длина данных в потоке.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Position">
      <summary>Получает или задает текущую позицию в потоке.</summary>
      <returns>Текущая позиция в потоке.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Для позиции задано значение меньше нуля или значение позиции больше <see cref="F:System.Int32.MaxValue" />, или добавление к текущему указателю привело к переполнению.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.PositionPointer">
      <summary>Получает или задает указатель байтов для потока, используя текущее положение в потоке.</summary>
      <returns>Указатель байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение текущей позиции превышает емкость потока.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указываемая позиция не является допустимой в текущем потоке.</exception>
      <exception cref="T:System.IO.IOException">Для указателя задается значение меньше, чем значение начальной позиции потока.</exception>
      <exception cref="T:System.NotSupportedException">Поток был инициализирован для использования с <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. Свойство <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> допустимо только для потоков, которые инициализируются с указателем <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает указанное число байтов в указанный массив.</summary>
      <param name="buffer">Когда этот метод возвращает управление, он содержит указанный массив байтов, в котором значения между <paramref name="offset" /> и (<paramref name="offset" /> + <paramref name="count" /> - 1) заменены байтами, считанными из текущего источника. Этот параметр передается неинициализированным.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается сохранение данных, считанных из текущего потока.</param>
      <param name="count">Максимальное количество байтов, которое должно быть считано из текущего потока.</param>
      <returns>Общее количество байтов, считанных в буфер. Это число может быть меньше количества запрошенных байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает чтение.

или -
Свойству <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> задано значение <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> принимает значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше нуля.

или -
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Длина массива буфера без учета параметра <paramref name="offset" /> меньше значения параметра <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})">
      <summary>Считывает все байты этого неуправляемого потока памяти в указанный диапазон байтов.</summary>
      <param name="destination">При возврате из этого метода данный диапазон содержит все байты из неуправляемого потока памяти.</param>
      <returns>Общее количество байтов, считанных в место назначения.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Считывает в асинхронном режиме указанное число байтов в указанный массив.</summary>
      <param name="buffer">Буфер, в который записываются данные.</param>
      <param name="offset">Смещение байтов в <paramref name="buffer" />, с которого начинается запись данных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно считывает байты неуправляемого потока памяти в область памяти.</summary>
      <param name="buffer">По завершении асинхронного метода эта область памяти содержит все байты, считанные из неуправляемого потока памяти.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, которая представляет асинхронную операцию чтения, и переносит общее число считанных байтов в буфер.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadByte">
      <summary>Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.</summary>
      <returns>Байт без знака, приведенный к объекту <see cref="T:System.Int32" />, или значение -1, если достигнут конец потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает чтение.

или -

Текущая позиция – в конце потока.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Устанавливает текущую позицию текущего потока на заданное значение.</summary>
      <param name="offset">Указатель относительно <c>origin</c>, от которого начинается поиск.</param>
      <param name="loc">Описывает начальную, конечную или текущую позицию как опорную точку для <c>origin</c>, используя значение типа <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Новая позиция в потоке.</returns>
      <exception cref="T:System.IO.IOException">Попытка поиска была выполнена до начала потока.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> больше максимального значения потока.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="loc" /> недопустим.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)">
      <summary>Присваивает длине потока указанное значение.</summary>
      <param name="value">Длина потока.</param>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение <paramref name="value" /> превышает значение емкости потока.

или -
Указанный <paramref name="value" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает в текущий поток блок байтов, используя данные из буфера.</summary>
      <param name="buffer">Массив байтов, из которого необходимо скопировать байты в текущий поток.</param>
      <param name="offset">Смещение в буфере, с которого необходимо начать копирование байтов в текущий поток.</param>
      <param name="count">Число байтов для записи в текущий поток.</param>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.

или -
Значение параметра <paramref name="count" /> больше значения емкости потока.

или -
Позиция – в конце емкости потока.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение одного из указанных параметров меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="offset" /> без учета длины параметра <paramref name="buffer" /> меньше значения параметра <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Записывает блок байтов в текущий неуправляемый поток памяти, используя данные из указанного диапазона байтов.</summary>
      <param name="source">Диапазон байтов, из которого копируются байты в текущий неуправляемый поток памяти.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается копирование байтов в поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает диапазон байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)">
      <summary>Запись байта в текущую позицию в потоке файла.</summary>
      <param name="value">Значение в байтах, записанное в поток.</param>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.

или -
Текущая позиция – в конце емкости потока.</exception>
      <exception cref="T:System.IO.IOException">Предоставленное значение <paramref name="value" /> приводит к превышению максимальной емкости потока.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IDispatchConstantAttribute">
      <summary>Указывает, что значение по умолчанию для параметра или поля с атрибутами является экземпляром <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />, где свойство <see cref="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject" /> имеет значение <see langword="null" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IDispatchConstantAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IDispatchConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IDispatchConstantAttribute.Value">
      <summary>Получает константу <see langword="IDispatch" />, хранящуюся в данном атрибуте.</summary>
      <returns>Константа <see langword="IDispatch" />, хранящаяся в данном атрибуте. Допустимым значением константы <see langword="null" /> является только <see langword="IDispatch" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IUnknownConstantAttribute">
      <summary>Указывает, что значение по умолчанию для параметра или поля с атрибутами является экземпляром <see cref="T:System.Runtime.InteropServices.UnknownWrapper" />, где свойство <see cref="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject" /> имеет значение <see langword="null" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IUnknownConstantAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IUnknownConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IUnknownConstantAttribute.Value">
      <summary>Получает константу <see langword="IUnknown" />, хранящуюся в данном атрибуте.</summary>
      <returns>Константа <see langword="IUnknown" />, хранящаяся в данном атрибуте. Допустимым значением константы <see langword="null" /> является только <see langword="IUnknown" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <summary>Позволяет неуправляемому методу вызвать управляемый метод.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ArrayWithOffset">
      <summary>Инкапсулирует массив и смещение в указанный массив.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="array">Управляемый массив.</param>
      <param name="offset">Смещение элемента в байтах, передаваемое с помощью вызова неуправляемого кода.</param>
      <exception cref="T:System.ArgumentException">Массив больше 2 гигабайт (ГБ).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)">
      <summary>Показывает, соответствует ли указанный объект текущему объекту <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <returns>Значение <see langword="true" />, если объект соответствует этому массиву <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Показывает, соответствует ли указанный объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> текущему экземпляру.</summary>
      <param name="obj">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с этим экземпляром.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> соответствует текущему экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetArray">
      <summary>Возвращает управляемый массив, на который ссылается этот массив <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns>Управляемый массив, на который ссылается этот экземпляр.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode">
      <summary>Возвращает хэш-код для этого типа значения.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset">
      <summary>Возвращает смещение, предоставленное при создании этого массива <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns>Смещение для этого экземпляра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="a">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="b" />.</param>
      <param name="b">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="a" />.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="a">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="b" />.</param>
      <param name="b">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="a" />.</param>
      <returns>Значение <see langword="true" />, если значение <paramref name="a" /> не совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AutomationProxyAttribute">
      <summary>Указывает, будет ли выполняться маршалинг типа с использованием маршалера автоматизации или настраиваемого прокси-сервера и заглушки.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AutomationProxyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.AutomationProxyAttribute" />.</summary>
      <param name="val">Значение <see langword="true" />, если маршалинг класса должна выполняться с помощью автоматического модуля маршалинга, и значение. <see langword="false" />, если нужно использовать модуль маршалинга заглушки прокси-сервера.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.AutomationProxyAttribute.Value">
      <summary>Возвращает значение, показывающее тип используемого модуля маршалинга.</summary>
      <returns>Значение <see langword="true" />, если маршалинг класса должна выполняться с помощью автоматического модуля маршалинга, и значение. <see langword="false" />, если нужно использовать модуль маршалинга заглушки прокси-сервера.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.BestFitMappingAttribute">
      <summary>Определяет необходимость преобразования символов Юникода в наиболее подходящие символы ANSI.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> и присваивает ему значение свойства <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />.</summary>
      <param name="BestFitMapping">Значение <see langword="true" /> показывает, что режим наилучшего сопоставления включен; в противном случае используется значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping">
      <summary>Возвращает текущие настройки наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
      <returns>Значение <see langword="true" />, если наилучшее сопоставление включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar">
      <summary>Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.BStrWrapper">
      <summary>Маршалирует данные типа <see langword="VT_BSTR" /> из управляемого кода в неуправляемый. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> с указанным объектом <see cref="T:System.Object" />.</summary>
      <param name="value">Объект, заключаемый в оболочку и маршалируемый как <see langword="VT_BSTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> с указанным объектом <see cref="T:System.String" />.</summary>
      <param name="value">Объект, заключаемый в оболочку и маршалируемый как <see langword="VT_BSTR" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BStrWrapper.WrappedObject">
      <summary>Возвращает инкапсулированный объект <see cref="T:System.String" /> для маршалинга в качестве типа <see langword="VT_BSTR" />.</summary>
      <returns>Объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.BStrWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CallingConvention">
      <summary>Определяет соглашение о вызове, используемое для вызова методов, реализованных в неуправляемом коде.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
      <summary>Вызывающий объект очищает стек. Это позволяет вызывать функции с <see langword="varargs" />, чтобы использовать их для методов, работающих с переменным числом параметров, таких как <see langword="Printf" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.FastCall">
      <summary>Это соглашение о вызове не поддерживается.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.StdCall">
      <summary>Вызываемый объект очищает стек. Это соглашение, используемое по умолчанию для вызова неуправляемых функций с вызовом неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
      <summary>Первый параметр — это указатель <see langword="this" />, хранящийся в регистре ECX. Другие параметры помещаются в стек. Это соглашение о вызове используется для вызова методов в классах, экспортируемых из неуправляемой динамической библиотеки DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Winapi">
      <summary>Этот член фактически не является соглашением о вызове, а вместо этого используется стандартное соглашение о вызове платформы. Например, в Windows по умолчанию используется <see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" />, а в Windows CE .NET — <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceAttribute">
      <summary>Указывает, какой тип интерфейса класса должен генерироваться для класса, предоставленного модели COM, если интерфейс создан.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> с заданным значением перечисления <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />.</summary>
      <param name="classInterfaceType">Описывает тип интерфейса, созданного для класса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />.</summary>
      <param name="classInterfaceType">Одно из значений <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, созданного для класса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, который должен быть создать для класса.</summary>
      <returns>Значение <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, который требуется создать для класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceType">
      <summary>Определяет тип интерфейса класса, созданного для класса.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
      <summary>Указывает, что класс поддерживает только позднее связывание для клиентов COM. Интерфейс <see langword="dispinterface" /> класса автоматически предоставляется клиентам COM по запросу. Библиотека типов, созданная программой Tlbexp.exe (программа экспорта библиотек типов), не содержит информации о типе для интерфейса <see langword="dispinterface" />, чтобы не допустить кэширование значений DISPID клиентами. Интерфейс <see langword="dispinterface" /> исключает возникновение проблем с версиями, рассмотренных в описании класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />, поскольку клиенты могут использовать только позднее связывание с интерфейсом.
Это параметр по умолчанию для <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
      <summary>Указывает, что для класса автоматически создается сдвоенный интерфейс класса, который предоставляется COM. Сведения о типе создаются для класса интерфейса и публикуются в библиотеке типов. Использование <see langword="AutoDual" /> крайне нежелательно из-за ограничений, связанных с версиями и описанных для атрибута <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.None">
      <summary>Указывает, что для класса не создается интерфейса класса. Если интерфейсы не реализованы явно, класс может предоставить доступ только через позднее связывание при помощи интерфейса <see langword="IDispatch" />. Это значение является рекомендованным для <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />. Использование <see langword="ClassInterfaceType.None" /> — это единственный способ предоставления функциональных возможностей при помощи интерфейсов, явно реализованных классом.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CoClassAttribute">
      <summary>Указывает идентификатор компонентного класса, импортированного из библиотеки типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CoClassAttribute" />, используя идентификатор исходного компонентного класса.</summary>
      <param name="coClass">
        <see cref="T:System.Type" />, содержащий идентификатор исходного совместного класса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
      <summary>Возвращает идентификатор исходного совместного класса.</summary>
      <returns>
        <see cref="T:System.Type" />, содержащий идентификатор исходного совместного класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAliasNameAttribute">
      <summary>Указывает псевдоним COM для типа параметра или поля.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAliasNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComAliasNameAttribute" />, используя псевдоним для поля или параметра с атрибутом.</summary>
      <param name="alias">Псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAliasNameAttribute.Value">
      <summary>Возвращает псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</summary>
      <returns>Псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAwareEventInfo">
      <summary>Разрешает регистрацию позднего связывания для обработчика событий.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />, используя указанные тип и имя события в типе.</summary>
      <param name="type">Тип объекта.</param>
      <param name="eventName">Имя события в <paramref name="type" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
      <summary>Присоединяет обработчик событий к объекту модели COM.</summary>
      <param name="target">Целевой объект, к которому должен привязываться делегат события.</param>
      <param name="handler">Делегат события.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
      <summary>Получает атрибуты этого события.</summary>
      <returns>Атрибуты этого события, доступные только для чтения.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
      <summary>Получает класс, объявляющий этот член.</summary>
      <returns>Объект <see cref="T:System.Type" /> для класса, объявляющего данный член.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
      <summary>Получает метод, использованный для добавления делегата обработчика событий в источник событий.</summary>
      <param name="nonPublic">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns>Метод, использованный для добавления делегата обработчика событий в источник событий.</returns>
      <exception cref="T:System.MethodAccessException">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
      <summary>При переопределении в производном классе получает массив всех настраиваемых атрибутов, применяемых к этому члену.</summary>
      <param name="inherit">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns>Массив, содержащий все настраиваемые атрибуты, или массив, не содержащий элементов, если атрибуты не определены.</returns>
      <exception cref="T:System.InvalidOperationException">Этот элемент загружается в контекст, предназначенный только для отражения. См. Практическое руководство. Загрузка сборок в контекст, предназначенный только для отражения.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось загрузить тип настраиваемого атрибута.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>При переопределении в производном классе получает массив всех настраиваемых атрибутов указанного типа, применяемых к этому члену.</summary>
      <param name="attributeType">Искомый тип атрибута. Возвращаются только атрибуты, которые могут быть присвоены этому типу.</param>
      <param name="inherit">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns>Массив, содержащий все настраиваемые атрибуты указанного типа, или массив, не содержащий элементов, если атрибуты не определены.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="attributeType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Этот элемент загружается в контекст, предназначенный только для отражения. См. практическое руководство по  загрузке сборок в контекст, предназначенный только для отражения</exception>
      <exception cref="T:System.TypeLoadException">Не удалось загрузить тип настраиваемого атрибута.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData">
      <summary>Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" /> для текущего <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns>Универсальный список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к текущему <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)">
      <summary>Возвращает открытые или закрытые методы, которые были сопоставлены событию в метаданных.</summary>
      <param name="nonPublic">Значение <see langword="true" /> для включения методов, не являющихся открытыми, в обратном случае — значение <see langword="false" />.</param>
      <returns>Массив объектов, представляющих методы, которые были сопоставлены событию в метаданных. Если такие методы отсутствуют, возвращается пустой массив.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
      <summary>При переопределении в производном классе, возвращает метод, который вызывался при возникновении события.</summary>
      <param name="nonPublic">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns>Объект, вызванный при возникновении события.</returns>
      <exception cref="T:System.MethodAccessException">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
      <summary>При переопределении в производном классе получает объект <see cref="T:System.Reflection.MethodInfo" /> для удаления метода события.</summary>
      <param name="nonPublic">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns>Метод, который использовался для удаления делегата обработчика событий из списка вызова источника событий.</returns>
      <exception cref="T:System.MethodAccessException">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Указывает, применяется ли к этому члену один или несколько экземпляров указанного атрибута.</summary>
      <param name="attributeType">Искомый тип атрибута.</param>
      <param name="inherit">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns>Значение <see langword="true" />, если указанный атрибут применен к этому члену; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken">
      <summary>Получает токен метаданных, связанный с текущим объектом <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns>32-разрядное целое число, представляющее маркер метаданных.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Module">
      <summary>Получает модуль, связанный с текущим объектом <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns>Модуль, связанный с текущим <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> объектом.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
      <summary>Возвращает имя текущего члена.</summary>
      <returns>Имя данного элемента.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
      <summary>Получает объект класса, который использовался для инициализации данного экземпляра.</summary>
      <returns>Объект <see cref="T:System.Type" />, который использовался для инициализации текущего объекта.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
      <summary>Отсоединяет обработчик событий от COM-объекта.</summary>
      <param name="target">Целевой объект, к которому привязан делегат события.</param>
      <param name="handler">Делегат события.</param>
      <exception cref="T:System.InvalidOperationException">Это событие не поддерживает открытый метод доступа <see langword="remove" />.</exception>
      <exception cref="T:System.ArgumentException">Переданный обработчик нельзя использовать.</exception>
      <exception cref="T:System.Reflection.TargetException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение <see cref="T:System.Exception" />.  
  

            
  
 Параметр <paramref name="target" /> имеет значение <see langword="null" />, и событие не является статическим.  
  
-или- 
Класс <see cref="T:System.Reflection.EventInfo" /> не объявлен для целевого объекта.</exception>
      <exception cref="T:System.MethodAccessException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.MemberAccessException" />.  
  

            
  
 Вызывающий объект не имеет разрешения на доступ к этому элементу.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute">
      <summary>Показывает клиенту COM, что все классы текущей версии сборки совместимы с классами в более ранней версии сборки.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute" />, используя основной и дополнительный номера версий, номер построения и номер редакции сборки.</summary>
      <param name="major">Основной номер версии сборки.</param>
      <param name="minor">Дополнительный номер версии сборки.</param>
      <param name="build">Номер построения сборки.</param>
      <param name="revision">Номер редакции сборки.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber">
      <summary>Получает номер построения сборки.</summary>
      <returns>Номер построения сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion">
      <summary>Получает основной номер версии сборки.</summary>
      <returns>Основной номер версии сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion">
      <summary>Получает дополнительный номер версии сборки.</summary>
      <returns>Дополнительный номер версии сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber">
      <summary>Получает номер редакции сборки.</summary>
      <returns>Номер редакции сборки.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComConversionLossAttribute">
      <summary>Показывает, что информация о классе или интерфейсе была потеряна при импортировании из библиотеки типов в сборку.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComConversionLossAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="ComConversionLossAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <summary>Определяет интерфейс по умолчанию, предоставляемый COM. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />, используя указанный объект <see cref="T:System.Type" /> в качестве интерфейса по умолчанию, предоставленного COM.</summary>
      <param name="defaultInterface">Значение <see cref="T:System.Type" />, показывающее интерфейс по умолчанию, предоставляемый для COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.Value">
      <summary>Получает объект <see cref="T:System.Type" />, определяющий интерфейс по умолчанию, предоставляемый для COM.</summary>
      <returns>Объект <see cref="T:System.Type" />, определяющий интерфейс по умолчанию, предоставляемый для COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <summary>Определяет исходный интерфейс и класс, реализующий методы интерфейса событий, созданного при импорте компонентного класса из библиотеки типов COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" />, используя интерфейс источника и класс поставщика событий.</summary>
      <param name="SourceInterface">
        <see cref="T:System.Type" />, содержащий исходный интерфейс источника из библиотеки типов. Этот интерфейс используется в COM для обратного вызова управляемого класса.</param>
      <param name="EventProvider">
        <see cref="T:System.Type" />, содержащий класс, реализующий методы интерфейса события.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
      <summary>Возвращает класс, реализующий методы интерфейса события.</summary>
      <returns>
        <see cref="T:System.Type" />, содержащий класс, реализующий методы интерфейса события.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
      <summary>Возвращает исходный интерфейс источника из библиотеки типов.</summary>
      <returns>
        <see cref="T:System.Type" />, содержащий исходный интерфейс.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventsHelper">
      <summary>Предоставляет методы, активирующие делегаты .NET Framework для обработки событий, которые нужно добавить или удалить из объектов COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary>Добавляет делегат в список вызова источника событий, поступающих из COM-объекта.</summary>
      <param name="rcw">COM-объект, инициирующий события, на которые вызывающему объекту требуется реагировать.</param>
      <param name="iid">Идентификатор исходного интерфейса, с помощью которого COM-объект инициирует события.</param>
      <param name="dispid">Идентификатор диспетчеризации метода исходного интерфейса.</param>
      <param name="d">Делегат, вызываемый при срабатывании события COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary>Удаляет делегат из списка вызова событий, поступающих от COM-объекта.</summary>
      <param name="rcw">COM-объект, к которому прикреплен делегат.</param>
      <param name="iid">Идентификатор исходного интерфейса, с помощью которого COM-объект инициирует события.</param>
      <param name="dispid">Идентификатор диспетчеризации метода исходного интерфейса.</param>
      <param name="d">Делегат, удаляемый из списка вызова.</param>
      <returns>Делегат, удаленный из списка вызова.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.COMException">
      <summary>Исключение, которое выдается при возвращении неизвестного значения HRESULT после вызова метода COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" />, используя данные сериализации.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, предоставляющий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> с заданным сообщением.</summary>
      <param name="message">Сообщение, в котором указывается причина исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" />, используя заданное сообщение и код ошибки.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
      <param name="errorCode">Значение кода ошибки (HRESULT), связанное с этим исключением.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.ToString">
      <summary>Преобразует содержимое исключения в строку.</summary>
      <returns>Строка, содержащая свойства <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> и <see cref="P:System.Exception.StackTrace" /> исключения.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComImportAttribute">
      <summary>Указывает, что тип с атрибутом был ранее определен в COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComImportAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComInterfaceType">
      <summary>Определяет способ предоставления интерфейса модели COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual">
      <summary>Указывает, что интерфейс предоставляется модели COM в качестве сдвоенного интерфейса, который обеспечивает раннее и позднее связывание. По умолчанию устанавливается значение <see cref="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch">
      <summary>Указывает, что интерфейс предоставляется модели COM в качестве dispinterface, который обеспечивает только позднее связывание.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIInspectable">
      <summary>Указывает, что интерфейс предоставляется модели COM в качестве интерфейса Среда выполнения Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown">
      <summary>Указывает, что интерфейс предоставляется модели COM в качестве интерфейса, производного от IUnknown, который обеспечивает только раннее связывание.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComMemberType">
      <summary>Описывает тип члена COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.Method">
      <summary>Этот член является обычным методом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropGet">
      <summary>Член возвращает свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropSet">
      <summary>Член задает свойства.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute">
      <summary>Задает метод, вызываемый при регистрации сборки для использования из COM. Это позволяет выполнять код, написанный пользователем, в процессе регистрации.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComRegisterFunctionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <summary>Определяет список интерфейсов, предоставляемых в виде источников событий COM для класса с атрибутом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с именем исходного интерфейса событий.</summary>
      <param name="sourceInterfaces">Список полных имен исходных интерфейсов событий, разделенных нулями.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типом, используемым в качестве исходного интерфейса.</summary>
      <param name="sourceInterface">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see langword="ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface3">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface3">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface4">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
      <summary>Возвращает полное имя исходного интерфейса событий.</summary>
      <returns>Возвращает полное имя интерфейса-источника событий.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary>Определяет требуемое поведение при настройке приемника уведомлений или подключения кэширования к объекту.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary>При использовании вспомогательных соединений с данными обеспечивает доступ к данным.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary>При использовании вспомогательных соединений с данными (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />) этот флаг требует, чтобы объект данных не отправлял данные, когда вызывается <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary>Требует, чтобы объект создавал только одно уведомление об изменении или обновление кэша перед удалением соединения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary>Требует, чтобы объект не ждал изменения данных или представления до выполнения начального вызова <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (для вспомогательных соединений с данными или представлениями) или обновления кэша (для соединений с кэшем).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary>Это значение используется приложениями объектов DLL и дескрипторами объектов, которые выполняют рисунок своих объектов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary>Синоним для <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, который используется более часто.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary>Если используются соединения с кэшем, этот флаг обновляет кэшированное представление только при сохранении объекта, содержащего кэш.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <summary>Сохраняет параметры, используемые в операции привязки монкера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct">
      <summary>Задает размер структуры <see langword="BIND_OPTS" /> в байтах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline">
      <summary>Показывает время (значение в миллисекундах, возвращенное функцией <see langword="GetTickCount" />), заданное вызывающим объектом для завершения операции привязки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags">
      <summary>Управляет элементами операций привязки моникера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode">
      <summary>Представляет флаги, которые должны использоваться при открытии файла, содержащего объект, определенный моникером.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BINDPTR">
      <summary>Содержит указатель на связанную структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, структуру <see cref="T:System.Runtime.InteropServices.VARDESC" /> или интерфейс <see langword="ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc">
      <summary>Представляет указатель на структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp">
      <summary>Представляет указатель на интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc">
      <summary>Представляет указатель на структуру <see cref="T:System.Runtime.InteropServices.VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
      <summary>Определяет соглашение о вызовах, используемое методом, описанным в структуре METHODDATA.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
      <summary>Указывает на использование для метода соглашения о вызове языка C (CDECL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
      <summary>Указывает на использование для метода соглашения о вызове языка Macintosh Pascal (MACPASCAL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
      <summary>Указывает на конец перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
      <summary>Указывает на использование для метода соглашения о вызове Macintosh Programmers' Workbench (MPW) CDECL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
      <summary>Указывает на использование для метода соглашения о вызове Macintosh Programmers' Workbench (MPW) PASCAL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
      <summary>Указывает на использование для метода соглашения о вызове языка MSC Pascal (MSCPASCAL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
      <summary>Указывает на использование для метода соглашения о вызове языка Pascal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
      <summary>Это значение зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
      <summary>Указывает на использование для метода стандартного соглашения о вызове (STDCALL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
      <summary>Указывает на использование для метода стандартного соглашения о вызове SYSCALL.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <summary>Описывает соединение к заданной точке подключения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie">
      <summary>Представляет маркер соединения, возвращаемый из вызова <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk">
      <summary>Предоставляет указатель на интерфейс <see langword="IUnknown" /> подключенного вспомогательного приемника. Когда необходимость в структуре <see langword="CONNECTDATA" /> отпадет, вызывающий объект должен вызвать метод <see langword="IUnknown::Release" /> для этого указателя.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary>Задает направление потока данных в параметре <paramref name="dwDirection" /> метода <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />. Это определяет форматы, которые может перечислять результирующий перечислитель.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary>Требует, чтобы <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> предоставлял перечислитель для форматов, которые могут быть заданы в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary>Требует, чтобы <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> предоставлял перечислитель для форматов, которые могут быть заданы в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DESCKIND">
      <summary>Определяет, к описанию какого типа выполняется привязка.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_FUNCDESC">
      <summary>Показывает, что структура <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> была возвращена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary>Показывает возвращение <see langword="IMPLICITAPPOBJ" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_MAX">
      <summary>Показывает метку окончания перечисления.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_NONE">
      <summary>Показывает отсутствие совпадений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_TYPECOMP">
      <summary>Показывает возврат объекта <see langword="TYPECOMP" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_VARDESC">
      <summary>Показывает возврат объекта <see langword="VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <summary>Содержит аргументы, передаваемые методу или свойству <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cArgs">
      <summary>Предоставляет число аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cNamedArgs">
      <summary>Представляет число именованных аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgdispidNamedArgs">
      <summary>Представляет диспетчерские идентификаторы именованных аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgvarg">
      <summary>Представляет ссылку на массив аргументов.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary>Указывает, какой аспект данных или представления объекта требуется при рисовании или получении данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary>Представление объекта, позволяющее отображать объект в виде внедренного объекта внутри контейнера. Это значение обычно задается для объектов составных документов. Представление может использоваться для экрана или принтера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary>Представление объекта на экране выглядит так же, как при печати на принтере с помощью команды Печать в меню Файл. Описываемые данные могут представлять последовательность страниц.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary>Символическое представление объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary>Представление эскиза объекта, позволяющее отображать этот объект в средствах просмотра. Эскиз представляет собой аппаратно-независимый точечный рисунок, приблизительно 120 на 120 пикселей, 16 цветов (рекомендуется), возможно, помещенный в метафайл.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <summary>Содержит описание типа и сведения о процессе передачи для переменной, функции или параметра функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.desc">
      <summary>Содержит сведения об элементе.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION">
      <summary>Содержит сведения об элементе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.idldesc">
      <summary>Содержит сведения для удаленного взаимодействия с элементом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.paramdesc">
      <summary>Содержит сведения о параметре.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.tdesc">
      <summary>Определяет тип элемента.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <summary>Описывает исключения, происходящие в процессе <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrDescription">
      <summary>Описывает ошибку, предназначенную для заказчика.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrHelpFile">
      <summary>Содержит полный путь (диск, путь и имя файла) к файлу справки, содержащему дополнительные сведения об ошибке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrSource">
      <summary>Показывает имя источника исключения. Обычно это имя приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.dwHelpContext">
      <summary>Указывает идентификатор контекста справки для раздела справки в файле справки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pfnDeferredFillIn">
      <summary>Представляет указатель на функцию, использующую в качестве аргумента структуру <see cref="T:System.Runtime.InteropServices.EXCEPINFO" /> и возвращающую значение HRESULT. Чтобы избежать задержки при заполнении, этому полю присваивается значение <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pvReserved">
      <summary>Это поле зарезервировано, его значение должно быть равно <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.scode">
      <summary>Возвращаемое значение, описывающее ошибку.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wCode">
      <summary>Представляет код ошибки, определяющий ошибку.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wReserved">
      <summary>Это поле зарезервировано, его значение должно быть равно 0.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FILETIME">
      <summary>Представляет количество 100-наносекундных интервалов с 1 января 1601 г. Эта структура является 64-разрядным значением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwHighDateTime">
      <summary>Задает старшие 32 бита структуры <see langword="FILETIME" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwLowDateTime">
      <summary>Задает младшие 32 бита структуры <see langword="FILETIME" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary>Представляет обобщенный формат буфера обмена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary>Задает определенный формат буфера обмена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary>Задает одну из констант перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />, указывающую, сколько сведений должно содержаться в отрисовке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary>Задает часть аспекта, когда данные должны быть разделены по разным страницам.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary>Задает указатель на структуру <see langword="DVTARGETDEVICE" />, содержащую сведения о целевом устройстве, для которого формируются данные.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary>Задает одну из констант перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, которая указывает тип среды хранения, используемой для передачи данных объекта.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <summary>Содержит описание функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.callconv">
      <summary>Определяет для функции соглашение о вызове.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParams">
      <summary>Подсчитывает полное число параметров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParamsOpt">
      <summary>Подсчитывает число дополнительных параметров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cScodes">
      <summary>Подсчитывает число разрешенных возвращенных значений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.elemdescFunc">
      <summary>Содержит возвращаемый функцией тип.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.funckind">
      <summary>Показывает, является функция виртуальной, статической или диспетчерской.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.invkind">
      <summary>Задает тип функции свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgelemdescParam">
      <summary>Показывает размер <see cref="F:System.Runtime.InteropServices.FUNCDESC.cParams" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgscode">
      <summary>Хранит число ошибок, которое функция может возвратить в 16-разрядной системе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.memid">
      <summary>Определяет идентификатор члена функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.oVft">
      <summary>Определяет смещение в VTBL для <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.wFuncFlags">
      <summary>Показывает флаги <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> функции.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <summary>Указывает константы, определяющие свойства функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary>Функция, поддерживающая привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary>Функция, предоставляющая объект наилучшим образом. Только одна функция в типе может содержать этот атрибут.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary>Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой член обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-члена. Разрешается для членов диспетчерских и обычных интерфейсов, но запрещен для модулей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary>Функция, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary>Эту функцию не следует показывать пользователю, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary>Отображаются как отдельные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary>Это свойство отображается в обозревателе объектов и не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary>Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary>Если задано, любой вызов метод, задающего это свойство, сначала приводит к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />. Реализация <see langword="OnRequestEdit" /> определяет, разрешено ли вызову задавать данное свойство.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary>Функция не должна быть доступной для макроязыков. Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary>Функция возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary>Член сведений о типе является членом по умолчанию для отображения в пользовательском интерфейсе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary>Функция поддерживает <see langword="GetLastError" />. Если в процессе выполнения функции возникает ошибка, вызывающий объект может вызвать <see langword="GetLastError" />, чтобы извлечь код ошибки.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <summary>Определяет способ доступа к функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_DISPATCH">
      <summary>Доступ к функции может быть получен только при помощи <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_NONVIRTUAL">
      <summary>Функция доступна по статическому (<see langword="static" />) адресу и принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary>Функция доступна при помощи таблицы виртуальных функций (VTBL) и принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_STATIC">
      <summary>Функция доступна по статическому (<see langword="static" />) адресу и не принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_VIRTUAL">
      <summary>Функция доступна таким же образом, как и <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL" />, за исключением того, что для этой функции существует реализация.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IAdviseSink" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary>Уведомляет все зарегистрированные приемники уведомлений о том, что объект перешел из состояния выполнения в состояние загруженности.  Этот метод вызывается сервером.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Уведомляет все зарегистрированные в данный момент приемники уведомлений объектов данных, что объект изменился.</summary>
      <param name="format">
        <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданный ссылкой, который описывает формат, целевое устройство, отрисовку и сведения о хранении для вызывающего объекта данных.</param>
      <param name="stgmedium">
        <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданный ссылкой, который определяет среду хранения (глобальная память, файл на диске, объект хранилища, объект потока, объект интерфейса графических устройство (GDI) или неопределенная) и владение этой средой для вызывающего объекта данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Уведомляет все зарегистрированные приемники уведомлений, что объект был переименован. Этот метод вызывается сервером.</summary>
      <param name="moniker">Указатель на интерфейс <see langword="IMoniker" /> на новом полном моникере объекта.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary>Уведомляет все зарегистрированные приемники уведомлений, что объект был сохранен. Этот метод вызывается сервером.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary>Уведомляет зарегистрированные приемники уведомлений объекта, что его представление изменилось. Этот метод вызывается сервером.</summary>
      <param name="aspect">Аспект, или представление, объекта. Содержит значение, взятое из перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />.</param>
      <param name="index">Часть представления, которое изменилось. В настоящий момент действительно только значение -1.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IBindCtx">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IBindCtx" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary>Перечисляет строки, являющиеся ключами таблицы внутреннего представления контекстных параметров объекта.</summary>
      <param name="ppenum">При возвращении данного метода содержит ссылку на перечислитель параметров объекта. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary>Возвращает параметры текущей привязки, хранящиеся в контексте этой привязки.</summary>
      <param name="pbindopts">Указатель на структуру для получения параметров привязки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <summary>Выполняет поиск заданного ключа таблицы внутреннего представления контекстных параметров объекта и возвращает соответствующий объект, если он существует.</summary>
      <param name="pszKey">Имя объекта, который нужно найти.</param>
      <param name="ppunk">При возвращении данного метода содержит указатель интерфейса объекта. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
      <summary>Возвращает доступ к таблице текущих объектов ROT, относящейся к этому процессу привязки.</summary>
      <param name="pprot">При возвращении данного метода содержит ссылку на таблицу текущих объектов (ROT). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)">
      <summary>Регистрирует переданный объект как один из объектов, привязка которых была выполнена во время операции моникера и которые необходимо освободить после завершения этой операции.</summary>
      <param name="punk">Объект для регистрации с целью освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <summary>Регистрирует заданный указатель для объекта под указанным именем в таблице внутреннего представления указателей объектов.</summary>
      <param name="pszKey">Имя, используемое для регистрации <paramref name="punk" />.</param>
      <param name="punk">Регистрируемый объект.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects">
      <summary>Освобождает все объекты, зарегистрированные в текущий момент с контекстом привязки при помощи метода <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)">
      <summary>Удаляет все объекты из списка зарегистрированных объектов, нуждающихся в освобождении.</summary>
      <param name="punk">Объект для удаления регистрации с целью освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
      <summary>Отменяет регистрацию объекта, найденного в данный момент для заданного ключа во внутренней таблице контекстных параметров объекта, если такой ключ зарегистрирован.</summary>
      <param name="pszKey">Ключ, регистрацию которого необходимо удалить.</param>
      <returns>Значение <see langword="S_OK" /><see langword="HRESULT" />, если заданный ключ был успешно удален из таблицы; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary>Сохраняет блок параметров в контексте привязки. Эти параметры будут применены к последующим операциям <see langword="UCOMIMoniker" />, которые используют этот контекст привязки.</summary>
      <param name="pbindopts">Структура, содержащая задаваемые параметры привязки.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IConnectionPoint" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)">
      <summary>Устанавливает вспомогательное соединение между точкой подключения и объектом приемника вызывающего оператора.</summary>
      <param name="pUnkSink">Ссылка на приемник для получения вызовов выходящего интерфейса, управляемого с использованием этой точки подключения.</param>
      <param name="pdwCookie">При возвращении данного метода содержит файл cookie соединения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary>Создает объект-перечислитель для итерации по соединениям, существующим для этой точки подключения.</summary>
      <param name="ppEnum">При возвращении данного метода содержит только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary>Возвращает IID выходящего интерфейса, управляемого с использованием этой точки подключения.</summary>
      <param name="pIID">При возвращении этого параметра содержит IID выходящего интерфейса, управляемого с использованием данной точки подключения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
      <summary>Извлекает указатель интерфейса <see langword="IConnectionPointContainer" /> на доступный для соединения объект, которому принадлежит эта точка подключения.</summary>
      <param name="ppCPC">При возвращении этого параметра содержит интерфейс <see langword="IConnectionPointContainer" /> объекта, доступного для соединения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Unadvise(System.Int32)">
      <summary>Завершает вспомогательное соединение, установленное ранее при помощи метода <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
      <param name="dwCookie">Файл cookie соединения, возвращенный ранее из метода <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IConnectionPointContainer" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary>Создает перечислитель всех точек подключения, поддерживаемых в объекте, доступном для соединения, по одной точке подключения для каждого идентификатора IID.</summary>
      <param name="ppEnum">При возвращении данного метода содержит указатель интерфейса перечислителя. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
      <summary>Запрашивает у доступного для соединения объекта наличие точки подключения для определенного IID, и, если она имеется, возвращает указатель интерфейса <see langword="IConnectionPoint" /> на эту точку подключения.</summary>
      <param name="riid">Ссылка на идентификатор IID исходящего интерфейса, для которого запрашивается точка подключения.</param>
      <param name="ppCP">При возвращении данного метода содержит точку подключения, управляющую <paramref name="riid" /> выходящего интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IDataObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary>Создает соединение между объектом данных и приемником уведомлений. Этот метод вызывается объектом, который поддерживает приемник уведомлений и позволяет уведомлять приемник об изменениях в данных объекта.</summary>
      <param name="pFormatetc">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, определяющая формат, целевое устройство, аспект и среду передачи, которые будут использоваться для будущих уведомлений.</param>
      <param name="advf">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" />, задающее группу флагов для контролирования вспомогательного соединения.</param>
      <param name="adviseSink">Указатель на интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> в приемнике уведомлений, который будет получать уведомления об изменениях.</param>
      <param name="connection">При возвращении данного метода содержит указатель на маркер DWORD, определяющий это соединение. Позднее этот маркер можно использовать для удаления вспомогательного соединения, передав его в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Если это значение равно нулю, соединение не было установлено. Этот параметр передается неинициализированным.</param>
      <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие.
  Значение 
  Описание 
  S_OK 
  Было создано вспомогательное соединение.  
  
  E_NOTIMPL 
  Этот метод не был реализован в объекте данных.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  OLE_E_ADVISENOTSUPPORTED 
  Объект данных не поддерживает уведомление об изменении.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary>Разрывает соединение уведомления, которое было ранее установлено.</summary>
      <param name="connection">маркер DWORD, задающий соединение для удаления. Используйте значение, возвращенное <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> при первоначальной настройке соединения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Создает объект, который может использоваться для перечисления текущих вспомогательных соединений.</summary>
      <param name="enumAdvise">При возвращении данного метода содержит компонент <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />, получающий указатель интерфейса на новый объект перечислителя. Если при реализации для параметра <paramref name="enumAdvise" /> задается значение <see langword="null" />, в это время отсутствуют соединения с приемниками уведомлений. Этот параметр передается неинициализированным.</param>
      <returns>Этот метод поддерживает стандартное возвращаемое значение E_OUTOFMEMORY, а также следующие:
  Значение  
  
  Описание  
  
  S_OK  
  
  Экземпляр объекта перечислителя успешно создан, или отсутствуют соединения.  
  
  OLE_E_ADVISENOTSUPPORTED  
  
  Этот объект не поддерживает уведомления о рекомендациях.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary>Создает объект для перечисления структур <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> для объекта данных. Эти структуры используются в вызовах <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
      <param name="direction">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" />, определяющее направление данных.</param>
      <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG и E_OUTOFMEMORY, а также следующие:
  Значение 
  Описание 
  S_OK 
  Объект перечислителя был успешно создан.  
  
  E_NOTIMPL 
  Направление, заданное параметром <paramref name="direction" />, не поддерживается.  
  
  OLE_S_USEREG 
  Требует, чтобы OLE перечисляли форматы из реестра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Предоставляет стандартную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая логически эквивалентна более сложной структуре. Этот метод применяется, чтобы определить, будут ли две различные структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> возвращать одинаковые данные, что позволяет избежать ненужной повторной отрисовки.</summary>
      <param name="formatIn">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, определяющую формат, среду передачи и целевое устройство, которые вызывающий объект хотел бы использовать для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован.</param>
      <param name="formatOut">Возвращаемые этим методом данные содержат указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая содержит наиболее общие сведения для определенной прорисовки, делая его канонически эквивалентным <c>formatetcIn</c>. Вызывающий объект должен выделить эту структуру, а метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> должен заполнить данные. Для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, вызывающий объект использует предоставленное значение параметра <paramref name="formatOut" />, если предоставленное значение не равно <see langword="null" />. Это значение равняется <see langword="null" />, если метод возвращает <see langword="DATA_S_SAMEFORMATETC" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован. Этот параметр передается неинициализированным.</param>
      <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие.
  Значение 
  Описание 
  S_OK 
  Возвращенная структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> отличается от структуры, которая была передана.  
  
  DATA_S_SAMEFORMATETC 
  Структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> — те же самые, и значение <see langword="null" /> возвращается в параметре <paramref name="formatOut" />.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  OLE_E_NOTRUNNING 
  Приложение не выполняется.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Получает данные из исходного объекта данных. Метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, который вызывается объектом-получателем данных, обрабатывает данные, описанные в заданной структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, и передает их через заданную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />. Затем вызывающий объект несет ответственность за освобождение структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
      <param name="format">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. С помощью логического оператора OR можно задать более одной среды передачи, разрешив методу выбирать лучшую среду передачи среди заданных.</param>
      <param name="medium">При возвращении данного метода содержит указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, задающий среду хранения, содержащую возвращенные данные посредством своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" />, и ответственность за освобождение среды передачи через значение своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> равняется <see langword="null" />, получатель среды передачи отвечает за ее освобождение; в противном случае <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> указывает на интерфейс <see langword="IUnknown" /> в соответствующем объекте, так чтобы можно было вызвать его метод <see langword="Release" />. Среда передачи должна быть выделена и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Получает данные из исходного объекта данных. Этот метод, который вызывается объектом-получателем данных, отличается от метода <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, в котором вызывающий объект должен выделить и освободить заданную среду хранения.</summary>
      <param name="format">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. Только одна среда может быть задана в <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, и только следующие значения <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> являются действительными: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> или <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium">Компонент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданный ссылкой, который определяет среду хранения, содержащую передаваемые данные. Среда передачи должна быть выделена вызывающим объектом и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Также вызывающий объект должен освободить среду передачи. При реализации этого метода должно всегда предоставляться значение <see langword="null" /> для элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, на которую указывает этот параметр.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Определяет, способен ли объект данных выполнять отрисовку данных, описанных в структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Объекты, пытающиеся выполнять операцию вставки или перетаскивания, могут вызывать этот метод перед вызовом <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, чтобы получить указание о том, может ли операция быть успешной.</summary>
      <param name="format">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство, которые должны использоваться для запроса.</param>
      <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие:
  Значение 
  Описание 
  S_OK 
  Последующий вызов <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, возможно, будет успешным.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  DV_E_TYMED 
  Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" />.  
  
  DV_E_DVASPECT 
  Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" />.  
  
  OLE_E_NOTRUNNING 
  Приложение не выполняется.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary>Передает данные в объект, реализующий этот метод. Этот метод вызывается объектом, содержащим источник данных.</summary>
      <param name="formatIn">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, которая определяет формат, используемый объектом данных при интерпретации данных, содержащихся в среде хранения.</param>
      <param name="medium">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданная ссылкой, которая определяет среду хранения, в которой передаются данные.</param>
      <param name="release">Значение <see langword="true" /> задает, что вызванный объект данных, который реализует <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, владеет средой хранения после возвращения вызова. Это означает, что объект данных должен освободить среду после ее использования, вызвав функцию <see langword="ReleaseStgMedium" />. Значение <see langword="false" /> для указания того, что вызывающий объект сохраняет владение средой хранения, а вызванный объект данных использует среду хранения только во время выполнения вызова.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLDESC">
      <summary>Содержит информацию, необходимую для передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved">
      <summary>Зарезервировано, равно <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags">
      <summary>Показывает значение <see cref="T:System.Runtime.InteropServices.IDLFLAG" />, описывающее тип.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <summary>Описывает порядок передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FIN">
      <summary>Параметр передает сведения из вызывающего объекта в вызываемый объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FLCID">
      <summary>Этот параметр является локальным идентификатором клиентского приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FOUT">
      <summary>Этот параметр возвращает сведения из вызываемого объекта в вызывающий объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FRETVAL">
      <summary>Этот параметр является значением, возвращаемым членом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_NONE">
      <summary>Не задает, передает ли параметр сведения или получает их.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <summary>Управляет определением интерфейса <see langword="IEnumConnectionPoints" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число ссылок <see langword="IConnectionPoint" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные соединения. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">В возвращаемых результатах выполнения метода содержится ссылка на фактическое число подключений, перечисленных в <paramref name="rgelt" />.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <summary>Управляет определением интерфейса <see langword="IEnumConnections" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число структур <see cref="T:System.Runtime.InteropServices.CONNECTDATA" />, которые будут возвращены в <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные соединения. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">В возвращаемых результатах выполнения метода содержится ссылка на фактическое число подключений, перечисленных в <paramref name="rgelt" />.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IEnumFORMATETC" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий перечислитель.</summary>
      <param name="newEnum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число ссылок <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные ссылки <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">При возвращении данного метода содержит ссылку на фактическое число ссылок, перечисленных в <paramref name="rgelt" />. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
      <returns>HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <summary>Управляет определением интерфейса <see langword="IEnumMoniker" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число моникеров для возвращения в <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные моникеры. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">При возвращении данного метода содержит ссылку на фактическое число моникеров, перечисленных в <paramref name="rgelt" />.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IEnumSTATDATA" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий перечислитель.</summary>
      <param name="newEnum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число ссылок <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные ссылки <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">При возвращении данного параметра содержит ссылку на фактическое число ссылок, перечисленных в <paramref name="rgelt" />. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
      <returns>HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumString">
      <summary>Управляет определением интерфейса <see langword="IEnumString" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число строк для возвращения в параметре <paramref name="rgelt" />.</param>
      <param name="rgelt">При возвращении данного метода содержит ссылку на перечисленные строки. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">При возвращении данного метода содержит ссылку на фактическое число строк, перечисленных в <paramref name="rgelt" />.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <summary>Управляет определением интерфейса <see langword="IEnumVARIANT" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone">
      <summary>Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <returns>Ссылка <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT" /> на только что созданный перечислитель.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)">
      <summary>Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt">Число элементов для возвращения в <c>rgelt</c>.</param>
      <param name="rgVar">При возвращении данного метода содержит ссылку на перечисленные элементы. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched">При возвращении данного метода содержит ссылку на фактическое число элементов, перечисленных в <c>rgelt</c>.</param>
      <returns>Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset">
      <summary>Сбрасывает последовательность перечисления в начало.</summary>
      <returns>HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)">
      <summary>Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt">Число элементов, пропускаемых при перечислении.</param>
      <returns>Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMoniker">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IMoniker" /> с функциональной возможностью COM из <see langword="IPersist" /> и <see langword="IPersistStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary>Использует моникер для привязки к определяемому объекту.</summary>
      <param name="pbc">Ссылка на интерфейс <see langword="IBindCtx" /> объекта контекстной привязки, используемого в данной операции привязки.</param>
      <param name="pmkToLeft">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="riidResult">Идентификатор интерфейса (IID), выбранного клиентом для установки соединения с объектом, который определен моникером.</param>
      <param name="ppvResult">При возвращении данного метода содержит ссылку на интерфейс, запрошенный <paramref name="riidResult" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary>Возвращает указатель интерфейса на хранилище, в котором содержится объект, определенный моникером.</summary>
      <param name="pbc">Ссылка на интерфейс <see langword="IBindCtx" /> объекта контекстной привязки, используемого в процессе операции привязки.</param>
      <param name="pmkToLeft">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="riid">Идентификатор IID запрошенного интерфейса хранилища.</param>
      <param name="ppvObj">При возвращении данного метода содержит ссылку на интерфейс, запрошенный <paramref name="riid" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Создает новый моникер на основании общего префикса, который данный моникер использует совместно с другим моникером.</summary>
      <param name="pmkOther">Ссылка на интерфейс <see langword="IMoniker" /> другого моникера, сравниваемого с данным моникером для выявления общего префикса.</param>
      <param name="ppmkPrefix">При возвращении данного метода содержит моникер, который является общим префиксом текущего моникера и <paramref name="pmkOther" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Объединяет текущий моникер с другим, создавая составной моникер.</summary>
      <param name="pmkRight">Ссылка на интерфейс <see langword="IMoniker" /> моникера для добавления в конец данного моникера.</param>
      <param name="fOnlyIfNotGeneric">Значение <see langword="true" /> показывает, что вызывающему объекту требуется неуниверсальное объединение. Операция продолжается только в том случае, если параметр <paramref name="pmkRight" /> является классом моникера, с которым текущий моникер может быть объединен каким-либо способом, кроме образования универсального объединения. Значение <see langword="false" /> показывает, что при необходимости метод может создать универсальное объединение.</param>
      <param name="ppmkComposite">При возвращении данного метода содержит ссылку на итоговый составной моникер. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Предоставляет указатель на перечислитель, способный перечислить компоненты составного моникера.</summary>
      <param name="fForward">Значение <see langword="true" /> используется для перечисления моникеров слева направо. Значение <see langword="false" /> используется для перечисления справа налево.</param>
      <param name="ppenumMoniker">При возвращении данного метода содержит ссылку на объект перечислителя для моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)">
      <summary>Возвращает идентификатор класса CLSID для объекта.</summary>
      <param name="pClassID">При возвращении этого метода содержит CLSID. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
      <summary>Возвращает отображаемое имя, являющееся представлением текущего моникера, удобным для чтения пользователем.</summary>
      <param name="pbc">Ссылка на контекст привязки, используемый в данной операции.</param>
      <param name="pmkToLeft">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="ppszDisplayName">При возвращении данного метода содержит строку отображаемого имени. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)">
      <summary>Возвращает размер потока, необходимого для сохранения объекта, в байтах.</summary>
      <param name="pcbSize">При возвращении данного метода содержит значение <see langword="long" />, показывающее размер потока, необходимого для сохранения объекта, в байтах. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Предоставляет число, указывающее время последнего изменения объекта, определенного текущим моникером.</summary>
      <param name="pbc">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="pFileTime">При возвращении данного метода содержит время последнего изменения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)">
      <summary>Вычисляет 32-разрядное целое число, используя внутреннее состояние моникера.</summary>
      <param name="pdwHash">При возвращении данного метода содержит хэш-значения для этого моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Предоставляет моникер, объединение которого с правой частью данного моникера или моникера с подобной структурой приводит к нулевому значению.</summary>
      <param name="ppmk">При возвращении данного метода содержит моникер, который является инверсией текущего моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty">
      <summary>Проверяет наличие изменений в объекте с момента его последнего сохранения.</summary>
      <returns>Значение <see langword="S_OK" /><see langword="HRESULT" />, если объект был изменен; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Сравнивает текущий моникер с заданным моникером и показывает, совпадают ли они.</summary>
      <param name="pmkOtherMoniker">Ссылка на моникер, используемый для сравнения.</param>
      <returns>Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникеры совпадают; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Определяет, загружен и запущен ли в данный момент объект, определенный текущим моникером.</summary>
      <param name="pbc">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft">Ссылка на моникер слева от данного моникера, если текущий моникер является частью составного моникера.</param>
      <param name="pmkNewlyRunning">Ссылка на моникер, который был добавлен в таблицу текущих объектов (ROT) самым последним.</param>
      <returns>Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникер выполняется, значение <see langword="S_FALSE" /><see langword="HRESULT" />, если моникер не выполняется, или значение <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)">
      <summary>Показывает, является ли данный моникер одним из классов моникеров, предоставляемых системой.</summary>
      <param name="pdwMksys">При возвращении данного метода содержит указатель на целое число, являющееся одним из значений из перечисления <see langword="MKSYS" /> и ссылающееся на один из классов моникеров COM. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникер является моникером системы; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
      <summary>Инициализирует объект из потока, в котором он был предварительно сохранен.</summary>
      <param name="pStm">Поток, из которого загружается объект.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Считывает столько знаков указанного отображаемого имени, сколько может воспринять <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />, и создает моникер, соответствующий считанной части.</summary>
      <param name="pbc">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft">Ссылка на моникер, созданный из отображаемого имени до данной точки.</param>
      <param name="pszDisplayName">Ссылка на строку, содержащую оставшуюся часть анализируемого отображаемого имени.</param>
      <param name="pchEaten">При возвращении данного метода содержит число знаков, использованных при анализе <paramref name="pszDisplayName" />. Этот параметр передается неинициализированным.</param>
      <param name="ppmkOut">При возвращении данного метода содержит ссылку на моникер, построенный из <paramref name="pszDisplayName" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Возвращает уменьшенный моникер, представляющий собой другой моникер, ссылающийся на тот же объект, но который может быть привязан с такой же или большей эффективностью.</summary>
      <param name="pbc">Ссылка на интерфейс <see langword="IBindCtx" /> контекста привязки, используемый в данной операции привязки.</param>
      <param name="dwReduceHowFar">Значение, задающее, насколько следует уменьшить текущий моникер.</param>
      <param name="ppmkToLeft">Ссылка на моникер слева от текущего моникера.</param>
      <param name="ppmkReduced">При возвращении данного метода содержит ссылку на уменьшенную форму текущего моникера, который может иметь значение <see langword="null" />, если происходит ошибка или если текущий моникер уменьшен до нуля. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary>Предоставляет моникер, добавление которого к текущему моникеру (или к одной из подобных структур) приводит к получению указанного моникера.</summary>
      <param name="pmkOther">Ссылка на моникер, для которого нужно получить относительный путь.</param>
      <param name="ppmkRelPath">При возвращении данного метода содержит ссылку на относительный моникер. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
      <summary>Сохраняет объект в указанном потоке.</summary>
      <param name="pStm">Поток, в котором будет сохранен объект.</param>
      <param name="fClearDirty">Значение <see langword="true" /> показывает, что необходима очистка измененного флага после сохранения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <summary>Определяет атрибуты реализованного или унаследованного интерфейса типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULT">
      <summary>Интерфейс или диспетчерский интерфейс предоставляет источник или приемник, используемый по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULTVTABLE">
      <summary>Приемники получают события при помощи таблицы виртуальной функции (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FRESTRICTED">
      <summary>Не следует позволять пользователям отображать или программировать этот член.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FSOURCE">
      <summary>Этот член совместного класса вызывается, а не реализуется.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <summary>Задает способ вызова функции при помощи <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_FUNC">
      <summary>Член, вызываемый при помощи синтаксиса вызова обычной функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary>Функция, вызываемая при помощи синтаксиса обычного доступа к свойству.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary>Функция, вызываемая при помощи синтаксиса присвоения значения свойству.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary>Функция, вызываемая при помощи синтаксиса присвоения ссылки свойству.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IPersistFile">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IPersistFile" /> с функциональными возможностями из <see langword="IPersist" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)">
      <summary>Возвращает идентификатор класса CLSID для объекта.</summary>
      <param name="pClassID">При возвращении данного метода содержит ссылку на идентификатор CLSID. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
      <summary>Извлекает либо абсолютный путь к текущему выполняемому файлу объекта, либо, если выполняемый файл отсутствует, выдаваемый по умолчанию запрос имени файла объекта.</summary>
      <param name="ppszFileName">При возвращении данного метода содержит адрес указателя на оканчивающуюся нулем строку, содержащую путь для текущего файла или используемый по умолчанию запрос имени файла (например, *.txt). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty">
      <summary>Проверяет наличие изменений в объекте с момента его последнего сохранения в текущем файле.</summary>
      <returns>Значение <see langword="S_OK" />, если файл был изменен с момента последнего сохранения; значение <see langword="S_FALSE" /> — если файл не был изменен.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
      <summary>Открывает указанный файл и инициализирует объект из содержимого файла.</summary>
      <param name="pszFileName">Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, который требуется открыть.</param>
      <param name="dwMode">Набор значений из перечисления <see langword="STGM" />, показывающих режим доступа, используемый для открытия <paramref name="pszFileName" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
      <summary>Сохраняет копию объекта в заданном файле.</summary>
      <param name="pszFileName">Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, в котором требуется сохранить объект.</param>
      <param name="fRemember">Значение <see langword="true" />, чтобы использовать параметр <paramref name="pszFileName" /> в качестве выполняемого файла; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
      <summary>Сообщает объекту, что он может выполнять запись в файл.</summary>
      <param name="pszFileName">Абсолютный путь к файлу, в котором ранее был сохранен объект.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IRunningObjectTable" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary>Перечисляет объекты, зарегистрированные в данный момент как запущенные.</summary>
      <param name="ppenumMoniker">При возвращении данного метода содержит новый перечислитель для таблицы текущих объектов (ROT). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
      <summary>Возвращает зарегистрированный объект, если предоставленное имя объекта зарегистрировано как выполняемое.</summary>
      <param name="pmkObjectName">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <param name="ppunkObject">При возвращении данного метода содержит запрошенный выполняемый объект. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Выполняет поиск этого моникера в таблице текущих объектов (ROT) и сообщает записанное время изменения, если моникер найден.</summary>
      <param name="pmkObjectName">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <param name="pfiletime">При возвращении данного объекта содержит время последнего изменения объекта. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Определяет, зарегистрирован ли заданный моникер в таблице текущих объектов (ROT).</summary>
      <param name="pmkObjectName">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <returns>Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary>Записывает время изменения определенного объекта, чтобы <see langword="IMoniker::GetTimeOfLastChange" /> мог сообщить о времени внесения изменений.</summary>
      <param name="dwRegister">Запись измененного объекта в таблице текущих объектов (ROT).</param>
      <param name="pfiletime">Ссылка на время последнего изменения объекта.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Регистрирует переход предоставленного объекта в состояние выполнения.</summary>
      <param name="grfFlags">Показывает, является ли ссылка таблицы текущих объектов ROT на <paramref name="punkObject" /> слабой или строгой, а также управляет доступом к объекту, используя соответствующую запись в таблице ROT.</param>
      <param name="punkObject">Ссылка на объект, зарегистрированный как выполняемый.</param>
      <param name="pmkObjectName">Ссылка на моникер, определяющий <paramref name="punkObject" />.</param>
      <returns>Значение, которое можно использовать для определения записи в таблице ROT при последующих вызовах метода <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)">
      <summary>Удаляет регистрацию заданного объекта из таблицы текущих объектов (ROT).</summary>
      <param name="dwRegister">Удаляемая запись в таблице текущих объектов (ROT).</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IStream">
      <summary>Предоставляет управляемое определение интерфейса <see langword="IStream" /> с функциональными возможностями <see langword="ISequentialStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
      <summary>Создает новый объект-поток с собственным указателем поиска, ссылающимся на те же байты, что и исходный поток.</summary>
      <param name="ppstm">При возвращении данного метода содержит новый объект потока. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)">
      <summary>Следует убедиться, что все изменения, внесенные в объект потока, открытый в режиме транзакций, отражены в родительском хранилище.</summary>
      <param name="grfCommitFlags">Значение, контролирующее выполнение изменений объекта потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
      <summary>Копирует указанное число байтов из текущего указателя поиска данного потока в текущий указатель поиска другого потока.</summary>
      <param name="pstm">Ссылка на поток назначения.</param>
      <param name="cb">Число байтов, копируемых из потока-источника.</param>
      <param name="pcbRead">При удачном возвращении содержит фактическое число байтов, считанных из источника.</param>
      <param name="pcbWritten">При удачном возвращении содержит фактическое число байтов, записанных в поток назначения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)">
      <summary>Ограничивает доступ к указанному диапазону байтов в потоке.</summary>
      <param name="libOffset">Смещение в байтах для начала диапазона.</param>
      <param name="cb">Длина диапазона, доступ к которому ограничен, в байтах.</param>
      <param name="dwLockType">Запрошенные ограничения для доступа к диапазону.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)">
      <summary>Считывает заданное число байтов из объекта-потока в память, начиная с текущего указателя поиска.</summary>
      <param name="pv">При возвращении данного метода содержит данные, считанные из потока. Этот параметр передается неинициализированным.</param>
      <param name="cb">Число байтов, которое требуется считать из объекта-потока.</param>
      <param name="pcbRead">Указатель на переменную <see langword="ULONG" />, получающую фактическое число байтов, считанное из объекта потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Revert">
      <summary>Отменяет все изменения, выполненные в потоке, с которым шел обмен данными, с момента последнего вызова метода <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)">
      <summary>Изменяет положение указателя поиска относительно начала потока, конца потока или текущего указателя поиска.</summary>
      <param name="dlibMove">Смещение, добавляемое к <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin">Исходное положение поиска. Исходное положение может быть началом файла, текущим положением указателя поиска или концом файла.</param>
      <param name="plibNewPosition">При удачном возвращении содержит смещение указателя поиска от начала потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)">
      <summary>Изменяет размер объекта-потока.</summary>
      <param name="libNewSize">Новый размер потока в байтах.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
      <summary>Извлекает структуру <see cref="T:System.Runtime.InteropServices.STATSTG" /> для этого потока.</summary>
      <param name="pstatstg">При возвращении данного метода содержит структуру <see langword="STATSTG" />, описывающую этот объект потока. Этот параметр передается неинициализированным.</param>
      <param name="grfStatFlag">Элементы структуры <see langword="STATSTG" />, не возвращаемые этим методом, таким образом получается сэкономить на операциях по выделению памяти.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
      <summary>Удаляет ограничения доступа к диапазону байтов, установленные ранее с помощью метода <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</summary>
      <param name="libOffset">Смещение в байтах для начала диапазона.</param>
      <param name="cb">Длина диапазона, доступ к которому ограничен, в байтах.</param>
      <param name="dwLockType">Ограничения доступа, заданные ранее для диапазона.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)">
      <summary>Записывает заданное число байтов в объект-поток, начиная с текущего указателя поиска.</summary>
      <param name="pv">Буфер для записи потока.</param>
      <param name="cb">Число байтов, записываемое в поток.</param>
      <param name="pcbWritten">При удачном возвращении содержит фактическое число байтов, записанных в объект-поток. Если вызывающий объект задает для этого указателя значение <see cref="F:System.IntPtr.Zero" />, данный метод не предоставляет фактическое число записанных байтов.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeComp">
      <summary>Предоставляет управляемое определение интерфейса <see langword="ITypeComp" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
      <summary>Сопоставляет имя с типом элемента или связывает глобальные переменные и функции, содержащиеся в библиотеке типов.</summary>
      <param name="szName">Привязываемое имя.</param>
      <param name="lHashVal">Хэш-значение для <paramref name="szName" />, рассчитанное при помощи <see langword="LHashValOfNameSys" />.</param>
      <param name="wFlags">Слово флагов, содержащее один или несколько используемых флагов, определенных в перечислении <see langword="INVOKEKIND" />.</param>
      <param name="ppTInfo">При возвращении данного метода содержит ссылку на описание типа, содержащее элемент, с которым этот тип связан, если возвращено значение <see langword="FUNCDESC" /> или <see langword="VARDESC" />. Этот параметр передается неинициализированным.</param>
      <param name="pDescKind">При возвращении данного метода содержит ссылку на перечислитель <see langword="DESCKIND" />, указывающий, является ли имя, к которому выполняется привязка, <see langword="VARDESC" />, <see langword="FUNCDESC" /> или <see langword="TYPECOMP" />. Этот параметр передается неинициализированным.</param>
      <param name="pBindPtr">При возвращении данного метода содержит ссылку на интерфейс <see langword="VARDESC" />, <see langword="FUNCDESC" /> или <see langword="ITypeComp" />, к которому выполняется привязка. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Выполняет привязку к описаниям типов, содержащимся в библиотеке типов.</summary>
      <param name="szName">Привязываемое имя.</param>
      <param name="lHashVal">Хэш-значение для <paramref name="szName" />, определенное при помощи <see langword="LHashValOfNameSys" />.</param>
      <param name="ppTInfo">При возвращении данного метода содержит ссылку на <see langword="ITypeInfo" /> типа, к которому был привязан параметр <paramref name="szName" />. Этот параметр передается неинициализированным.</param>
      <param name="ppTComp">При возвращении данного метода содержит ссылку на переменную <see langword="ITypeComp" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <summary>Предоставляет управляемое определение интерфейса автоматизации компонентов ITypeInfo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>Извлекает адреса статических функций и переменных, определенных в библиотеке DLL.</summary>
      <param name="memid">Идентификатор элемента для извлекаемого адреса элемента типа <see langword="static" />.</param>
      <param name="invKind">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее, является ли член свойством, и, если да, то какого типа.</param>
      <param name="ppv">При возвращении данного метода содержит ссылку на элемент <see langword="static" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>Создает новый экземпляр типа, описывающего класс компонента (совместный класс).</summary>
      <param name="pUnkOuter">Объект, действующий как управляющий <see langword="IUnknown" />.</param>
      <param name="riid">Идентификатор IID интерфейса, используемый вызывающим объектом для связи с итоговым объектом.</param>
      <param name="ppvObj">При возвращении данного метода содержит ссылку на созданный объект. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>Извлекает библиотеку типов, содержащую описание этого типа и его индекс внутри этой библиотеки типов.</summary>
      <param name="ppTLB">При возвращении данного метода содержит ссылку на содержащую библиотеку типов. Этот параметр передается неинициализированным.</param>
      <param name="pIndex">При возвращении данного метода содержит ссылку на индекс описания типа в содержащей библиотеке типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Возвращает описание или спецификацию точки входа для функции в динамической библиотеке DLL.</summary>
      <param name="memid">Идентификатор функции элемента, для которого возвращается описание входа динамической библиотеки DLL.</param>
      <param name="invKind">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее тип элемента, определенного с помощью <paramref name="memid" />.</param>
      <param name="pBstrDllName">Если значение не равно <see langword="null" />, функция задает для параметра <paramref name="pBstrDllName" /> значение <see langword="BSTR" />, содержащее имя динамической библиотеки DLL.</param>
      <param name="pBstrName">Если значение не равно <see langword="null" />, функция задает для параметра <c>lpbstrName</c> значение <see langword="BSTR" />, содержащее имя точки входа.</param>
      <param name="pwOrdinal">Если значение не равно <see langword="null" /> и функция определена порядковым номером, то параметр <c>lpwOrdinal</c> должен указывать на порядковый номер.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Извлекает строку документации, полный файл справки и путь к нему, а также идентификатор контекста разделов справки для заданного описания типа.</summary>
      <param name="index">Идентификатор элемента, для которого возвращается документация.</param>
      <param name="strName">При возвращении данного метода содержит имя метода элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext">При возвращении данного метода содержит ссылку на контекст справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile">При возвращении данного метода содержит полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>Возвращает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, содержащую сведения о заданной функции.</summary>
      <param name="index">Индекс возвращаемого описания функции.</param>
      <param name="ppFuncDesc">При возвращении данного метода содержит ссылку на структуру <see langword="FUNCDESC" />, описывающую заданную функцию. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>Сопоставляет друг с другом имена и идентификаторы элементов и параметров.</summary>
      <param name="rgszNames">Массив имен, которые следует сопоставить.</param>
      <param name="cNames">Число сопоставляемых имен.</param>
      <param name="pMemId">При возвращении данного метода содержит ссылку на массив, в который помещены сопоставления имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> для одного реализованного интерфейса или базового интерфейса в описании типа.</summary>
      <param name="index">Индекс реализованного интерфейса или базового интерфейса.</param>
      <param name="pImplTypeFlags">При возвращении данного метода содержит ссылку на перечисление <see langword="IMPLTYPEFLAGS" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
      <summary>Извлекает сведения о маршалинге.</summary>
      <param name="memid">Идентификатор элемента, показывающий, какие необходимы сведения о маршалинге.</param>
      <param name="pBstrMops">При возвращении данного метода содержит ссылку на строку <see langword="opcode" />, используемую при маршалинге полей структуры, описанной в описании ссылочного типа, либо возвращает <see langword="null" />, если сведения отсутствуют. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>Извлекает переменную с указанным идентификатором (либо имя свойства или метода и его параметры), соответствующую заданному идентификатору функции.</summary>
      <param name="memid">Идентификатор элемента, для которого возвращается имя (или имена).</param>
      <param name="rgBstrNames">При возвращении данного метода содержит имя (или имена), связанное с элементом. Этот параметр передается неинициализированным.</param>
      <param name="cMaxNames">Длина массива <paramref name="rgBstrNames" />.</param>
      <param name="pcNames">При возвращении данного метода содержит число имен в массиве <paramref name="rgBstrNames" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Извлекает описания ссылочных типов, если описание типа ссылается на другие описания типов.</summary>
      <param name="hRef">Возвращаемый дескриптор для описания ссылочного типа.</param>
      <param name="ppTI">При возвращении данного метода содержит описание ссылочного типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary>Извлекает описание типа для реализованных типов интерфейсов, если в описании типа описывается класс COM.</summary>
      <param name="index">Индекс реализованного типа, дескриптор которого возвращается.</param>
      <param name="href">При возвращении данного метода содержит ссылку на дескриптор для реализованного интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary>Возвращает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, содержащую атрибуты описания типа.</summary>
      <param name="ppTypeAttr">При возвращении данного метода содержит ссылку на структуру, содержащую атрибуты этого описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Извлекает интерфейс <see langword="ITypeComp" /> описания типа, позволяющий компилятору клиента выполнить привязку к элементам описания типа.</summary>
      <param name="ppTComp">При возвращении данного метода содержит ссылку на интерфейс <see langword="ITypeComp" /> содержащей библиотеки типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>Извлекает структуру <see langword="VARDESC" />, описывающую указанную переменную.</summary>
      <param name="index">Индекс возвращаемого описания переменной.</param>
      <param name="ppVarDesc">При возвращении данного метода содержит ссылку на структуру <see langword="VARDESC" />, описывающую заданную переменную. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>Вызывает метод или обращается к свойству объекта, реализующему интерфейс, описанный в описании типа.</summary>
      <param name="pvInstance">Ссылка на интерфейс, описанный в данном описании типа.</param>
      <param name="memid">Значение, задающее элемент интерфейса.</param>
      <param name="wFlags">Флаги, описывающие контекст используемого вызова.</param>
      <param name="pDispParams">Ссылка на структуру, содержащую массив аргументов, массив идентификаторов DISPID именованных аргументов, а также количество элементов в каждом массиве.</param>
      <param name="pVarResult">Ссылка на место хранения результата. Если <paramref name="wFlags" /> задает <see langword="DISPATCH_PROPERTYPUT" /> или <see langword="DISPATCH_PROPERTYPUTREF" />, то параметр <paramref name="pVarResult" /> не учитывается. Если результат не требуется, можно задать значение <see langword="null" />.</param>
      <param name="pExcepInfo">Указатель на структуру сведений об исключении, заполняемую только при возвращении <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr">Если <see langword="Invoke" /> возвращает <see langword="DISP_E_TYPEMISMATCH" />, то параметр <paramref name="puArgErr" /> показывает индекс аргумента с неверным типом внутри <c>rgvarg</c>. Если ошибка возвращается для нескольких аргументов, <paramref name="puArgErr" /> показывает только первый из них. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc">Ссылка на освобождаемую структуру <see langword="FUNCDESC" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr">Ссылка на освобождаемую структуру <see langword="TYPEATTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary>Освобождает структуру <see langword="VARDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc">Ссылка на освобождаемую структуру <see langword="VARDESC" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <summary>Предоставляет управляемое определение интерфейса <see langword="ITypeInfo2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>Извлекает адреса статических функций и переменных, определенных в библиотеке DLL.</summary>
      <param name="memid">Идентификатор элемента для извлекаемого адреса элемента типа <see langword="static" />.</param>
      <param name="invKind">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее, является ли член свойством, и, если да, то какого типа.</param>
      <param name="ppv">При возвращении данного метода содержит ссылку на элемент <see langword="static" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>Создает новый экземпляр типа, описывающего класс компонента (совместный класс).</summary>
      <param name="pUnkOuter">Объект, действующий как контролирующий <see langword="IUnknown" />.</param>
      <param name="riid">Идентификатор IID интерфейса, используемый вызывающим объектом для связи с итоговым объектом.</param>
      <param name="ppvObj">При возвращении данного метода содержит ссылку на созданный объект. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllCustData(System.IntPtr)">
      <summary>Получает все пользовательские элементы данных для библиотеки.</summary>
      <param name="pCustData">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllFuncCustData(System.Int32,System.IntPtr)">
      <summary>Получает все пользовательские данные из заданной функции.</summary>
      <param name="index">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="pCustData">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllImplTypeCustData(System.Int32,System.IntPtr)">
      <summary>Возвращает все пользовательские данные для указанного типа реализации.</summary>
      <param name="index">Индекс типа реализации для пользовательских данных.</param>
      <param name="pCustData">Указатель на <see langword="CUSTDATA" />, который содержит все элементы пользовательских данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Получает все пользовательские данные для заданного параметра функции.</summary>
      <param name="indexFunc">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="indexParam">Индекс параметра этой функции, для которой нужно получить пользовательские данные.</param>
      <param name="pCustData">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllVarCustData(System.Int32,System.IntPtr)">
      <summary>Возвращает переменную для пользовательских данных.</summary>
      <param name="index">Индекс переменной, для которой нужно получить пользовательские данные.</param>
      <param name="pCustData">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>Извлекает библиотеку типов, содержащую описание этого типа и его индекс внутри этой библиотеки типов.</summary>
      <param name="ppTLB">При возвращении данного метода содержит ссылку на содержащую библиотеку типов. Этот параметр передается неинициализированным.</param>
      <param name="pIndex">При возвращении данного метода содержит ссылку на индекс описания типа в содержащей библиотеке типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetCustData(System.Guid@,System.Object@)">
      <summary>Возвращает пользовательские данные.</summary>
      <param name="guid">GUID, используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Возвращает описание или спецификацию точки входа для функции в динамической библиотеке DLL.</summary>
      <param name="memid">Идентификатор функции элемента, для которого возвращается описание входа динамической библиотеки DLL.</param>
      <param name="invKind">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее тип элемента, определенного с помощью <paramref name="memid" />.</param>
      <param name="pBstrDllName">Если значение не равно <see langword="null" />, функция задает для параметра <paramref name="pBstrDllName" /> значение <see langword="BSTR" />, содержащее имя динамической библиотеки DLL.</param>
      <param name="pBstrName">Если значение не равно <see langword="null" />, функция задает для параметра <c>lpbstrName</c> значение <see langword="BSTR" />, содержащее имя точки входа.</param>
      <param name="pwOrdinal">Если значение не равно <see langword="null" /> и функция определена порядковым номером, то параметр <c>lpwOrdinal</c> должен указывать на порядковый номер.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Извлекает строку документации, полный файл справки и путь к нему, а также идентификатор контекста разделов справки для заданного описания типа.</summary>
      <param name="index">Идентификатор элемента, для которого возвращается документация.</param>
      <param name="strName">При возвращении данного метода содержит имя метода элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext">При возвращении данного метода содержит ссылку на контекст справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile">При возвращении данного метода содержит полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary>Возвращает строку документации, полное имя файла справки и путь к нему, используемый контекст локализации, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="memid">Идентификатор элемента для описания типа.</param>
      <param name="pbstrHelpString">После выполнения возврата этим методом содержит параметр <see langword="BSTR" /> с именем указанного элемента. Если вызывающему объекту не требуется имя элемента, параметр <paramref name="pbstrHelpString" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pdwHelpStringContext">После выполнения возврата этим методом содержит контекст локализации справки. Если вызывающему объекту не требуется контекст справки, параметр <paramref name="pdwHelpStringContext" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pbstrHelpStringDll">После выполнения возврата этим методом содержит параметр <see langword="BSTR" />с полным именем файла, который, в свою очередь, содержит библиотеку DLL, используемую для файла справки. Если вызывающему объекту не требуется имя файла, параметр <paramref name="pbstrHelpStringDll" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Получает пользовательские данные из заданной функции.</summary>
      <param name="index">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="guid">GUID, используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит <see langword="Object" /> для определения расположения размещаемых данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>Возвращает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, содержащую сведения о заданной функции.</summary>
      <param name="index">Индекс возвращаемого описания функции.</param>
      <param name="ppFuncDesc">При возвращении данного метода содержит ссылку на структуру <see langword="FUNCDESC" />, описывающую заданную функцию. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
      <summary>Привязывает к определенному элементу, основанному на известном идентификаторе DISPID, где имя элемента неизвестно (например, при привязке к элементу, используемому по умолчанию).</summary>
      <param name="memid">Идентификатор члена.</param>
      <param name="invKind">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, которые определяют тип члена (определяется memid).</param>
      <param name="pFuncIndex">При возврате этого метода содержит индекс, используемый в функции. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>Сопоставляет друг с другом имена и идентификаторы элементов и параметров.</summary>
      <param name="rgszNames">Массив имен, которые следует сопоставить.</param>
      <param name="cNames">Число сопоставляемых имен.</param>
      <param name="pMemId">При возвращении данного метода содержит ссылку на массив, в который помещены сопоставления имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Получает тип реализации пользовательских данных.</summary>
      <param name="index">Индекс типа реализации для пользовательских данных.</param>
      <param name="guid">GUID, используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> для одного реализованного интерфейса или базового интерфейса в описании типа.</summary>
      <param name="index">Индекс реализованного интерфейса или базового интерфейса.</param>
      <param name="pImplTypeFlags">При возвращении данного метода содержит ссылку на перечисление <see langword="IMPLTYPEFLAGS" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
      <summary>Извлекает сведения о маршалинге.</summary>
      <param name="memid">Идентификатор элемента, показывающий, какие необходимы сведения о маршалинге.</param>
      <param name="pBstrMops">При возвращении данного метода содержит ссылку на строку <see langword="opcode" />, используемую при маршалинге полей структуры, описанной в описании ссылочного типа, либо возвращает <see langword="null" />, если сведения отсутствуют. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>Извлекает переменную с указанным идентификатором (либо имя свойства или метода и его параметры), соответствующую заданному идентификатору функции.</summary>
      <param name="memid">Идентификатор элемента, для которого возвращается имя (или имена).</param>
      <param name="rgBstrNames">При возвращении данного метода содержит имя (или имена), связанное с элементом. Этот параметр передается неинициализированным.</param>
      <param name="cMaxNames">Длина массива <paramref name="rgBstrNames" />.</param>
      <param name="pcNames">При возвращении данного метода содержит число имен в массиве <paramref name="rgBstrNames" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
      <summary>Получает заданный параметр пользовательских данных.</summary>
      <param name="indexFunc">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="indexParam">Индекс параметра функции, для которого следует получить пользовательские данные.</param>
      <param name="guid">Идентификатор GUID, используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Извлекает описания типов, на которые указывают ссылки, если описание типа ссылается на другие описания типов.</summary>
      <param name="hRef">Возвращаемый дескриптор для описания ссылочного типа.</param>
      <param name="ppTI">При возвращении данного метода содержит описание ссылочного типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary>Извлекает описание типа для реализованных типов интерфейсов, если в описании типа описывается класс COM.</summary>
      <param name="index">Индекс реализованного типа, дескриптор которого возвращается.</param>
      <param name="href">При возвращении данного метода содержит ссылку на дескриптор для реализованного интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeAttr(System.IntPtr@)">
      <summary>Возвращает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, содержащую атрибуты описания типа.</summary>
      <param name="ppTypeAttr">При возвращении данного метода содержит ссылку на структуру, содержащую атрибуты этого описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Извлекает интерфейс <see langword="ITypeComp" /> описания типа, позволяющий компилятору клиента выполнить привязку к элементам описания типа.</summary>
      <param name="ppTComp">При возвращении данного метода содержит ссылку на <see langword="ITypeComp" /> содержащей библиотеки типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeFlags(System.Int32@)">
      <summary>Возвращает флаги типов без каких-либо распределений. Этот метод возвращает флаг типа <see langword="DWORD" />, который расширяет флаги типов без увеличения <see langword="TYPEATTR" /> (атрибут type).</summary>
      <param name="pTypeFlags">При возврате этого метода содержит ссылку <see langword="DWORD" /> на <see langword="TYPEFLAG" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Возвращает перечисление <see langword="TYPEKIND" /> быстро, не выполняя распределения.</summary>
      <param name="pTypeKind">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarCustData(System.Int32,System.Guid@,System.Object@)">
      <summary>Возвращает переменную для пользовательских данных.</summary>
      <param name="index">Индекс переменной, для которой будут получены пользовательские данные.</param>
      <param name="guid">GUID, используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>Извлекает структуру <see langword="VARDESC" />, описывающую указанную переменную.</summary>
      <param name="index">Индекс возвращаемого описания переменной.</param>
      <param name="ppVarDesc">При возвращении данного метода содержит ссылку на структуру <see langword="VARDESC" />, описывающую заданную переменную. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarIndexOfMemId(System.Int32,System.Int32@)">
      <summary>Привязывает к определенному элементу, основанному на известном идентификаторе <see langword="DISPID" />, где имя элемента неизвестно (например, при привязке к элементу, используемому по умолчанию).</summary>
      <param name="memid">Идентификатор члена.</param>
      <param name="pVarIndex">При возврате этого метода этот параметр содержит индекс <paramref name="memid" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>Вызывает метод или обращается к свойству объекта, реализующему интерфейс, описанный в описании типа.</summary>
      <param name="pvInstance">Ссылка на интерфейс, описанный в данном описании типа.</param>
      <param name="memid">Идентификатор элемента интерфейса.</param>
      <param name="wFlags">Флаги, описывающие контекст используемого вызова.</param>
      <param name="pDispParams">Ссылка на структуру, содержащую массив аргументов, массив идентификаторов DISPID именованных аргументов, а также количество элементов в каждом массиве.</param>
      <param name="pVarResult">Ссылка на место хранения результата. Если <paramref name="wFlags" /> задает <see langword="DISPATCH_PROPERTYPUT" /> или <see langword="DISPATCH_PROPERTYPUTREF" />, то параметр <paramref name="pVarResult" /> не учитывается. Если результат не требуется, можно задать значение <see langword="null" />.</param>
      <param name="pExcepInfo">Указатель на структуру сведений об исключении, заполняемую только при возвращении <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr">Если <see langword="Invoke" /> возвращает <see langword="DISP_E_TYPEMISMATCH" />, то параметр <paramref name="puArgErr" /> показывает индекс аргумента с неверным типом. Если ошибка возвращается для нескольких аргументов, <paramref name="puArgErr" /> показывает только первый из них.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseFuncDesc(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc">Ссылка на освобождаемую структуру <see langword="FUNCDESC" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseTypeAttr(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr">Ссылка на освобождаемую структуру <see langword="TYPEATTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseVarDesc(System.IntPtr)">
      <summary>Освобождает структуру <see langword="VARDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc">Ссылка на освобождаемую структуру <see langword="VARDESC" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib">
      <summary>Предоставляет управляемое определение интерфейса <see langword="ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary>Обнаруживает экземпляры описания типа в библиотеке типов.</summary>
      <param name="szNameBuf">Имя, которое требуется найти. Это параметр In или Out.</param>
      <param name="lHashVal">Хэш-значение для ускорения поиска, вычисленное при помощи функции <see langword="LHashValOfNameSys" />. Если значение <paramref name="lHashVal" /> равно 0, то значение рассчитывается.</param>
      <param name="ppTInfo">При возвращении данного метода содержит массив указателей на описания типов, которые содержат имя, заданное в <paramref name="szNameBuf" />. Этот параметр передается неинициализированным.</param>
      <param name="rgMemId">Массив значений <see langword="MEMBERID" /> найденных элементов. <paramref name="rgMemId" />[i] является значением <see langword="MEMBERID" />, выполняющим индексацию в описании типа, заданном параметром <paramref name="ppTInfo" />[i]. Не может иметь значение <see langword="null" />.</param>
      <param name="pcFound">При входе показывает количество разыскиваемых экземпляров. Например, если <paramref name="pcFound" /> = 1 можно использовать для поиска первого экземпляра. Поиск прекращается после обнаружения первого экземпляра.
При выходе показывает число обнаруженных экземпляров. Если значения <see langword="in" /> и <see langword="out" /> параметра <paramref name="pcFound" /> идентичны, возможно найдены не все описания типа, содержащие нужное имя.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index">Индекс описания типа, для которого возвращается документация.</param>
      <param name="strName">При возвращении данного метода содержит строку, представляющую имя заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString">При возвращении данного метода содержит строку, представляющую строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext">При возвращении данного метода содержит идентификатор контекста справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile">При возвращении данного метода содержит строку, представляющую полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>Возвращает структуру, содержащую атрибуты библиотеки.</summary>
      <param name="ppTLibAttr">При возвращении данного метода содержит структуру, содержащую атрибуты библиотеки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Позволяет компилятору клиента выполнить привязку к библиотечным типам, переменным, константам и глобальным функциям.</summary>
      <param name="ppTComp">При возвращении данного метода содержит экземпляр <see langword="ITypeComp" /> для <see langword="ITypeLib" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Возвращает описание заданного типа из библиотеки.</summary>
      <param name="index">Индекс возвращаемого интерфейса <see langword="ITypeInfo" />.</param>
      <param name="ppTI">При возвращении данного метода содержит <see langword="ITypeInfo" /> с описанием типа, на который ссылается <paramref name="index" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount">
      <summary>Возвращает число описаний типов в библиотеке типов.</summary>
      <returns>Число описаний типов в библиотеке типов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Загружает описание типа, соответствующее заданному идентификатору GUID.</summary>
      <param name="guid">IID интерфейса или CLSID класса, информация о типе которого запрашивается.</param>
      <param name="ppTInfo">При возвращении данного метода содержит требуемый интерфейс <see langword="ITypeInfo" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Возвращает тип описания типа.</summary>
      <param name="index">Индекс описания типа внутри библиотеки типов.</param>
      <param name="pTKind">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" /> для описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)">
      <summary>Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.</summary>
      <param name="szNameBuf">Строка для проверки. Это параметр In или Out.</param>
      <param name="lHashVal">Хэш-значение для <paramref name="szNameBuf" />.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="szNameBuf" /> обнаружен в библиотеке типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />, первоначально полученную из метода <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">Структура <see langword="TLIBATTR" />, которую следует освободить.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <summary>Предоставляет управляемое определение интерфейса <see langword="ITypeLib2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary>Обнаруживает экземпляры описания типа в библиотеке типов.</summary>
      <param name="szNameBuf">Имя, которое требуется найти.</param>
      <param name="lHashVal">Хэш-значение для ускорения поиска, вычисленное при помощи функции <see langword="LHashValOfNameSys" />. Если значение <paramref name="lHashVal" /> равно 0, то значение рассчитывается.</param>
      <param name="ppTInfo">При возвращении данного метода содержит массив указателей на описания типов, которые содержат имя, заданное в <paramref name="szNameBuf" />. Этот параметр передается неинициализированным.</param>
      <param name="rgMemId">При возвращении данного метода содержит массив идентификаторов <see langword="MEMBERID" /> найденных элементов; <paramref name="rgMemId" /> [i] является значением <see langword="MEMBERID" />, выполняющим индексацию в описании типа, заданном параметром <paramref name="ppTInfo" /> [i]. Этот параметр не может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pcFound">На входе значение, переданное ссылкой, указывающее, сколько экземпляров следует искать. Например, если <paramref name="pcFound" /> = 1 можно использовать для поиска первого экземпляра. Поиск прекращается после обнаружения первого экземпляра.
При выходе показывает число обнаруженных экземпляров. Если значения <see langword="in" /> и <see langword="out" /> параметра <paramref name="pcFound" /> идентичны, возможно найдены не все описания типа, содержащие нужное имя.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetAllCustData(System.IntPtr)">
      <summary>Возвращает все пользовательские элементы данных для библиотеки.</summary>
      <param name="pCustData">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetCustData(System.Guid@,System.Object@)">
      <summary>Возвращает пользовательские данные.</summary>
      <param name="guid">Параметр <see cref="T:System.Guid" />, передаваемый по ссылке и используемый для определения данных.</param>
      <param name="pVarVal">При возврате этого метода содержит объект для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index">Индекс описания типа, для которого возвращается документация.</param>
      <param name="strName">При возвращении данного метода содержит строку, задающую имя заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext">При возвращении данного метода содержит идентификатор контекста справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile">При возвращении данного метода содержит строку, задающую полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary>Позволяет получить строку документирования библиотеки, полное имя файла справки и путь к нему, контекст локализации, который следует использовать, и идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index">Индекс описания типа, документация по которому должна быть возвращена. Если параметр <paramref name="index" /> имеет значение -1, документация библиотеки возвращается.</param>
      <param name="pbstrHelpString">При возвращении этот метод содержит параметр BSTR с именем указанного элемента. Если вызывающему объекту не требуется имя элемента, параметр <paramref name="pbstrHelpString" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pdwHelpStringContext">После выполнения возврата этим методом содержит контекст локализации справки. Если вызывающему объекту не требуется контекст справки, параметр <paramref name="pdwHelpStringContext" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pbstrHelpStringDll">После выполнения возврата этим методом содержит параметр BSTR, указывающий полное имя файла, который, в свою очередь, содержит библиотеку DLL, используемую для файла справки. Если вызывающему объекту не требуется имя файла, параметр <paramref name="pbstrHelpStringDll" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibAttr(System.IntPtr@)">
      <summary>Возвращает структуру, содержащую атрибуты библиотеки.</summary>
      <param name="ppTLibAttr">При возвращении данного метода содержит структуру, содержащую атрибуты библиотеки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibStatistics(System.IntPtr,System.Int32@)">
      <summary>Возвращает статистику о библиотеке типов, необходимую для эффективного определения размеров хэш-таблиц.</summary>
      <param name="pcUniqueNames">Указатель на число уникальных имен. Если вызывающему объекту не требуются эти сведения, задайте значение <see langword="null" />.</param>
      <param name="pcchUniqueNames">При возвращении данного метода содержит указатель на изменение числа уникальных имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>Позволяет компилятору клиента выполнить привязку к библиотечным типам, переменным, константам и глобальным функциям.</summary>
      <param name="ppTComp">При возвращении данного метода содержит экземпляр <see langword="ITypeComp" /> для <see langword="ITypeLib" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Возвращает описание заданного типа из библиотеки.</summary>
      <param name="index">Индекс возвращаемого интерфейса <see langword="ITypeInfo" />.</param>
      <param name="ppTI">При возвращении данного метода содержит <see langword="ITypeInfo" /> с описанием типа, на который ссылается <paramref name="index" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoCount">
      <summary>Возвращает число описаний типов в библиотеке типов.</summary>
      <returns>Число описаний типов в библиотеке типов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary>Загружает описание типа, соответствующее заданному идентификатору GUID.</summary>
      <param name="guid">Идентификатор <see cref="T:System.Guid" />, переданный ссылкой, представляющий IID интерфейса <see langword="CLSID" /> класса, для которого требуются сведения о типе.</param>
      <param name="ppTInfo">При возвращении данного метода содержит требуемый интерфейс <see langword="ITypeInfo" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Возвращает тип описания типа.</summary>
      <param name="index">Индекс описания типа внутри библиотеки типов.</param>
      <param name="pTKind">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" /> для описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
      <summary>Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.</summary>
      <param name="szNameBuf">Строка для проверки.</param>
      <param name="lHashVal">Хэш-значение для <paramref name="szNameBuf" />.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="szNameBuf" /> обнаружен в библиотеке типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.ReleaseTLibAttr(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />, первоначально полученную из метода <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">Структура <see langword="TLIBATTR" />, которую следует освободить.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <summary>Определяет флаги, применяемые к библиотекам и типам.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary>Библиотеки типов описывают элементы управления и не отображаются в обозревателях типов, предназначенных для невизуальных объектов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary>Библиотека типов хранится на диске.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary>Библиотеку типов не следует отображать для пользователей, хотя ее использование не ограничено. Библиотеку типов не следует использовать с помощью элементов управления. узлы должны создавать новую библиотеку типов, инкапсулирующую элемент управления с расширенными свойствами.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary>Библиотека типов ограничена и не должна отображаться для пользователей.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <summary>Содержит информацию о порядке передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.lpVarValue">
      <summary>Представляет указатель на значение, передаваемое между процессами.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.wParamFlags">
      <summary>Представляет значения битовой маски, описывающие элемент структуры, параметр или возвращаемое значение.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <summary>Описывает порядок передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASCUSTDATA">
      <summary>Для параметра заданы пользовательские данные.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASDEFAULT">
      <summary>Для параметра определено поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FIN">
      <summary>Параметр передает сведения из вызывающего объекта в вызываемый объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FLCID">
      <summary>Этот параметр является локальным идентификатором клиентского приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOPT">
      <summary>Это необязательный параметр.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOUT">
      <summary>Этот параметр возвращает сведения из вызываемого объекта в вызывающий объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FRETVAL">
      <summary>Этот параметр является значением, возвращаемым членом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_NONE">
      <summary>Не задает, передает ли параметр сведения или получает их.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary>Предоставляет управляемое определение структуры <see langword="STATDATA" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary>Представляет значение перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" />, определяющее, когда приемник будет уведомлен об изменениях в данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary>Представляет интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" />, который будет получать уведомления об изменениях.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary>Представляет маркер, уникально определяющий вспомогательное соединение. Этот маркер возвращается методом, настраивающим вспомогательное соединение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary>Представляет структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> для данных, интересующих приемник уведомлений. Приемник получает уведомление об изменениях в данных, заданных этой структурой <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATSTG">
      <summary>Содержит статистические данные об открытом объекте хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.atime">
      <summary>Задает время последнего обращения к хранилищу, потоку или массиву байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.cbSize">
      <summary>Задает размер в байтах для потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.clsid">
      <summary>Указывает идентификатор класса для объекта хранилища.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.ctime">
      <summary>Показывает время создания хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfLocksSupported">
      <summary>Показывает типы региональных блокировок, поддерживаемые потоком или массивом байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfMode">
      <summary>Показывает режим доступа, заданный при открытии объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfStateBits">
      <summary>Показывает текущие биты состояния объекта хранилища (значение чаще всего устанавливается методом <see langword="IStorage::SetStateBits" />).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.mtime">
      <summary>Показывает время последнего изменения хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName">
      <summary>Представляет указатель на строку с завершающим нулем, содержащую имя объекта, описанного этой структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.reserved">
      <summary>Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.type">
      <summary>Показывает тип объекта хранилища, являющегося одним из значений перечисления <see langword="STGTY" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary>Предоставляет управляемое определение структуры <see langword="STGMEDIUM" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary>Представляет указатель на экземпляр интерфейса, который позволяет отправляющему процессу контролировать способ освобождения хранилища при вызове функции <see langword="ReleaseStgMedium" /> получающим процессом. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> равняется <see langword="null" />, <see langword="ReleaseStgMedium" /> использует процедуры по умолчанию для освобождения хранилища; в противном случае <see langword="ReleaseStgMedium" /> использует заданный интерфейс <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary>Задает тип среды хранения. Процедура маршалинга и процедура распаковки используют это значение, чтобы определить, какой элемент объединения использовался. Это значение должно быть одним из элементов перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary>Представляет дескриптор, строку или указатель интерфейса, которые получающий процесс может использовать для доступа к передаваемым данным.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.SYSKIND">
      <summary>Указывает целевую платформу операционной системы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_MAC">
      <summary>Целевая операционная система для библиотеки типов — Apple Macintosh. По умолчанию все поля данных выравниваются по границам четных байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN16">
      <summary>Целевая операционная система для библиотеки типов — 16-разрядные системы Windows. Поля данных по умолчанию упакованы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN32">
      <summary>Целевая операционная система для библиотеки типов — 32-разрядные системы Windows. Поля данных по умолчанию выровнены естественным образом (например, 2-байтовые целые числа выровнены по границам четных байтов, 4-байтовые целые числа — по границам четырехбайтовых слов и т. д.).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN64">
      <summary>Целевая операционная система для библиотеки типов — 64-разрядные системы Windows.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary>Предоставляет управляемое определение структуры <see langword="TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary>Среда хранения представляет собой расширенный метафайл. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteEnhMetaFile" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary>Среда хранения представляет собой файл на диске, заданный с помощью пути. Если элемент <see langword="STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="OpenFile" /> для удаления файла.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary>Среда хранения представляет собой компонент "Интерфейс графических устройств" (GDI) (HBITMAP). Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteObject" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary>Среда хранения представляет собой глобальный дескриптор памяти (HGLOBAL). Глобальный дескриптор выделяется с помощью флага GMEM_SHARE. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="GlobalFree" /> для освобождения памяти.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary>Среда хранения представляет собой компонент хранения, заданный указателем <see langword="IStorage" />. Данные находятся в потоках и хранилищах, содержащихся в этом экземпляре <see langword="IStorage" />. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> не имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="IStorage::Release" /> для освобождения компонента хранения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary>Среда хранения представляет собой объект потока, заданный указателем <see langword="IStream" />. <see langword="ISequentialStream::Read" /> служит для чтения данных. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> не имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="IStream::Release" /> для освобождения компонента потока.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary>Среда хранения представляет собой метафайл (HMETAFILE). Для доступа к данным метафайла используются функции Windows или WIN32. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteMetaFile" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary>Данные не передаются.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <summary>Содержит атрибуты <see langword="UCOMITypeInfo" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbAlignment">
      <summary>Задает выравнивание по границе байта для экземпляра этого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeInstance">
      <summary>Размер экземпляра этого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeVft">
      <summary>Размер таблицы виртуальных методов этого типа (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cFuncs">
      <summary>Указывает количество функций в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cImplTypes">
      <summary>Указывает количество реализованных интерфейсов в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cVars">
      <summary>Указывает число переменных и полей данных в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.dwReserved">
      <summary>Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.guid">
      <summary>Идентификатор GUID информации о типе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.idldescType">
      <summary>Атрибуты IDL описанного типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lcid">
      <summary>Языковой стандарт имен элементов и строк документации.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lpstrSchema">
      <summary>Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.MEMBER_ID_NIL">
      <summary>Константа, используемая с полями <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidConstructor" /> и <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidDestructor" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidConstructor">
      <summary>Идентификатор конструктора или <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, если конструктор отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidDestructor">
      <summary>Идентификатор деструктора или <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, если деструктор отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.tdescAlias">
      <summary>Если <see cref="F:System.Runtime.InteropServices.TYPEATTR.typekind" /> == <see cref="F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS" />, определяет тип, для которого данный тип является псевдонимом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.typekind">
      <summary>Значение <see cref="T:System.Runtime.InteropServices.TYPEKIND" />, описывающее тип, описанный этими данными.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMajorVerNum">
      <summary>Основной номер версии.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMinorVerNum">
      <summary>Дополнительный номер версии.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wTypeFlags">
      <summary>Значение <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" />, описывающее эти данные.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <summary>Описывает тип переменной, возвращаемый тип функции или тип параметра функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.lpValue">
      <summary>Если переменная равна <see langword="VT_SAFEARRAY" /> или <see langword="VT_PTR" />, то поле <see langword="lpValue" /> содержит указатель на <see langword="TYPEDESC" />, показывающий тип элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.vt">
      <summary>Показывает тип variant элемента, описанного при помощи <see langword="TYPEDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <summary>Определяет свойства и атрибуты описания типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary>Класс поддерживает агрегирование.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary>Описание типа, описывающее объект <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary>Экземпляры этого типа могут быть созданы при помощи <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary>Этот тип является элементом управления, из которого производятся другие типы. Он не должен отображаться для пользователей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary>Показывает, что интерфейс является производным от <see langword="IDispatch" />, прямо или косвенно. Этот флаг вычисляется: для него не существует языка описания объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary>Интерфейс поддерживает и <see langword="IDispatch" />, и привязку VTBL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary>Этот тип не должен отображаться для браузеров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary>Этот тип лицензирован.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary>Интерфейс не может добавлять члены в процессе выполнения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary>Типы, используемые в данном интерфейсе, полностью совместимы с автоматизацией, включая поддержку привязки VTBL. Установка двойного интерфейса задает и этот флаг, и <see cref="F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL" />. Этот флаг не разрешен на диспетчерских интерфейсах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary>Этот тип определен заранее. Клиентское приложение должно автоматически создать единственный экземпляр объекта с данным атрибутом. Имя переменной, указывающей на данный объект, совпадает с именем класса объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary>Показывает, что интерфейс будет использовать динамическую библиотеку заглушки/прокси-сервера. Этот флаг показывает, что, если регистрация библиотеки типов удалена, не следует удалять регистрацию для прокси-сервера библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary>Объект поддерживает <see langword="IConnectionPointWithDefault" />, и для него задано поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary>Следует исключить доступность из макроязыков. Этот флаг предназначен для типов уровня системы или типов, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary>Показывает, что расширения имен основных интерфейсов должны проверяться перед проверкой дочерних элементов, в отличие от поведения по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <summary>Указывает различные типы данных и функций.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ALIAS">
      <summary>Тип, являющийся псевдонимом для другого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_COCLASS">
      <summary>Набор реализованных интерфейсов компонентов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_DISPATCH">
      <summary>Набор методов и свойств, доступных с помощью <see langword="IDispatch::Invoke" />. По умолчанию двойные интерфейсы возвращают значение <see langword="TKIND_DISPATCH" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ENUM">
      <summary>Набор перечислителей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_INTERFACE">
      <summary>Тип, содержащий виртуальные функции, каждая из которых — чистая.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MAX">
      <summary>Метка окончания перечисления.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MODULE">
      <summary>Модуль, который может содержать только статические функции и данные (например, динамическая библиотека DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_RECORD">
      <summary>Структура без методов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_UNION">
      <summary>Объединение всех методов, смещение которых равно нулю.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <summary>Определяет конкретную библиотеку типов и обеспечивает поддержку локализации для имен членов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.guid">
      <summary>Предоставляет уникальную глобальную библиотеку идентификаторов для библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.lcid">
      <summary>Представляет код языка библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.syskind">
      <summary>Представляет целевую аппаратную платформу библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wLibFlags">
      <summary>Представляет флаги библиотеки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMajorVerNum">
      <summary>Представляет номер основной версии библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMinorVerNum">
      <summary>Представляет дополнительный номер версии библиотеки типов.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC">
      <summary>Описывает переменную, константу или данные-член.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.desc">
      <summary>Содержит сведения о переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION">
      <summary>Содержит сведения о переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue">
      <summary>Описывает символьную константу.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst">
      <summary>Показывает смещение переменной внутри экземпляра.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.elemdescVar">
      <summary>Содержит тип переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.lpstrSchema">
      <summary>Это поле зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.memid">
      <summary>Показывает идентификатор ID элемента переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.varkind">
      <summary>Определяет, как маршалировать переменную.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.wVarFlags">
      <summary>Определяет свойства переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <summary>Указывает константы, определяющие свойства переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FBINDABLE">
      <summary>Переменная поддерживает привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary>Переменная является единственным свойством, представляющим объект наилучшим образом. Только одна переменная в сведениях о типе может содержать этот атрибут.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary>Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента. Разрешается для элементов диспетчерских и обычных интерфейсов, но запрещен для модулей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary>Переменная, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FHIDDEN">
      <summary>Эту переменную не следует показывать пользователю в браузере, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary>Переменная сопоставляется так же, как собственные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary>Переменная появляется в обозревателе объектов, но не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREADONLY">
      <summary>Не следует разрешать присвоение значений этой переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary>Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary>При установке все попытки прямого изменения свойства приводят к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />. Реализация <see langword="OnRequestEdit" /> определяет, принято ли изменение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary>Переменную следует сделать недоступной из макроязыков. Этот флаг предназначен для переменных уровня системы или для переменных, которые не нужно отображать в обозревателях типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FSOURCE">
      <summary>Переменная возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary>Переменная отображается по умолчанию в пользовательском интерфейсе.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARKIND">
      <summary>Определяет вид переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_CONST">
      <summary>Структура <see langword="VARDESC" /> описывает символьную константу. Связанная с ней память отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_DISPATCH">
      <summary>Доступ к переменной может быть получен только при помощи <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_PERINSTANCE">
      <summary>Переменная является полем или элементом типа. Она существует в фиксированном смещении в каждом экземпляре типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_STATIC">
      <summary>Имеется только один экземпляр переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
      <summary>Определяет метод, вызываемый при удалении регистрации сборки, используемой из COM. Это позволяет в процессе удаления регистрации выполнять код, написанный пользователем.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CurrencyWrapper">
      <summary>Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_CY" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" />, используя <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</summary>
      <param name="obj">
        <see langword="Decimal" />, для которого требуется выполнить инкапсуляцию, а также маршалинг как типа <see langword="VT_CY" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" />, используя объект, содержащий <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</summary>
      <param name="obj">Объект, содержащий <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не принадлежит к типу <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject">
      <summary>Возвращает инкапсулированный объект, который должен быть маршалирован как тип <see langword="VT_CY" />.</summary>
      <returns>Инкапсулированный объект, который должен быть маршалирован как тип <see langword="VT_CY" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <summary>Указывает, может ли интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /> использоваться в вызовахIUnknown::QueryInterface метода <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Allow">
      <summary>Вызовы метода IUnknown::QueryInterface могут использовать интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />. Если используется это значение, перегруженный метод <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> действует аналогично перегруженному методу <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Ignore">
      <summary>Вызовы метода IUnknown::QueryInterface должны игнорировать интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <summary>Предоставляет значения, возвращаемые методом <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Failed">
      <summary>Интерфейс, соответствующий определенному идентификатору интерфейса, недоступен. В этом случае возвращается интерфейс <see langword="null" />. Объекту, вызвавшему метод IUnknown::QueryInterface, возвращается значение E_NOINTERFACE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled">
      <summary>Указатель интерфейса, возвращаемый методом <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />, можно использовать в качестве результата метода IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled">
      <summary>Пользовательский интерфейс <see langword="QueryInterface" /> не используется. Вместо него следует использовать реализацию по умолчанию метода IUnknown::QueryInterface.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultCharSetAttribute">
      <summary>Определяет значение перечисления <see cref="T:System.Runtime.InteropServices.CharSet" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultCharSetAttribute.#ctor(System.Runtime.InteropServices.CharSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultCharSetAttribute" /> с заданным значением <see cref="T:System.Runtime.InteropServices.CharSet" />.</summary>
      <param name="charSet">Одно из значений <see cref="T:System.Runtime.InteropServices.CharSet" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultCharSetAttribute.CharSet">
      <summary>Возвращает значение по умолчанию <see cref="T:System.Runtime.InteropServices.CharSet" /> для любого вызова атрибута <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Runtime.InteropServices.CharSet" /> для любого вызова атрибута <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <summary>Определяет пути, которые используются для поиска библиотек DLL, предоставляющих функции для вызовов неуправляемого кода.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> с указанием путей для поиска целевых объектов вызовов неуправляемого кода.</summary>
      <param name="paths">Побитовое сочетание значений перечисления, указывающих пути, по которым функция <c>LoadLibraryEx</c> выполняет поиск во время вызовов неуправляемого кода.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
      <summary>Возвращает побитовое сочетание значений перечисления, указывающих пути, по которым функция <c>LoadLibraryEx</c> выполняет поиск во время вызовов неуправляемого кода.</summary>
      <returns>Битовая комбинация значений перечисления, определяющих пути поиска для вызовов платформы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary>Устанавливает значение параметра по умолчанию, которое используется, если параметр вызывается из языка, поддерживающего параметры по умолчанию. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> значением параметра по умолчанию.</summary>
      <param name="value">Объект, представляющий значение параметра по умолчанию.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary>Возвращает значение, присваиваемое параметру по умолчанию.</summary>
      <returns>Объект, представляющий значение параметра по умолчанию.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispatchWrapper">
      <summary>Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_DISPATCH" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispatchWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DispatchWrapper" /> с объектом, заключаемым в оболочку.</summary>
      <param name="obj">Объект, который необходимо заключить в оболочку и преобразовать в <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> не является классом или массивом.

или -
<paramref name="obj" /> не поддерживает <see langword="IDispatch" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="obj" /> был помечен атрибутом <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />, переданным как значение <see langword="false" />.
-или-
Параметр <paramref name="obj" /> наследуется от типа, помеченного атрибутом <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />, переданным как значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject">
      <summary>Возвращает объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</summary>
      <returns>Объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispIdAttribute">
      <summary>Указывает идентификатор диспетчера COM (DISPID) для метода, поля или свойства.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispIdAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see langword="DispIdAttribute" />, используя указанный идентификатор DISPID.</summary>
      <param name="dispId">Идентификатор DISPID для этого члена.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DispIdAttribute.Value">
      <summary>Возвращает идентификатор DISPID для члена.</summary>
      <returns>Идентификатор DISPID для этого члена.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportAttribute">
      <summary>Показывает, что в качестве статической точки входа неуправляемая динамическая библиотека (DLL) предоставляет метод с атрибутами.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> с именем динамической библиотеки (DLL), содержащей импортируемый метод.</summary>
      <param name="dllName">Имя динамической библиотеки (DLL), содержащей неуправляемый метод. Если DLL включена в сборку, это имя может включать отображаемое имя сборки.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping">
      <summary>Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention">
      <summary>Показывает соглашение о вызове для точки входа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CharSet">
      <summary>Показывает способ маршалинга параметров строки для метода, а также управляет искажением имени.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
      <summary>Показывает имя или порядковый номер точки входа вызываемой динамической библиотеки (DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling">
      <summary>Контролирует запуск поиска имен точек входа помимо заданной точки в неуправляемой динамической библиотеке (DLL), выполняемого средой CLR, полем <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig">
      <summary>Показывают, выполняется ли для методов с возвращаемыми значениями <see langword="HRESULT" /> или <see langword="retval" /> непосредственное преобразование, либо возвращаемые значения <see langword="HRESULT" /> или <see langword="retval" /> автоматически преобразуются в исключения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError">
      <summary>Показывает, вызывает ли вызываемый объект функцию <see langword="SetLastError" /> интерфейса Windows API перед возвращением из метода, использующего атрибуты.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar">
      <summary>Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
      <summary>Возвращает имя динамической библиотеки (DLL), содержащей точку входа.</summary>
      <returns>Имя файла динамической библиотеки (DLL), содержащей точку входа.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportResolver">
      <summary>Предоставляет делегат, используемый для разрешения собственных библиотек посредством обратного вызова.</summary>
      <param name="libraryName">Собственная библиотека для разрешения.</param>
      <param name="assembly">Сборка, запрашивающая разрешение.</param>
      <param name="searchPath">Объект <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> в PInvoke, если таковой имеется. В противном случае — <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> для сборки, если имеется. В противном случае — <see langword="null" />.</param>
      <returns>Дескриптор загруженной собственной библиотеки в случае успеха, <see cref="F:System.IntPtr.Zero" /> — в случае сбоя.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportSearchPath">
      <summary>Определяет пути, которые используются для поиска библиотек DLL, предоставляющих функции для вызовов неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory">
      <summary>Включить каталог приложения в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory">
      <summary>При поиске зависимостей сборки включите каталог, содержащий саму сборку, и сначала выполните поиск в этом каталоге. Это значение используется платформой .NET Framework, прежде чем пути передаются в функцию Win32 LoadLibraryEx.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior">
      <summary>Выполните поиск в каталоге приложения, а затем вызовите функцию Win32 LoadLibraryEx с флагом <c>LOAD_WITH_ALTERED_SEARCH_PATH</c>. Это значение пропускается, если указано любое другое значение. Операционные системы, которые не поддерживают атрибут <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />, используют это значение и пропускают остальные значения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories">
      <summary>Включить каталог приложения, каталог <see langword="%WinDir%\System32" /> и каталоги пользователей в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.System32">
      <summary>Включить каталог <see langword="%WinDir%\System32" /> в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies">
      <summary>Выполнять поиск зависимостей библиотеки DLL в папке, где находится библиотека DLL, прежде чем в других папках.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories">
      <summary>Включить любой путь, который был явно добавлен в путь поиска по всему процессу с помощью функции Win32 <c>AddDllDirectory</c>.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ErrorWrapper">
      <summary>Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_ERROR" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> со значением HRESULT, которое относится к выданному исключению.</summary>
      <param name="e">Исключение для преобразования в код ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" />, используя значение HRESULT ошибки.</summary>
      <param name="errorCode">Значение HRESULT ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> с объектом, содержащим значение HRESULT ошибки.</summary>
      <param name="errorCode">Объект, содержащий значение HRESULT ошибки.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="errorCode" /> не принадлежит типу <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode">
      <summary>Возвращает код ошибки обертки.</summary>
      <returns>Значение HRESULT ошибки.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.GuidAttribute">
      <summary>Предоставляет явный идентификатор <see cref="T:System.Guid" /> в случае, когда использование автоматического идентификатора GUID нежелательно.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.GuidAttribute" /> с заданным идентификатором GUID.</summary>
      <param name="guid">Присваиваемый идентификатор <see cref="T:System.Guid" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
      <summary>Возвращает идентификатор <see cref="T:System.Guid" /> класса.</summary>
      <returns>Идентификатор <see cref="T:System.Guid" /> класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary>Отслеживает незавершенные обработчики и инициирует сбор мусора при достижении заданного порогового значения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleCollector" />, используя имя и порог, достижение которого вызывает сбор дескрипторов.</summary>
      <param name="name">Имя сборщика. Этот параметр позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</param>
      <param name="initialThreshold">Значение, определяющее точку, с которой должен начаться сбор.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="initialThreshold" /> меньше 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleCollector" />, используя имя, порог начала сбора дескрипторов и порок, при котором должен быть выполнен сбор дескрипторов.</summary>
      <param name="name">Имя сборщика.  Этот параметр позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</param>
      <param name="initialThreshold">Значение, определяющее точку, с которой должен начаться сбор.</param>
      <param name="maximumThreshold">Значение, определяющее точку, в которой должен быть выполнен сбор. Оно должно быть равно максимальному числу доступных дескрипторов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="initialThreshold" /> меньше 0.

или -
Значение параметра <paramref name="maximumThreshold" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="maximumThreshold" /> меньше значения параметра <paramref name="initialThreshold" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary>Увеличивает текущий счетчик дескрипторов.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> меньше 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary>Возвращает количество собранных дескрипторов.</summary>
      <returns>Количество собранных дескрипторов.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary>Возвращает значение, определяющее точку, с которой должен начаться сбор.</summary>
      <returns>Значение, определяющее точку, с которой должен начаться сбор.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary>Возвращает значение, определяющее точку, в которой должен быть выполнен сбор.</summary>
      <returns>Значение, определяющее точку, в которой должен быть выполнен сбор.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary>Возвращает имя объекта <see cref="T:System.Runtime.InteropServices.HandleCollector" />.</summary>
      <returns>Это свойство <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary>Уменьшает текущий счетчик дескрипторов.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> меньше 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleRef">
      <summary>Инкапсулирует управляемый объект, который содержит дескриптор для ресурса (передается в неуправляемый код с помощью вызова платформы).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleRef" />, используя инкапсулируемый объект и дескриптор ресурса, используемого неуправляемым кодом.</summary>
      <param name="wrapper">Управляемый объект, который не следует завершать до возвращения из вызова неуправляемого кода.</param>
      <param name="handle">Указатель<see cref="T:System.IntPtr" />, показывающий дескриптор для ресурса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Handle">
      <summary>Возвращает дескриптор для ресурса.</summary>
      <returns>Дескриптор для ресурса.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
      <summary>Возвращает дескриптор для ресурса указанного объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value">Объект, для которого требуется дескриптор.</param>
      <returns>Дескриптор для ресурса указанного объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
      <summary>Возвращает внутреннее целочисленное представление объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value">Объект <see cref="T:System.Runtime.InteropServices.HandleRef" /> для извлечения внутреннего целочисленного представления.</param>
      <returns>Объект <see cref="T:System.IntPtr" />, представляющий объект <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Wrapper">
      <summary>Возвращает объект, содержащий дескриптор для ресурса.</summary>
      <returns>Объект, содержащий дескриптор для ресурса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomAdapter">
      <summary>Позволяет клиентам получать доступ к фактическому объекту, а не к объекту адаптера, предоставленному пользовательским упаковщиком.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomAdapter.GetUnderlyingObject">
      <summary>Предоставляет доступ к базовому объекту, упакованному настраиваемым модулем упаковки и передачи.</summary>
      <returns>Объект, содержащийся в объекте адаптера.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomFactory">
      <summary>Позволяет пользователям создавать код активизации для управляемых объектов, расширяющих <see cref="T:System.MarshalByRefObject" />,.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)">
      <summary>Создает новый экземпляр заданного типа.</summary>
      <param name="serverType">Активируемый тип.</param>
      <returns>Поставщик <see cref="T:System.MarshalByRefObject" />, связанный с указанным типом.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomMarshaler">
      <summary>Предоставляет настраиваемые оболочки, обрабатывающие вызовы методов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
      <summary>Выполняет необходимую очистку управляемых данных, если они больше не нужны.</summary>
      <param name="ManagedObj">Управляемый объект, который необходимо уничтожить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Выполняет необходимую очистку неуправляемых данных, если они больше не нужны.</summary>
      <param name="pNativeData">Указатель на неуправляемые данные, которые необходимо уничтожить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
      <summary>Возвращает размер собственных данных для маршалинга.</summary>
      <returns>Размер собственных данных в байтах.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Преобразует управляемые данные в неуправляемые.</summary>
      <param name="ManagedObj">Управляемый объект, который необходимо преобразовать.</param>
      <returns>Указатель на COM-представление управляемого объекта.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Преобразует неуправляемые данные в управляемые.</summary>
      <param name="pNativeData">Указатель на неуправляемые данные, которые необходимо инкапсулировать.</param>
      <returns>Объект, представляющий управляемое представление данных модели COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomQueryInterface">
      <summary>Позволяет разработчикам предоставлять собственную управляемую реализацию метода IUnknown::QueryInterface(REFIID riid, void **ppvObject).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)">
      <summary>Возвращает интерфейс, соответствующий указанному идентификатору интерфейса.</summary>
      <param name="iid">Идентификатор GUID запрашиваемого интерфейса.</param>
      <param name="ppv">Ссылка на запрашиваемый интерфейс (когда данный метод возвращает значение).</param>
      <returns>Одно из значений перечисления, указывающих, используется ли пользовательская реализация интерфейса IUnknown::QueryInterface.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
      <summary>Показывает, что определенные в сборке типы были исходно определены в библиотеке типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute" /> с именем файла исходной библиотеки типов.</summary>
      <param name="tlbFile">Местоположение файла исходной библиотеки типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.Value">
      <summary>Возвращает местоположение файла исходной библиотеки типов.</summary>
      <returns>Имя файла исходной библиотеки типов.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InterfaceTypeAttribute">
      <summary>Указывает, является ли интерфейс при предоставлении COM сдвоенным, диспетчерским или только <see langword="IUnknown" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />.</summary>
      <param name="interfaceType">Описывает способ предоставления интерфейса клиентам COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />.</summary>
      <param name="interfaceType">Одно из значений <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающих способ предоставления интерфейса клиентам COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающее способ предоставления интерфейса COM.</summary>
      <returns>Значение <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающее способ предоставления интерфейса COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidComObjectException">
      <summary>Исключение, вызванное использованием недопустимого COM-объекта.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="InvalidComObjectException" /> со свойствами по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="COMException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="InvalidComObjectException" /> с сообщением.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InvalidComObjectException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <summary>При обнаружении аргумента типа variant, маршалинг которого в управляемый код выполнить невозможно, модуль маршалинга вызывает исключение.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" /> с заданным сообщением.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.LCIDConversionAttribute">
      <summary>Указывает, что неуправляемая подпись метода предполагает наличие параметра идентификатора языкового стандарта LCID.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.LCIDConversionAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see langword="LCIDConversionAttribute" />, используя позицию идентификатора LCID в неуправляемой подписи.</summary>
      <param name="lcid">Указывает позицию аргумента LCID в неуправляемой подписи, в которой первым аргументом является 0.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.LCIDConversionAttribute.Value">
      <summary>Возвращает позицию аргумента LCID в неуправляемой подписи.</summary>
      <returns>Позиция аргумента LCID в неуправляемой подписи, в которой первым аргументом является 0.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
      <summary>Обеспечивает поддержку пользовательской настройки заглушек взаимодействия в сценариях с управляемым COM-взаимодействием.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> с заданным типом класса и именем метода.</summary>
      <param name="classType">Класс, содержащий требуемый метод-заглушку.</param>
      <param name="methodName">Имя метода-заглушки.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="methodName" /> не найден.

или -
Метод не является статическим или универсальным.

или -
Список параметров метода не соответствует списку параметров, ожидаемых заглушкой.</exception>
      <exception cref="T:System.MethodAccessException">Интерфейс, содержащий управляемый метод взаимодействия, не имеет доступа к методу-заглушке, поскольку метод-заглушка имеет закрытый или защищенный доступ, или из-за проблемы безопасности.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType">
      <summary>Получает класс, содержащий требуемый метод-заглушку.</summary>
      <returns>Класс, содержащий настроенную заглушку взаимодействия.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName">
      <summary>Получает имя метода-заглушки.</summary>
      <returns>Имя настроенной заглушки взаимодействия.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Marshal">
      <summary>Предоставляет коллекцию методов для выделения неуправляемой памяти, копирования блоков неуправляемой памяти и преобразования управляемых типов в неуправляемые, а также прочих разнообразных методов, используемых при взаимодействии с неуправляемым кодом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
      <summary>Увеличивает счетчик ссылок для указанного интерфейса.</summary>
      <param name="pUnk">Увеличиваемый счетчик ссылок интерфейса.</param>
      <returns>Новое значение счетчика ссылок для параметра <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
      <summary>Выделяет блок памяти указанного размера из механизма распределения памяти для задач COM.</summary>
      <param name="cb">Размер выделяемого блока памяти.</param>
      <returns>Целое число, представляющее адрес выделенного блока памяти. Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
      <summary>Выделяет память из неуправляемой памяти процесса, используя заданное количество байтов.</summary>
      <param name="cb">Требуемое количество байтов памяти.</param>
      <returns>Указатель на только что выделенную память. Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
      <summary>Выделяет память из неуправляемой памяти процесса, используя указатель на заданное количество байтов.</summary>
      <param name="cb">Требуемое количество байтов памяти.</param>
      <returns>Указатель на только что выделенную память. Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
      <summary>Указывает, доступны ли для очистки вызываемые оболочки времени выполнения (RCW) из какого-либо контекста.</summary>
      <returns>Значение <see langword="true" />, если есть доступные для очистки вызываемые оболочки времени выполнения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
      <summary>Возвращает указатель интерфейса, определенный указанным моникером.</summary>
      <param name="monikerName">Моникер, соответствующий указателю нужного интерфейса.</param>
      <returns>Объект, содержащий ссылку на указатель интерфейса, идентифицируемый параметром <paramref name="monikerName" />. Моникер — это имя, в данном случае определенное интерфейсом.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Нераспознанное значение HRESULT возвращено неуправляемым методом <see langword="BindToMoniker" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
      <summary>Изменяет строгость дескриптора вызываемой оболочки COM (CCW) объекта.</summary>
      <param name="otp">Объект, CCW-оболочка которого содержит дескриптор счетчика ссылок. Этот дескриптор является строгим, если значение счетчика CCW-оболочки больше нуля; в противном случае он является слабым.</param>
      <param name="fIsWeak">Значение <see langword="true" />, чтобы сделать дескриптор параметра <paramref name="otp" /> менее строгим независимо от числа ссылок; значение <see langword="false" />, чтобы сбросить значение строгости дескриптора параметра <paramref name="otp" /> и сделать его зависимым от числа ссылок.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
      <summary>Предписывает среде выполнения очистить все вызываемые оболочки времени выполнения (RCW), выделенные в текущем контексте.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива 8-битных целых чисел без знака в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива символов в неуправляемый указатель памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива чисел с плавающей запятой двойной точности в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива 16-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива 32-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива 64-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 8-битных целых чисел без знака.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в управляемый массив символов.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
      <summary>Копирует данные из неуправляемого указателя памяти в управляемый массив чисел с плавающей запятой двойной точности.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 16-битных целых чисел со знаком.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 32-битных целых чисел со знаком.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 64-битных целых чисел со знаком.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в управляемый массив <see cref="T:System.IntPtr" />.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
      <summary>Копирует данные из указателя неуправляемой памяти в управляемый массив чисел с плавающей запятой одиночной точности.</summary>
      <param name="source">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination">Массив для копирования данных.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива <see cref="T:System.IntPtr" /> в неуправляемый указатель памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
      <summary>Копирует данные из одномерного управляемого массива чисел с плавающей запятой одинарной точности в указатель неуправляемой памяти.</summary>
      <param name="source">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination">Указатель памяти, в который выполняется копирование.</param>
      <param name="length">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
      <summary>Объединяет управляемый объект с заданным COM-объектом.</summary>
      <param name="pOuter">Внешний указатель <see langword="IUnknown" />.</param>
      <param name="o">Объект для объединения.</param>
      <returns>Внутренний указатель <see langword="IUnknown" /> управляемого объекта.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Объединяет управляемый объект заданного типа с заданным COM-объектом.</summary>
      <param name="pOuter">Внешний указатель IUnknown.</param>
      <param name="o">управляемый объект для агрегации.</param>
      <typeparam name="T">тип управляемого объекта для агрегации.</typeparam>
      <returns>Внутренний указатель IUnknown управляемого объекта.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
      <summary>Инкапсулирует указанный COM-объект в объекте заданного типа.</summary>
      <param name="o">Объект, который следует упаковать.</param>
      <param name="t">Тип создаваемой оболочки.</param>
      <returns>Новый инкапсулированный объект, являющийся экземпляром нужного типа.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="t" /> должен быть производным от <see langword="__ComObject" />.

или -
<paramref name="t" /> относится к типу Среда выполнения Windows.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="o" /> нельзя преобразовать в результирующий тип, так как он не поддерживает все требуемые интерфейсы.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Инкапсулирует указанный COM-объект в объекте заданного типа.</summary>
      <param name="o">Объект, который следует упаковать.</param>
      <typeparam name="T">Тип пакуемого объекта.</typeparam>
      <typeparam name="TWrapper">Тип возвращаемого объекта.</typeparam>
      <returns>Только что Инкапсулированный объект.</returns>
      <exception cref="T:System.ArgumentException">Параметр <typeparamref name="T" /> должен быть производным от <see langword="__ComObject" />.

или -
<typeparamref name="T" /> относится к типу Среда выполнения Windows.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="o" /> не может быть преобразован в <paramref name="TWrapper" />, так как он не поддерживает все необходимые интерфейсы.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
      <summary>Освобождает все вложенные структуры, на которые указывает заданный блок неуправляемой памяти.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <param name="structuretype">Тип отформатированного класса. Предоставляет сведения распределения, необходимые для удаления буфера из параметра <paramref name="ptr" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="structureType" /> обеспечивает автоматическое распределение. Вместо него следует использовать последовательный или явный вариант.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Освобождает все вложенные структуры указанного типа, на которые указывает заданный блок неуправляемой памяти.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <typeparam name="T">Тип отформатированной структуры. Предоставляет сведения распределения, необходимые для удаления буфера из параметра <paramref name="ptr" />.</typeparam>
      <exception cref="T:System.ArgumentException">Параметр <typeparamref name="T" /> обеспечивает автоматическое распределение. Вместо него следует использовать последовательный или явный вариант.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
      <summary>Освобождает все ссылки на вызываемую оболочку времени выполнения, присваивая ее счетчику ссылок значение 0.</summary>
      <param name="o">Освобождаемая оболочка CLR.</param>
      <returns>Новое значение счетчика ссылок для вызываемой оболочки времени выполнения, связанной с параметром <paramref name="o" />, равное нулю (0), если высвобождение прошло успешно.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> не является допустимым COM-объектом.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
      <summary>Освобождает строку <see langword="BSTR" /> с помощью функции COM SysFreeString.</summary>
      <param name="ptr">Адрес освобождаемой строки BSTR.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
      <summary>Освобождает блок памяти, выделенный неуправляемым механизмом распределения памяти для задач COM.</summary>
      <param name="ptr">Адрес освобождаемой памяти.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
      <summary>Освобождает память, выделенную ранее из неуправляемой памяти процесса.</summary>
      <param name="hglobal">Дескриптор, возвращенный исходным подходящим вызовом метода <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
      <summary>Возвращает уникальный глобальный идентификатор GUID для указанного типа или создает идентификатор GUID при помощи алгоритма, используемого средством экспортирования библиотек типов Tlbexp.exe.</summary>
      <param name="type">Тип, для которого создается идентификатор GUID.</param>
      <returns>Идентификатор для указанного типа.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
      <summary>Возвращает программный идентификатор ProgID для указанного типа.</summary>
      <param name="type">Тип, для которого требуется получить программный идентификатор (ProgID).</param>
      <returns>Идентификатор ProgID для указанного типа.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="type" /> не является классом, который может быть создан с помощью COM. Класс должен быть открытым, иметь открытый конструктор без параметров, а также быть доступным для COM.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
      <summary>Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс заданного объекта. Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</summary>
      <param name="o">Объект, предоставляющий интерфейс.</param>
      <param name="T">Тип запрашиваемого интерфейса.</param>
      <returns>Указатель интерфейса, представляющий заданный интерфейс для объекта.</returns>
      <exception cref="T:System.ArgumentException">Параметр <typeparamref name="T" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" /> является определением универсального типа.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="o" /> имеет значение <see langword="null" />.

или -
Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
      <summary>Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс заданного объекта. Доступ к настраиваемому интерфейсу запросов контролируется указанным режимом настройки.</summary>
      <param name="o">Объект, предоставляющий интерфейс.</param>
      <param name="T">Тип запрашиваемого интерфейса.</param>
      <param name="mode">Одно из значений перечисления, определяющее, нужно ли применять пользовательскую настройку <see langword="IUnknown::QueryInterface" />, предоставленную в интерфейсе <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</param>
      <returns>Указатель интерфейса, представляющий интерфейс для объекта.</returns>
      <exception cref="T:System.ArgumentException">Параметр <typeparamref name="T" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" /> является определением универсального типа.</exception>
      <exception cref="T:System.InvalidCastException">Объект <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="o" /> имеет значение <see langword="null" />.

или -
Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс объекта заданного типа. Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</summary>
      <param name="o">Объект, предоставляющий интерфейс.</param>
      <typeparam name="T">Тип параметра <paramref name="o" />.</typeparam>
      <typeparam name="TInterface">Тип возвращаемых интерфейсов.</typeparam>
      <returns>Указатель интерфейса, представляющий интерфейс <paramref name="TInterface" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="TInterface" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" />  является открытым универсальным типом.</exception>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="o" /> не поддерживает интерфейс <paramref name="TInterface" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
      <summary>Извлекает данные, на которые ссылается заданный ключ из указанного COM-объекта.</summary>
      <param name="obj">COM-объект, содержащий требуемые данные.</param>
      <param name="key">Ключ во внутренней хэш-таблице <paramref name="obj" /> для извлечения данных.</param>
      <returns>Данные, представленные параметром <paramref name="key" /> в параметре <paramref name="obj" /> внутренней хэш-таблице.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.

или -
Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> не является COM-объектом.

или -
<paramref name="obj" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
      <summary>Преобразует указатель на неуправляемую функцию в делегат.</summary>
      <param name="ptr">Указатель на неуправляемую функцию, который требуется преобразовать.</param>
      <param name="t">Тип возвращаемого делегата.</param>
      <returns>Экземпляр делегата, который может быть приведен к соответствующему типу делегата.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="t" /> не является делегатом или является универсальным.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует указатель на неуправляемую функцию в делегат указанного типа.</summary>
      <param name="ptr">Указатель на неуправляемую функцию, который требуется преобразовать.</param>
      <typeparam name="TDelegate">Тип возвращаемого делегата.</typeparam>
      <returns>Экземпляр делегата указанного типа.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="TDelegate" /> не является делегатом или является открытым универсальным типом.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
      <summary>Извлекает последнюю ячейку таблицы виртуальных функций (VTBL) для типа, если он предоставлен модели COM.</summary>
      <param name="t">Тип, представляющий интерфейс или класс.</param>
      <returns>Последняя ячейка таблицы виртуальных функций (VTBL) интерфейса, если он предоставлен модели COM. Если параметр <paramref name="t" /> является классом, возвращенная ячейка таблицы VTBL будет последней ячейкой для интерфейса, созданного из класса.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
      <summary>Извлекает код, определяющий тип возникшего исключения.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
      <summary>Преобразует заданный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" />.</summary>
      <param name="errorCode">Преобразуемое значение HRESULT.</param>
      <returns>Объект, представляющий преобразованное значение HRESULT, или <see langword="null" />, если значение HRESULT не представляет код ошибки (например, <see langword="S_OK" /> или <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
      <summary>Преобразует указанный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" /> с дополнительными сведениями об ошибке, передаваемыми в интерфейсе IErrorInfo для объекта исключения.</summary>
      <param name="errorCode">Преобразуемое значение HRESULT.</param>
      <param name="errorInfo">Указатель на интерфейс <see langword="IErrorInfo" />, предоставляющий дополнительные сведения об ошибке. Можно задать <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс <see langword="IErrorInfo" />, или <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс <see langword="IErrorInfo" /> и сформировать исключение только на основе кода ошибки.</param>
      <returns>Объект, представляющий преобразованное значение HRESULT и сведения, полученные из <paramref name="errorInfo" />, или <see langword="null" />, если значение HRESULT не представляет код ошибки (например, <see langword="S_OK" /> или <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
      <summary>Извлекает не зависящее от компьютера описание исключения и сведения о состоянии потоков в момент возникновения исключения.</summary>
      <returns>Указатель на структуру EXCEPTION_POINTERS.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
      <summary>Преобразует делегат в указатель на функцию, вызываемый из неуправляемого кода.</summary>
      <param name="d">Делегат, передаваемый в неуправляемый код.</param>
      <returns>Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="d" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует делегат указанного типа в указатель на функцию, вызываемый из неуправляемого кода.</summary>
      <param name="d">Делегат, передаваемый в неуправляемый код.</param>
      <typeparam name="TDelegate">Тип преобразуемого делегата.</typeparam>
      <returns>Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="d" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
      <summary>Возвращает дескриптор экземпляра (HINSTANCE) для указанного модуля.</summary>
      <param name="m">Модуль, дескриптор экземпляра (HINSTANCE) которого необходимо получить.</param>
      <returns>Дескриптор экземпляра (HINSTANCE) для модуля <paramref name="m" />. Если для этого модуля отсутствует HINSTANCE, этот параметр имеет значение -1.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
      <summary>Преобразует указанное исключение в значение HRESULT.</summary>
      <param name="e">Исключение, преобразуемое в значение HRESULT.</param>
      <returns>Значение HRESULT, сопоставленное с заданным исключением.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
      <summary>Возвращает значение HRESULT, соответствующее последней ошибке, вызванной кодом Win32, выполняемым с использованием класса <see cref="T:System.Runtime.InteropServices.Marshal" />.</summary>
      <returns>Значение HRESULT, соответствующее последнему коду ошибки Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
      <summary>Возвращает интерфейс IDispatch из управляемого объекта.</summary>
      <param name="o">Объект, для которого запрашивается интерфейс <see langword="IDispatch" />.</param>
      <returns>Указатель <see langword="IDispatch" /> для параметра <paramref name="o" />.</returns>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
      <summary>Возвращает интерфейс IUnknown из управляемого объекта.</summary>
      <param name="o">Объект, для которого запрашивается интерфейс <see langword="IUnknown" />.</param>
      <returns>Указатель <see langword="IUnknown" /> для параметра <paramref name="o" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
      <summary>Возвращает код ошибки, возвращенной последней неуправляемой функцией, вызванной при помощи вызова неуправляемого кода с установленным флагом <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />.</summary>
      <returns>Последний код ошибки, заданный вызовом функции SetLastError платформы Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
      <summary>Преобразует объект в COM VARIANT.</summary>
      <param name="obj">Объект, для которого нужно получить COM VARIANT.</param>
      <param name="pDstNativeVariant">Указатель, получающий тип VARIANT, соответствующий параметру <paramref name="obj" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является экземпляром универсального типа.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует объект заданного типа в COM VARIANT.</summary>
      <param name="obj">Объект, для которого нужно получить COM VARIANT.</param>
      <param name="pDstNativeVariant">Указатель, получающий тип VARIANT, соответствующий параметру <paramref name="obj" />.</param>
      <typeparam name="T">Тип объекта для преобразования.</typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
      <summary>Возвращает экземпляр типа, представляющего COM-объект, с помощью указателя на его интерфейс IUnknown.</summary>
      <param name="pUnk">Указатель на интерфейс <see langword="IUnknown" />.</param>
      <returns>Объект, представляющий указанный неуправляемый COM-объект.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="pUnk" /> имеет значение <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
      <summary>Преобразует COM VARIANT в объект.</summary>
      <param name="pSrcNativeVariant">Указатель на COM VARIANT.</param>
      <returns>Объект, соответствующий параметру <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
        <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</exception>
      <exception cref="T:System.NotSupportedException">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует COM VARIANT в объект заданного типа.</summary>
      <param name="pSrcNativeVariant">Указатель на COM VARIANT.</param>
      <typeparam name="T">Тип, в который требуется преобразовать COM VARIANT.</typeparam>
      <returns>Объект указанного типа, соответствующий параметру <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
        <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</exception>
      <exception cref="T:System.NotSupportedException">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
      <summary>Преобразует массив типа COM VARIANT в массив объектов.</summary>
      <param name="aSrcNativeVariant">Указатель на первый элемент массива типа COM VARIANT.</param>
      <param name="cVars">Число объектов типа COM VARIANT в <paramref name="aSrcNativeVariant" />.</param>
      <returns>Массив объектов, соответствующий элементу <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="cVars" /> является отрицательным числом.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует массив типа COM VARIANT в массив указанного типа.</summary>
      <param name="aSrcNativeVariant">Указатель на первый элемент массива типа COM VARIANT.</param>
      <param name="cVars">Число объектов типа COM VARIANT в <paramref name="aSrcNativeVariant" />.</param>
      <typeparam name="T">Тип возвращаемого массива.</typeparam>
      <returns>Массив объектов <typeparamref name="T" />, соответствующий элементу <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="cVars" /> является отрицательным числом.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
      <summary>Возвращает первую ячейку в таблице виртуальных функций (VTBL), которая содержит методы, определенные пользователем.</summary>
      <param name="t">Тип, представляющий интерфейс или класс.</param>
      <returns>Первая ячейка таблицы виртуальных функций (VTBL), содержащая методы, определенные пользователем. Первая ячейка содержит значение 3, если интерфейс основан на интерфейсе IUnknown, или значение 7, если он основан на интерфейсе IDispatch.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="t" /> недоступен из COM.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
      <summary>Возвращает управляемый объект указанного типа, представляющий COM-объект.</summary>
      <param name="pUnk">Указатель на интерфейс <see langword="IUnknown" /> неуправляемого объекта.</param>
      <param name="t">Тип запрашиваемого управляемого класса.</param>
      <returns>Экземпляр класса, который соответствует объекту <see cref="T:System.Type" />, представляющему запрошенный неуправляемый COM-объект.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="t" /> не отмечается атрибутом <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.

или -
<paramref name="t" /> относится к типу Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
      <summary>Возвращает тип, связанный с заданным идентификатором класса (CLSID).</summary>
      <param name="clsid">CLSID возвращаемого типа.</param>
      <returns>
        <see langword="System.__ComObject" /> вне зависимости от того, допустим ли код CLSID.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
      <summary>Извлекает имя типа, представленного объектом ITypeInfo.</summary>
      <param name="typeInfo">Объект, представляющий указатель <see langword="ITypeInfo" />.</param>
      <returns>Имя типа, на который указывает параметр <paramref name="typeInfo" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeInfo" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
      <summary>Создает уникальный объект вызываемой оболочки времени выполнения для заданного интерфейса IUnknown.</summary>
      <param name="unknown">Управляемый указатель на интерфейс <see langword="IUnknown" />.</param>
      <returns>Уникальная оболочка RCW для указанного интерфейса <see langword="IUnknown" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
      <summary>Показывает, представляет ли указанный объект COM-объект.</summary>
      <param name="o">Объект для проверки.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="o" /> является COM-типом. В противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
      <summary>Показывает, является ли тип видимым для клиентов COM.</summary>
      <param name="t">Тип, для которого требуется проверить видимость для COM.</param>
      <returns>Значение <see langword="true" />, если тип видим для COM; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
      <summary>Возвращает смещение поля для неуправляемой формы управляемого класса.</summary>
      <param name="t">Тип значения или форматированный ссылочный тип, указывающий управляемый класс. К классу должен применяться <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />.</param>
      <param name="fieldName">Поле внутри параметра <paramref name="t" />.</param>
      <returns>Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</returns>
      <exception cref="T:System.ArgumentException">Класс не может быть экспортирован как структура, или поле не является публичным. Начиная с версии 2.0 платформы .NET Framework поле может быть закрытым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает смещение поля для неуправляемой формы указанного управляемого класса.</summary>
      <param name="fieldName">Имя поля в типе <paramref name="T" />.</param>
      <typeparam name="T">Управляемый тип значения или форматированный ссылочный тип. Примените атрибут <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> к классу.</typeparam>
      <returns>Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
      <summary>Выполняет задачи настройки метода за один раз, не вызывая метод.</summary>
      <param name="m">Проверяемый метод.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="m" /> не является объектом <see cref="T:System.Reflection.MethodInfo" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
      <summary>Выполняет проверку перед связыванием для всех методов класса.</summary>
      <param name="c">Класс, методы которого требуется проверить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="c" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
      <summary>Копирует все символы вплоть до первого пустого из неуправляемой строки ANSI в управляемый объект <see cref="T:System.String" /> и преобразует каждый символ ANSI в Юникод.</summary>
      <param name="ptr">Адрес первого символа в неуправляемой строке.</param>
      <returns>Управляемая строка, содержащая копию неуправляемой строки ANSI. Если параметр <paramref name="ptr" /> равен <see langword="null" />, метод возвращает пустую строку.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
      <summary>Выделяет управляемый объект типа <see cref="T:System.String" />, копирует в него заданное число знаков из неуправляемой строки ANSI и преобразует каждый знак ANSI в Юникод.</summary>
      <param name="ptr">Адрес первого символа в неуправляемой строке.</param>
      <param name="len">Копируемое количество байтов исходной строки.</param>
      <returns>Управляемая строка, содержащая копию собственной строки ANSI, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае, этот метод возвращает значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="len" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
      <summary>Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из строки, хранящейся в неуправляемой памяти.</summary>
      <param name="ptr">Для платформ Юникода это адрес первого символа Юникода.

или -

Для платформ ANSI это адрес первого символа ANSI.</param>
      <returns>Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
      <summary>Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков из строки, сохраненной в неуправляемой памяти.</summary>
      <param name="ptr">Для платформ Юникода это адрес первого символа Юникода.

или -

Для платформ ANSI это адрес первого символа ANSI.</param>
      <param name="len">Число символов для копирования.</param>
      <returns>Управляемая строка, хранящая копию исходной строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="len" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
      <summary>Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него двоичную строку (BSTR), хранящуюся в неуправляемой памяти.</summary>
      <param name="ptr">Адрес первого символа в неуправляемой строке.</param>
      <returns>Управляемая строка, содержащая копию неуправляемой строки.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ptr" /> равняется <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
      <summary>Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из неуправляемой строки Юникода.</summary>
      <param name="ptr">Адрес первого символа в неуправляемой строке.</param>
      <returns>Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
      <summary>Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков неуправляемой строки Юникода.</summary>
      <param name="ptr">Адрес первого символа в неуправляемой строке.</param>
      <param name="len">Число копируемых символов Юникода.</param>
      <returns>Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)">
      <param name="ptr" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)">
      <param name="ptr" />
      <param name="byteLen" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
      <summary>Маршалирует данные из неуправляемого блока памяти в управляемый объект.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <param name="structure">Объект, в который копируются данные. Он должен представлять собой экземпляр форматированного класса.</param>
      <exception cref="T:System.ArgumentException">Распределение структуры не является ни последовательным, ни явным.

или -

Структура принадлежит к упакованному типу значений.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
      <summary>Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект указанного типа.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <param name="structureType">Тип создаваемого объекта. Этот объект должен представлять форматированный класс или структуру.</param>
      <returns>Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException">Распределения параметра <paramref name="structureType" />не является ни последовательным, ни явным.

или -
Параметр <paramref name="structureType" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="structureType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Класс, указанный в <paramref name="structureType" />, не имеет доступного конструктора без параметров.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект типа, указанного параметром универсального типа.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <typeparam name="T">Тип объекта, в который копируются данные. Это должен быть форматированный класс или структура.</typeparam>
      <returns>Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException">Макет <typeparamref name="T" /> не является ни последовательным, ни явным.</exception>
      <exception cref="T:System.MissingMethodException">Класс, указанный в <typeparamref name="T" />, не имеет доступного конструктора без параметров.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Выполняет маршалирование данных из неуправляемого блока памяти в управляемый объекта указанного типа.</summary>
      <param name="ptr">Указатель на неуправляемый блок памяти.</param>
      <param name="structure">Объект, в который копируются данные.</param>
      <typeparam name="T">Тип параметра <paramref name="structure" />. Этот должен быть форматированный класс.</typeparam>
      <exception cref="T:System.ArgumentException">Распределение структуры не является ни последовательным, ни явным.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary>Запрашивает указатель на заданный интерфейс из COM-объекта.</summary>
      <param name="pUnk">Запрашиваемый интерфейс.</param>
      <param name="iid">Идентификатор IID запрошенного интерфейса.</param>
      <param name="ppv">Когда этот метод возвращает результаты, в них содержится ссылка на возвращенный интерфейс.</param>
      <returns>Значение HRESULT, показывающее, успешно ли выполнен вызов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
      <summary>Считывает один байт из неуправляемой памяти.</summary>
      <param name="ptr">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns>Байт, считанный из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
      <summary>Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>Байт, считываемый из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
      <summary>Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>Байт, считываемый из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
      <summary>Считывает из неуправляемой памяти 16-битное целое число со знаком.</summary>
      <param name="ptr">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns>16-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
      <summary>Считывает из неуправляемой памяти 32-битное целое число со знаком.</summary>
      <param name="ptr">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns>32-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>32-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>32-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
      <summary>Считывает из неуправляемой памяти 64-битное целое число со знаком.</summary>
      <param name="ptr">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns>64-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
      <summary>Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns>Целое число, считанное из неуправляемой памяти. На 32-разрядных компьютерах возвращается 32-битное целое число, а на 64-разрядных компьютерах — 64-битное.</returns>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
      <summary>Считывает из неуправляемой памяти с указанным смещением знаковое целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>Целое число, считываемое из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
      <summary>Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns>Целое число, считываемое из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
      <summary>Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</summary>
      <param name="pv">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</param>
      <param name="cb">Новый размер выделенного блока.</param>
      <returns>Целое число, представляющее адрес повторно выделенного блока памяти. Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
      <summary>Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</summary>
      <param name="pv">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
      <param name="cb">Новый размер выделенного блока. Это не указатель; это запрашиваемое число байтов, приведенное к типу <see cref="T:System.IntPtr" />. Если передается указатель, он рассматривается как размер.</param>
      <returns>Указатель на повторно выделенную память. Эта память должна освобождаться с помощью <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
      <summary>Уменьшает счетчик ссылок для указанного интерфейса.</summary>
      <param name="pUnk">Освобождаемый интерфейс.</param>
      <returns>Новое значение счетчика ссылок для интерфейса, заданного параметром <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
      <summary>Уменьшает счетчик ссылок вызываемой оболочки времени выполнения, связанной с указанным COM-объектом.</summary>
      <param name="o">Освобождаемый COM-объект.</param>
      <returns>Новое значение счетчика ссылок оболочки RCW, связанной с <paramref name="o" />. Это значение обычно равно нулю, поскольку оболочка RCW хранит только одну ссылку на COM-объект в оболочке вне зависимости от количества управляемых клиентов, которые ее вызывают.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> не является допустимым COM-объектом.</exception>
      <exception cref="T:System.NullReferenceException">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
      <summary>Выделяет неуправляемую двоичную строку (BSTR) и копирует в нее содержимое управляемого объекта <see cref="T:System.Security.SecureString" />.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда был скопирован параметр <paramref name="s" />, или значение 0, если параметр <paramref name="s" /> представляет собой объект <see cref="T:System.Security.SecureString" />, длина которого равна 0.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
      <summary>Определяет данные, на которые ссылается заданный ключ в указанном COM-объекте.</summary>
      <param name="obj">COM-объект для хранения данных.</param>
      <param name="key">Ключ во внутренней хэш-таблице COM-объекта, в котором хранятся данные.</param>
      <param name="data">Задаваемые данные.</param>
      <returns>Значение <see langword="true" />, если данные заданы успешно; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.

или -
Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> не является COM-объектом.

или -
<paramref name="obj" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
      <summary>Возвращает неуправляемый размер объекта в байтах.</summary>
      <param name="structure">Объект, размер которого возвращается.</param>
      <returns>Размер указанного объекта в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
      <summary>Возвращает размер неуправляемого типа в байтах.</summary>
      <param name="t">Тип, размер которого возвращается.</param>
      <returns>Размер указанного типа в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="t" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает размер неуправляемого типа в байтах.</summary>
      <typeparam name="T">Тип, размер которого возвращается.</typeparam>
      <returns>Размер, в байтах, типа, определяемого параметром универсального типа <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает неуправляемый размер объекта указанного типа в байтах.</summary>
      <param name="structure">Объект, размер которого возвращается.</param>
      <typeparam name="T">Тип параметра <paramref name="structure" />.</typeparam>
      <returns>Размер в байтах указанного объекта в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
      <summary>Выделяет строку BSTR и копирует в нее содержимое управляемого объекта <see cref="T:System.String" />.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Неуправляемый указатель на строку <see langword="BSTR" /> или значение 0, если параметр <paramref name="s" /> имеет значение null.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина параметра <paramref name="s" /> выходит за пределы диапазона.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
      <summary>Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
      <summary>Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Выделенный блок памяти или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина параметра <paramref name="s" /> выходит за пределы диапазона.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
      <summary>Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка s имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)">
      <param name="s" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
      <summary>Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI, если это требуется.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирована строка, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память.</summary>
      <param name="s">Копируемая управляемая строка.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException">Метод не может выделить в куче достаточное количество динамической памяти, присущей данному объекту.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
      <summary>Маршалирует данные из управляемого объекта в неуправляемый блок памяти.</summary>
      <param name="structure">Управляемый объект, содержащий данные для маршалинга. Этот объект должен представлять собой структуру или экземпляр форматированного класса.</param>
      <param name="ptr">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</param>
      <param name="fDeleteOld">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> в параметре <paramref name="ptr" /> перед тем, как этот метод скопирует данные. Блок должен содержать допустимые данные. Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.

или -
<paramref name="structure" /> — это экземпляр универсального типа (только в .NET Framework 4.5 и более ранних версиях).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Выполняет маршалирование данных в неуправляемый блока памяти из управляемого объекта указанного типа.</summary>
      <param name="structure">Управляемый объект, содержащий данные для маршалинга. Объект должен представлять собой структуру или экземпляр форматированного класса.</param>
      <param name="ptr">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</param>
      <param name="fDeleteOld">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> в параметре <paramref name="ptr" /> перед тем, как этот метод скопирует данные. Блок должен содержать допустимые данные. Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</param>
      <typeparam name="T">Тип управляемого объекта.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.</exception>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
      <summary>Представляет используемый по умолчанию размер символа в системе. По умолчанию для систем Юникода задается значение 2, а для систем ANSI значение 1. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
      <summary>Представляет наибольший размер набора двухбайтовых символов (DBCS) в байтах для текущей операционной системы. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
      <summary>Создает исключение с определенным значением ошибки HRESULT.</summary>
      <param name="errorCode">Значение HRESULT, соответствующее нужному исключению.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
      <summary>Создает исключение с определенным значением ошибки HRESULT в соответствии с указанным интерфейсом IErrorInfo.</summary>
      <param name="errorCode">Значение HRESULT, соответствующее нужному исключению.</param>
      <param name="errorInfo">Указатель на интерфейс IErrorInfo, предоставляющий дополнительные сведения об ошибке. Можно задать значение <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс IErrorInfo, или значение <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс IErrorInfo и создать исключение только на основе кода ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
      <summary>Возвращает адрес элемента по указанному индексу внутри заданного массива.</summary>
      <param name="arr">Массив, содержащий требуемый элемент.</param>
      <param name="index">Индекс необходимого элемента в параметре <paramref name="arr" />.</param>
      <returns>Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает адрес элемента по указанному индексу внутри массива заданного типа.</summary>
      <param name="arr">Массив, содержащий требуемый элемент.</param>
      <param name="index">Индекс необходимого элемента в массиве <paramref name="arr" />.</param>
      <typeparam name="T">Тип массива.</typeparam>
      <returns>Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
      <summary>Записывает однобайтовое значение в неуправляемую память.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
      <summary>Записывает однобайтовое значение в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
      <summary>Записывает однобайтовое значение в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
      <summary>Записывает в неуправляемую память символ в виде 16-битного целого числа.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
      <summary>Записывает в неуправляемую память 16-битное целое число.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
      <summary>Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес для записи в собственной куче.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
      <summary>Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
      <summary>Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
      <summary>Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
      <summary>Записывает в неуправляемую память 32-битное целое число со знаком.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
      <summary>Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
      <summary>Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
      <summary>Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
      <summary>Записывает в неуправляемую память 64-битное целое число со знаком.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
      <summary>Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
      <summary>Записывает в неуправляемую память с указанным смещением целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
      <summary>Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
      <summary>Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
      <summary>Освобождает указатель BSTR, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</summary>
      <param name="s">Адрес <see langword="BSTR" /> для освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
      <summary>Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</summary>
      <param name="s">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
      <summary>Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</summary>
      <param name="s">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)">
      <param name="s" />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
      <summary>Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</summary>
      <param name="s">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
      <summary>Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</summary>
      <param name="s">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalAsAttribute">
      <summary>Указывает способ маршалинга данных между управляемым и неуправляемым кодом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</summary>
      <param name="unmanagedType">Значение, в виде которого будут маршалированы данные.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</summary>
      <param name="unmanagedType">Значение, в виде которого будут маршалированы данные.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
      <summary>Задает тип элемента неуправляемого массива <see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /> или <see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
      <summary>Задает индекс параметра неуправляемого атрибута <see langword="iid_is" />, используемого в COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
      <summary>Предоставляет дополнительные сведения для настраиваемого модуля маршалинга.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
      <summary>Задает полное имя настраиваемого модуля маршалинга.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
      <summary>Реализует поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> в виде типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
      <summary>Показывает тип элемента для поля <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
      <summary>Указывает определенный пользователем тип элемента для поля <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
      <summary>Показывает количество элементов в массиве фиксированной длины или количество знаков (не байтов) в импортируемой строке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
      <summary>Указывает параметр, содержащий отсчитываемое от нуля количество элементов массива, аналогичный параметру <see langword="size_is" /> в COM.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
      <summary>Получает значение <see cref="T:System.Runtime.InteropServices.UnmanagedType" />, используемое для маршалинга данных.</summary>
      <returns>Значение типа <see cref="T:System.Runtime.InteropServices.UnmanagedType" />, используемого для маршалинга данных.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalDirectiveException">
      <summary>Исключение, которое создается модулем упаковки и передачи, когда он встречает неподдерживаемый атрибут <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с указанием причины возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalDirectiveException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.NativeLibrary">
      <summary>Предоставляет интерфейсы API для управления собственными библиотеками.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)">
      <summary>Освобождает загруженную библиотеку с указанным дескриптором ОС или не выполняет никаких действий, если входной дескриптор равен <see cref="F:System.IntPtr.Zero" />.</summary>
      <param name="handle">Дескриптор ОС для собственной библиотеки, который необходимо освободить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)">
      <summary>Возвращает адрес экспортируемого символа.</summary>
      <param name="handle">Дескриптор ОС для собственной библиотеки.</param>
      <param name="name">Имя экспортируемого символа.</param>
      <returns>Адрес символа.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="handle" /> или <paramref name="name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.EntryPointNotFoundException">Символ не найден.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)">
      <summary>Предоставляет простой интерфейс API для загрузки собственной библиотеки, который инкапсулирует загрузчик ОС и использует флаги по умолчанию.</summary>
      <param name="libraryPath">Имя загружаемой собственной библиотеки.</param>
      <returns>Дескриптор ОС для загруженной собственной библиотеки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="libraryPath" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.DllNotFoundException">Не удается найти библиотеку.</exception>
      <exception cref="T:System.BadImageFormatException">Библиотека недопустима.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
      <summary>Предоставляет высокоуровневый интерфейс API для загрузки собственной библиотеки.</summary>
      <param name="libraryName">Имя загружаемой собственной библиотеки.</param>
      <param name="assembly">Сборка, загружающая собственную библиотеку.</param>
      <param name="searchPath">Путь поиска.</param>
      <returns>Дескриптор ОС для загруженной библиотеки.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="libraryName" /> или <paramref name="assembly" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> не является объектом <see langword="RuntimeAssembly" />.</exception>
      <exception cref="T:System.DllNotFoundException">Не удается найти библиотеку.</exception>
      <exception cref="T:System.BadImageFormatException">Библиотека недопустима.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)">
      <summary>Задает обратный вызов для разрешения импортируемых модулей собственной библиотеки из сборки.</summary>
      <param name="assembly">Сборка, для которой регистрируется сопоставитель.</param>
      <param name="resolver">Регистрируемый обратный вызов сопоставителя.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> или paramref name="resolver" /&gt; имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сопоставитель уже задан для этой сборки.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)">
      <summary>Возвращает адрес экспортированного символа и значение, указывающее, успешно ли был выполнен вызов метода.</summary>
      <param name="handle">Дескриптор ОС для собственной библиотеки.</param>
      <param name="name">Имя экспортируемого символа.</param>
      <param name="address">При возвращении управления методом содержит адрес символа, если он существует.</param>
      <returns>Значение <see langword="true" />, если метод успешно вернул управление. В противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="handle" /> или <paramref name="name" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)">
      <summary>Предоставляет простой интерфейс API для загрузки собственной библиотеки и возвращает значение, указывающее, успешно ли была выполнена операция.</summary>
      <param name="libraryPath">Имя загружаемой собственной библиотеки.</param>
      <param name="handle">При возвращении управления методом содержит дескриптор ОС для загруженной собственной библиотеки.</param>
      <returns>Значение <see langword="true" />, если собственная библиотека была загружена успешно; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="libraryPath" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)">
      <summary>Предоставляет высокоуровневый интерфейс API, который загружает собственную библиотеку и возвращает значение, указывающее, успешно ли была выполнена операция.</summary>
      <param name="libraryName">Имя загружаемой собственной библиотеки.</param>
      <param name="assembly">Сборка, загружающая собственную библиотеку.</param>
      <param name="searchPath">Путь поиска.</param>
      <param name="handle">При возвращении управления методом содержит дескриптор ОС для загруженной собственной библиотеки.</param>
      <returns>
        <see langword="true" />, если операция загрузки успешно завершена; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="libraryPath" /> или <paramref name="assembly" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> не является объектом <see langword="RuntimeAssembly" />.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.OptionalAttribute">
      <summary>Указывает, что параметр является необязательным.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OptionalAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="OptionalAttribute" /> со значениями по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PreserveSigAttribute">
      <summary>Показывает, что преобразование значения HRESULT или сигнатуры <see langword="retval" />, происходящее в процессе вызовов COM-взаимодействия, следует запретить.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
      <summary>Показывает, что сборка с данным атрибутом является основной сборкой взаимодействия.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute" />, используя основной и дополнительный номера версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <param name="major">Основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</param>
      <param name="minor">Дополнительный номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MajorVersion">
      <summary>Возвращает основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <returns>Основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MinorVersion">
      <summary>Возвращает номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <returns>Дополнительный номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ProgIdAttribute">
      <summary>Позволяет пользователю задавать идентификатор ProgID класса.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="ProgIdAttribute" />, используя указанный идентификатор ProgID.</summary>
      <param name="progId">Идентификатор ProgID, присваиваемый классу.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
      <summary>Возвращает идентификатор ProgID класса.</summary>
      <returns>Идентификатор ProgID класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeEnvironment">
      <summary>Предоставляет коллекцию статических (<see langword="static" />) методов, возвращающих сведения о среде CLR.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.FromGlobalAccessCache(System.Reflection.Assembly)">
      <summary>Проверяет, загружена ли указанная сборка в глобальный кэш сборок.</summary>
      <param name="a">Проверяемая сборка.</param>
      <returns>Значение <see langword="true" />, если сборка загружена в глобальный кэш сборок, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeDirectory">
      <summary>Возвращает каталог, в котором установлена среда CLR.</summary>
      <returns>Строка, содержащая путь к каталогу, в котором установлена среда CLR.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(System.Guid,System.Guid)">
      <summary>Возвращает указанный интерфейс для указанного класса.</summary>
      <param name="clsid">Идентификатор требуемого класса.</param>
      <param name="riid">Идентификатор требуемого интерфейса.</param>
      <returns>Неуправляемый указатель на запрашиваемый интерфейс.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Сбой IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsObject(System.Guid,System.Guid)">
      <summary>Возвращает экземпляр типа, представляющий COM-объект при помощи указателя на его интерфейс <see langword="IUnknown" />.</summary>
      <param name="clsid">Идентификатор требуемого класса.</param>
      <param name="riid">Идентификатор требуемого интерфейса.</param>
      <returns>Объект, представляющий указанный неуправляемый COM-объект.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">Сбой IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetSystemVersion">
      <summary>Возвращает номер версии среды CLR, выполняющей текущий процесс.</summary>
      <returns>Строка, содержащая номер версии среды CLR.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile">
      <summary>Возвращает путь к файлу конфигурации системы.</summary>
      <returns>Путь к файлу конфигурации системы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <summary>Это исключение возникает, если ранг входного массива <see langword="SAFEARRAY" /> не совпадает с рангом, указанным в управляемой подписи.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayRankMismatchException" /> указанным сообщением.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeArrayRankMismatchException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <summary>Исключение создается, если тип входящего <see langword="SAFEARRAY" /> не совпадает с типом, указанным в управляемой подписи.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> указанным сообщением.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeBuffer">
      <summary>Предоставляет управляемый буфер памяти, который может использоваться для чтения и записи. Попытки обращения к памяти за пределами управляемого буфера (опустошение или переполнение) вызывают исключения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> и указывает, должен ли быть дескриптор буфера надежно освобожден.</summary>
      <param name="ownsHandle">Значение <see langword="true" />, чтобы надежно освободить маркер на стадии завершения; значение <see langword="false" />, чтобы предотвратить надежное освобождение (не рекомендуется).</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
      <summary>Получает из объекта <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> указатель для блока памяти.</summary>
      <param name="pointer">Указатель байта, передаваемый по ссылке, для получения указателя из объекта <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. Необходимо присвоить этому указателю значение <see langword="null" />, прежде чем вызывать этот метод.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
      <summary>Получает размер буфера (в байтах).</summary>
      <returns>Число байтов в буфере памяти.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
      <summary>Задает размер выделяемого буфера памяти, используя указанное количество элементов и размер элемента. Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Количество элементов в буфере.</param>
      <param name="sizeOfEachElement">Размер каждого элемента в буфере.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numElements" /> меньше нуля.

или -
Значение параметра <paramref name="sizeOfEachElement" /> меньше нуля.

или -
Произведение <paramref name="numElements" /> и <paramref name="sizeOfEachElement" /> превышает объем доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
      <summary>Определяет размер выделяемой области памяти (в байтах). Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numBytes">Количество байтов в буфере.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numBytes" /> меньше нуля.

или -
<paramref name="numBytes" /> больше доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
      <summary>Определяет размер выделяемой области памяти путем указания количества значений и их типа. Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Количество элементов этого типа значения, под которое выделяется память.</param>
      <typeparam name="T">Тип значения, под который выделяется память.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numElements" /> меньше нуля.

или -
Произведение <paramref name="numElements" /> и размера каждого элемента превышает объем доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
      <summary>Считывает из памяти тип значения с указанным смещением.</summary>
      <param name="byteOffset">Расположение, из которого считывается тип значения. Может потребоваться продумать проблемы выравнивания.</param>
      <typeparam name="T">Считываемый тип значения.</typeparam>
      <returns>Тип значения, считанный из памяти.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Считывает из памяти указанное количество типов значений, начиная указанного смещения, и записывает их в массив, начиная с указанного индекса.</summary>
      <param name="byteOffset">Расположение, с которого начинается считывание.</param>
      <param name="array">Выходной массив для записи.</param>
      <param name="index">Расположение в выходном массиве, с которого начинается запись.</param>
      <param name="count">Количество типов значений, считываемых из входного массива и записываемых в выходной массив.</param>
      <typeparam name="T">Считываемый тип значения.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.

или -
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина массива за вычетом индекса меньше значения <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
      <summary>Высвобождает указатель, полученный методом <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
      <summary>Записывает тип значения в память в указанном расположении.</summary>
      <param name="byteOffset">Расположение, с которого начинается запись. Может потребоваться продумать проблемы выравнивания.</param>
      <param name="value">Значение для записи.</param>
      <typeparam name="T">Записываемый тип значения.</typeparam>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Записывает указанное количество типов значений в указанное расположение в памяти, считывая байты входного массива, начиная с указанного расположения.</summary>
      <param name="byteOffset">Расположение в памяти, в которое выполняется запись.</param>
      <param name="array">Входной массив.</param>
      <param name="index">Смещение в этом массиве, с которого начинается считывание.</param>
      <param name="count">Число записываемых типов значений.</param>
      <typeparam name="T">Записываемый тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Длина входного массива за вычетом <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.SEHException">
      <summary>Представляет ошибки структурной обработки исключений (SEH).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" />, используя данные сериализации.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" /> с заданным сообщением.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.CanResume">
      <summary>Показывает, возможно ли восстановление после исключения и возможно ли продолжить выполнение кода с точки возникновения этого исключения.</summary>
      <returns>Всегда имеет значение <see langword="false" />, поскольку исключения с возможностью восстановления не реализованы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary>Заменяет стандартный независимый от потока модуль упаковки и передачи среды CLR на стандартный модуль упаковки и передачи STA OLE.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
      <summary>Обеспечивает поддержку эквивалентности типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> с указанными областью и идентификатором.</summary>
      <param name="scope">Первая строка эквивалентности типов.</param>
      <param name="identifier">Вторая строка эквивалентности типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
      <summary>Получает значение параметра <paramref name="identifier" />, переданного конструктору <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns>Значение параметра <paramref name="identifier" /> конструктора.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
      <summary>Получает значение параметра <paramref name="scope" />, переданного конструктору <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns>Значение параметра <paramref name="scope" /> конструктора.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncAttribute">
      <summary>Содержит флаги <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" />, ранее импортированные для данного метода из библиотеки COM- типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see langword="TypeLibFuncAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для метода с атрибутом, обнаруженное в библиотеке типов, из которой метод был импортирован.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Runtime.InteropServices.TypeLibFuncFlags)">
      <summary>Инициализирует новый экземпляр класса <see langword="TypeLibFuncAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для метода с атрибутом, обнаруженное в библиотеке типов, из которой метод был импортирован.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibFuncAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для этого метода.</summary>
      <returns>Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для этого метода.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncFlags">
      <summary>Описывает исходные параметры <see langword="FUNCFLAGS" /> в библиотеке типов COM, из которой был импортирован данный метод.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable">
      <summary>Функция, поддерживающая привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultBind">
      <summary>Функция, предоставляющая объект наилучшим образом. Этот атрибут в сведениях о типе может быть только у одной функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultCollelem">
      <summary>Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDisplayBind">
      <summary>Функция, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FHidden">
      <summary>Эту функцию не следует показывать пользователю, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FImmediateBind">
      <summary>Функция сопоставляется так же, как отдельные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FNonBrowsable">
      <summary>Это свойство отображается в обозревателе объектов и не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FReplaceable">
      <summary>Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRequestEdit">
      <summary>Если задано, любой вызов метод, задающего это свойство, сначала приводит к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRestricted">
      <summary>Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FSource">
      <summary>Функция возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUiDefault">
      <summary>Член сведений о типе является членом по умолчанию для отображения в пользовательском интерфейсе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUsesGetLastError">
      <summary>Функция поддерживает <see langword="GetLastError" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibImportClassAttribute">
      <summary>Определяет, какой тип <see cref="T:System.Type" /> использует интерфейс исключительным образом. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute" />, задавая тип <see cref="T:System.Type" />, исключительным образом использующий интерфейс.</summary>
      <param name="importClass">Объект <see cref="T:System.Type" />, использующий интерфейс исключительным образом.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibImportClassAttribute.Value">
      <summary>Возвращает имя объекта <see cref="T:System.Type" />, который использует интерфейс исключительным образом.</summary>
      <returns>Имя объекта <see cref="T:System.Type" />, который использует интерфейс исключительным образом.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeAttribute">
      <summary>Содержит флаги <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" />, ранее импортированные для данного типа из библиотеки COM-типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see langword="TypeLibTypeAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для типа с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Runtime.InteropServices.TypeLibTypeFlags)">
      <summary>Инициализирует новый экземпляр класса <see langword="TypeLibTypeAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для типа с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibTypeAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для этого типа.</summary>
      <returns>Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для этого типа.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeFlags">
      <summary>Описывает исходные параметры флагов <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> в библиотеке типов COM, из которой был импортирован данный тип.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAggregatable">
      <summary>Класс поддерживает агрегирование.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAppObject">
      <summary>Описание типа, описывающее объект <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate">
      <summary>Экземпляры этого типа могут быть созданы при помощи <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FControl">
      <summary>Этот тип является элементом управления, из которого производятся другие типы. Он не должен отображаться для пользователей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable">
      <summary>Показывает, что интерфейс является производным от <see langword="IDispatch" />, прямо или косвенно.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDual">
      <summary>Интерфейс поддерживает и <see langword="IDispatch" />, и привязку v-таблицы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FHidden">
      <summary>Этот тип не должен отображаться для браузеров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FLicensed">
      <summary>Этот тип лицензирован.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FNonExtensible">
      <summary>Интерфейс не может добавлять члены в процессе выполнения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation">
      <summary>Типы, используемые в данном интерфейсе полностью совместимы с Automation, включая поддержку привязки v-таблицы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FPreDeclId">
      <summary>Этот тип определен заранее. Клиентское приложение должно автоматически создать единственный экземпляр объекта с данным атрибутом. Имя переменной, указывающей на данный объект, совпадает с именем класса объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReplaceable">
      <summary>Объект поддерживает <see langword="IConnectionPointWithDefault" />, и для него задано поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted">
      <summary>Этот флаг предназначен для типов уровня системы или типов, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReverseBind">
      <summary>Показывает, что расширения имен основных интерфейсов должны проверяться до проверки дочерних интерфейсов. Этот порядок проверки является обратным относительно поведения по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarAttribute">
      <summary>Содержит флаги <see cref="T:System.Runtime.InteropServices.VARFLAGS" />, ранее импортированные для данного поля из библиотеки COM-типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для поля с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Runtime.InteropServices.TypeLibVarFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" />.</summary>
      <param name="flags">Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для поля с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVarAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для этого поля.</summary>
      <returns>Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для этого поля.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarFlags">
      <summary>Описывает исходные параметры <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> в библиотеке COM-типов, из которой была импортирована эта переменная.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable">
      <summary>Переменная поддерживает привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultBind">
      <summary>Переменная является единственным свойством, представляющим объект наилучшим образом. Только одна переменная в сведениях о типе может иметь это значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultCollelem">
      <summary>Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDisplayBind">
      <summary>Переменная отображается как связываемая. <see cref="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FHidden">
      <summary>Не следует отображать ту переменную в браузере, даже если она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FImmediateBind">
      <summary>Переменная сопоставляется так же, как собственные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FNonBrowsable">
      <summary>Переменная появляется в обозревателе объектов, но не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReadOnly">
      <summary>Не следует разрешать присвоение значений этой переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReplaceable">
      <summary>Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRequestEdit">
      <summary>Показывает, что свойство поддерживает уведомление COM <see langword="OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRestricted">
      <summary>Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FSource">
      <summary>Переменная возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FUiDefault">
      <summary>Отображение по умолчанию в интерфейсе пользователя.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVersionAttribute">
      <summary>Задает номер версии экспортированной библиотеки типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVersionAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" /> с основным и дополнительным номерами версии библиотеки типов.</summary>
      <param name="major">Основной номер версии библиотеки типов.</param>
      <param name="minor">Дополнительный номер версии библиотеки типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MajorVersion">
      <summary>Получает основной номер версии библиотеки типов.</summary>
      <returns>Основной номер версии библиотеки типов.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MinorVersion">
      <summary>Получает дополнительный номер версии библиотеки типов.</summary>
      <returns>Дополнительный номер версии библиотеки типов.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnknownWrapper">
      <summary>Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_UNKNOWN" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.UnknownWrapper" /> инкапсулируемым в обертку объектом.</summary>
      <param name="obj">Инкапсулируемый в обертку объект.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject">
      <summary>Возвращает объект, содержащийся в этой обертке.</summary>
      <returns>Инкапсулированный в обертку объект.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <summary>Управляет поведением при маршалинге сигнатуры делегата, передаваемой как указатель неуправляемой функции в неуправляемый код или из него. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute" /> с заданным соглашением о вызове.</summary>
      <param name="callingConvention">Заданное соглашение о вызове.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping">
      <summary>Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention">
      <summary>Возвращает значение соглашения о вызове.</summary>
      <returns>Значение соглашения о вызове, указанное конструктором <see cref="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet">
      <summary>Указывает способ маршалинга параметров строки для метода, а также управляет искажением имени.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError">
      <summary>Показывает, вызывает ли вызываемый объект функцию <see langword="SetLastError" /> интерфейса Windows API перед возвращением из метода, использующего атрибуты.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar">
      <summary>Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedType">
      <summary>Определяет порядок маршалинга параметров или полей в неуправляемый код.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
      <summary>Строка однобайтовых знаков ANSI с префиксом, обозначающим ее длину. Этот элемент можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
      <summary>Динамический тип, который определяет тип объекта во время выполнения и маршалирует объекта как объекта данного типа. Этот член является допустимым только для методов вызова неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Bool">
      <summary>4-байтовое логическое значение (<see langword="true" /> != 0, <see langword="false" /> = 0). Это тип BOOL платформы Win32.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.BStr">
      <summary>Двухбайтовая строка знаков Юникода с префиксом, обозначающим ее длину. Этот элемент, являющийся строкой, определенной в COM по умолчанию, можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
      <summary>Если свойство <see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /> равно <see langword="ByValArray" />, то для указания числа элементов массива должно быть задано поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" />. Если требуется различать типы строк, поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /> может содержать тип <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> элементов массива. <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> можно использовать только для массива, элементы которого отображаются как поля в структуре.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
      <summary>Используется для встроенных массивов знаков фиксированной длины, появляющихся в структуре. Типы <see langword="ByValTStr" /> ведут себя как строки с фиксированным размером в стиле C в структуре (например, <c>char s [5]</c>). Тип символа, используемый с <see langword="ByValTStr" />, определяется аргументом <see cref="T:System.Runtime.InteropServices.CharSet" /> атрибута <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />, примененным к содержащей его структуре. Для задания размера массива всегда следует использовать поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Currency">
      <summary>Тип валюты. Используется в <see cref="T:System.Decimal" /> для маршалинга десятичного значения как типа денежной единицы COM, вместо <see langword="Decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
      <summary>Задает класс настраиваемых модулей маршалинга при использовании с полем <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> или <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" />. Поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /> можно использовать для передачи дополнительных сведений настраиваемому модулю маршалинга. Этот элемент можно использовать для всех ссылочных типов. Этот член допустим только для параметров и возвращаемых значений. Его нельзя использовать в полях.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Error">
      <summary>Собственный тип, связанный с <see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /> или <see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" />, который приводит к экспорту параметра как значения HRESULT в экспортированной библиотеке типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
      <summary>Целое число, которое может использоваться как указатель функции в стиле языка С. Этот член можно использовать для типа данных <see cref="T:System.Delegate" /> или типа, наследуемого от <see cref="T:System.Delegate" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.HString">
      <summary>Строка Среда выполнения Windows. Этот элемент можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I1">
      <summary>1-байтовое целое число со знаком. Этот элемент можно использовать для преобразования значения типа Boolean в 1-байтовое значение <see langword="bool" /> в стиле языка C (<see langword="true" /> = 1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I2">
      <summary>2-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I4">
      <summary>4-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I8">
      <summary>8-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
      <summary>Указатель COM <see langword="IDispatch" /> (<see langword="Object" /> в Microsoft Visual Basic 6.0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
      <summary>Указатель интерфейса Среда выполнения Windows. Этот элемент можно использовать для типа данных <see cref="T:System.Object" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Interface">
      <summary>Указатель интерфейса COM. Идентификатор <see cref="T:System.Guid" /> интерфейса получен из класса метаданных. Этот элемент можно использовать для указания точного типа интерфейса или типа интерфейса, используемого по умолчанию при применении к классу. Этот элемент определяет такое же поведение, что и <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" />, при его применении к типу данных <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
      <summary>Указатель <see langword="IUnknown" /> COM. Этот элемент можно использовать для типа данных <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
      <summary>Указатель на первый элемент массива в стиле языка C. При маршалинге из управляемого кода в неуправляемый длина массива определяется исходя из длины управляемого массива. При маршалинге из неуправляемого кода в управляемый длина массива определяется исходя из значений полей <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> и <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" />, за которыми, если требуется различать тип строк, следует тип элементов неуправляемого массива.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
      <summary>Однобайтовая строка знаков ANSI, заканчивающаяся нулем. Этот член можно использовать для типов данных <see cref="T:System.String" /> и <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
      <summary>Указатель на структуру в стиле языка C, используемую для маршалинга управляемых форматируемых классов. Этот член является допустимым только для методов вызова неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
      <summary>Строка символов, зависящих от платформы: ANSI для Windows 98, Юникод для Windows NT и Windows XP. Это значение поддерживается только для вызова неуправляемого кода и не используется для COM-взаимодействия, поскольку экспортирование строки типа <see langword="LPTStr" /> не поддерживается.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
      <summary>Указатель на строку в кодировке UTF-8.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
      <summary>2-байтовая строка символов Юникода, заканчивающаяся нулем. Нельзя использовать значение <see langword="LPWStr" /> с неуправляемой строкой, если только эта строка не была создана с помощью неуправляемой функции <see langword="CoTaskMemAlloc" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R4">
      <summary>4-байтовое число с плавающей запятой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R8">
      <summary>8-байтовое число с плавающей запятой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
      <summary>
        <see langword="SafeArray" /> — это описывающий сам себя массив, передающий тип, ранг и границы соответствующего массива данных. Этот элемент можно использовать с полем <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" />, чтобы переопределить тип элемента, заданный по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Struct">
      <summary>Значение типа VARIANT, используемое для маршалинга управляемых форматируемых классов и типов значений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
      <summary>Зависящее от платформы целое число со знаком: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
      <summary>Зависящее от платформы целое число без знака: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
      <summary>Зависящая от платформы строка <see langword="char" />, предваряемая длиной: ANSI для Windows 98, Юникод для Windows NT. Этот элемент, аналогичный BSTR, используется редко.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U1">
      <summary>1-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U2">
      <summary>2-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U4">
      <summary>4-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U8">
      <summary>8-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
      <summary>2-байтовое значение типа VARIANT_BOOL, определенное OLE (<see langword="true" /> != -1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
      <summary>Значение, позволяющее Visual Basic изменять строку в неуправляемом коде и получать результаты, отраженные в управляемом коде. Это значение поддерживается только для вызова неуправляемого кода.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VarEnum">
      <summary>Показывает способ маршалинга элементов массива при маршалинге массива из управляемого кода в неуправляемый код как массива <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY">
      <summary>Показывает указатель <see langword="SAFEARRAY" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB">
      <summary>Показывает длину префикса в байтах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB_OBJECT">
      <summary>Показывает, что BLOB-объект содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BOOL">
      <summary>Показывает логическое значение (Boolean).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BSTR">
      <summary>Показывает строку BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BYREF">
      <summary>Показывает, что значение является ссылкой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CARRAY">
      <summary>Показывает массив в стиле языка C.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CF">
      <summary>Показывает формат буфера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CLSID">
      <summary>Показывает идентификатор ID класса.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CY">
      <summary>Показывает денежное значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DATE">
      <summary>Показывает значение DATE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL">
      <summary>Показывает значение <see langword="decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH">
      <summary>Показывает указатель <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_EMPTY">
      <summary>Показывает, что значение не задано.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ERROR">
      <summary>Показывает SCODE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_FILETIME">
      <summary>Показывает значение FILETIME.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_HRESULT">
      <summary>Показывает значение HRESULT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I1">
      <summary>Показывает значение <see langword="char" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I2">
      <summary>Показывает целое число <see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I4">
      <summary>Показывает целое число <see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I8">
      <summary>Показывает 64-разрядное целое число.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_INT">
      <summary>Показывает целочисленное значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPSTR">
      <summary>Показывает строку, заканчивающуюся нулем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPWSTR">
      <summary>Показывает двухбайтную строку, завершенную <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_NULL">
      <summary>Показывает значение null, аналогичное значению null в SQL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_PTR">
      <summary>Показывает тип указателя.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R4">
      <summary>Показывает значение <see langword="float" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R8">
      <summary>Показывает значение <see langword="double" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_RECORD">
      <summary>Показывает тип, определенный пользователем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_SAFEARRAY">
      <summary>Показывает SAFEARRAY. Не допустимо для значений типа VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORAGE">
      <summary>Показывает, что далее следует имя хранилища.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORED_OBJECT">
      <summary>Показывает, что хранилище содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAM">
      <summary>Показывает, что далее следует имя потока.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAMED_OBJECT">
      <summary>Показывает, что поток содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI1">
      <summary>Показывает <see langword="byte" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI2">
      <summary>Показывает <see langword="unsigned" /><see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI4">
      <summary>Показывает <see langword="unsigned" /><see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI8">
      <summary>Показывает 64-разрядное целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UINT">
      <summary>Показывает целое число <see langword="unsigned" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN">
      <summary>Показывает указатель <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_USERDEFINED">
      <summary>Показывает тип, определенный пользователем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VARIANT">
      <summary>Показывает указатель <see langword="far" /> типа VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VECTOR">
      <summary>Показывает одномерный сосчитанный массив.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VOID">
      <summary>Показывает <see langword="void" /> в стиле языка C.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VariantWrapper">
      <summary>Маршалирует данные типа <see langword="VT_VARIANT | VT_BYREF" /> из управляемого кода в неуправляемый. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> для заданного параметра <see cref="T:System.Object" />.</summary>
      <param name="obj">Объект для маршалинга.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject">
      <summary>Возвращает объект, инкапсулированный с помощью объекта <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</summary>
      <returns>Объект, инкапсулированный с помощью объекта <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</returns>
    </member>
    <member name="T:System.Security.SecureString">
      <summary>Представляет текст, который должен оставаться конфиденциальным, например, путем его удаления из памяти компьютера, если он больше не нужен. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Security.SecureString.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этого экземпляра или снятии с него защиты.</exception>
      <exception cref="T:System.NotSupportedException">Эта операция не поддерживается этой платформой.</exception>
    </member>
    <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" /> из подмассива объектов <see cref="T:System.Char" />.
Этот конструктор несовместим с CLS. CLS-совместимая альтернатива — <see cref="M:System.Security.SecureString.#ctor" />.</summary>
      <param name="value">Указатель на массив объектов <see cref="T:System.Char" />.</param>
      <param name="length">Число элементов массива <paramref name="value" />, включаемых в новый экземпляр.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> меньше нуля или больше 65 536.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
      <exception cref="T:System.NotSupportedException">Эта операция не поддерживается этой платформой.</exception>
    </member>
    <member name="M:System.Security.SecureString.AppendChar(System.Char)">
      <summary>Добавляет знак в конец текущей защищенной строки.</summary>
      <param name="c">Знак, добавляемый к защищенной строке.</param>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.Clear">
      <summary>Удаляет значение текущей защищенной строки.</summary>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException">Данная защищенная строка доступна только для чтения.</exception>
    </member>
    <member name="M:System.Security.SecureString.Copy">
      <summary>Создает копию текущей защищенной строки.</summary>
      <returns>Копия этой защищенной строки.</returns>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Security.SecureString" />.</summary>
    </member>
    <member name="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
      <summary>Вставляет знак в заданную индексом позицию защищенной строки.</summary>
      <param name="index">Индекс позиции вставки параметра <paramref name="c" />.</param>
      <param name="c">Вставляемый знак.</param>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> менее нуля или более длины защищенной строки.

или -
При выполнении этой операции длина защищенной строки превысит 65 536 символов.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.IsReadOnly">
      <summary>Указывает, что защищенная строка доступна только для чтения.</summary>
      <returns>Значение <see langword="true" />, если защищенная строка доступна только для чтения; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
    </member>
    <member name="P:System.Security.SecureString.Length">
      <summary>Возвращает количество символов в текущей защищенной строке.</summary>
      <returns>Количество объектов <see cref="T:System.Char" /> в этой защищенной строке.</returns>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
    </member>
    <member name="M:System.Security.SecureString.MakeReadOnly">
      <summary>Делает текстовое значение этой защищенной строки доступным только для чтения.</summary>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
    </member>
    <member name="M:System.Security.SecureString.RemoveAt(System.Int32)">
      <summary>Удаляет из защищенной строки знак, расположенный по указанному индексу.</summary>
      <param name="index">Индекс знака в защищенной строке.</param>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
      <summary>Заменяет расположенный по указанному индексу знак другим знаком.</summary>
      <param name="index">Индекс имеющегося знака в защищенной строке.</param>
      <param name="c">Знак, заменяющий имеющийся знак.</param>
      <exception cref="T:System.ObjectDisposedException">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="T:System.Security.SecureStringMarshal">
      <summary>Предоставляет коллекцию методов для выделения неуправляемой памяти и копирования блоков неуправляемой памяти.</summary>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary>Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память.</summary>
      <param name="s">Управляемый объект, подлежащий копированию.</param>
      <returns>Адрес в неуправляемой памяти, куда был скопирован параметр <paramref name="s" />, или значение 0, если параметр <paramref name="s" /> представляет собой объект <see cref="T:System.Security.SecureString" />, длина которого равна 0.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти.</exception>
    </member>
  </members>
</doc>