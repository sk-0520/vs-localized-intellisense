<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.InteropServices</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <summary vsli:raw="The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.">Исключение, которое выбрасывается, когда единица данных считывается или записывается по адресу, не кратному размеру данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />.</summary>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message.">Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Объект <see cref="T:System.String" />, описывающий ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt; class using the specified error message and underlying exception.">Инициализирует новый экземпляр класса <see cref="T:System.DataMisalignedException" />, используя указанные сообщение об ошибке и исходное исключение.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that describes the error. The content of &lt;paramref name=&quot;message&quot; /&gt; is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Объект <see cref="T:System.String" />, описывающий ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current &lt;see cref=&quot;T:System.DataMisalignedException&quot; /&gt;. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, являющееся причиной текущего исключения <see cref="T:System.DataMisalignedException" />,. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.DllNotFoundException">
      <summary vsli:raw="The exception that is thrown when a DLL specified in a DLL import cannot be found.">Исключение, которое выбрасывается в случае невозможности найти библиотеку DLL, указанную при импорте DLL.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with default properties.">Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message.">Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> с указанным сообщением об ошибке.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.DllNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.DllNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.DllNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.IO.UnmanagedMemoryAccessor">
      <summary vsli:raw="Provides random access to unmanaged blocks of memory from managed code.">Предоставляет произвольный доступ к неуправляемым блокам памяти из управляемого кода.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, and capacity.">Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" /> с указанными буфером, смещением и емкостью.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Буфер, который должен содержать метод доступа.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Размер выделяемой памяти (в байтах).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; class with a specified buffer, offset, capacity, and access right.">Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryAccessor" /> с указанными буфером, смещением, емкостью и правами доступа.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Буфер, который должен содержать метод доступа.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Размер выделяемой памяти (в байтах).</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Тип разрешенного доступа к памяти. Значение по умолчанию — <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.

или -
<paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanRead">
      <summary vsli:raw="Determines whether the accessor is readable.">Определяет, доступен ли метод доступа для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is readable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод доступа доступен для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.CanWrite">
      <summary vsli:raw="Determines whether the accessory is writable.">Определяет, доступен ли метод доступа для записи.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is writable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод доступа доступен для записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.Capacity">
      <summary vsli:raw="Gets the capacity of the accessor.">Получает емкость метода доступа.</summary>
      <returns vsli:raw="The capacity of the accessor.">Емкость метода доступа.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt;.">Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryAccessor" />.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.UnmanagedMemoryAccessor&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryAccessor" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary vsli:raw="Sets the initial values for the accessor.">Задает начальные значения для метода доступа.</summary>
      <param name="buffer" vsli:raw="The buffer to contain the accessor.">Буфер, который должен содержать метод доступа.</param>
      <param name="offset" vsli:raw="The byte at which to start the accessor.">Байт, с которого должен начинаться метод доступа.</param>
      <param name="capacity" vsli:raw="The size, in bytes, of memory to allocate.">Размер выделяемой памяти (в байтах).</param>
      <param name="access" vsli:raw="The type of access allowed to the memory. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Тип разрешенного доступа к памяти. Значение по умолчанию — <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; is greater than &lt;paramref name=&quot;buffer&quot; /&gt;.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> больше значения <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">Значение параметра <paramref name="offset" /> или <paramref name="capacity" /> меньше нуля.

или -
<paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;capacity&quot; /&gt; would wrap around the high end of the address space.">Сумма <paramref name="offset" /> и <paramref name="capacity" /> выйдет за верхний предел адресного пространства.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryAccessor.IsOpen">
      <summary vsli:raw="Determines whether the accessor is currently open by a process.">Определяет, открыт ли метод доступа процессом в данный момент.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the accessor is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод доступа открыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)">
      <summary vsli:raw="Reads a structure of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into a provided reference.">Считывает из метода доступа структуру типа <paramref name="T" /> и передает ее по указанной ссылке.</summary>
      <param name="position" vsli:raw="The position in the accessor at which to begin reading.">Позиция в методе доступа, с которой начинается чтение.</param>
      <param name="structure" vsli:raw="The structure to contain the read data.">Структура, которая будет содержать считываемые данные.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read in a structure of type &lt;paramref name=&quot;T&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;T&quot; /&gt; is a value type that contains one or more reference types.">Не хватает байтов после <paramref name="position" /> для чтения в структуре типа <paramref name="T" />.

или -
<see langword="T" /> является типом значений, содержащим один или несколько ссылочных типов.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads structures of type &lt;paramref name=&quot;T&quot; /&gt; from the accessor into an array of type &lt;paramref name=&quot;T&quot; /&gt;.">Считывает из метода доступа структуры типа <paramref name="T" /> и передает их в массив типа <paramref name="T" />.</summary>
      <param name="position" vsli:raw="The number of bytes in the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <param name="array" vsli:raw="The array to contain the structures read from the accessor.">Массив, который будет содержать считываемые из метода доступа структуры.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; in which to place the first copied structure.">Индекс в массиве <paramref name="array" />, по которому будет помещена первая скопированная структура.</param>
      <param name="count" vsli:raw="The number of structures of type &lt;c&gt;T&lt;/c&gt; to read from the accessor.">Число структур типа <c>T</c>, которое необходимо считать из метода доступа.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Тип структуры.</typeparam>
      <returns vsli:raw="The number of structures read into &lt;paramref name=&quot;array&quot; /&gt;. This value can be less than &lt;paramref name=&quot;count&quot; /&gt; if there are fewer structures available, or zero if the end of the accessor is reached.">Число структур, считанных в массив <paramref name="array" />. Это число может быть меньше значения <paramref name="count" />, если доступно меньшее число структур, или равняться нулю, если достигнут конец метода доступа.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to contain &lt;paramref name=&quot;count&quot; /&gt; of structures (starting from &lt;paramref name=&quot;position&quot; /&gt;).">
        <paramref name="array" /> недостаточно велик для размещения <paramref name="count" /> структур (начиная с <paramref name="position" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)">
      <summary vsli:raw="Reads a Boolean value from the accessor.">Считывает из метода доступа логическое значение.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> или <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)">
      <summary vsli:raw="Reads a byte value from the accessor.">Считывает из метода доступа значение байта.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)">
      <summary vsli:raw="Reads a character from the accessor.">Считывает из метода доступа символ.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)">
      <summary vsli:raw="Reads a decimal value from the accessor.">Считывает из метода доступа десятичное число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal to read is invalid.">Не хватает байтов после <paramref name="position" /> для чтения значения.

или -
Считываемое десятичное число недопустимо.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)">
      <summary vsli:raw="Reads a double-precision floating-point value from the accessor.">Считывает из метода доступа значение с плавающей запятой двойной точности.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)">
      <summary vsli:raw="Reads a 16-bit integer from the accessor.">Считывает из метода доступа 16-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)">
      <summary vsli:raw="Reads a 32-bit integer from the accessor.">Считывает из метода доступа 32-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)">
      <summary vsli:raw="Reads a 64-bit integer from the accessor.">Считывает из метода доступа 64-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)">
      <summary vsli:raw="Reads an 8-bit signed integer from the accessor.">Считывает из метода доступа 8-разрядное целое число со знаком.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)">
      <summary vsli:raw="Reads a single-precision floating-point value from the accessor.">Считывает из метода доступа значение с плавающей запятой одиночной точности.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)">
      <summary vsli:raw="Reads an unsigned 16-bit integer from the accessor.">Считывает из метода доступа 16-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)">
      <summary vsli:raw="Reads an unsigned 32-bit integer from the accessor.">Считывает из метода доступа 32-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)">
      <summary vsli:raw="Reads an unsigned 64-bit integer from the accessor.">Считывает из метода доступа 64-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin reading.">Число байтов в методе доступа, с которого должно начаться чтение.</param>
      <returns vsli:raw="The value that was read.">Прочитанное значение.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to read a value.">Не хватает байтов после <paramref name="position" /> для чтения значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support reading.">Метод доступа не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)">
      <summary vsli:raw="Writes a Boolean value into the accessor.">Записывает в метод доступа логическое значение.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)">
      <summary vsli:raw="Writes a byte value into the accessor.">Записывает в метод доступа значение байта.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)">
      <summary vsli:raw="Writes a character into the accessor.">Записывает в метод доступа символ.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)">
      <summary vsli:raw="Writes a decimal value into the accessor.">Записывает в метод доступа десятичное число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The decimal is invalid.">Не хватает байтов после <paramref name="position" /> для записи значения.

или -
Десятичное число недопустимо.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value into the accessor.">Записывает в метод доступа значение типа <see langword="Double" />.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer into the accessor.">Записывает в метод доступа 16-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)">
      <summary vsli:raw="Writes a 32-bit integer into the accessor.">Записывает в метод доступа 32-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)">
      <summary vsli:raw="Writes a 64-bit integer into the accessor.">Записывает в метод доступа 64-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after position to write a value.">Не хватает байтов после позиции для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)">
      <summary vsli:raw="Writes an 8-bit integer into the accessor.">Записывает в метод доступа 8-разрядное целое число.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Single&quot; /&gt; into the accessor.">Записывает в метод доступа значение типа <see langword="Single" />.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)">
      <summary vsli:raw="Writes an unsigned 16-bit integer into the accessor.">Записывает в метод доступа 16-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)">
      <summary vsli:raw="Writes an unsigned 32-bit integer into the accessor.">Записывает в метод доступа 32-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)">
      <summary vsli:raw="Writes an unsigned 64-bit integer into the accessor.">Записывает в метод доступа 64-разрядное целое число без знака.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes after &lt;paramref name=&quot;position&quot; /&gt; to write a value.">Не хватает байтов после <paramref name="position" /> для записи значения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)">
      <summary vsli:raw="Writes a structure into the accessor.">Записывает в метод доступа структуру.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="structure" vsli:raw="The structure to write.">Структура, которую требуется записать.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write a structure of type &lt;paramref name=&quot;T&quot; /&gt;.">Не хватает байтов в методе доступа после <paramref name="position" /> для записи структуры типа <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes structures from an array of type &lt;paramref name=&quot;T&quot; /&gt; into the accessor.">Записывает в метод доступа структуры из массива типа <paramref name="T" />.</summary>
      <param name="position" vsli:raw="The number of bytes into the accessor at which to begin writing.">Число байтов в методе доступа, с которого должна начаться запись.</param>
      <param name="array" vsli:raw="The array to write into the accessor.">Массив, из которого ведется запись в метод доступа.</param>
      <param name="offset" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; to start writing from.">Индекс в <paramref name="array" />, с которого требуется начать запись.</param>
      <param name="count" vsli:raw="The number of structures in &lt;paramref name=&quot;array&quot; /&gt; to write.">Число структур в массиве <paramref name="array" />, которые требуется записать.</param>
      <typeparam name="T" vsli:raw="The type of structure.">Тип структуры.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="There are not enough bytes in the accessor after &lt;paramref name=&quot;position&quot; /&gt; to write the number of structures specified by &lt;paramref name=&quot;count&quot; /&gt;.">Не хватает байтов в методе доступа после <paramref name="position" /> для записи числа структур, указанных <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;position&quot; /&gt; is less than zero or greater than the capacity of the accessor.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="position" /> меньше нуля или больше емкости метода доступа.

или -
Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The accessor does not support writing.">Метод доступа не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The accessor has been disposed.">Объект доступа был освобожден.</exception>
    </member>
    <member name="T:System.IO.UnmanagedMemoryStream">
      <summary>Предоставляет доступ к неуправляемым блокам памяти из управляемого кода.</summary>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />.</summary>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя заданное расположение и объем памяти.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> достаточно велико, чтобы привести к переполнению.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя указанные значения расположения, объема памяти, общего объема памяти и доступа к файлам.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <param name="capacity">Общий объем памяти, назначенный для потока.</param>
      <param name="access">Одно из значений перечисления <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="capacity" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> больше, чем значение <paramref name="capacity" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанным смещением и длиной.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанными смещением, длиной и правами доступа к файлам.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
      <param name="access">Режим доступа к файлам для потока неуправляемой памяти.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanRead">
      <summary>Получает значение, определяющее, поддерживает ли поток операции чтения.</summary>
      <returns>Значение <see langword="false" />, если объект был создан конструктором с использованием параметра <paramref name="access" />, не включающего чтение потока, и если поток закрыт; в противном случае — значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanSeek">
      <summary>Возвращает значение, определяющее, поддерживает ли поток операции поиска.</summary>
      <returns>Значение равно <see langword="false" />, если поток закрыт, в противном случае значение равно <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.CanWrite">
      <summary>Возвращает значение, определяющее, поддерживает ли поток операции записи.</summary>
      <returns>Значение <see langword="false" />, если объект был создан конструктором со значением параметра <paramref name="access" />, которое поддерживает запись, или если объект был создан конструктором без параметров, или если поток закрыт; в противном случае — значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Capacity">
      <summary>Возвращает длину потока (размер) или общий объем памяти, назначенный потоку (емкость).</summary>
      <returns>Размер или емкость потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.UnmanagedMemoryStream" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Flush">
      <summary>Переопределяет метод <see cref="M:System.IO.Stream.Flush" /> так, что никакие действия не выполняются.</summary>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Переопределяет метод <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> так, что операция отменяется, если это указано, но никакие другие действия не выполняются.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" />, используя указатель на неуправляемое расположение в памяти.</summary>
      <param name="pointer">Указатель на расположение неуправляемой памяти.</param>
      <param name="length">Используемый объем памяти.</param>
      <param name="capacity">Общий объем памяти, назначенный для потока.</param>
      <param name="access">Одно из значений перечисления <see cref="T:System.IO.FileAccess" />.</param>
      <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимого разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="pointer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.

или -
Значение параметра <paramref name="capacity" /> меньше нуля.

или -
Значение параметра <paramref name="length" /> достаточно велико, чтобы привести к переполнению.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.UnmanagedMemoryStream" /> в безопасном буфере с указанными смещением, длиной и правами доступа к файлам.</summary>
      <param name="buffer">Буфер, который должен содержать поток неуправляемой памяти.</param>
      <param name="offset">Позиция байта в буфере, с которой должен начинаться поток неуправляемой памяти.</param>
      <param name="length">Длина потока неуправляемой памяти.</param>
      <param name="access">Режим доступа к файлам для потока неуправляемой памяти.</param>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Length">
      <summary>Возвращает длину данных в потоке.</summary>
      <returns>Длина данных в потоке.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.Position">
      <summary>Получает или задает текущую позицию в потоке.</summary>
      <returns>Текущая позиция в потоке.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Для позиции задано значение меньше нуля или значение позиции больше <see cref="F:System.Int32.MaxValue" />, или добавление к текущему указателю привело к переполнению.</exception>
    </member>
    <member name="P:System.IO.UnmanagedMemoryStream.PositionPointer">
      <summary>Получает или задает указатель байтов для потока, используя текущее положение в потоке.</summary>
      <returns>Указатель байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение текущей позиции превышает емкость потока.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указываемая позиция не является допустимой в текущем потоке.</exception>
      <exception cref="T:System.IO.IOException">Для указателя задается значение меньше, чем значение начальной позиции потока.</exception>
      <exception cref="T:System.NotSupportedException">Поток был инициализирован для использования с <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. Свойство <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> допустимо только для потоков, которые инициализируются с указателем <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает указанное число байтов в указанный массив.</summary>
      <param name="buffer">Когда этот метод возвращает управление, он содержит указанный массив байтов, в котором значения между <paramref name="offset" /> и (<paramref name="offset" /> + <paramref name="count" /> - 1) заменены байтами, считанными из текущего источника. Этот параметр передается неинициализированным.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается сохранение данных, считанных из текущего потока.</param>
      <param name="count">Максимальное количество байтов, которое должно быть считано из текущего потока.</param>
      <returns>Общее количество байтов, считанных в буфер. Это число может быть меньше количества запрошенных байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает чтение.

или -
Свойству <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> задано значение <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> принимает значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше нуля.

или -
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Длина массива буфера без учета параметра <paramref name="offset" /> меньше значения параметра <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})">
      <summary>Считывает все байты этого неуправляемого потока памяти в указанный диапазон байтов.</summary>
      <param name="destination">При возврате из этого метода данный диапазон содержит все байты из неуправляемого потока памяти.</param>
      <returns>Общее количество байтов, считанных в место назначения.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Считывает в асинхронном режиме указанное число байтов в указанный массив.</summary>
      <param name="buffer">Буфер, в который записываются данные.</param>
      <param name="offset">Смещение байтов в <paramref name="buffer" />, с которого начинается запись данных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно считывает байты неуправляемого потока памяти в область памяти.</summary>
      <param name="buffer">По завершении асинхронного метода эта область памяти содержит все байты, считанные из неуправляемого потока памяти.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, которая представляет асинхронную операцию чтения, и переносит общее число считанных байтов в буфер.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.ReadByte">
      <summary>Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.</summary>
      <returns>Байт без знака, приведенный к объекту <see cref="T:System.Int32" />, или значение -1, если достигнут конец потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает чтение.

или -

Текущая позиция – в конце потока.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Устанавливает текущую позицию текущего потока на заданное значение.</summary>
      <param name="offset">Указатель относительно <c>origin</c>, от которого начинается поиск.</param>
      <param name="loc">Описывает начальную, конечную или текущую позицию как опорную точку для <c>origin</c>, используя значение типа <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Новая позиция в потоке.</returns>
      <exception cref="T:System.IO.IOException">Попытка поиска была выполнена до начала потока.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> больше максимального значения потока.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="loc" /> недопустим.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)">
      <summary>Присваивает длине потока указанное значение.</summary>
      <param name="value">Длина потока.</param>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение <paramref name="value" /> превышает значение емкости потока.

или -
Указанный <paramref name="value" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает в текущий поток блок байтов, используя данные из буфера.</summary>
      <param name="buffer">Массив байтов, из которого необходимо скопировать байты в текущий поток.</param>
      <param name="offset">Смещение в буфере, с которого необходимо начать копирование байтов в текущий поток.</param>
      <param name="count">Число байтов для записи в текущий поток.</param>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.

или -
Значение параметра <paramref name="count" /> больше значения емкости потока.

или -
Позиция – в конце емкости потока.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение одного из указанных параметров меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="offset" /> без учета длины параметра <paramref name="buffer" /> меньше значения параметра <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Записывает блок байтов в текущий неуправляемый поток памяти, используя данные из указанного диапазона байтов.</summary>
      <param name="source">Диапазон байтов, из которого копируются байты в текущий неуправляемый поток памяти.</param>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается копирование байтов в поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает диапазон байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)">
      <summary>Запись байта в текущую позицию в потоке файла.</summary>
      <param name="value">Значение в байтах, записанное в поток.</param>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Основная память не поддерживает запись.

или -
Предпринята попытка записи в поток, и значение свойства <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> равно <see langword="false" />.

или -
Текущая позиция – в конце емкости потока.</exception>
      <exception cref="T:System.IO.IOException">Предоставленное значение <paramref name="value" /> приводит к превышению максимальной емкости потока.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.IDispatchConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Указывает, что значение по умолчанию для параметра или поля с атрибутами является экземпляром <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />, где свойство <see cref="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject" /> имеет значение <see langword="null" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IDispatchConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IDispatchConstantAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IDispatchConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IDispatchConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute.">Получает константу <see langword="IDispatch" />, хранящуюся в данном атрибуте.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IDispatch&quot; /&gt; constant value.">Константа <see langword="IDispatch" />, хранящаяся в данном атрибуте. Допустимым значением константы <see langword="null" /> является только <see langword="IDispatch" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IUnknownConstantAttribute">
      <summary vsli:raw="Indicates that the default value for the attributed field or parameter is an instance of &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt;, where the &lt;see cref=&quot;P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;. This class cannot be inherited.">Указывает, что значение по умолчанию для параметра или поля с атрибутами является экземпляром <see cref="T:System.Runtime.InteropServices.UnknownWrapper" />, где свойство <see cref="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject" /> имеет значение <see langword="null" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IUnknownConstantAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.CompilerServices.IUnknownConstantAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IUnknownConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.IUnknownConstantAttribute.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute.">Получает константу <see langword="IUnknown" />, хранящуюся в данном атрибуте.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; constant stored in this attribute. Only &lt;see langword=&quot;null&quot; /&gt; is allowed for an &lt;see langword=&quot;IUnknown&quot; /&gt; constant value.">Константа <see langword="IUnknown" />, хранящаяся в данном атрибуте. Допустимым значением константы <see langword="null" /> является только <see langword="IUnknown" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <summary vsli:raw="Allows an unmanaged method to call a managed method.">Позволяет неуправляемому методу вызвать управляемый метод.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ArrayWithOffset">
      <summary vsli:raw="Encapsulates an array and an offset within the specified array.">Инкапсулирует массив и смещение в указанный массив.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="array" vsli:raw="A managed array.">Управляемый массив.</param>
      <param name="offset" vsli:raw="The offset in bytes, of the element to be passed through platform invoke.">Смещение элемента в байтах, передаваемое с помощью вызова неуправляемого кода.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than 2 gigabytes (GB).">Массив больше 2 гигабайт (ГБ).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object matches the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object.">Показывает, соответствует ли указанный объект текущему объекту <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="obj" vsli:raw="Object to compare with this instance.">Объект, сравниваемый с этим экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект соответствует этому массиву <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance.">Показывает, соответствует ли указанный объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> текущему экземпляру.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with this instance.">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с этим экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object matches the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> соответствует текущему экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetArray">
      <summary vsli:raw="Returns the managed array referenced by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt;.">Возвращает управляемый массив, на который ссылается этот массив <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns vsli:raw="The managed array this instance references.">Управляемый массив, на который ссылается этот экземпляр.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode">
      <summary vsli:raw="Returns a hash code for this value type.">Возвращает хэш-код для этого типа значения.</summary>
      <returns vsli:raw="The hash code for this instance.">Хэш-код данного экземпляра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset">
      <summary vsli:raw="Returns the offset provided when this &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; was constructed.">Возвращает смещение, предоставленное при создании этого массива <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <returns vsli:raw="The offset for this instance.">Смещение для этого экземпляра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; objects no not have the same value.">Определяет, равны ли значения двух указанных объектов <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;b&quot; /&gt; parameter.">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="b" />.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object to compare with the &lt;paramref name=&quot;a&quot; /&gt; parameter.">Объект <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />, сравниваемый с параметром <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;a&quot; /&gt; is not the same as the value of &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение <paramref name="a" /> не совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.AutomationProxyAttribute">
      <summary vsli:raw="Specifies whether the type should be marshaled using the Automation marshaler or a custom proxy and stub.">Указывает, будет ли выполняться маршалинг типа с использованием маршалера автоматизации или настраиваемого прокси-сервера и заглушки.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.AutomationProxyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.AutomationProxyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.AutomationProxyAttribute" />.</summary>
      <param name="val" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">Значение <see langword="true" />, если маршалинг класса должна выполняться с помощью автоматического модуля маршалинга, и значение. <see langword="false" />, если нужно использовать модуль маршалинга заглушки прокси-сервера.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.AutomationProxyAttribute.Value">
      <summary vsli:raw="Gets a value indicating the type of marshaler to use.">Возвращает значение, показывающее тип используемого модуля маршалинга.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class should be marshaled using the Automation Marshaler; &lt;see langword=&quot;false&quot; /&gt; if a proxy stub marshaler should be used.">Значение <see langword="true" />, если маршалинг класса должна выполняться с помощью автоматического модуля маршалинга, и значение. <see langword="false" />, если нужно использовать модуль маршалинга заглушки прокси-сервера.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.BestFitMappingAttribute">
      <summary vsli:raw="Controls whether Unicode characters are converted to the closest matching ANSI characters.">Определяет необходимость преобразования символов Юникода в наиболее подходящие символы ANSI.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BestFitMappingAttribute&quot; /&gt; class set to the value of the &lt;see cref=&quot;P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping&quot; /&gt; property.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> и присваивает ему значение свойства <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />.</summary>
      <param name="BestFitMapping" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" /> показывает, что режим наилучшего сопоставления включен; в противном случае используется значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping">
      <summary vsli:raw="Gets the best-fit mapping behavior when converting Unicode characters to ANSI characters.">Возвращает текущие настройки наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if best-fit mapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если наилучшее сопоставление включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI '?' character.">Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.BStrWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_BSTR&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Маршалирует данные типа <see langword="VT_BSTR" /> из управляемого кода в неуправляемый. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; object.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> с указанным объектом <see cref="T:System.Object" />.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Объект, заключаемый в оболочку и маршалируемый как <see langword="VT_BSTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.BStrWrapper" /> с указанным объектом <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to wrap and marshal as &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Объект, заключаемый в оболочку и маршалируемый как <see langword="VT_BSTR" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.BStrWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped &lt;see cref=&quot;T:System.String&quot; /&gt; object to marshal as type &lt;see langword=&quot;VT_BSTR&quot; /&gt;.">Возвращает инкапсулированный объект <see cref="T:System.String" /> для маршалинга в качестве типа <see langword="VT_BSTR" />.</summary>
      <returns vsli:raw="The object that is wrapped by &lt;see cref=&quot;T:System.Runtime.InteropServices.BStrWrapper&quot; /&gt;.">Объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.BStrWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CallingConvention">
      <summary vsli:raw="Specifies the calling convention required to call methods implemented in unmanaged code.">Определяет соглашение о вызове, используемое для вызова методов, реализованных в неуправляемом коде.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
      <summary vsli:raw="The caller cleans the stack. This enables calling functions with &lt;see langword=&quot;varargs&quot; /&gt;, which makes it appropriate to use for methods that accept a variable number of parameters, such as &lt;see langword=&quot;Printf&quot; /&gt;.">Вызывающий объект очищает стек. Это позволяет вызывать функции с <see langword="varargs" />, чтобы использовать их для методов, работающих с переменным числом параметров, таких как <see langword="Printf" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.FastCall">
      <summary vsli:raw="This calling convention is not supported.">Это соглашение о вызове не поддерживается.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.StdCall">
      <summary vsli:raw="The callee cleans the stack.">Вызываемый объект очищает стек. Это соглашение, используемое по умолчанию для вызова неуправляемых функций с вызовом неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
      <summary vsli:raw="The first parameter is the &lt;see langword=&quot;this&quot; /&gt; pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.">Первый параметр — это указатель <see langword="this" />, хранящийся в регистре ECX. Другие параметры помещаются в стек. Это соглашение о вызове используется для вызова методов в классах, экспортируемых из неуправляемой динамической библиотеки DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CallingConvention.Winapi">
      <summary vsli:raw="This member is not actually a calling convention, but instead uses the default platform calling convention.">Этот член фактически не является соглашением о вызове, а вместо этого используется стандартное соглашение о вызове платформы. Например, в Windows по умолчанию используется <see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" />, а в Windows CE .NET — <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceAttribute">
      <summary vsli:raw="Indicates the type of class interface to be generated for a class exposed to COM, if an interface is generated at all.">Указывает, какой тип интерфейса класса должен генерироваться для класса, предоставленного модели COM, если интерфейс создан.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration value.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> с заданным значением перечисления <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />.</summary>
      <param name="classInterfaceType" vsli:raw="Describes the type of interface that is generated for a class.">Описывает тип интерфейса, созданного для класса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; enumeration member.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />.</summary>
      <param name="classInterfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; values that describes the type of interface that is generated for a class.">Одно из значений <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, созданного для класса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">Возвращает значение <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, который должен быть создать для класса.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceType&quot; /&gt; value that describes which type of interface should be generated for the class.">Значение <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" />, описывающее тип интерфейса, который требуется создать для класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ClassInterfaceType">
      <summary vsli:raw="Identifies the type of class interface that is generated for a class.">Определяет тип интерфейса класса, созданного для класса.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
      <summary vsli:raw="&lt;para&gt;Indicates that the class only supports late binding for COM clients. A &lt;see langword=&quot;dispinterface&quot; /&gt; for the class is automatically exposed to COM clients on request. The type library produced by Tlbexp.exe (Type Library Exporter) does not contain type information for the &lt;see langword=&quot;dispinterface&quot; /&gt; in order to prevent clients from caching the DISPIDs of the interface. The &lt;see langword=&quot;dispinterface&quot; /&gt; does not exhibit the versioning problems described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt; because clients can only late-bind to the interface.&lt;/para&gt;&lt;para&gt;This is the default setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.&lt;/para&gt;">Указывает, что класс поддерживает только позднее связывание для клиентов COM. Интерфейс <see langword="dispinterface" /> класса автоматически предоставляется клиентам COM по запросу. Библиотека типов, созданная программой Tlbexp.exe (программа экспорта библиотек типов), не содержит информации о типе для интерфейса <see langword="dispinterface" />, чтобы не допустить кэширование значений DISPID клиентами. Интерфейс <see langword="dispinterface" /> исключает возникновение проблем с версиями, рассмотренных в описании класса <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />, поскольку клиенты могут использовать только позднее связывание с интерфейсом.
Это параметр по умолчанию для <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
      <summary vsli:raw="Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using &lt;see langword=&quot;AutoDual&quot; /&gt; is strongly discouraged because of the versioning limitations described in &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;.">Указывает, что для класса автоматически создается сдвоенный интерфейс класса, который предоставляется COM. Сведения о типе создаются для класса интерфейса и публикуются в библиотеке типов. Использование <see langword="AutoDual" /> крайне нежелательно из-за ограничений, связанных с версиями и описанных для атрибута <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ClassInterfaceType.None">
      <summary vsli:raw="&lt;para&gt;Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the &lt;see langword=&quot;IDispatch&quot; /&gt; interface. This is the recommended setting for &lt;see cref=&quot;T:System.Runtime.InteropServices.ClassInterfaceAttribute&quot; /&gt;. Using &lt;see langword=&quot;ClassInterfaceType.None&quot; /&gt; is the only way to expose functionality through interfaces implemented explicitly by the class.&lt;/para&gt;&lt;para&gt;Tlbexp.exe (Type Library Exporter) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. In .NET Framework 2.0 and later versions, you can specify the default interface exposed to COM by using the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes &lt;see langword=&quot;_Object&quot; /&gt; as the default interface if neither the class nor its base classes implement interfaces.&lt;/para&gt;">Указывает, что для класса не создается интерфейса класса. Если интерфейсы не реализованы явно, класс может предоставить доступ только через позднее связывание при помощи интерфейса <see langword="IDispatch" />. Это значение является рекомендованным для <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />. Использование <see langword="ClassInterfaceType.None" /> — это единственный способ предоставления функциональных возможностей при помощи интерфейсов, явно реализованных классом.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CoClassAttribute">
      <summary vsli:raw="Specifies the class identifier of a coclass imported from a type library.">Указывает идентификатор компонентного класса, импортированного из библиотеки типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CoClassAttribute&quot; /&gt; with the class identifier of the original coclass.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CoClassAttribute" />, используя идентификатор исходного компонентного класса.</summary>
      <param name="coClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class identifier of the original coclass.">
        <see cref="T:System.Type" />, содержащий идентификатор исходного совместного класса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
      <summary vsli:raw="Gets the class identifier of the original coclass.">Возвращает идентификатор исходного совместного класса.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the class identifier of the original coclass.">
        <see cref="T:System.Type" />, содержащий идентификатор исходного совместного класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAliasNameAttribute">
      <summary vsli:raw="Indicates the COM alias for a parameter or field type.">Указывает псевдоним COM для типа параметра или поля.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAliasNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAliasNameAttribute&quot; /&gt; class with the alias for the attributed field or parameter.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComAliasNameAttribute" />, используя псевдоним для поля или параметра с атрибутом.</summary>
      <param name="alias" vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">Псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAliasNameAttribute.Value">
      <summary vsli:raw="Gets the alias for the field or parameter as found in the type library when it was imported.">Возвращает псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</summary>
      <returns vsli:raw="The alias for the field or parameter as found in the type library when it was imported.">Псевдоним поля или параметра, обнаруженный в библиотеке типов при импортировании.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComAwareEventInfo">
      <summary vsli:raw="Permits late-bound registration of an event handler.">Разрешает регистрацию позднего связывания для обработчика событий.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; class by using the specified type and a name of the event on the type.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />, используя указанные тип и имя события в типе.</summary>
      <param name="type" vsli:raw="The type of object.">Тип объекта.</param>
      <param name="eventName" vsli:raw="The name of an event on &lt;paramref name=&quot;type&quot; /&gt;.">Имя события в <paramref name="type" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Attaches an event handler to a COM object.">Присоединяет обработчик событий к объекту модели COM.</summary>
      <param name="target" vsli:raw="The target object that the event delegate should bind to.">Целевой объект, к которому должен привязываться делегат события.</param>
      <param name="handler" vsli:raw="The event delegate.">Делегат события.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
      <summary vsli:raw="Gets the attributes for this event.">Получает атрибуты этого события.</summary>
      <returns vsli:raw="The read-only attributes for this event.">Атрибуты этого события, доступные только для чтения.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
      <summary vsli:raw="Gets the class that declares this member.">Получает класс, объявляющий этот член.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object for the class that declares this member.">Объект <see cref="T:System.Type" /> для класса, объявляющего данный член.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
      <summary vsli:raw="Gets the method that was used to add an event handler delegate to the event source.">Получает метод, использованный для добавления делегата обработчика событий в источник событий.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to add an event handler delegate to the event source.">Метод, использованный для добавления делегата обработчика событий в источник событий.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.">При переопределении в производном классе получает массив всех настраиваемых атрибутов, применяемых к этому члену.</summary>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.">Массив, содержащий все настраиваемые атрибуты, или массив, не содержащий элементов, если атрибуты не определены.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context.">Этот элемент загружается в контекст, предназначенный только для отражения. См. Практическое руководство. Загрузка сборок в контекст, предназначенный только для отражения.</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Не удалось загрузить тип настраиваемого атрибута.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.">При переопределении в производном классе получает массив всех настраиваемых атрибутов указанного типа, применяемых к этому члену.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for. Only attributes that are assignable to this type can be returned.">Искомый тип атрибута. Возвращаются только атрибуты, которые могут быть присвоены этому типу.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns vsli:raw="An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.">Массив, содержащий все настраиваемые атрибуты указанного типа, или массив, не содержащий элементов, если атрибуты не определены.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;attributeType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="attributeType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This member belongs to a type that is loaded into the reflection-only context. See How to: Load Assemblies into the Reflection-Only Context">Этот элемент загружается в контекст, предназначенный только для отражения. См. практическое руководство по  загрузке сборок в контекст, предназначенный только для отражения</exception>
      <exception cref="T:System.TypeLoadException" vsli:raw="A custom attribute type cannot be loaded.">Не удалось загрузить тип настраиваемого атрибута.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects for the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" /> для текущего <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns vsli:raw="A generic list of &lt;see cref=&quot;T:System.Reflection.CustomAttributeData&quot; /&gt; objects representing data about the attributes that have been applied to the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt;.">Универсальный список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к текущему <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)">
      <summary vsli:raw="Returns the public or non-public methods that have been associated with an event in metadata.">Возвращает открытые или закрытые методы, которые были сопоставлены событию в метаданных.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для включения методов, не являющихся открытыми, в обратном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An array representing the methods that have been associated with the event in metadata. If there are no such methods, an empty array is returned.">Массив объектов, представляющих методы, которые были сопоставлены событию в метаданных. Если такие методы отсутствуют, возвращается пустой массив.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, returns the method that was called when the event was raised.">При переопределении в производном классе, возвращает метод, который вызывался при возникновении события.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="The object that was called when the event was raised.">Объект, вызванный при возникновении события.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, retrieves the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object for removing a method of the event.">При переопределении в производном классе получает объект <see cref="T:System.Reflection.MethodInfo" /> для удаления метода события.</summary>
      <param name="nonPublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return non-public methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы возвратить методы, не являющиеся открытыми, в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="The method that was used to remove an event handler delegate from the event source.">Метод, который использовался для удаления делегата обработчика событий из списка вызова источника событий.</returns>
      <exception cref="T:System.MethodAccessException" vsli:raw="&lt;paramref name=&quot;nonPublic&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.">Параметр <paramref name="nonPublic" /> имеет значение <see langword="true" />, а метод, используемый для добавления делегата обработчика событий, не является открытым, однако вызывающий оператор не обладает разрешением на отражение для методов, не являющихся открытыми.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
      <summary vsli:raw="Indicates whether one or more instances of the specified attribute are applied to this member.">Указывает, применяется ли к этому члену один или несколько экземпляров указанного атрибута.</summary>
      <param name="attributeType" vsli:raw="The attribute type to search for.">Искомый тип атрибута.</param>
      <param name="inherit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search this member's inheritance chain to find the attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для поиска атрибутов в цепочке наследования этого элемента. В противном случае — <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified attribute has been applied to this member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный атрибут применен к этому члену; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken">
      <summary vsli:raw="Gets the metadata token associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Получает токен метаданных, связанный с текущим объектом <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns vsli:raw="A 32-bit Integer that represents the metadata token.">32-разрядное целое число, представляющее маркер метаданных.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Module">
      <summary vsli:raw="Gets the module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Получает модуль, связанный с текущим объектом <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</summary>
      <returns vsli:raw="The module associated with the current &lt;see cref=&quot;T:System.Runtime.InteropServices.ComAwareEventInfo&quot; /&gt; object.">Модуль, связанный с текущим <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> объектом.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
      <summary vsli:raw="Gets the name of the current member.">Возвращает имя текущего члена.</summary>
      <returns vsli:raw="The name of this member.">Имя данного элемента.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
      <summary vsli:raw="Gets the class object that was used to initialize this instance.">Получает объект класса, который использовался для инициализации данного экземпляра.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that was used to initialize the current object.">Объект <see cref="T:System.Type" />, который использовался для инициализации текущего объекта.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Detaches an event handler from a COM object.">Отсоединяет обработчик событий от COM-объекта.</summary>
      <param name="target" vsli:raw="The target object that the event delegate is bound to.">Целевой объект, к которому привязан делегат события.</param>
      <param name="handler" vsli:raw="The event delegate.">Делегат события.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The event does not have a public &lt;see langword=&quot;remove&quot; /&gt; accessor.">Это событие не поддерживает открытый метод доступа <see langword="remove" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The handler that was passed in cannot be used.">Переданный обработчик нельзя использовать.</exception>
      <exception cref="T:System.Reflection.TargetException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; and the event is not static.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; is not declared on the target.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch &lt;see cref=&quot;T:System.Exception&quot; /&gt; instead.">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение <see cref="T:System.Exception" />.  
  

            
  
 Параметр <paramref name="target" /> имеет значение <see langword="null" />, и событие не является статическим.  
  
-или- 
Класс <see cref="T:System.Reflection.EventInfo" /> не объявлен для целевого объекта.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The caller does not have access permission to the member.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.MemberAccessException&quot; /&gt;, instead.">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.MemberAccessException" />.  
  

            
  
 Вызывающий объект не имеет разрешения на доступ к этому элементу.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute">
      <summary vsli:raw="Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.">Показывает клиенту COM, что все классы текущей версии сборки совместимы с классами в более ранней версии сборки.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComCompatibleVersionAttribute&quot; /&gt; class with the major version, minor version, build, and revision numbers of the assembly.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComCompatibleVersionAttribute" />, используя основной и дополнительный номера версий, номер построения и номер редакции сборки.</summary>
      <param name="major" vsli:raw="The major version number of the assembly.">Основной номер версии сборки.</param>
      <param name="minor" vsli:raw="The minor version number of the assembly.">Дополнительный номер версии сборки.</param>
      <param name="build" vsli:raw="The build number of the assembly.">Номер построения сборки.</param>
      <param name="revision" vsli:raw="The revision number of the assembly.">Номер редакции сборки.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber">
      <summary vsli:raw="Gets the build number of the assembly.">Получает номер построения сборки.</summary>
      <returns vsli:raw="The build number of the assembly.">Номер построения сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the assembly.">Получает основной номер версии сборки.</summary>
      <returns vsli:raw="The major version number of the assembly.">Основной номер версии сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the assembly.">Получает дополнительный номер версии сборки.</summary>
      <returns vsli:raw="The minor version number of the assembly.">Дополнительный номер версии сборки.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber">
      <summary vsli:raw="Gets the revision number of the assembly.">Получает номер редакции сборки.</summary>
      <returns vsli:raw="The revision number of the assembly.">Номер редакции сборки.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComConversionLossAttribute">
      <summary vsli:raw="Indicates that information was lost about a class or interface when it was imported from a type library to an assembly.">Показывает, что информация о классе или интерфейсе была потеряна при импортировании из библиотеки типов в сборку.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComConversionLossAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComConversionLossAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see langword="ComConversionLossAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <summary vsli:raw="Specifies a default interface to expose to COM. This class cannot be inherited.">Определяет интерфейс по умолчанию, предоставляемый COM. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; object as the default interface exposed to COM.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute" />, используя указанный объект <see cref="T:System.Type" /> в качестве интерфейса по умолчанию, предоставленного COM.</summary>
      <param name="defaultInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value indicating the default interface to expose to COM.">Значение <see cref="T:System.Type" />, показывающее интерфейс по умолчанию, предоставляемый для COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComDefaultInterfaceAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">Получает объект <see cref="T:System.Type" />, определяющий интерфейс по умолчанию, предоставляемый для COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies the default interface to expose to COM.">Объект <see cref="T:System.Type" />, определяющий интерфейс по умолчанию, предоставляемый для COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <summary vsli:raw="Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.">Определяет исходный интерфейс и класс, реализующий методы интерфейса событий, созданного при импорте компонентного класса из библиотеки типов COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComEventInterfaceAttribute&quot; /&gt; class with the source interface and event provider class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" />, используя интерфейс источника и класс поставщика событий.</summary>
      <param name="SourceInterface" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the original source interface from the type library. COM uses this interface to call back to the managed class.">
        <see cref="T:System.Type" />, содержащий исходный интерфейс источника из библиотеки типов. Этот интерфейс используется в COM для обратного вызова управляемого класса.</param>
      <param name="EventProvider" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">
        <see cref="T:System.Type" />, содержащий класс, реализующий методы интерфейса события.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider">
      <summary vsli:raw="Gets the class that implements the methods of the event interface.">Возвращает класс, реализующий методы интерфейса события.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the class that implements the methods of the event interface.">
        <see cref="T:System.Type" />, содержащий класс, реализующий методы интерфейса события.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface">
      <summary vsli:raw="Gets the original source interface from the type library.">Возвращает исходный интерфейс источника из библиотеки типов.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the source interface.">
        <see cref="T:System.Type" />, содержащий исходный интерфейс.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComEventsHelper">
      <summary vsli:raw="Provides methods that enable .NET delegates that handle events to be added and removed from COM objects.">Предоставляет методы, активирующие делегаты .NET Framework для обработки событий, которые нужно добавить или удалить из объектов COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the invocation list of events originating from a COM object.">Добавляет делегат в список вызова источника событий, поступающих из COM-объекта.</summary>
      <param name="rcw" vsli:raw="The COM object that triggers the events the caller would like to respond to.">COM-объект, инициирующий события, на которые вызывающему объекту требуется реагировать.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">Идентификатор исходного интерфейса, с помощью которого COM-объект инициирует события.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">Идентификатор диспетчеризации метода исходного интерфейса.</param>
      <param name="d" vsli:raw="The delegate to invoke when the COM event is fired.">Делегат, вызываемый при срабатывании события COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the invocation list of events originating from a COM object.">Удаляет делегат из списка вызова событий, поступающих от COM-объекта.</summary>
      <param name="rcw" vsli:raw="The COM object the delegate is attached to.">COM-объект, к которому прикреплен делегат.</param>
      <param name="iid" vsli:raw="The identifier of the source interface used by the COM object to trigger events.">Идентификатор исходного интерфейса, с помощью которого COM-объект инициирует события.</param>
      <param name="dispid" vsli:raw="The dispatch identifier of the method on the source interface.">Идентификатор диспетчеризации метода исходного интерфейса.</param>
      <param name="d" vsli:raw="The delegate to remove from the invocation list.">Делегат, удаляемый из списка вызова.</param>
      <returns vsli:raw="The delegate that was removed from the invocation list.">Делегат, удаленный из списка вызова.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.COMException">
      <summary vsli:raw="The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.">Исключение, которое выдается при возвращении неизвестного значения HRESULT после вызова метода COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that supplies the contextual information about the source or destination.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, предоставляющий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> с заданным сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, в котором указывается причина исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.COMException&quot; /&gt; class with a specified message and error code.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.COMException" />, используя заданное сообщение и код ошибки.</summary>
      <param name="message" vsli:raw="The message that indicates the reason the exception occurred.">Сообщение, указывающее причину возникновения исключения.</param>
      <param name="errorCode" vsli:raw="The error code (HRESULT) value associated with this exception.">Значение кода ошибки (HRESULT), связанное с этим исключением.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.COMException.ToString">
      <summary vsli:raw="Converts the contents of the exception to a string.">Преобразует содержимое исключения в строку.</summary>
      <returns vsli:raw="A string containing the &lt;see cref=&quot;P:System.Exception.HResult&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;, and &lt;see cref=&quot;P:System.Exception.StackTrace&quot; /&gt; properties of the exception.">Строка, содержащая свойства <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" /> и <see cref="P:System.Exception.StackTrace" /> исключения.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComImportAttribute">
      <summary vsli:raw="Indicates that the attributed type was previously defined in COM.">Указывает, что тип с атрибутом был ранее определен в COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComImportAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComInterfaceType">
      <summary vsli:raw="Identifies how to expose an interface to COM.">Определяет способ предоставления интерфейса модели COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual">
      <summary vsli:raw="Indicates that the interface is exposed to COM as a dual interface, which enables both early and late binding. &lt;see cref=&quot;F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual&quot; /&gt; is the default value.">Указывает, что интерфейс предоставляется модели COM в качестве сдвоенного интерфейса, который обеспечивает раннее и позднее связывание. По умолчанию устанавливается значение <see cref="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a dispinterface, which enables late binding only.">Указывает, что интерфейс предоставляется модели COM в качестве dispinterface, который обеспечивает только позднее связывание.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIInspectable">
      <summary vsli:raw="Indicates that an interface is exposed to COM as a Windows Runtime interface.">Указывает, что интерфейс предоставляется модели COM в качестве интерфейса Среда выполнения Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown">
      <summary vsli:raw="Indicates that an interface is exposed to COM as an interface that is derived from IUnknown, which enables only early binding.">Указывает, что интерфейс предоставляется модели COM в качестве интерфейса, производного от IUnknown, который обеспечивает только раннее связывание.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComMemberType">
      <summary vsli:raw="Describes the type of a COM member.">Описывает тип члена COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.Method">
      <summary vsli:raw="The member is a normal method.">Этот член является обычным методом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropGet">
      <summary vsli:raw="The member gets properties.">Член возвращает свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComMemberType.PropSet">
      <summary vsli:raw="The member sets properties.">Член задает свойства.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you register an assembly for use from COM; this enables the execution of user-written code during the registration process.">Задает метод, вызываемый при регистрации сборки для использования из COM. Это позволяет выполнять код, написанный пользователем, в процессе регистрации.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComRegisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <summary vsli:raw="Identifies a list of interfaces that are exposed as COM event sources for the attributed class.">Определяет список интерфейсов, предоставляемых в виде источников событий COM для класса с атрибутом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the name of the event source interface.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с именем исходного интерфейса событий.</summary>
      <param name="sourceInterfaces" vsli:raw="A null-delimited list of fully qualified event source interface names.">Список полных имен исходных интерфейсов событий, разделенных нулями.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the type to use as a source interface.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типом, используемым в качестве исходного интерфейса.</summary>
      <param name="sourceInterface" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Инициализирует новый экземпляр класса <see langword="ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComSourceInterfacesAttribute&quot; /&gt; class with the types to use as source interfaces.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /> с типами, используемыми в качестве исходных интерфейсов.</summary>
      <param name="sourceInterface1" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the default source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса, используемого по умолчанию.</param>
      <param name="sourceInterface2" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface3" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
      <param name="sourceInterface4" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of a source interface.">Тип <see cref="T:System.Type" /> исходного интерфейса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
      <summary vsli:raw="Gets the fully qualified name of the event source interface.">Возвращает полное имя исходного интерфейса событий.</summary>
      <returns vsli:raw="The fully qualified name of the event source interface.">Возвращает полное имя интерфейса-источника событий.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary vsli:raw="Specifies the requested behavior when setting up an advise sink or a caching connection with an object.">Определяет требуемое поведение при настройке приемника уведомлений или подключения кэширования к объекту.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary vsli:raw="For data advisory connections, assures accessibility to data.">При использовании вспомогательных соединений с данными обеспечивает доступ к данным.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary vsli:raw="For data advisory connections (&lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;), this flag requests the data object not to send data when it calls &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">При использовании вспомогательных соединений с данными (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />) этот флаг требует, чтобы объект данных не отправлял данные, когда вызывается <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary vsli:raw="Requests that the object make only one change notification or cache update before deleting the connection.">Требует, чтобы объект создавал только одно уведомление об изменении или обновление кэша перед удалением соединения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary vsli:raw="Requests that the object not wait for the data or view to change before making an initial call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; (for data or view advisory connections) or updating the cache (for cache connections).">Требует, чтобы объект не ждал изменения данных или представления до выполнения начального вызова <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (для вспомогательных соединений с данными или представлениями) или обновления кэша (для соединений с кэшем).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary vsli:raw="This value is used by DLL object applications and object handlers that perform the drawing of their objects.">Это значение используется приложениями объектов DLL и дескрипторами объектов, которые выполняют рисунок своих объектов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary vsli:raw="Synonym for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN&quot; /&gt;, which is used more often.">Синоним для <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, который используется более часто.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary vsli:raw="For cache connections, this flag updates the cached representation only when the object containing the cache is saved.">Если используются соединения с кэшем, этот флаг обновляет кэшированное представление только при сохранении объекта, содержащего кэш.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <summary vsli:raw="Stores the parameters that are used during a moniker binding operation.">Сохраняет параметры, используемые в операции привязки монкера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct">
      <summary vsli:raw="Specifies the size, in bytes, of the &lt;see langword=&quot;BIND_OPTS&quot; /&gt; structure.">Задает размер структуры <see langword="BIND_OPTS" /> в байтах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline">
      <summary vsli:raw="Indicates the amount of time (clock time in milliseconds, as returned by the &lt;see langword=&quot;GetTickCount&quot; /&gt; function) that the caller specified to complete the binding operation.">Показывает время (значение в миллисекундах, возвращенное функцией <see langword="GetTickCount" />), заданное вызывающим объектом для завершения операции привязки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags">
      <summary vsli:raw="Controls aspects of moniker binding operations.">Управляет элементами операций привязки моникера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode">
      <summary vsli:raw="Represents flags that should be used when opening the file that contains the object identified by the moniker.">Представляет флаги, которые должны использоваться при открытии файла, содержащего объект, определенный моникером.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.BINDPTR">
      <summary vsli:raw="Contains a pointer to a bound-to &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure, &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure, or an &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Содержит указатель на связанную структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, структуру <see cref="T:System.Runtime.InteropServices.VARDESC" /> или интерфейс <see langword="ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure.">Представляет указатель на структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp">
      <summary vsli:raw="Represents a pointer to an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeComp&quot; /&gt; interface.">Представляет указатель на интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeComp" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc">
      <summary vsli:raw="Represents a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.VARDESC&quot; /&gt; structure.">Представляет указатель на структуру <see cref="T:System.Runtime.InteropServices.VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CALLCONV">
      <summary vsli:raw="Identifies the calling convention used by a method described in a METHODDATA structure.">Определяет соглашение о вызовах, используемое методом, описанным в структуре METHODDATA.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL">
      <summary vsli:raw="Indicates that the C declaration (CDECL) calling convention is used for a method.">Указывает на использование для метода соглашения о вызове языка C (CDECL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.">Указывает на использование для метода соглашения о вызове языка Macintosh Pascal (MACPASCAL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX">
      <summary vsli:raw="Indicates the end of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.CALLCONV&quot; /&gt; enumeration.">Указывает на конец перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.CALLCONV" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.">Указывает на использование для метода соглашения о вызове Macintosh Programmers' Workbench (MPW) CDECL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL">
      <summary vsli:raw="Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.">Указывает на использование для метода соглашения о вызове Macintosh Programmers' Workbench (MPW) PASCAL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL">
      <summary vsli:raw="Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.">Указывает на использование для метода соглашения о вызове языка MSC Pascal (MSCPASCAL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL">
      <summary vsli:raw="Indicates that the Pascal calling convention is used for a method.">Указывает на использование для метода соглашения о вызове языка Pascal.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED">
      <summary vsli:raw="This value is reserved for future use.">Это значение зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL">
      <summary vsli:raw="Indicates that the standard calling convention (STDCALL) is used for a method.">Указывает на использование для метода стандартного соглашения о вызове (STDCALL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL">
      <summary vsli:raw="Indicates that the standard SYSCALL calling convention is used for a method.">Указывает на использование для метода стандартного соглашения о вызове SYSCALL.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <summary vsli:raw="Describes a connection that exists to a given connection point.">Описывает соединение к заданной точке подключения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie">
      <summary vsli:raw="Represents a connection token that is returned from a call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt;.">Представляет маркер соединения, возвращаемый из вызова <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk">
      <summary vsli:raw="Represents a pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on a connected advisory sink. The caller must call &lt;see langword=&quot;IUnknown::Release&quot; /&gt; on this pointer when the &lt;see langword=&quot;CONNECTDATA&quot; /&gt; structure is no longer needed.">Предоставляет указатель на интерфейс <see langword="IUnknown" /> подключенного вспомогательного приемника. Когда необходимость в структуре <see langword="CONNECTDATA" /> отпадет, вызывающий объект должен вызвать метод <see langword="IUnknown::Release" /> для этого указателя.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary vsli:raw="Specifies the direction of the data flow in the &lt;paramref name=&quot;dwDirection&quot; /&gt; parameter of the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; method. This determines the formats that the resulting enumerator can enumerate.">Задает направление потока данных в параметре <paramref name="dwDirection" /> метода <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />. Это определяет форматы, которые может перечислять результирующий перечислитель.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;.">Требует, чтобы <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> предоставлял перечислитель для форматов, которые могут быть заданы в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary vsli:raw="Requests that &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)&quot; /&gt; supply an enumerator for the formats that can be specified in &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Требует, чтобы <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> предоставлял перечислитель для форматов, которые могут быть заданы в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DESCKIND">
      <summary vsli:raw="Identifies the type description being bound to.">Определяет, к описанию какого типа выполняется привязка.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_FUNCDESC">
      <summary vsli:raw="Indicates that a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure was returned.">Показывает, что структура <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> была возвращена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
      <summary vsli:raw="Indicates that an &lt;see langword=&quot;IMPLICITAPPOBJ&quot; /&gt; was returned.">Показывает возвращение <see langword="IMPLICITAPPOBJ" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_MAX">
      <summary vsli:raw="Indicates an end-of-enumeration marker.">Показывает метку окончания перечисления.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_NONE">
      <summary vsli:raw="Indicates that no match was found.">Показывает отсутствие совпадений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_TYPECOMP">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;TYPECOMP&quot; /&gt; was returned.">Показывает возврат объекта <see langword="TYPECOMP" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DESCKIND.DESCKIND_VARDESC">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;VARDESC&quot; /&gt; was returned.">Показывает возврат объекта <see langword="VARDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <summary vsli:raw="Contains the arguments passed to a method or property by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Содержит аргументы, передаваемые методу или свойству <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cArgs">
      <summary vsli:raw="Represents the count of arguments.">Предоставляет число аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.cNamedArgs">
      <summary vsli:raw="Represents the count of named arguments.">Представляет число именованных аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgdispidNamedArgs">
      <summary vsli:raw="Represents the dispatch IDs of named arguments.">Представляет диспетчерские идентификаторы именованных аргументов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DISPPARAMS.rgvarg">
      <summary vsli:raw="Represents a reference to the array of arguments.">Представляет ссылку на массив аргументов.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary vsli:raw="Specifies the desired data or view aspect of the object when drawing or getting data.">Указывает, какой аспект данных или представления объекта требуется при рисовании или получении данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary vsli:raw="A representation of an object that lets that object be displayed as an embedded object inside a container. This value is typically specified for compound document objects. The presentation can be provided for the screen or printer.">Представление объекта, позволяющее отображать объект в виде внедренного объекта внутри контейнера. Это значение обычно задается для объектов составных документов. Представление может использоваться для экрана или принтера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary vsli:raw="A representation of an object on the screen as though it were printed to a printer using the Print command from the File menu. The described data may represent a sequence of pages.">Представление объекта на экране выглядит так же, как при печати на принтере с помощью команды Печать в меню Файл. Описываемые данные могут представлять последовательность страниц.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary vsli:raw="An iconic representation of an object.">Символическое представление объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary vsli:raw="A thumbnail representation of an object that lets that object be displayed in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color (recommended), device-independent bitmap potentially wrapped in a metafile.">Представление эскиза объекта, позволяющее отображать этот объект в средствах просмотра. Эскиз представляет собой аппаратно-независимый точечный рисунок, приблизительно 120 на 120 пикселей, 16 цветов (рекомендуется), возможно, помещенный в метафайл.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <summary vsli:raw="Contains the type description and process transfer information for a variable, function, or a function parameter.">Содержит описание типа и сведения о процессе передачи для переменной, функции или параметра функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.desc">
      <summary vsli:raw="Contains information about an element.">Содержит сведения об элементе.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION">
      <summary vsli:raw="Contains information about an element.">Содержит сведения об элементе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.idldesc">
      <summary vsli:raw="Contains information for remoting the element.">Содержит сведения для удаленного взаимодействия с элементом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.DESCUNION.paramdesc">
      <summary vsli:raw="Contains information about the parameter.">Содержит сведения о параметре.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ELEMDESC.tdesc">
      <summary vsli:raw="Identifies the type of the element.">Определяет тип элемента.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <summary vsli:raw="Describes the exceptions that occur during &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Описывает исключения, происходящие в процессе <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrDescription">
      <summary vsli:raw="Describes the error intended for the customer.">Описывает ошибку, предназначенную для заказчика.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrHelpFile">
      <summary vsli:raw="Contains the fully-qualified drive, path, and file name of a Help file that contains more information about the error.">Содержит полный путь (диск, путь и имя файла) к файлу справки, содержащему дополнительные сведения об ошибке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.bstrSource">
      <summary vsli:raw="Indicates the name of the source of the exception. Typically, this is an application name.">Показывает имя источника исключения. Обычно это имя приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.dwHelpContext">
      <summary vsli:raw="Indicates the Help context ID of the topic within the Help file.">Указывает идентификатор контекста справки для раздела справки в файле справки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pfnDeferredFillIn">
      <summary vsli:raw="Represents a pointer to a function that takes an &lt;see cref=&quot;T:System.Runtime.InteropServices.EXCEPINFO&quot; /&gt; structure as an argument and returns an HRESULT value. If deferred fill-in is not desired, this field is set to &lt;see langword=&quot;null&quot; /&gt;.">Представляет указатель на функцию, использующую в качестве аргумента структуру <see cref="T:System.Runtime.InteropServices.EXCEPINFO" /> и возвращающую значение HRESULT. Чтобы избежать задержки при заполнении, этому полю присваивается значение <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.pvReserved">
      <summary vsli:raw="This field is reserved; it must be set to &lt;see langword=&quot;null&quot; /&gt;.">Это поле зарезервировано, его значение должно быть равно <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.scode">
      <summary vsli:raw="A return value describing the error.">Возвращаемое значение, описывающее ошибку.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wCode">
      <summary vsli:raw="Represents an error code identifying the error.">Представляет код ошибки, определяющий ошибку.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.EXCEPINFO.wReserved">
      <summary vsli:raw="This field is reserved; it must be set to 0.">Это поле зарезервировано, его значение должно быть равно 0.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FILETIME">
      <summary vsli:raw="Represents the number of 100-nanosecond intervals since January 1, 1601. This structure is a 64-bit value.">Представляет количество 100-наносекундных интервалов с 1 января 1601 г. Эта структура является 64-разрядным значением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwHighDateTime">
      <summary vsli:raw="Specifies the high 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Задает старшие 32 бита структуры <see langword="FILETIME" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FILETIME.dwLowDateTime">
      <summary vsli:raw="Specifies the low 32 bits of the &lt;see langword=&quot;FILETIME&quot; /&gt;.">Задает младшие 32 бита структуры <see langword="FILETIME" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary vsli:raw="Represents a generalized Clipboard format.">Представляет обобщенный формат буфера обмена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary vsli:raw="Specifies the particular clipboard format of interest.">Задает определенный формат буфера обмена.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration constants that indicates how much detail should be contained in the rendering.">Задает одну из констант перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />, указывающую, сколько сведений должно содержаться в отрисовке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary vsli:raw="Specifies part of the aspect when the data must be split across page boundaries.">Задает часть аспекта, когда данные должны быть разделены по разным страницам.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary vsli:raw="Specifies a pointer to a &lt;see langword=&quot;DVTARGETDEVICE&quot; /&gt; structure containing information about the target device that the data is being composed for.">Задает указатель на структуру <see langword="DVTARGETDEVICE" />, содержащую сведения о целевом устройстве, для которого формируются данные.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary vsli:raw="Specifies one of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration constants, which indicates the type of storage medium used to transfer the object's data.">Задает одну из констант перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, которая указывает тип среды хранения, используемой для передачи данных объекта.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <summary vsli:raw="Defines a function description.">Содержит описание функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.callconv">
      <summary vsli:raw="Specifies the calling convention of a function.">Определяет для функции соглашение о вызове.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParams">
      <summary vsli:raw="Counts the total number of parameters.">Подсчитывает полное число параметров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cParamsOpt">
      <summary vsli:raw="Counts the optional parameters.">Подсчитывает число дополнительных параметров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.cScodes">
      <summary vsli:raw="Counts the permitted return values.">Подсчитывает число разрешенных возвращенных значений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.elemdescFunc">
      <summary vsli:raw="Contains the return type of the function.">Содержит возвращаемый функцией тип.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.funckind">
      <summary vsli:raw="Specifies whether the function is virtual, static, or dispatch-only.">Показывает, является функция виртуальной, статической или диспетчерской.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.invkind">
      <summary vsli:raw="Specifies the type of a property function.">Задает тип функции свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgelemdescParam">
      <summary vsli:raw="Indicates the array of &lt;see cref=&quot;F:System.Runtime.InteropServices.ELEMDESC&quot; /&gt;.">Показывает размер <see cref="F:System.Runtime.InteropServices.FUNCDESC.cParams" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.lprgscode">
      <summary vsli:raw="Stores the count of errors a function can return on a 16-bit system.">Хранит число ошибок, которое функция может возвратить в 16-разрядной системе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.memid">
      <summary vsli:raw="Identifies the function member ID.">Определяет идентификатор члена функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.oVft">
      <summary vsli:raw="Specifies the offset in the VTBL for &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL&quot; /&gt;.">Определяет смещение в VTBL для <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_VIRTUAL" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCDESC.wFuncFlags">
      <summary vsli:raw="Indicates the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; of a function.">Показывает флаги <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" /> функции.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a function.">Указывает константы, определяющие свойства функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FBINDABLE">
      <summary vsli:raw="The function that supports data binding.">Функция, поддерживающая привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
      <summary vsli:raw="The function that best represents the object. Only one function in a type can have this attribute.">Функция, предоставляющая объект наилучшим образом. Только одна функция в типе может содержать этот атрибут.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found, and is flagged as an accessor function for an element of the default collection, a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой член обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-члена. Разрешается для членов диспетчерских и обычных интерфейсов, но запрещен для модулей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE&quot; /&gt; must also be set.">Функция, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.FUNCFLAGS.FUNCFLAG_FBINDABLE" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FHIDDEN">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">Эту функцию не следует показывать пользователю, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="Mapped as individual bindable properties.">Отображаются как отдельные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">Это свойство отображается в обозревателе объектов и не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the call is allowed to set the property.">Если задано, любой вызов метод, задающего это свойство, сначала приводит к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />. Реализация <see langword="OnRequestEdit" /> определяет, разрешено ли вызову задавать данное свойство.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
      <summary vsli:raw="The function should not be accessible from macro languages. This flag is intended for system-level functions or functions that type browsers should not display.">Функция не должна быть доступной для макроязыков. Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FSOURCE">
      <summary vsli:raw="The function returns an object that is a source of events.">Функция возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">Член сведений о типе является членом по умолчанию для отображения в пользовательском интерфейсе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;. If an error occurs during the function, the caller can call &lt;see langword=&quot;GetLastError&quot; /&gt; to retrieve the error code.">Функция поддерживает <see langword="GetLastError" />. Если в процессе выполнения функции возникает ошибка, вызывающий объект может вызвать <see langword="GetLastError" />, чтобы извлечь код ошибки.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <summary vsli:raw="Defines how to access a function.">Определяет способ доступа к функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_DISPATCH">
      <summary vsli:raw="The function can be accessed only through &lt;see langword=&quot;IDispatch&quot; /&gt;.">Доступ к функции может быть получен только при помощи <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_NONVIRTUAL">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">Функция доступна по статическому (<see langword="static" />) адресу и принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_PUREVIRTUAL">
      <summary vsli:raw="The function is accessed through the virtual function table (VTBL), and takes an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">Функция доступна при помощи таблицы виртуальных функций (VTBL) и принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_STATIC">
      <summary vsli:raw="The function is accessed by &lt;see langword=&quot;static&quot; /&gt; address and does not take an implicit &lt;see langword=&quot;this&quot; /&gt; pointer.">Функция доступна по статическому (<see langword="static" />) адресу и не принимает неявный указатель <see langword="this" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FUNCKIND.FUNC_VIRTUAL">
      <summary vsli:raw="The function is accessed in the same way as &lt;see cref=&quot;F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL&quot; /&gt;, except the function has an implementation.">Функция доступна таким же образом, как и <see cref="F:System.Runtime.InteropServices.FUNCKIND.FUNC_PUREVIRTUAL" />, за исключением того, что для этой функции существует реализация.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;IAdviseSink&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IAdviseSink" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has changed from the running state to the loaded state.  This method is called by a server.">Уведомляет все зарегистрированные приемники уведомлений о том, что объект перешел из состояния выполнения в состояние загруженности.  Этот метод вызывается сервером.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Notifies all data objects currently registered advisory sinks that data in the object has changed.">Уведомляет все зарегистрированные в данный момент приемники уведомлений объектов данных, что объект изменился.</summary>
      <param name="format" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt;, passed by reference, which describes the format, target device, rendering, and storage information of the calling data object.">
        <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданный ссылкой, который описывает формат, целевое устройство, отрисовку и сведения о хранении для вызывающего объекта данных.</param>
      <param name="stgmedium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, which defines the storage medium (global memory, disk file, storage object, stream object, Graphics Device Interface (GDI) object, or undefined) and ownership of that medium for the calling data object.">
        <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданный ссылкой, который определяет среду хранения (глобальная память, файл на диске, объект хранилища, объект потока, объект интерфейса графических устройство (GDI) или неопределенная) и владение этой средой для вызывающего объекта данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been renamed. This method is called by a server.">Уведомляет все зарегистрированные приемники уведомлений, что объект был переименован. Этот метод вызывается сервером.</summary>
      <param name="moniker" vsli:raw="A pointer to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on the new full moniker of the object.">Указатель на интерфейс <see langword="IMoniker" /> на новом полном моникере объекта.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary vsli:raw="Notifies all registered advisory sinks that the object has been saved. This method is called by a server.">Уведомляет все зарегистрированные приемники уведомлений, что объект был сохранен. Этот метод вызывается сервером.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary vsli:raw="Notifies an object's registered advisory sinks that its view has changed. This method is called by a server.">Уведомляет зарегистрированные приемники уведомлений объекта, что его представление изменилось. Этот метод вызывается сервером.</summary>
      <param name="aspect" vsli:raw="The aspect, or view, of the object. Contains a value taken from the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DVASPECT&quot; /&gt; enumeration.">Аспект, или представление, объекта. Содержит значение, взятое из перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" />.</param>
      <param name="index" vsli:raw="The portion of the view that has changed. Currently, only -1 is valid.">Часть представления, которое изменилось. В настоящий момент действительно только значение -1.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IBindCtx">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IBindCtx" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Enumerates the strings that are the keys of the internally maintained table of contextual object parameters.">Перечисляет строки, являющиеся ключами таблицы внутреннего представления контекстных параметров объекта.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the object parameter enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечислитель параметров объекта. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Returns the current binding options stored in the current bind context.">Возвращает параметры текущей привязки, хранящиеся в контексте этой привязки.</summary>
      <param name="pbindopts" vsli:raw="A pointer to the structure to receive the binding options.">Указатель на структуру для получения параметров привязки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
      <summary vsli:raw="Looks up the given key in the internally maintained table of contextual object parameters and returns the corresponding object, if one exists.">Выполняет поиск заданного ключа таблицы внутреннего представления контекстных параметров объекта и возвращает соответствующий объект, если он существует.</summary>
      <param name="pszKey" vsli:raw="The name of the object to search for.">Имя объекта, который нужно найти.</param>
      <param name="ppunk" vsli:raw="When this method returns, contains the object interface pointer. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель интерфейса объекта. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
      <summary vsli:raw="Returns access to the Running Object Table (ROT) relevant to this binding process.">Возвращает доступ к таблице текущих объектов ROT, относящейся к этому процессу привязки.</summary>
      <param name="pprot" vsli:raw="When this method returns, contains a reference to the Running Object Table (ROT). This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на таблицу текущих объектов (ROT). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)">
      <summary vsli:raw="Registers the passed object as one of the objects that has been bound during a moniker operation and that should be released when the operation is complete.">Регистрирует переданный объект как один из объектов, привязка которых была выполнена во время операции моникера и которые необходимо освободить после завершения этой операции.</summary>
      <param name="punk" vsli:raw="The object to register for release.">Объект для регистрации с целью освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
      <summary vsli:raw="Registers the specified object pointer under the specified name in the internally maintained table of object pointers.">Регистрирует заданный указатель для объекта под указанным именем в таблице внутреннего представления указателей объектов.</summary>
      <param name="pszKey" vsli:raw="The name to register &lt;paramref name=&quot;punk&quot; /&gt; with.">Имя, используемое для регистрации <paramref name="punk" />.</param>
      <param name="punk" vsli:raw="The object to register.">Регистрируемый объект.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects">
      <summary vsli:raw="Releases all the objects currently registered with the bind context by using the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)&quot; /&gt; method.">Освобождает все объекты, зарегистрированные в текущий момент с контекстом привязки при помощи метода <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)">
      <summary vsli:raw="Removes the object from the set of registered objects that need to be released.">Удаляет все объекты из списка зарегистрированных объектов, нуждающихся в освобождении.</summary>
      <param name="punk" vsli:raw="The object to unregister for release.">Объект для удаления регистрации с целью освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
      <summary vsli:raw="Revokes the registration of the object currently found under the specified key in the internally maintained table of contextual object parameters, if that key is currently registered.">Отменяет регистрацию объекта, найденного в данный момент для заданного ключа во внутренней таблице контекстных параметров объекта, если такой ключ зарегистрирован.</summary>
      <param name="pszKey" vsli:raw="The key to unregister.">Ключ, регистрацию которого необходимо удалить.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the specified key was successfully removed from the table; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Значение <see langword="S_OK" /><see langword="HRESULT" />, если заданный ключ был успешно удален из таблицы; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
      <summary vsli:raw="Stores a block of parameters in the bind context. These parameters will apply to later &lt;see langword=&quot;UCOMIMoniker&quot; /&gt; operations that use this bind context.">Сохраняет блок параметров в контексте привязки. Эти параметры будут применены к последующим операциям <see langword="UCOMIMoniker" />, которые используют этот контекст привязки.</summary>
      <param name="pbindopts" vsli:raw="The structure containing the binding options to set.">Структура, содержащая задаваемые параметры привязки.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IConnectionPoint" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)">
      <summary vsli:raw="Establishes an advisory connection between the connection point and the caller's sink object.">Устанавливает вспомогательное соединение между точкой подключения и объектом приемника вызывающего оператора.</summary>
      <param name="pUnkSink" vsli:raw="A reference to the sink to receive calls for the outgoing interface managed by this connection point.">Ссылка на приемник для получения вызовов выходящего интерфейса, управляемого с использованием этой точки подключения.</param>
      <param name="pdwCookie" vsli:raw="When this method returns, contains the connection cookie. This parameter is passed uninitialized.">При возвращении данного метода содержит файл cookie соединения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates an enumerator object for iteration through the connections that exist to this connection point.">Создает объект-перечислитель для итерации по соединениям, существующим для этой точки подключения.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary vsli:raw="Returns the IID of the outgoing interface managed by this connection point.">Возвращает IID выходящего интерфейса, управляемого с использованием этой точки подключения.</summary>
      <param name="pIID" vsli:raw="When this parameter returns, contains the IID of the outgoing interface managed by this connection point. This parameter is passed uninitialized.">При возвращении этого параметра содержит IID выходящего интерфейса, управляемого с использованием данной точки подключения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface pointer to the connectable object that conceptually owns this connection point.">Извлекает указатель интерфейса <see langword="IConnectionPointContainer" /> на доступный для соединения объект, которому принадлежит эта точка подключения.</summary>
      <param name="ppCPC" vsli:raw="When this parameter returns, contains the connectable object's &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface. This parameter is passed uninitialized.">При возвращении этого параметра содержит интерфейс <see langword="IConnectionPointContainer" /> объекта, доступного для соединения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Unadvise(System.Int32)">
      <summary vsli:raw="Terminates an advisory connection previously established through the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">Завершает вспомогательное соединение, установленное ранее при помощи метода <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
      <param name="dwCookie" vsli:raw="The connection cookie previously returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)&quot; /&gt; method.">Файл cookie соединения, возвращенный ранее из метода <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IConnectionPointContainer&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IConnectionPointContainer" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates an enumerator of all the connection points supported in the connectable object, one connection point per IID.">Создает перечислитель всех точек подключения, поддерживаемых в объекте, доступном для соединения, по одной точке подключения для каждого идентификатора IID.</summary>
      <param name="ppEnum" vsli:raw="When this method returns, contains the interface pointer of the enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель интерфейса перечислителя. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer.FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
      <summary vsli:raw="Asks the connectable object if it has a connection point for a particular IID, and if so, returns the &lt;see langword=&quot;IConnectionPoint&quot; /&gt; interface pointer to that connection point.">Запрашивает у доступного для соединения объекта наличие точки подключения для определенного IID, и, если она имеется, возвращает указатель интерфейса <see langword="IConnectionPoint" /> на эту точку подключения.</summary>
      <param name="riid" vsli:raw="A reference to the outgoing interface IID whose connection point is being requested.">Ссылка на идентификатор IID исходящего интерфейса, для которого запрашивается точка подключения.</param>
      <param name="ppCP" vsli:raw="When this method returns, contains the connection point that manages the outgoing interface &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит точку подключения, управляющую <paramref name="riid" /> выходящего интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IDataObject&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IDataObject" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary vsli:raw="Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.">Создает соединение между объектом данных и приемником уведомлений. Этот метод вызывается объектом, который поддерживает приемник уведомлений и позволяет уведомлять приемник об изменениях в данных объекта.</summary>
      <param name="pFormatetc" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, определяющая формат, целевое устройство, аспект и среду передачи, которые будут использоваться для будущих уведомлений.</param>
      <param name="advf" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; values that specifies a group of flags for controlling the advisory connection.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" />, задающее группу флагов для контролирования вспомогательного соединения.</param>
      <param name="adviseSink" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface on the advisory sink that will receive the change notification.">Указатель на интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> в приемнике уведомлений, который будет получать уведомления об изменениях.</param>
      <param name="connection" vsli:raw="When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)&quot; /&gt;. If this value is zero, the connection was not established. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель на маркер DWORD, определяющий это соединение. Позднее этот маркер можно использовать для удаления вспомогательного соединения, передав его в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Если это значение равно нулю, соединение не было установлено. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The advisory connection was created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; This method is not implemented on the data object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; The data object does not support change notification.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие.
  Значение 
  Описание 
  S_OK 
  Было создано вспомогательное соединение.  
  
  E_NOTIMPL 
  Этот метод не был реализован в объекте данных.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  OLE_E_ADVISENOTSUPPORTED 
  Объект данных не поддерживает уведомление об изменении.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary vsli:raw="Destroys a notification connection that had been previously established.">Разрывает соединение уведомления, которое было ранее установлено.</summary>
      <param name="connection" vsli:raw="A DWORD token that specifies the connection to remove. Use the value returned by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)&quot; /&gt; when the connection was originally established.">маркер DWORD, задающий соединение для удаления. Используйте значение, возвращенное <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> при первоначальной настройке соединения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates an object that can be used to enumerate the current advisory connections.">Создает объект, который может использоваться для перечисления текущих вспомогательных соединений.</summary>
      <param name="enumAdvise" vsli:raw="When this method returns, contains an &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&quot; /&gt; that receives the interface pointer to the new enumerator object. If the implementation sets &lt;paramref name=&quot;enumAdvise&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;, there are no connections to advisory sinks at this time. This parameter is passed uninitialized.">При возвращении данного метода содержит компонент <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />, получающий указатель интерфейса на новый объект перечислителя. Если при реализации для параметра <paramref name="enumAdvise" /> задается значение <see langword="null" />, в это время отсутствуют соединения с приемниками уведомлений. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="This method supports the standard return value E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object is successfully instantiated or there are no connections.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_ADVISENOTSUPPORTED&lt;/term&gt;&lt;description&gt; This object does not support advisory notifications.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Этот метод поддерживает стандартное возвращаемое значение E_OUTOFMEMORY, а также следующие:
  Значение  
  
  Описание  
  
  S_OK  
  
  Экземпляр объекта перечислителя успешно создан, или отсутствуют соединения.  
  
  OLE_E_ADVISENOTSUPPORTED  
  
  Этот объект не поддерживает уведомления о рекомендациях.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary vsli:raw="Creates an object for enumerating the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures for a data object. These structures are used in calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;.">Создает объект для перечисления структур <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> для объекта данных. Эти структуры используются в вызовах <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.DATADIR&quot; /&gt; values that specifies the direction of the data.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" />, определяющее направление данных.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The enumerator object was successfully created.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; E_NOTIMPL&lt;/term&gt;&lt;description&gt; The direction specified by the &lt;paramref name=&quot;direction&quot; /&gt; parameter is not supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_S_USEREG&lt;/term&gt;&lt;description&gt; Requests that OLE enumerate the formats from the registry.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG и E_OUTOFMEMORY, а также следующие:
  Значение 
  Описание 
  S_OK 
  Объект перечислителя был успешно создан.  
  
  E_NOTIMPL 
  Направление, заданное параметром <paramref name="direction" />, не поддерживается.  
  
  OLE_S_USEREG 
  Требует, чтобы OLE перечисляли форматы из реестра.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Provides a standard &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that is logically equivalent to a more complex structure. Use this method to determine whether two different &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures would return the same data, removing the need for duplicate rendering.">Предоставляет стандартную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая логически эквивалентна более сложной структуре. Этот метод применяется, чтобы определить, будут ли две различные структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> возвращать одинаковые данные, что позволяет избежать ненужной повторной отрисовки.</summary>
      <param name="formatIn" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored.">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, определяющую формат, среду передачи и целевое устройство, которые вызывающий объект хотел бы использовать для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован.</param>
      <param name="formatOut" vsli:raw="When this method returns, contains a pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure that contains the most general information possible for a specific rendering, making it canonically equivalent to &lt;c&gt;formatetcIn&lt;/c&gt;. The caller must allocate this structure and the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)&quot; /&gt; method must fill in the data. To retrieve data in a subsequent call such as &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;, the caller uses the supplied value of &lt;paramref name=&quot;formatOut&quot; /&gt;, unless the value supplied is &lt;see langword=&quot;null&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the method returns &lt;see langword=&quot;DATA_S_SAMEFORMATETC&quot; /&gt;. The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; member is not significant in this case and should be ignored. This parameter is passed uninitialized.">Возвращаемые этим методом данные содержат указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая содержит наиболее общие сведения для определенной прорисовки, делая его канонически эквивалентным <c>formatetcIn</c>. Вызывающий объект должен выделить эту структуру, а метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> должен заполнить данные. Для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, вызывающий объект использует предоставленное значение параметра <paramref name="formatOut" />, если предоставленное значение не равно <see langword="null" />. Это значение равняется <see langword="null" />, если метод возвращает <see langword="DATA_S_SAMEFORMATETC" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; The returned &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure is different from the one that was passed.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DATA_S_SAMEFORMATETC&lt;/term&gt;&lt;description&gt; The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structures are the same and &lt;see langword=&quot;null&quot; /&gt; is returned in the &lt;paramref name=&quot;formatOut&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; There is an invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; There is an invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие.
  Значение 
  Описание 
  S_OK 
  Возвращенная структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> отличается от структуры, которая была передана.  
  
  DATA_S_SAMEFORMATETC 
  Структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> — те же самые, и значение <see langword="null" /> возвращается в параметре <paramref name="formatOut" />.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  OLE_E_NOTRUNNING 
  Приложение не выполняется.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. The &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method, which is called by a data consumer, renders the data described in the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure and transfers it through the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure. The caller then assumes responsibility for releasing the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure.">Получает данные из исходного объекта данных. Метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, который вызывается объектом-получателем данных, обрабатывает данные, описанные в заданной структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, и передает их через заданную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />. Затем вызывающий объект несет ответственность за освобождение структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. С помощью логического оператора OR можно задать более одной среды передачи, разрешив методу выбирать лучшую среду передачи среди заданных.</param>
      <param name="medium" vsli:raw="When this method returns, contains a pointer to the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that indicates the storage medium containing the returned data through its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed&quot; /&gt; member, and the responsibility for releasing the medium through the value of its &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the receiver of the medium is responsible for releasing it; otherwise, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; points to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface on the appropriate object so its &lt;see langword=&quot;Release&quot; /&gt; method can be called. The medium must be allocated and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, задающий среду хранения, содержащую возвращенные данные посредством своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" />, и ответственность за освобождение среды передачи через значение своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> равняется <see langword="null" />, получатель среды передачи отвечает за ее освобождение; в противном случае <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> указывает на интерфейс <see langword="IUnknown" /> в соответствующем объекте, так чтобы можно было вызвать его метод <see langword="Release" />. Среда передачи должна быть выделена и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary vsli:raw="Obtains data from a source data object. This method, which is called by a data consumer, differs from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; method in that the caller must allocate and free the specified storage medium.">Получает данные из исходного объекта данных. Этот метод, который вызывается объектом-получателем данных, отличается от метода <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, в котором вызывающий объект должен выделить и освободить заданную среду хранения.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt;, and only the following &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; values are valid: &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM&quot; /&gt;, &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL&quot; /&gt;, or &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE&quot; /&gt;.">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. Только одна среда может быть задана в <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, и только следующие значения <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> являются действительными: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> или <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt;. The caller must also free the medium. The implementation of this method must always supply a value of &lt;see langword=&quot;null&quot; /&gt; for the &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure that this parameter points to.">Компонент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданный ссылкой, который определяет среду хранения, содержащую передаваемые данные. Среда передачи должна быть выделена вызывающим объектом и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Также вызывающий объект должен освободить среду передачи. При реализации этого метода должно всегда предоставляться значение <see langword="null" /> для элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, на которую указывает этот параметр.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary vsli:raw="Determines whether the data object is capable of rendering the data described in the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure. Objects attempting a paste or drop operation can call this method before calling &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; to get an indication of whether the operation may be successful.">Определяет, способен ли объект данных выполнять отрисовку данных, описанных в структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Объекты, пытающиеся выполнять операцию вставки или перетаскивания, могут вызывать этот метод перед вызовом <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, чтобы получить указание о том, может ли операция быть успешной.</summary>
      <param name="format" vsli:raw="A pointer to a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format, medium, and target device to use for the query.">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство, которые должны использоваться для запроса.</param>
      <returns vsli:raw="This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; S_OK&lt;/term&gt;&lt;description&gt; A subsequent call to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)&quot; /&gt; would probably be successful.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_LINDEX&lt;/term&gt;&lt;description&gt; An invalid value for &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&quot; /&gt;; currently, only -1 is supported.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_FORMATETC&lt;/term&gt;&lt;description&gt; An invalid value for the &lt;paramref name=&quot;pFormatetc&quot; /&gt; parameter.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_TYMED&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DV_E_DVASPECT&lt;/term&gt;&lt;description&gt; An invalid &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect&quot; /&gt; value.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; OLE_E_NOTRUNNING&lt;/term&gt;&lt;description&gt; The application is not running.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие:
  Значение 
  Описание 
  S_OK 
  Последующий вызов <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, возможно, будет успешным.  
  
  DV_E_LINDEX 
  Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
  DV_E_FORMATETC 
  Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
  DV_E_TYMED 
  Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" />.  
  
  DV_E_DVASPECT 
  Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" />.  
  
  OLE_E_NOTRUNNING 
  Приложение не выполняется.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary vsli:raw="Transfers data to the object that implements this method. This method is called by an object that contains a data source.">Передает данные в объект, реализующий этот метод. Этот метод вызывается объектом, содержащим источник данных.</summary>
      <param name="formatIn" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, которая определяет формат, используемый объектом данных при интерпретации данных, содержащихся в среде хранения.</param>
      <param name="medium" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt; structure, passed by reference, that defines the storage medium in which the data is being passed.">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданная ссылкой, которая определяет среду хранения, в которой передаются данные.</param>
      <param name="release" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the data object called, which implements &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)&quot; /&gt;, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. &lt;see langword=&quot;false&quot; /&gt; to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.">Значение <see langword="true" /> задает, что вызванный объект данных, который реализует <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, владеет средой хранения после возвращения вызова. Это означает, что объект данных должен освободить среду после ее использования, вызвав функцию <see langword="ReleaseStgMedium" />. Значение <see langword="false" /> для указания того, что вызывающий объект сохраняет владение средой хранения, а вызванный объект данных использует среду хранения только во время выполнения вызова.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLDESC">
      <summary vsli:raw="Contains information needed for transferring a structure element, parameter, or function return value between processes.">Содержит информацию, необходимую для передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved">
      <summary vsli:raw="Reserved; set to &lt;see langword=&quot;null&quot; /&gt;.">Зарезервировано, равно <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags">
      <summary vsli:raw="Indicates an &lt;see cref=&quot;T:System.Runtime.InteropServices.IDLFLAG&quot; /&gt; value describing the type.">Показывает значение <see cref="T:System.Runtime.InteropServices.IDLFLAG" />, описывающее тип.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Описывает порядок передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">Параметр передает сведения из вызывающего объекта в вызываемый объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">Этот параметр является локальным идентификатором клиентского приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">Этот параметр возвращает сведения из вызываемого объекта в вызывающий объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">Этот параметр является значением, возвращаемым членом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IDLFLAG.IDLFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Не задает, передает ли параметр сведения или получает их.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnectionPoints&quot; /&gt; interface.">Управляет определением интерфейса <see langword="IEnumConnectionPoints" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of &lt;see langword=&quot;IConnectionPoint&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число ссылок <see langword="IConnectionPoint" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные соединения. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">В возвращаемых результатах выполнения метода содержится ссылка на фактическое число подключений, перечисленных в <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumConnections&quot; /&gt; interface.">Управляет определением интерфейса <see langword="IEnumConnections" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.CONNECTDATA&quot; /&gt; structures to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число структур <see cref="T:System.Runtime.InteropServices.CONNECTDATA" />, которые будут возвращены в <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные соединения. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of connections enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">В возвращаемых результатах выполнения метода содержится ссылка на фактическое число подключений, перечисленных в <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumFORMATETC&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IEnumFORMATETC" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий перечислитель.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число ссылок <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; references. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные ссылки <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на фактическое число ссылок, перечисленных в <paramref name="rgelt" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumMoniker&quot; /&gt; interface.">Управляет определением интерфейса <see langword="IEnumMoniker" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of monikers to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число моникеров для возвращения в <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated monikers. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные моникеры. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of monikers enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">При возвращении данного метода содержит ссылку на фактическое число моникеров, перечисленных в <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumMoniker.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IEnumSTATDATA&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IEnumSTATDATA" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current enumerator.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий перечислитель.</summary>
      <param name="newEnum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число ссылок <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />, возвращаемых в <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STATDATA&quot; /&gt; references. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные ссылки <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" />. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this parameter returns, contains a reference to the actual number of references enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного параметра содержит ссылку на фактическое число ссылок, перечисленных в <paramref name="rgelt" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumString">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumString&quot; /&gt; interface.">Управляет определением интерфейса <see langword="IEnumString" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <param name="ppenum" vsli:raw="When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на только что созданный перечислитель. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of strings to return in &lt;paramref name=&quot;rgelt&quot; /&gt;.">Число строк для возвращения в параметре <paramref name="rgelt" />.</param>
      <param name="rgelt" vsli:raw="When this method returns, contains a reference to the enumerated strings. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные строки. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of strings enumerated in &lt;paramref name=&quot;rgelt&quot; /&gt;.">При возвращении данного метода содержит ссылку на фактическое число строк, перечисленных в <paramref name="rgelt" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <summary vsli:raw="Manages the definition of the &lt;see langword=&quot;IEnumVARIANT&quot; /&gt; interface.">Управляет определением интерфейса <see langword="IEnumVARIANT" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone">
      <summary vsli:raw="Creates a new enumerator that contains the same enumeration state as the current one.">Создает новый перечислитель с тем же состоянием перечисления, что и текущий.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT&quot; /&gt; reference to the newly created enumerator.">Ссылка <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT" /> на только что созданный перечислитель.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)">
      <summary vsli:raw="Retrieves a specified number of items in the enumeration sequence.">Возвращает заданное число элементов последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to return in &lt;c&gt;rgelt&lt;/c&gt;.">Число элементов для возвращения в <c>rgelt</c>.</param>
      <param name="rgVar" vsli:raw="When this method returns, contains a reference to the enumerated elements. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисленные элементы. Этот параметр передается неинициализированным.</param>
      <param name="pceltFetched" vsli:raw="When this method returns, contains a reference to the actual number of elements enumerated in &lt;c&gt;rgelt&lt;/c&gt;.">При возвращении данного метода содержит ссылку на фактическое число элементов, перечисленных в <c>rgelt</c>.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the &lt;paramref name=&quot;pceltFetched&quot; /&gt; parameter equals the &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если параметр <paramref name="pceltFetched" /> равен параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset">
      <summary vsli:raw="Resets the enumeration sequence to the beginning.">Сбрасывает последовательность перечисления в начало.</summary>
      <returns vsli:raw="An HRESULT with the value &lt;see langword=&quot;S_OK&quot; /&gt;.">HRESULT со значением <see langword="S_OK" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)">
      <summary vsli:raw="Skips a specified number of items in the enumeration sequence.">Пропускает заданное число элементов в последовательности перечисления.</summary>
      <param name="celt" vsli:raw="The number of elements to skip in the enumeration.">Число элементов, пропускаемых при перечислении.</param>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the number of elements skipped equals &lt;paramref name=&quot;celt&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;S_FALSE&quot; /&gt;.">Значение <see langword="S_OK" />, если число пропущенных элементов соответствует параметру <paramref name="celt" />; в противном случае — значение <see langword="S_FALSE" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMoniker">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IMoniker&quot; /&gt; interface, with COM functionality from &lt;see langword=&quot;IPersist&quot; /&gt; and &lt;see langword=&quot;IPersistStream&quot; /&gt;.">Предоставляет управляемое определение интерфейса <see langword="IMoniker" /> с функциональной возможностью COM из <see langword="IPersist" /> и <see langword="IPersistStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Uses the moniker to bind to the object that it identifies.">Использует моникер для привязки к определяемому объекту.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used in this binding operation.">Ссылка на интерфейс <see langword="IBindCtx" /> объекта контекстной привязки, используемого в данной операции привязки.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="riidResult" vsli:raw="The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies.">Идентификатор интерфейса (IID), выбранного клиентом для установки соединения с объектом, который определен моникером.</param>
      <param name="ppvResult" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riidResult&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на интерфейс, запрошенный <paramref name="riidResult" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
      <summary vsli:raw="Retrieves an interface pointer to the storage that contains the object identified by the moniker.">Возвращает указатель интерфейса на хранилище, в котором содержится объект, определенный моникером.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context object used during this binding operation.">Ссылка на интерфейс <see langword="IBindCtx" /> объекта контекстной привязки, используемого в процессе операции привязки.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="riid" vsli:raw="The interface identifier (IID) of the storage interface requested.">Идентификатор IID запрошенного интерфейса хранилища.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the interface requested by &lt;paramref name=&quot;riid&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на интерфейс, запрошенный <paramref name="riid" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Creates a new moniker based on the common prefix that this moniker shares with another moniker.">Создает новый моникер на основании общего префикса, который данный моникер использует совместно с другим моникером.</summary>
      <param name="pmkOther" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on another moniker to compare with the current moniker for a common prefix.">Ссылка на интерфейс <see langword="IMoniker" /> другого моникера, сравниваемого с данным моникером для выявления общего префикса.</param>
      <param name="ppmkPrefix" vsli:raw="When this method returns, contains the moniker that is the common prefix of the current moniker and &lt;paramref name=&quot;pmkOther&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит моникер, который является общим префиксом текущего моникера и <paramref name="pmkOther" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Combines the current moniker with another moniker, creating a new composite moniker.">Объединяет текущий моникер с другим, создавая составной моникер.</summary>
      <param name="pmkRight" vsli:raw="A reference to the &lt;see langword=&quot;IMoniker&quot; /&gt; interface on a moniker to append to the end of the current moniker.">Ссылка на интерфейс <see langword="IMoniker" /> моникера для добавления в конец данного моникера.</param>
      <param name="fOnlyIfNotGeneric" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the caller requires a nongeneric composition. The operation proceeds only if &lt;paramref name=&quot;pmkRight&quot; /&gt; is a moniker class that the current moniker can combine with in some way other than forming a generic composite. &lt;see langword=&quot;false&quot; /&gt; to indicate that the method can create a generic composite if necessary.">Значение <see langword="true" /> показывает, что вызывающему объекту требуется неуниверсальное объединение. Операция продолжается только в том случае, если параметр <paramref name="pmkRight" /> является классом моникера, с которым текущий моникер может быть объединен каким-либо способом, кроме образования универсального объединения. Значение <see langword="false" /> показывает, что при необходимости метод может создать универсальное объединение.</param>
      <param name="ppmkComposite" vsli:raw="When this method returns, contains a reference to the resulting composite moniker. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на итоговый составной моникер. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.">Предоставляет указатель на перечислитель, способный перечислить компоненты составного моникера.</summary>
      <param name="fForward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate the monikers from left to right. &lt;see langword=&quot;false&quot; /&gt; to enumerate from right to left.">Значение <see langword="true" /> используется для перечисления моникеров слева направо. Значение <see langword="false" /> используется для перечисления справа налево.</param>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains a reference to the enumerator object for the moniker. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на объект перечислителя для моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Возвращает идентификатор класса CLSID для объекта.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains the CLSID. This parameter is passed uninitialized.">При возвращении этого метода содержит CLSID. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
      <summary vsli:raw="Gets the display name, which is a user-readable representation of the current moniker.">Возвращает отображаемое имя, являющееся представлением текущего моникера, удобным для чтения пользователем.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this operation.">Ссылка на контекст привязки, используемый в данной операции.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="ppszDisplayName" vsli:raw="When this method returns, contains the display name string. This parameter is passed uninitialized.">При возвращении данного метода содержит строку отображаемого имени. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)">
      <summary vsli:raw="Returns the size, in bytes, of the stream needed to save the object.">Возвращает размер потока, необходимого для сохранения объекта, в байтах.</summary>
      <param name="pcbSize" vsli:raw="When this method returns, contains a &lt;see langword=&quot;long&quot; /&gt; value indicating the size, in bytes, of the stream needed to save this object. This parameter is passed uninitialized.">При возвращении данного метода содержит значение <see langword="long" />, показывающее размер потока, необходимого для сохранения объекта, в байтах. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Provides a number representing the time that the object identified by the current moniker was last changed.">Предоставляет число, указывающее время последнего изменения объекта, определенного текущим моникером.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.">Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера.</param>
      <param name="pFileTime" vsli:raw="When this method returns, contains the time of the last change. This parameter is passed uninitialized.">При возвращении данного метода содержит время последнего изменения. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)">
      <summary vsli:raw="Calculates a 32-bit integer using the internal state of the moniker.">Вычисляет 32-разрядное целое число, используя внутреннее состояние моникера.</summary>
      <param name="pdwHash" vsli:raw="When this method returns, contains the hash value for this moniker. This parameter is passed uninitialized.">При возвращении данного метода содержит хэш-значения для этого моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Provides a moniker that, when composed to the right of the current moniker or one of similar structure, composes to nothing.">Предоставляет моникер, объединение которого с правой частью данного моникера или моникера с подобной структурой приводит к нулевому значению.</summary>
      <param name="ppmk" vsli:raw="When this method returns, contains a moniker that is the inverse of the current moniker. This parameter is passed uninitialized.">При возвращении данного метода содержит моникер, который является инверсией текущего моникера. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty">
      <summary vsli:raw="Checks the object for changes since it was last saved.">Проверяет наличие изменений в объекте с момента его последнего сохранения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the object has changed; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Значение <see langword="S_OK" /><see langword="HRESULT" />, если объект был изменен; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Compares the current moniker with a specified moniker and indicates whether they are identical.">Сравнивает текущий моникер с заданным моникером и показывает, совпадают ли они.</summary>
      <param name="pmkOtherMoniker" vsli:raw="A reference to the moniker to use for comparison.">Ссылка на моникер, используемый для сравнения.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the monikers are identical; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникеры совпадают; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the object that is identified by the current moniker is currently loaded and running.">Определяет, загружен и запущен ли в данный момент объект, определенный текущим моникером.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker if the current moniker is part of a composite.">Ссылка на моникер слева от данного моникера, если текущий моникер является частью составного моникера.</param>
      <param name="pmkNewlyRunning" vsli:raw="A reference to the moniker most recently added to the Running Object Table (ROT).">Ссылка на моникер, который был добавлен в таблицу текущих объектов (ROT) самым последним.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is running; an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is not running; or an &lt;see langword=&quot;E_UNEXPECTED&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникер выполняется, значение <see langword="S_FALSE" /><see langword="HRESULT" />, если моникер не выполняется, или значение <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)">
      <summary vsli:raw="Indicates whether this moniker is of one of the system-supplied moniker classes.">Показывает, является ли данный моникер одним из классов моникеров, предоставляемых системой.</summary>
      <param name="pdwMksys" vsli:raw="When this method returns, contains a pointer to an integer that is one of the values from the &lt;see langword=&quot;MKSYS&quot; /&gt; enumeration, and refers to one of the COM moniker classes. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель на целое число, являющееся одним из значений из перечисления <see langword="MKSYS" /> и ссылающееся на один из классов моникеров COM. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="An &lt;see langword=&quot;S_OK&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value if the moniker is a system moniker; otherwise, an &lt;see langword=&quot;S_FALSE&quot; /&gt;&lt;see langword=&quot;HRESULT&quot; /&gt; value.">Значение <see langword="S_OK" /><see langword="HRESULT" />, если моникер является моникером системы; в противном случае — значение <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
      <summary vsli:raw="Initializes an object from the stream where it was previously saved.">Инициализирует объект из потока, в котором он был предварительно сохранен.</summary>
      <param name="pStm" vsli:raw="The stream that the object is loaded from.">Поток, из которого загружается объект.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Reads as many characters of the specified display name as the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)&quot; /&gt; understands and builds a moniker corresponding to the portion read.">Считывает столько знаков указанного отображаемого имени, сколько может воспринять <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />, и создает моникер, соответствующий считанной части.</summary>
      <param name="pbc" vsli:raw="A reference to the bind context to use in this binding operation.">Ссылка на контекст привязки, используемый при выполнении данной операции привязки.</param>
      <param name="pmkToLeft" vsli:raw="A reference to the moniker that has been built from the display name up to this point.">Ссылка на моникер, созданный из отображаемого имени до данной точки.</param>
      <param name="pszDisplayName" vsli:raw="A reference to the string containing the remaining display name to parse.">Ссылка на строку, содержащую оставшуюся часть анализируемого отображаемого имени.</param>
      <param name="pchEaten" vsli:raw="When this method returns, contains the number of characters that were consumed in parsing &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит число знаков, использованных при анализе <paramref name="pszDisplayName" />. Этот параметр передается неинициализированным.</param>
      <param name="ppmkOut" vsli:raw="When this method returns, contains a reference to the moniker that was built from &lt;paramref name=&quot;pszDisplayName&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на моникер, построенный из <paramref name="pszDisplayName" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Returns a reduced moniker, which is another moniker that refers to the same object as the current moniker but can be bound with equal or greater efficiency.">Возвращает уменьшенный моникер, представляющий собой другой моникер, ссылающийся на тот же объект, но который может быть привязан с такой же или большей эффективностью.</summary>
      <param name="pbc" vsli:raw="A reference to the &lt;see langword=&quot;IBindCtx&quot; /&gt; interface on the bind context to use in this binding operation.">Ссылка на интерфейс <see langword="IBindCtx" /> контекста привязки, используемый в данной операции привязки.</param>
      <param name="dwReduceHowFar" vsli:raw="A value that specifies how far the current moniker should be reduced.">Значение, задающее, насколько следует уменьшить текущий моникер.</param>
      <param name="ppmkToLeft" vsli:raw="A reference to the moniker to the left of the current moniker.">Ссылка на моникер слева от текущего моникера.</param>
      <param name="ppmkReduced" vsli:raw="When this method returns, contains a reference to the reduced form of the current moniker, which can be &lt;see langword=&quot;null&quot; /&gt; if an error occurs or if the current moniker is reduced to nothing. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на уменьшенную форму текущего моникера, который может иметь значение <see langword="null" />, если происходит ошибка или если текущий моникер уменьшен до нуля. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
      <summary vsli:raw="Supplies a moniker that, when appended to the current moniker (or one with a similar structure), yields the specified moniker.">Предоставляет моникер, добавление которого к текущему моникеру (или к одной из подобных структур) приводит к получению указанного моникера.</summary>
      <param name="pmkOther" vsli:raw="A reference to the moniker to which a relative path should be taken.">Ссылка на моникер, для которого нужно получить относительный путь.</param>
      <param name="ppmkRelPath" vsli:raw="When this method returns, contains a reference to the relative moniker. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на относительный моникер. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
      <summary vsli:raw="Saves an object to the specified stream.">Сохраняет объект в указанном потоке.</summary>
      <param name="pStm" vsli:raw="The stream to which the object is saved.">Поток, в котором будет сохранен объект.</param>
      <param name="fClearDirty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to clear the modified flag after the save is complete; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> показывает, что необходима очистка измененного флага после сохранения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <summary vsli:raw="Defines the attributes of an implemented or inherited interface of a type.">Определяет атрибуты реализованного или унаследованного интерфейса типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULT">
      <summary vsli:raw="The interface or dispinterface represents the default for the source or sink.">Интерфейс или диспетчерский интерфейс предоставляет источник или приемник, используемый по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FDEFAULTVTABLE">
      <summary vsli:raw="Sinks receive events through the virtual function table (VTBL).">Приемники получают события при помощи таблицы виртуальной функции (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FRESTRICTED">
      <summary vsli:raw="The member should not be displayed or programmable by users.">Не следует позволять пользователям отображать или программировать этот член.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.IMPLTYPEFLAG_FSOURCE">
      <summary vsli:raw="This member of a coclass is called rather than implemented.">Этот член совместного класса вызывается, а не реализуется.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <summary vsli:raw="Specifies how to invoke a function by &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Задает способ вызова функции при помощи <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_FUNC">
      <summary vsli:raw="The member is called using a normal function invocation syntax.">Член, вызываемый при помощи синтаксиса вызова обычной функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYGET">
      <summary vsli:raw="The function is invoked using a normal property access syntax.">Функция, вызываемая при помощи синтаксиса обычного доступа к свойству.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUT">
      <summary vsli:raw="The function is invoked using a property value assignment syntax.">Функция, вызываемая при помощи синтаксиса присвоения значения свойству.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.INVOKEKIND.INVOKE_PROPERTYPUTREF">
      <summary vsli:raw="The function is invoked using a property reference assignment syntax.">Функция, вызываемая при помощи синтаксиса присвоения ссылки свойству.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IPersistFile">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IPersistFile&quot; /&gt; interface, with functionality from &lt;see langword=&quot;IPersist&quot; /&gt;.">Предоставляет управляемое определение интерфейса <see langword="IPersistFile" /> с функциональными возможностями из <see langword="IPersist" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)">
      <summary vsli:raw="Retrieves the class identifier (CLSID) of an object.">Возвращает идентификатор класса CLSID для объекта.</summary>
      <param name="pClassID" vsli:raw="When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на идентификатор CLSID. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
      <summary vsli:raw="Retrieves either the absolute path to the current working file of the object or, if there is no current working file, the default file name prompt of the object.">Извлекает либо абсолютный путь к текущему выполняемому файлу объекта, либо, если выполняемый файл отсутствует, выдаваемый по умолчанию запрос имени файла объекта.</summary>
      <param name="ppszFileName" vsli:raw="When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt). This parameter is passed uninitialized.">При возвращении данного метода содержит адрес указателя на оканчивающуюся нулем строку, содержащую путь для текущего файла или используемый по умолчанию запрос имени файла (например, *.txt). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty">
      <summary vsli:raw="Checks an object for changes since it was last saved to its current file.">Проверяет наличие изменений в объекте с момента его последнего сохранения в текущем файле.</summary>
      <returns vsli:raw="&lt;see langword=&quot;S_OK&quot; /&gt; if the file has changed since it was last saved; &lt;see langword=&quot;S_FALSE&quot; /&gt; if the file has not changed since it was last saved.">Значение <see langword="S_OK" />, если файл был изменен с момента последнего сохранения; значение <see langword="S_FALSE" /> — если файл не был изменен.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
      <summary vsli:raw="Opens the specified file and initializes an object from the file contents.">Открывает указанный файл и инициализирует объект из содержимого файла.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to open.">Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, который требуется открыть.</param>
      <param name="dwMode" vsli:raw="A combination of values from the &lt;see langword=&quot;STGM&quot; /&gt; enumeration to indicate the access mode in which to open &lt;paramref name=&quot;pszFileName&quot; /&gt;.">Набор значений из перечисления <see langword="STGM" />, показывающих режим доступа, используемый для открытия <paramref name="pszFileName" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
      <summary vsli:raw="Saves a copy of the object into the specified file.">Сохраняет копию объекта в заданном файле.</summary>
      <param name="pszFileName" vsli:raw="A zero-terminated string containing the absolute path of the file to which the object is saved.">Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, в котором требуется сохранить объект.</param>
      <param name="fRemember" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to used the &lt;paramref name=&quot;pszFileName&quot; /&gt; parameter as the current working file; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы использовать параметр <paramref name="pszFileName" /> в качестве выполняемого файла; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
      <summary vsli:raw="Notifies the object that it can write to its file.">Сообщает объекту, что он может выполнять запись в файл.</summary>
      <param name="pszFileName" vsli:raw="The absolute path of the file where the object was previously saved.">Абсолютный путь к файлу, в котором ранее был сохранен объект.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IRunningObjectTable&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="IRunningObjectTable" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
      <summary vsli:raw="Enumerates the objects currently registered as running.">Перечисляет объекты, зарегистрированные в данный момент как запущенные.</summary>
      <param name="ppenumMoniker" vsli:raw="When this method returns, contains the new enumerator for the Running Object Table (ROT). This parameter is passed uninitialized.">При возвращении данного метода содержит новый перечислитель для таблицы текущих объектов (ROT). Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
      <summary vsli:raw="Returns the registered object if the supplied object name is registered as running.">Возвращает зарегистрированный объект, если предоставленное имя объекта зарегистрировано как выполняемое.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <param name="ppunkObject" vsli:raw="When this method returns, contains the requested running object. This parameter is passed uninitialized.">При возвращении данного метода содержит запрошенный выполняемый объект. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Searches for this moniker in the Running Object Table (ROT) and reports the recorded time of change, if present.">Выполняет поиск этого моникера в таблице текущих объектов (ROT) и сообщает записанное время изменения, если моникер найден.</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <param name="pfiletime" vsli:raw="When this object returns, contains the objects last change time. This parameter is passed uninitialized.">При возвращении данного объекта содержит время последнего изменения объекта. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Determines whether the specified moniker is currently registered in the Running Object Table (ROT).">Определяет, зарегистрирован ли заданный моникер в таблице текущих объектов (ROT).</summary>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker to search for in the Running Object Table (ROT).">Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT).</param>
      <returns vsli:raw="An &lt;see langword=&quot;HRESULT&quot; /&gt; value that indicates the success or failure of the operation.">Значение <see langword="HRESULT" />, показывающее успешное или неуспешное выполнение операции.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
      <summary vsli:raw="Notes the time that a particular object changed so &lt;see langword=&quot;IMoniker::GetTimeOfLastChange&quot; /&gt; can report an appropriate change time.">Записывает время изменения определенного объекта, чтобы <see langword="IMoniker::GetTimeOfLastChange" /> мог сообщить о времени внесения изменений.</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry of the changed object.">Запись измененного объекта в таблице текущих объектов (ROT).</param>
      <param name="pfiletime" vsli:raw="A reference to the object's last change time.">Ссылка на время последнего изменения объекта.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary vsli:raw="Registers that the supplied object has entered the running state.">Регистрирует переход предоставленного объекта в состояние выполнения.</summary>
      <param name="grfFlags" vsli:raw="Specifies whether the Running Object Table's (ROT) reference to &lt;paramref name=&quot;punkObject&quot; /&gt; is weak or strong, and controls access to the object through its entry in the ROT.">Показывает, является ли ссылка таблицы текущих объектов ROT на <paramref name="punkObject" /> слабой или строгой, а также управляет доступом к объекту, используя соответствующую запись в таблице ROT.</param>
      <param name="punkObject" vsli:raw="A reference to the object being registered as running.">Ссылка на объект, зарегистрированный как выполняемый.</param>
      <param name="pmkObjectName" vsli:raw="A reference to the moniker that identifies &lt;paramref name=&quot;punkObject&quot; /&gt;.">Ссылка на моникер, определяющий <paramref name="punkObject" />.</param>
      <returns vsli:raw="A value that can be used to identify this ROT entry in subsequent calls to &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)&quot; /&gt;.">Значение, которое можно использовать для определения записи в таблице ROT при последующих вызовах метода <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke(System.Int32)">
      <summary vsli:raw="Unregisters the specified object from the Running Object Table (ROT).">Удаляет регистрацию заданного объекта из таблицы текущих объектов (ROT).</summary>
      <param name="dwRegister" vsli:raw="The Running Object Table (ROT) entry to revoke.">Удаляемая запись в таблице текущих объектов (ROT).</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IStream">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;IStream&quot; /&gt; interface, with &lt;see langword=&quot;ISequentialStream&quot; /&gt; functionality.">Предоставляет управляемое определение интерфейса <see langword="IStream" /> с функциональными возможностями <see langword="ISequentialStream" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
      <summary vsli:raw="Creates a new stream object with its own seek pointer that references the same bytes as the original stream.">Создает новый объект-поток с собственным указателем поиска, ссылающимся на те же байты, что и исходный поток.</summary>
      <param name="ppstm" vsli:raw="When this method returns, contains the new stream object. This parameter is passed uninitialized.">При возвращении данного метода содержит новый объект потока. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)">
      <summary vsli:raw="Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.">Следует убедиться, что все изменения, внесенные в объект потока, открытый в режиме транзакций, отражены в родительском хранилище.</summary>
      <param name="grfCommitFlags" vsli:raw="A value that controls how the changes for the stream object are committed.">Значение, контролирующее выполнение изменений объекта потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.">Копирует указанное число байтов из текущего указателя поиска данного потока в текущий указатель поиска другого потока.</summary>
      <param name="pstm" vsli:raw="A reference to the destination stream.">Ссылка на поток назначения.</param>
      <param name="cb" vsli:raw="The number of bytes to copy from the source stream.">Число байтов, копируемых из потока-источника.</param>
      <param name="pcbRead" vsli:raw="On successful return, contains the actual number of bytes read from the source.">При удачном возвращении содержит фактическое число байтов, считанных из источника.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the destination.">При удачном возвращении содержит фактическое число байтов, записанных в поток назначения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Restricts access to a specified range of bytes in the stream.">Ограничивает доступ к указанному диапазону байтов в потоке.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">Смещение в байтах для начала диапазона.</param>
      <param name="cb" vsli:raw="The length of the range, in bytes, to restrict.">Длина диапазона, доступ к которому ограничен, в байтах.</param>
      <param name="dwLockType" vsli:raw="The requested restrictions on accessing the range.">Запрошенные ограничения для доступа к диапазону.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.">Считывает заданное число байтов из объекта-потока в память, начиная с текущего указателя поиска.</summary>
      <param name="pv" vsli:raw="When this method returns, contains the data read from the stream. This parameter is passed uninitialized.">При возвращении данного метода содержит данные, считанные из потока. Этот параметр передается неинициализированным.</param>
      <param name="cb" vsli:raw="The number of bytes to read from the stream object.">Число байтов, которое требуется считать из объекта-потока.</param>
      <param name="pcbRead" vsli:raw="A pointer to a &lt;see langword=&quot;ULONG&quot; /&gt; variable that receives the actual number of bytes read from the stream object.">Указатель на переменную <see langword="ULONG" />, получающую фактическое число байтов, считанное из объекта потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Revert">
      <summary vsli:raw="Discards all changes that have been made to a transacted stream since the last &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)&quot; /&gt; call.">Отменяет все изменения, выполненные в потоке, с которым шел обмен данными, с момента последнего вызова метода <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)">
      <summary vsli:raw="Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.">Изменяет положение указателя поиска относительно начала потока, конца потока или текущего указателя поиска.</summary>
      <param name="dlibMove" vsli:raw="The displacement to add to &lt;paramref name=&quot;dwOrigin&quot; /&gt;.">Смещение, добавляемое к <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin" vsli:raw="The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.">Исходное положение поиска. Исходное положение может быть началом файла, текущим положением указателя поиска или концом файла.</param>
      <param name="plibNewPosition" vsli:raw="On successful return, contains the offset of the seek pointer from the beginning of the stream.">При удачном возвращении содержит смещение указателя поиска от начала потока.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)">
      <summary vsli:raw="Changes the size of the stream object.">Изменяет размер объекта-потока.</summary>
      <param name="libNewSize" vsli:raw="The new size of the stream as a number of bytes.">Новый размер потока в байтах.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.STATSTG&quot; /&gt; structure for this stream.">Извлекает структуру <see cref="T:System.Runtime.InteropServices.STATSTG" /> для этого потока.</summary>
      <param name="pstatstg" vsli:raw="When this method returns, contains a &lt;see langword=&quot;STATSTG&quot; /&gt; structure that describes this stream object. This parameter is passed uninitialized.">При возвращении данного метода содержит структуру <see langword="STATSTG" />, описывающую этот объект потока. Этот параметр передается неинициализированным.</param>
      <param name="grfStatFlag" vsli:raw="Members in the &lt;see langword=&quot;STATSTG&quot; /&gt; structure that this method does not return, thus saving some memory allocation operations.">Элементы структуры <see langword="STATSTG" />, не возвращаемые этим методом, таким образом получается сэкономить на операциях по выделению памяти.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
      <summary vsli:raw="Removes the access restriction on a range of bytes previously restricted with the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)&quot; /&gt; method.">Удаляет ограничения доступа к диапазону байтов, установленные ранее с помощью метода <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</summary>
      <param name="libOffset" vsli:raw="The byte offset for the beginning of the range.">Смещение в байтах для начала диапазона.</param>
      <param name="cb" vsli:raw="The length, in bytes, of the range to restrict.">Длина диапазона, доступ к которому ограничен, в байтах.</param>
      <param name="dwLockType" vsli:raw="The access restrictions previously placed on the range.">Ограничения доступа, заданные ранее для диапазона.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a specified number of bytes into the stream object starting at the current seek pointer.">Записывает заданное число байтов в объект-поток, начиная с текущего указателя поиска.</summary>
      <param name="pv" vsli:raw="The buffer to write this stream to.">Буфер для записи потока.</param>
      <param name="cb" vsli:raw="The number of bytes to write to the stream.">Число байтов, записываемое в поток.</param>
      <param name="pcbWritten" vsli:raw="On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;, this method does not provide the actual number of bytes written.">При удачном возвращении содержит фактическое число байтов, записанных в объект-поток. Если вызывающий объект задает для этого указателя значение <see cref="F:System.IntPtr.Zero" />, данный метод не предоставляет фактическое число записанных байтов.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeComp">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="ITypeComp" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
      <summary vsli:raw="Maps a name to a member of a type, or binds global variables and functions contained in a type library.">Сопоставляет имя с типом элемента или связывает глобальные переменные и функции, содержащиеся в библиотеке типов.</summary>
      <param name="szName" vsli:raw="The name to bind.">Привязываемое имя.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; computed by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Хэш-значение для <paramref name="szName" />, рассчитанное при помощи <see langword="LHashValOfNameSys" />.</param>
      <param name="wFlags" vsli:raw="A flags word containing one or more of the invoke flags defined in the &lt;see langword=&quot;INVOKEKIND&quot; /&gt; enumeration.">Слово флагов, содержащее один или несколько используемых флагов, определенных в перечислении <see langword="INVOKEKIND" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to the type description that contains the item to which it is bound, if a &lt;see langword=&quot;FUNCDESC&quot; /&gt; or &lt;see langword=&quot;VARDESC&quot; /&gt; was returned. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на описание типа, содержащее элемент, с которым этот тип связан, если возвращено значение <see langword="FUNCDESC" /> или <see langword="VARDESC" />. Этот параметр передается неинициализированным.</param>
      <param name="pDescKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;DESCKIND&quot; /&gt; enumerator that indicates whether the name bound-to is a &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;TYPECOMP&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечислитель <see langword="DESCKIND" />, указывающий, является ли имя, к которому выполняется привязка, <see langword="VARDESC" />, <see langword="FUNCDESC" /> или <see langword="TYPECOMP" />. Этот параметр передается неинициализированным.</param>
      <param name="pBindPtr" vsli:raw="When this method returns, contains a reference to the bound-to &lt;see langword=&quot;VARDESC&quot; /&gt;, &lt;see langword=&quot;FUNCDESC&quot; /&gt;, or &lt;see langword=&quot;ITypeComp&quot; /&gt; interface. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на интерфейс <see langword="VARDESC" />, <see langword="FUNCDESC" /> или <see langword="ITypeComp" />, к которому выполняется привязка. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Binds to the type descriptions contained within a type library.">Выполняет привязку к описаниям типов, содержащимся в библиотеке типов.</summary>
      <param name="szName" vsli:raw="The name to bind.">Привязываемое имя.</param>
      <param name="lHashVal" vsli:raw="A hash value for &lt;paramref name=&quot;szName&quot; /&gt; determined by &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt;.">Хэш-значение для <paramref name="szName" />, определенное при помощи <see langword="LHashValOfNameSys" />.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeInfo&quot; /&gt; of the type to which &lt;paramref name=&quot;szName&quot; /&gt; was bound. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на <see langword="ITypeInfo" /> типа, к которому был привязан параметр <paramref name="szName" />. Этот параметр передается неинициализированным.</param>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to an &lt;see langword=&quot;ITypeComp&quot; /&gt; variable. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на переменную <see langword="ITypeComp" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <summary vsli:raw="Provides the managed definition of the Component Automation ITypeInfo interface.">Предоставляет управляемое определение интерфейса автоматизации компонентов ITypeInfo.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Извлекает адреса статических функций и переменных, определенных в библиотеке DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">Идентификатор элемента для извлекаемого адреса элемента типа <see langword="static" />.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее, является ли член свойством, и, если да, то какого типа.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на элемент <see langword="static" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Создает новый экземпляр типа, описывающего класс компонента (совместный класс).</summary>
      <param name="pUnkOuter" vsli:raw="The object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">Объект, действующий как управляющий <see langword="IUnknown" />.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">Идентификатор IID интерфейса, используемый вызывающим объектом для связи с итоговым объектом.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на созданный объект. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Извлекает библиотеку типов, содержащую описание этого типа и его индекс внутри этой библиотеки типов.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на содержащую библиотеку типов. Этот параметр передается неинициализированным.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на индекс описания типа в содержащей библиотеке типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Возвращает описание или спецификацию точки входа для функции в динамической библиотеке DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">Идентификатор функции элемента, для которого возвращается описание входа динамической библиотеки DLL.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее тип элемента, определенного с помощью <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Если значение не равно <see langword="null" />, функция задает для параметра <paramref name="pBstrDllName" /> значение <see langword="BSTR" />, содержащее имя динамической библиотеки DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Если значение не равно <see langword="null" />, функция задает для параметра <c>lpbstrName</c> значение <see langword="BSTR" />, содержащее имя точки входа.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Если значение не равно <see langword="null" /> и функция определена порядковым номером, то параметр <c>lpwOrdinal</c> должен указывать на порядковый номер.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Извлекает строку документации, полный файл справки и путь к нему, а также идентификатор контекста разделов справки для заданного описания типа.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">Идентификатор элемента, для которого возвращается документация.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">При возвращении данного метода содержит имя метода элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на контекст справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">При возвращении данного метода содержит полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Возвращает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, содержащую сведения о заданной функции.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">Индекс возвращаемого описания функции.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру <see langword="FUNCDESC" />, описывающую заданную функцию. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Сопоставляет друг с другом имена и идентификаторы элементов и параметров.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Массив имен, которые следует сопоставить.</param>
      <param name="cNames" vsli:raw="The count of names to map.">Число сопоставляемых имен.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на массив, в который помещены сопоставления имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Возвращает значение <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> для одного реализованного интерфейса или базового интерфейса в описании типа.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">Индекс реализованного интерфейса или базового интерфейса.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисление <see langword="IMPLTYPEFLAGS" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Извлекает сведения о маршалинге.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">Идентификатор элемента, показывающий, какие необходимы сведения о маршалинге.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на строку <see langword="opcode" />, используемую при маршалинге полей структуры, описанной в описании ссылочного типа, либо возвращает <see langword="null" />, если сведения отсутствуют. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Извлекает переменную с указанным идентификатором (либо имя свойства или метода и его параметры), соответствующую заданному идентификатору функции.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">Идентификатор элемента, для которого возвращается имя (или имена).</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">При возвращении данного метода содержит имя (или имена), связанное с элементом. Этот параметр передается неинициализированным.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">Длина массива <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">При возвращении данного метода содержит число имен в массиве <paramref name="rgBstrNames" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions if a type description references other type descriptions.">Извлекает описания ссылочных типов, если описание типа ссылается на другие описания типов.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Возвращаемый дескриптор для описания ссылочного типа.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">При возвращении данного метода содержит описание ссылочного типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types if a type description describes a COM class.">Извлекает описание типа для реализованных типов интерфейсов, если в описании типа описывается класс COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">Индекс реализованного типа, дескриптор которого возвращается.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на дескриптор для реализованного интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Возвращает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, содержащую атрибуты описания типа.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру, содержащую атрибуты этого описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Извлекает интерфейс <see langword="ITypeComp" /> описания типа, позволяющий компилятору клиента выполнить привязку к элементам описания типа.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface of the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на интерфейс <see langword="ITypeComp" /> содержащей библиотеки типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Извлекает структуру <see langword="VARDESC" />, описывающую указанную переменную.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">Индекс возвращаемого описания переменной.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру <see langword="VARDESC" />, описывающую заданную переменную. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Вызывает метод или обращается к свойству объекта, реализующему интерфейс, описанный в описании типа.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Ссылка на интерфейс, описанный в данном описании типа.</param>
      <param name="memid" vsli:raw="A value that identifies the interface member.">Значение, задающее элемент интерфейса.</param>
      <param name="wFlags" vsli:raw="Flags that describe the context of the invoke call.">Флаги, описывающие контекст используемого вызова.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Ссылка на структуру, содержащую массив аргументов, массив идентификаторов DISPID именованных аргументов, а также количество элементов в каждом массиве.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Ссылка на место хранения результата. Если <paramref name="wFlags" /> задает <see langword="DISPATCH_PROPERTYPUT" /> или <see langword="DISPATCH_PROPERTYPUTREF" />, то параметр <paramref name="pVarResult" /> не учитывается. Если результат не требуется, можно задать значение <see langword="null" />.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Указатель на структуру сведений об исключении, заполняемую только при возвращении <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index within &lt;c&gt;rgvarg&lt;/c&gt; of the argument with the incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error. This parameter is passed uninitialized.">Если <see langword="Invoke" /> возвращает <see langword="DISP_E_TYPEMISMATCH" />, то параметр <paramref name="puArgErr" /> показывает индекс аргумента с неверным типом внутри <c>rgvarg</c>. Если ошибка возвращается для нескольких аргументов, <paramref name="puArgErr" /> показывает только первый из них. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="FUNCDESC" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="TYPEATTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see langword="VARDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="VARDESC" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeInfo2&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="ITypeInfo2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary vsli:raw="Retrieves the addresses of static functions or variables, such as those defined in a DLL.">Извлекает адреса статических функций и переменных, определенных в библиотеке DLL.</summary>
      <param name="memid" vsli:raw="The member ID of the &lt;see langword=&quot;static&quot; /&gt; member's address to retrieve.">Идентификатор элемента для извлекаемого адреса элемента типа <see langword="static" />.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies whether the member is a property, and if so, what kind.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее, является ли член свойством, и, если да, то какого типа.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;static&quot; /&gt; member. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на элемент <see langword="static" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary vsli:raw="Creates a new instance of a type that describes a component class (coclass).">Создает новый экземпляр типа, описывающего класс компонента (совместный класс).</summary>
      <param name="pUnkOuter" vsli:raw="An object that acts as the controlling &lt;see langword=&quot;IUnknown&quot; /&gt;.">Объект, действующий как контролирующий <see langword="IUnknown" />.</param>
      <param name="riid" vsli:raw="The IID of the interface that the caller uses to communicate with the resulting object.">Идентификатор IID интерфейса, используемый вызывающим объектом для связи с итоговым объектом.</param>
      <param name="ppvObj" vsli:raw="When this method returns, contains a reference to the created object. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на созданный объект. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Получает все пользовательские элементы данных для библиотеки.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllFuncCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data from the specified function.">Получает все пользовательские данные из заданной функции.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllImplTypeCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all custom data for the specified implementation type.">Возвращает все пользовательские данные для указанного типа реализации.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">Индекс типа реализации для пользовательских данных.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt; which holds all custom data items.">Указатель на <see langword="CUSTDATA" />, который содержит все элементы пользовательских данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets all of the custom data for the specified function parameter.">Получает все пользовательские данные для заданного параметра функции.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">Индекс параметра этой функции, для которой нужно получить пользовательские данные.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetAllVarCustData(System.Int32,System.IntPtr)">
      <summary vsli:raw="Gets the variable for the custom data.">Возвращает переменную для пользовательских данных.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">Индекс переменной, для которой нужно получить пользовательские данные.</param>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary vsli:raw="Retrieves the type library that contains this type description and its index within that type library.">Извлекает библиотеку типов, содержащую описание этого типа и его индекс внутри этой библиотеки типов.</summary>
      <param name="ppTLB" vsli:raw="When this method returns, contains a reference to the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на содержащую библиотеку типов. Этот параметр передается неинициализированным.</param>
      <param name="pIndex" vsli:raw="When this method returns, contains a reference to the index of the type description within the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на индекс описания типа в содержащей библиотеке типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Возвращает пользовательские данные.</summary>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID, используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Retrieves a description or specification of an entry point for a function in a DLL.">Возвращает описание или спецификацию точки входа для функции в динамической библиотеке DLL.</summary>
      <param name="memid" vsli:raw="The ID of the member function whose DLL entry description is to be returned.">Идентификатор функции элемента, для которого возвращается описание входа динамической библиотеки DLL.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by &lt;paramref name=&quot;memid&quot; /&gt;.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, указывающее тип элемента, определенного с помощью <paramref name="memid" />.</param>
      <param name="pBstrDllName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;paramref name=&quot;pBstrDllName&quot; /&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the DLL.">Если значение не равно <see langword="null" />, функция задает для параметра <paramref name="pBstrDllName" /> значение <see langword="BSTR" />, содержащее имя динамической библиотеки DLL.</param>
      <param name="pBstrName" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, the function sets &lt;c&gt;lpbstrName&lt;/c&gt; to a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the entry point.">Если значение не равно <see langword="null" />, функция задает для параметра <c>lpbstrName</c> значение <see langword="BSTR" />, содержащее имя точки входа.</param>
      <param name="pwOrdinal" vsli:raw="If not &lt;see langword=&quot;null&quot; /&gt;, and the function is defined by an ordinal, then &lt;c&gt;lpwOrdinal&lt;/c&gt; is set to point to the ordinal.">Если значение не равно <see langword="null" /> и функция определена порядковым номером, то параметр <c>lpwOrdinal</c> должен указывать на порядковый номер.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.">Извлекает строку документации, полный файл справки и путь к нему, а также идентификатор контекста разделов справки для заданного описания типа.</summary>
      <param name="index" vsli:raw="The ID of the member whose documentation is to be returned.">Идентификатор элемента, для которого возвращается документация.</param>
      <param name="strName" vsli:raw="When this method returns, contains the name of the item method. This parameter is passed uninitialized.">При возвращении данного метода содержит имя метода элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains a reference to the Help context associated with the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на контекст справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains the fully qualified name of the Help file. This parameter is passed uninitialized.">При возвращении данного метода содержит полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Возвращает строку документации, полное имя файла справки и путь к нему, используемый контекст локализации, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="memid" vsli:raw="The member identifier for the type description.">Идентификатор элемента для описания типа.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">После выполнения возврата этим методом содержит параметр <see langword="BSTR" /> с именем указанного элемента. Если вызывающему объекту не требуется имя элемента, параметр <paramref name="pbstrHelpString" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">После выполнения возврата этим методом содержит контекст локализации справки. Если вызывающему объекту не требуется контекст справки, параметр <paramref name="pdwHelpStringContext" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a &lt;see langword=&quot;BSTR&quot; /&gt; that contains the fully qualified name of the file containing the DLL used for the Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">После выполнения возврата этим методом содержит параметр <see langword="BSTR" />с полным именем файла, который, в свою очередь, содержит библиотеку DLL, используемую для файла справки. Если вызывающему объекту не требуется имя файла, параметр <paramref name="pbstrHelpStringDll" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data from the specified function.">Получает пользовательские данные из заданной функции.</summary>
      <param name="index" vsli:raw="The index of the function to get the custom data for.">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID, используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specified where to put the data. This parameter is passed uninitialized.">При возврате этого метода содержит <see langword="Object" /> для определения расположения размещаемых данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure that contains information about a specified function.">Возвращает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, содержащую сведения о заданной функции.</summary>
      <param name="index" vsli:raw="The index of the function description to return.">Индекс возвращаемого описания функции.</param>
      <param name="ppFuncDesc" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure that describes the specified function. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру <see langword="FUNCDESC" />, описывающую заданную функцию. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known DISPID, where the member name is not known (for example, when binding to a default member).">Привязывает к определенному элементу, основанному на известном идентификаторе DISPID, где имя элемента неизвестно (например, при привязке к элементу, используемому по умолчанию).</summary>
      <param name="memid" vsli:raw="The member identifier.">Идентификатор члена.</param>
      <param name="invKind" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.INVOKEKIND&quot; /&gt; values that specifies the kind of member identified by memid.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.INVOKEKIND" />, которые определяют тип члена (определяется memid).</param>
      <param name="pFuncIndex" vsli:raw="When this method returns, contains an index into the function. This parameter is passed uninitialized.">При возврате этого метода содержит индекс, используемый в функции. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary vsli:raw="Maps between member names and member IDs, and parameter names and parameter IDs.">Сопоставляет друг с другом имена и идентификаторы элементов и параметров.</summary>
      <param name="rgszNames" vsli:raw="An array of names to map.">Массив имен, которые следует сопоставить.</param>
      <param name="cNames" vsli:raw="The count of names to map.">Число сопоставляемых имен.</param>
      <param name="pMemId" vsli:raw="When this method returns, contains a reference to an array in which name mappings are placed. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на массив, в который помещены сопоставления имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the implementation type of the custom data.">Получает тип реализации пользовательских данных.</summary>
      <param name="index" vsli:raw="The index of the implementation type for the custom data.">Индекс типа реализации для пользовательских данных.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID, используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Runtime.InteropServices.IMPLTYPEFLAGS&quot; /&gt; value for one implemented interface or base interface in a type description.">Возвращает значение <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> для одного реализованного интерфейса или базового интерфейса в описании типа.</summary>
      <param name="index" vsli:raw="The index of the implemented interface or base interface.">Индекс реализованного интерфейса или базового интерфейса.</param>
      <param name="pImplTypeFlags" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;IMPLTYPEFLAGS&quot; /&gt; enumeration. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисление <see langword="IMPLTYPEFLAGS" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
      <summary vsli:raw="Retrieves marshaling information.">Извлекает сведения о маршалинге.</summary>
      <param name="memid" vsli:raw="The member ID that indicates which marshaling information is needed.">Идентификатор элемента, показывающий, какие необходимы сведения о маршалинге.</param>
      <param name="pBstrMops" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;opcode&quot; /&gt; string used in marshaling the fields of the structure described by the referenced type description, or returns &lt;see langword=&quot;null&quot; /&gt; if there is no information to return. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на строку <see langword="opcode" />, используемую при маршалинге полей структуры, описанной в описании ссылочного типа, либо возвращает <see langword="null" />, если сведения отсутствуют. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.">Извлекает переменную с указанным идентификатором (либо имя свойства или метода и его параметры), соответствующую заданному идентификатору функции.</summary>
      <param name="memid" vsli:raw="The ID of the member whose name (or names) is to be returned.">Идентификатор элемента, для которого возвращается имя (или имена).</param>
      <param name="rgBstrNames" vsli:raw="When this method returns, contains the name (or names) associated with the member. This parameter is passed uninitialized.">При возвращении данного метода содержит имя (или имена), связанное с элементом. Этот параметр передается неинициализированным.</param>
      <param name="cMaxNames" vsli:raw="The length of the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array.">Длина массива <paramref name="rgBstrNames" />.</param>
      <param name="pcNames" vsli:raw="When this method returns, contains the number of names in the &lt;paramref name=&quot;rgBstrNames&quot; /&gt; array. This parameter is passed uninitialized.">При возвращении данного метода содержит число имен в массиве <paramref name="rgBstrNames" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the specified custom data parameter.">Получает заданный параметр пользовательских данных.</summary>
      <param name="indexFunc" vsli:raw="The index of the function to get the custom data for.">Индекс функции, для которой следует получить пользовательские данные.</param>
      <param name="indexParam" vsli:raw="The index of the parameter of this function to get the custom data for.">Индекс параметра функции, для которого следует получить пользовательские данные.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">Идентификатор GUID, используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the referenced type descriptions, if a type description references other type descriptions.">Извлекает описания типов, на которые указывают ссылки, если описание типа ссылается на другие описания типов.</summary>
      <param name="hRef" vsli:raw="A handle to the referenced type description to return.">Возвращаемый дескриптор для описания ссылочного типа.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains the referenced type description. This parameter is passed uninitialized.">При возвращении данного метода содержит описание ссылочного типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetRefTypeOfImplType(System.Int32,System.Int32@)">
      <summary vsli:raw="Retrieves the type description of the implemented interface types, if a type description describes a COM class.">Извлекает описание типа для реализованных типов интерфейсов, если в описании типа описывается класс COM.</summary>
      <param name="index" vsli:raw="The index of the implemented type whose handle is returned.">Индекс реализованного типа, дескриптор которого возвращается.</param>
      <param name="href" vsli:raw="When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на дескриптор для реализованного интерфейса. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure that contains the attributes of the type description.">Возвращает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, содержащую атрибуты описания типа.</summary>
      <param name="ppTypeAttr" vsli:raw="When this method returns, contains a reference to the structure that contains the attributes of this type description. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру, содержащую атрибуты этого описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Retrieves the &lt;see langword=&quot;ITypeComp&quot; /&gt; interface for the type description, which enables a client compiler to bind to the type description's members.">Извлекает интерфейс <see langword="ITypeComp" /> описания типа, позволяющий компилятору клиента выполнить привязку к элементам описания типа.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;ITypeComp&quot; /&gt; of the containing type library. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на <see langword="ITypeComp" /> содержащей библиотеки типов. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeFlags(System.Int32@)">
      <summary vsli:raw="Returns the type flags without any allocations. This method returns a &lt;see langword=&quot;DWORD&quot; /&gt; type flag, which expands the type flags without growing the &lt;see langword=&quot;TYPEATTR&quot; /&gt; (type attribute).">Возвращает флаги типов без каких-либо распределений. Этот метод возвращает флаг типа <see langword="DWORD" />, который расширяет флаги типов без увеличения <see langword="TYPEATTR" /> (атрибут type).</summary>
      <param name="pTypeFlags" vsli:raw="When this method returns, contains a &lt;see langword=&quot;DWORD&quot; /&gt; reference to a &lt;see langword=&quot;TYPEFLAG&quot; /&gt;. This parameter is passed uninitialized.">При возврате этого метода содержит ссылку <see langword="DWORD" /> на <see langword="TYPEFLAG" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration quickly, without doing any allocations.">Возвращает перечисление <see langword="TYPEKIND" /> быстро, не выполняя распределения.</summary>
      <param name="pTypeKind" vsli:raw="When this method returns, contains a reference to a &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarCustData(System.Int32,System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the variable for the custom data.">Возвращает переменную для пользовательских данных.</summary>
      <param name="index" vsli:raw="The index of the variable to get the custom data for.">Индекс переменной, для которой будут получены пользовательские данные.</param>
      <param name="guid" vsli:raw="The GUID used to identify the data.">GUID, используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an &lt;see langword=&quot;Object&quot; /&gt; that specifies where to put the retrieved data. This parameter is passed uninitialized.">При возврате этого метода содержит объект <see langword="Object" /> для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary vsli:raw="Retrieves a &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable.">Извлекает структуру <see langword="VARDESC" />, описывающую указанную переменную.</summary>
      <param name="index" vsli:raw="The index of the variable description to return.">Индекс возвращаемого описания переменной.</param>
      <param name="ppVarDesc" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure that describes the specified variable. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на структуру <see langword="VARDESC" />, описывающую заданную переменную. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetVarIndexOfMemId(System.Int32,System.Int32@)">
      <summary vsli:raw="Binds to a specific member based on a known &lt;see langword=&quot;DISPID&quot; /&gt;, where the member name is not known (for example, when binding to a default member).">Привязывает к определенному элементу, основанному на известном идентификаторе <see langword="DISPID" />, где имя элемента неизвестно (например, при привязке к элементу, используемому по умолчанию).</summary>
      <param name="memid" vsli:raw="The member identifier.">Идентификатор члена.</param>
      <param name="pVarIndex" vsli:raw="When this method returns, contains an index of &lt;paramref name=&quot;memid&quot; /&gt;. This parameter is passed uninitialized.">При возврате этого метода этот параметр содержит индекс <paramref name="memid" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary vsli:raw="Invokes a method, or accesses a property of an object, that implements the interface described by the type description.">Вызывает метод или обращается к свойству объекта, реализующему интерфейс, описанный в описании типа.</summary>
      <param name="pvInstance" vsli:raw="A reference to the interface described by this type description.">Ссылка на интерфейс, описанный в данном описании типа.</param>
      <param name="memid" vsli:raw="Identifier of the interface member.">Идентификатор элемента интерфейса.</param>
      <param name="wFlags" vsli:raw="Flags describing the context of the invoke call.">Флаги, описывающие контекст используемого вызова.</param>
      <param name="pDispParams" vsli:raw="A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.">Ссылка на структуру, содержащую массив аргументов, массив идентификаторов DISPID именованных аргументов, а также количество элементов в каждом массиве.</param>
      <param name="pVarResult" vsli:raw="A reference to the location at which the result is to be stored. If &lt;paramref name=&quot;wFlags&quot; /&gt; specifies &lt;see langword=&quot;DISPATCH_PROPERTYPUT&quot; /&gt; or &lt;see langword=&quot;DISPATCH_PROPERTYPUTREF&quot; /&gt;, &lt;paramref name=&quot;pVarResult&quot; /&gt; is ignored. Set to &lt;see langword=&quot;null&quot; /&gt; if no result is desired.">Ссылка на место хранения результата. Если <paramref name="wFlags" /> задает <see langword="DISPATCH_PROPERTYPUT" /> или <see langword="DISPATCH_PROPERTYPUTREF" />, то параметр <paramref name="pVarResult" /> не учитывается. Если результат не требуется, можно задать значение <see langword="null" />.</param>
      <param name="pExcepInfo" vsli:raw="A pointer to an exception information structure, which is filled in only if &lt;see langword=&quot;DISP_E_EXCEPTION&quot; /&gt; is returned.">Указатель на структуру сведений об исключении, заполняемую только при возвращении <see langword="DISP_E_EXCEPTION" />.</param>
      <param name="puArgErr" vsli:raw="If &lt;see langword=&quot;Invoke&quot; /&gt; returns &lt;see langword=&quot;DISP_E_TYPEMISMATCH&quot; /&gt;, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates the index of the argument with incorrect type. If more than one argument returns an error, &lt;paramref name=&quot;puArgErr&quot; /&gt; indicates only the first argument with an error.">Если <see langword="Invoke" /> возвращает <see langword="DISP_E_TYPEMISMATCH" />, то параметр <paramref name="puArgErr" /> показывает индекс аргумента с неверным типом. Если ошибка возвращается для нескольких аргументов, <paramref name="puArgErr" /> показывает только первый из них.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseFuncDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.FUNCDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pFuncDesc" vsli:raw="A reference to the &lt;see langword=&quot;FUNCDESC&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="FUNCDESC" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseTypeAttr(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEATTR&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPEATTR" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="pTypeAttr" vsli:raw="A reference to the &lt;see langword=&quot;TYPEATTR&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="TYPEATTR" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.ReleaseVarDesc(System.IntPtr)">
      <summary vsli:raw="Releases a &lt;see langword=&quot;VARDESC&quot; /&gt; structure previously returned by the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see langword="VARDESC" />, ранее возвращенную методом <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="pVarDesc" vsli:raw="A reference to the &lt;see langword=&quot;VARDESC&quot; /&gt; structure to release.">Ссылка на освобождаемую структуру <see langword="VARDESC" />.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;ITypeLib&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Обнаруживает экземпляры описания типа в библиотеке типов.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for. This is an in/out parameter.">Имя, которое требуется найти. Это параметр In или Out.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Хэш-значение для ускорения поиска, вычисленное при помощи функции <see langword="LHashValOfNameSys" />. Если значение <paramref name="lHashVal" /> равно 0, то значение рассчитывается.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит массив указателей на описания типов, которые содержат имя, заданное в <paramref name="szNameBuf" />. Этот параметр передается неинициализированным.</param>
      <param name="rgMemId" vsli:raw="An array of the &lt;see langword=&quot;MEMBERID&quot; /&gt; 's of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. Cannot be &lt;see langword=&quot;null&quot; /&gt;.">Массив значений <see langword="MEMBERID" /> найденных элементов. <paramref name="rgMemId" />[i] является значением <see langword="MEMBERID" />, выполняющим индексацию в описании типа, заданном параметром <paramref name="ppTInfo" />[i]. Не может иметь значение <see langword="null" />.</param>
      <param name="pcFound" vsli:raw="On entry, indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">При входе показывает количество разыскиваемых экземпляров. Например, если <paramref name="pcFound" /> = 1 можно использовать для поиска первого экземпляра. Поиск прекращается после обнаружения первого экземпляра.
При выходе показывает число обнаруженных экземпляров. Если значения <see langword="in" /> и <see langword="out" /> параметра <paramref name="pcFound" /> идентичны, возможно найдены не все описания типа, содержащие нужное имя.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index" vsli:raw="The index of the type description whose documentation is to be returned.">Индекс описания типа, для которого возвращается документация.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that represents the name of the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку, представляющую имя заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains a string that represents the documentation string for the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку, представляющую строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит идентификатор контекста справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that represents the fully qualified name of the Help file. This parameter is passed uninitialized.">При возвращении данного метода содержит строку, представляющую полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Возвращает структуру, содержащую атрибуты библиотеки.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">При возвращении данного метода содержит структуру, содержащую атрибуты библиотеки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Позволяет компилятору клиента выполнить привязку к библиотечным типам, переменным, константам и глобальным функциям.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an instance of a &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит экземпляр <see langword="ITypeComp" /> для <see langword="ITypeLib" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Возвращает описание заданного типа из библиотеки.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">Индекс возвращаемого интерфейса <see langword="ITypeInfo" />.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит <see langword="ITypeInfo" /> с описанием типа, на который ссылается <paramref name="index" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Возвращает число описаний типов в библиотеке типов.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Число описаний типов в библиотеке типов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Загружает описание типа, соответствующее заданному идентификатору GUID.</summary>
      <param name="guid" vsli:raw="The IID of the interface or CLSID of the class whose type info is requested.">IID интерфейса или CLSID класса, информация о типе которого запрашивается.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">При возвращении данного метода содержит требуемый интерфейс <see langword="ITypeInfo" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Возвращает тип описания типа.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Индекс описания типа внутри библиотеки типов.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" /> для описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.</summary>
      <param name="szNameBuf" vsli:raw="The string to test. This is an in/out parameter.">Строка для проверки. Это параметр In или Out.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Хэш-значение для <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="szNameBuf" /> обнаружен в библиотеке типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />, первоначально полученную из метода <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">Структура <see langword="TLIBATTR" />, которую следует освободить.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <summary vsli:raw="Provides a managed definition of the &lt;see langword=&quot;ITypeLib2&quot; /&gt; interface.">Предоставляет управляемое определение интерфейса <see langword="ITypeLib2" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
      <summary vsli:raw="Finds occurrences of a type description in a type library.">Обнаруживает экземпляры описания типа в библиотеке типов.</summary>
      <param name="szNameBuf" vsli:raw="The name to search for.">Имя, которое требуется найти.</param>
      <param name="lHashVal" vsli:raw="A hash value to speed up the search, computed by the &lt;see langword=&quot;LHashValOfNameSys&quot; /&gt; function. If &lt;paramref name=&quot;lHashVal&quot; /&gt; is 0, a value is computed.">Хэш-значение для ускорения поиска, вычисленное при помощи функции <see langword="LHashValOfNameSys" />. Если значение <paramref name="lHashVal" /> равно 0, то значение рассчитывается.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains an array of pointers to the type descriptions that contain the name specified in &lt;paramref name=&quot;szNameBuf&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит массив указателей на описания типов, которые содержат имя, заданное в <paramref name="szNameBuf" />. Этот параметр передается неинициализированным.</param>
      <param name="rgMemId" vsli:raw="When this method returns, contains an array of the &lt;see langword=&quot;MEMBERID&quot; /&gt;s of the found items; &lt;paramref name=&quot;rgMemId&quot; /&gt; [i] is the &lt;see langword=&quot;MEMBERID&quot; /&gt; that indexes into the type description specified by &lt;paramref name=&quot;ppTInfo&quot; /&gt; [i]. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит массив идентификаторов <see langword="MEMBERID" /> найденных элементов; <paramref name="rgMemId" /> [i] является значением <see langword="MEMBERID" />, выполняющим индексацию в описании типа, заданном параметром <paramref name="ppTInfo" /> [i]. Этот параметр не может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pcFound" vsli:raw="On entry, a value, passed by reference, that indicates how many instances to look for. For example, &lt;paramref name=&quot;pcFound&quot; /&gt; = 1 can be called to find the first occurrence. The search stops when one instance is found.  &#xA;  &#xA; On exit, indicates the number of instances that were found. If the &lt;see langword=&quot;in&quot; /&gt; and &lt;see langword=&quot;out&quot; /&gt; values of &lt;paramref name=&quot;pcFound&quot; /&gt; are identical, there might be more type descriptions that contain the name.">На входе значение, переданное ссылкой, указывающее, сколько экземпляров следует искать. Например, если <paramref name="pcFound" /> = 1 можно использовать для поиска первого экземпляра. Поиск прекращается после обнаружения первого экземпляра.
При выходе показывает число обнаруженных экземпляров. Если значения <see langword="in" /> и <see langword="out" /> параметра <paramref name="pcFound" /> идентичны, возможно найдены не все описания типа, содержащие нужное имя.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetAllCustData(System.IntPtr)">
      <summary vsli:raw="Gets all custom data items for the library.">Возвращает все пользовательские элементы данных для библиотеки.</summary>
      <param name="pCustData" vsli:raw="A pointer to &lt;see langword=&quot;CUSTDATA&quot; /&gt;, which holds all custom data items.">Указатель на объект <see langword="CUSTDATA" />, который содержит все пользовательские элементы данных.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetCustData(System.Guid@,System.Object@)">
      <summary vsli:raw="Gets the custom data.">Возвращает пользовательские данные.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; , passed by reference, that is used to identify the data.">Параметр <see cref="T:System.Guid" />, передаваемый по ссылке и используемый для определения данных.</param>
      <param name="pVarVal" vsli:raw="When this method returns, contains an object that specifies where to put the retrieved data. This parameter is passed uninitialized.">При возврате этого метода содержит объект для определения расположения полученных данных. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned.">Индекс описания типа, для которого возвращается документация.</param>
      <param name="strName" vsli:raw="When this method returns, contains a string that specifies the name of the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку, задающую имя заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="strDocString" vsli:raw="When this method returns, contains the documentation string for the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит строку документации для заданного элемента. Этот параметр передается неинициализированным.</param>
      <param name="dwHelpContext" vsli:raw="When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.">При возвращении данного метода содержит идентификатор контекста справки, связанный с заданным элементом. Этот параметр передается неинициализированным.</param>
      <param name="strHelpFile" vsli:raw="When this method returns, contains a string that specifies the fully qualified name of the Help file. This parameter is passed uninitialized.">При возвращении данного метода содержит строку, задающую полное имя файла справки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, the localization context to use, and the context ID for the library Help topic in the Help file.">Позволяет получить строку документирования библиотеки, полное имя файла справки и путь к нему, контекст локализации, который следует использовать, и идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index" vsli:raw="An index of the type description whose documentation is to be returned; if &lt;paramref name=&quot;index&quot; /&gt; is -1, the documentation for the library is returned.">Индекс описания типа, документация по которому должна быть возвращена. Если параметр <paramref name="index" /> имеет значение -1, документация библиотеки возвращается.</param>
      <param name="pbstrHelpString" vsli:raw="When this method returns, contains a BSTR that specifies the name of the specified item. If the caller does not need the item name, &lt;paramref name=&quot;pbstrHelpString&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">При возвращении этот метод содержит параметр BSTR с именем указанного элемента. Если вызывающему объекту не требуется имя элемента, параметр <paramref name="pbstrHelpString" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pdwHelpStringContext" vsli:raw="When this method returns, contains the Help localization context. If the caller does not need the Help context, &lt;paramref name=&quot;pdwHelpStringContext&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">После выполнения возврата этим методом содержит контекст локализации справки. Если вызывающему объекту не требуется контекст справки, параметр <paramref name="pdwHelpStringContext" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <param name="pbstrHelpStringDll" vsli:raw="When this method returns, contains a BSTR that specifies the fully qualified name of the file containing the DLL used for Help file. If the caller does not need the file name, &lt;paramref name=&quot;pbstrHelpStringDll&quot; /&gt; can be &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">После выполнения возврата этим методом содержит параметр BSTR, указывающий полное имя файла, который, в свою очередь, содержит библиотеку DLL, используемую для файла справки. Если вызывающему объекту не требуется имя файла, параметр <paramref name="pbstrHelpStringDll" /> может иметь значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Возвращает структуру, содержащую атрибуты библиотеки.</summary>
      <param name="ppTLibAttr" vsli:raw="When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.">При возвращении данного метода содержит структуру, содержащую атрибуты библиотеки. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetLibStatistics(System.IntPtr,System.Int32@)">
      <summary vsli:raw="Returns statistics about a type library that are required for efficient sizing of hash tables.">Возвращает статистику о библиотеке типов, необходимую для эффективного определения размеров хэш-таблиц.</summary>
      <param name="pcUniqueNames" vsli:raw="A pointer to a count of unique names. If the caller does not need this information, set to &lt;see langword=&quot;null&quot; /&gt;.">Указатель на число уникальных имен. Если вызывающему объекту не требуются эти сведения, задайте значение <see langword="null" />.</param>
      <param name="pcchUniqueNames" vsli:raw="When this method returns, contains a pointer to a change in the count of unique names. This parameter is passed uninitialized.">При возвращении данного метода содержит указатель на изменение числа уникальных имен. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary vsli:raw="Enables a client compiler to bind to a library's types, variables, constants, and global functions.">Позволяет компилятору клиента выполнить привязку к библиотечным типам, переменным, константам и глобальным функциям.</summary>
      <param name="ppTComp" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeComp&quot; /&gt; instance for this &lt;see langword=&quot;ITypeLib&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит экземпляр <see langword="ITypeComp" /> для <see langword="ITypeLib" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the specified type description in the library.">Возвращает описание заданного типа из библиотеки.</summary>
      <param name="index" vsli:raw="An index of the &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface to return.">Индекс возвращаемого интерфейса <see langword="ITypeInfo" />.</param>
      <param name="ppTI" vsli:raw="When this method returns, contains an &lt;see langword=&quot;ITypeInfo&quot; /&gt; describing the type referenced by &lt;paramref name=&quot;index&quot; /&gt;. This parameter is passed uninitialized.">При возвращении данного метода содержит <see langword="ITypeInfo" /> с описанием типа, на который ссылается <paramref name="index" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Возвращает число описаний типов в библиотеке типов.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Число описаний типов в библиотеке типов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
      <summary vsli:raw="Retrieves the type description that corresponds to the specified GUID.">Загружает описание типа, соответствующее заданному идентификатору GUID.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt;, passed by reference, that represents the IID of the &lt;see langword=&quot;CLSID&quot; /&gt; interface of the class whose type info is requested.">Идентификатор <see cref="T:System.Guid" />, переданный ссылкой, представляющий IID интерфейса <see langword="CLSID" /> класса, для которого требуются сведения о типе.</param>
      <param name="ppTInfo" vsli:raw="When this method returns, contains the requested &lt;see langword=&quot;ITypeInfo&quot; /&gt; interface. This parameter is passed uninitialized.">При возвращении данного метода содержит требуемый интерфейс <see langword="ITypeInfo" />. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Возвращает тип описания типа.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Индекс описания типа внутри библиотеки типов.</param>
      <param name="pTKind" vsli:raw="When this method returns, contains a reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description. This parameter is passed uninitialized.">При возвращении данного метода содержит ссылку на перечисление <see langword="TYPEKIND" /> для описания типа. Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Строка для проверки.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Хэш-значение для <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="szNameBuf" /> обнаружен в библиотеке типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; structure originally obtained from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt; method.">Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />, первоначально полученную из метода <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; structure to release.">Структура <see langword="TLIBATTR" />, которую следует освободить.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <summary vsli:raw="Defines flags that apply to type libraries.">Определяет флаги, применяемые к библиотекам и типам.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FCONTROL">
      <summary vsli:raw="The type library describes controls and should not be displayed in type browsers intended for nonvisual objects.">Библиотеки типов описывают элементы управления и не отображаются в обозревателях типов, предназначенных для невизуальных объектов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHASDISKIMAGE">
      <summary vsli:raw="The type library exists in a persisted form on disk.">Библиотека типов хранится на диске.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FHIDDEN">
      <summary vsli:raw="The type library should not be displayed to users, although its use is not restricted. The type library should be used by controls. Hosts should create a new type library that wraps the control with extended properties.">Библиотеку типов не следует отображать для пользователей, хотя ее использование не ограничено. Библиотеку типов не следует использовать с помощью элементов управления. узлы должны создавать новую библиотеку типов, инкапсулирующую элемент управления с расширенными свойствами.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.LIBFLAGS.LIBFLAG_FRESTRICTED">
      <summary vsli:raw="The type library is restricted, and should not be displayed to users.">Библиотека типов ограничена и не должна отображаться для пользователей.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <summary vsli:raw="Contains information about how to transfer a structure element, parameter, or function return value between processes.">Содержит информацию о порядке передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.lpVarValue">
      <summary vsli:raw="Represents a pointer to a value that is being passed between processes.">Представляет указатель на значение, передаваемое между процессами.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMDESC.wParamFlags">
      <summary vsli:raw="Represents bitmask values that describe the structure element, parameter, or return value.">Представляет значения битовой маски, описывающие элемент структуры, параметр или возвращаемое значение.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <summary vsli:raw="Describes how to transfer a structure element, parameter, or function return value between processes.">Описывает порядок передачи элемента структуры, параметра или возвращаемого функцией значения из одного процесса в другой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASCUSTDATA">
      <summary vsli:raw="The parameter has custom data.">Для параметра заданы пользовательские данные.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FHASDEFAULT">
      <summary vsli:raw="The parameter has default behaviors defined.">Для параметра определено поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FIN">
      <summary vsli:raw="The parameter passes information from the caller to the callee.">Параметр передает сведения из вызывающего объекта в вызываемый объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FLCID">
      <summary vsli:raw="The parameter is the local identifier of a client application.">Этот параметр является локальным идентификатором клиентского приложения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOPT">
      <summary vsli:raw="The parameter is optional.">Это необязательный параметр.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FOUT">
      <summary vsli:raw="The parameter returns information from the callee to the caller.">Этот параметр возвращает сведения из вызываемого объекта в вызывающий объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_FRETVAL">
      <summary vsli:raw="The parameter is the return value of the member.">Этот параметр является значением, возвращаемым членом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.PARAMFLAG.PARAMFLAG_NONE">
      <summary vsli:raw="Does not specify whether the parameter passes or receives information.">Не задает, передает ли параметр сведения или получает их.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STATDATA&quot; /&gt; structure.">Предоставляет управляемое определение структуры <see langword="STATDATA" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ADVF&quot; /&gt; enumeration value that determines when the advisory sink is notified of changes in the data.">Представляет значение перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" />, определяющее, когда приемник будет уведомлен об изменениях в данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.IAdviseSink&quot; /&gt; interface that will receive change notifications.">Представляет интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" />, который будет получать уведомления об изменениях.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary vsli:raw="Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.">Представляет маркер, уникально определяющий вспомогательное соединение. Этот маркер возвращается методом, настраивающим вспомогательное соединение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.FORMATETC&quot; /&gt; structure.">Представляет структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> для данных, интересующих приемник уведомлений. Приемник получает уведомление об изменениях в данных, заданных этой структурой <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATSTG">
      <summary vsli:raw="Contains statistical information about an open storage, stream, or byte-array object.">Содержит статистические данные об открытом объекте хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.atime">
      <summary vsli:raw="Specifies the last access time for this storage, stream, or byte array.">Задает время последнего обращения к хранилищу, потоку или массиву байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.cbSize">
      <summary vsli:raw="Specifies the size, in bytes, of the stream or byte array.">Задает размер в байтах для потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.clsid">
      <summary vsli:raw="Indicates the class identifier for the storage object.">Указывает идентификатор класса для объекта хранилища.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.ctime">
      <summary vsli:raw="Indicates the creation time for this storage, stream, or byte array.">Показывает время создания хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfLocksSupported">
      <summary vsli:raw="Indicates the types of region locking supported by the stream or byte array.">Показывает типы региональных блокировок, поддерживаемые потоком или массивом байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfMode">
      <summary vsli:raw="Indicates the access mode that was specified when the object was opened.">Показывает режим доступа, заданный при открытии объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.grfStateBits">
      <summary vsli:raw="Indicates the current state bits of the storage object (the value most recently set by the &lt;see langword=&quot;IStorage::SetStateBits&quot; /&gt; method).">Показывает текущие биты состояния объекта хранилища (значение чаще всего устанавливается методом <see langword="IStorage::SetStateBits" />).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.mtime">
      <summary vsli:raw="Indicates the last modification time for this storage, stream, or byte array.">Показывает время последнего изменения хранилища, потока или массива байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName">
      <summary vsli:raw="Represents a pointer to a null-terminated string containing the name of the object described by this structure.">Представляет указатель на строку с завершающим нулем, содержащую имя объекта, описанного этой структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.reserved">
      <summary vsli:raw="Reserved for future use.">Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATSTG.type">
      <summary vsli:raw="Indicates the type of storage object, which is one of the values from the &lt;see langword=&quot;STGTY&quot; /&gt; enumeration.">Показывает тип объекта хранилища, являющегося одним из значений перечисления <see langword="STGTY" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;STGMEDIUM&quot; /&gt; structure.">Предоставляет управляемое определение структуры <see langword="STGMEDIUM" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary vsli:raw="Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; function. If &lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses default procedures to release the storage; otherwise, &lt;see langword=&quot;ReleaseStgMedium&quot; /&gt; uses the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Представляет указатель на экземпляр интерфейса, который позволяет отправляющему процессу контролировать способ освобождения хранилища при вызове функции <see langword="ReleaseStgMedium" /> получающим процессом. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> равняется <see langword="null" />, <see langword="ReleaseStgMedium" /> использует процедуры по умолчанию для освобождения хранилища; в противном случае <see langword="ReleaseStgMedium" /> использует заданный интерфейс <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary vsli:raw="Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.TYMED&quot; /&gt; enumeration.">Задает тип среды хранения. Процедура маршалинга и процедура распаковки используют это значение, чтобы определить, какой элемент объединения использовался. Это значение должно быть одним из элементов перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary vsli:raw="Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.">Представляет дескриптор, строку или указатель интерфейса, которые получающий процесс может использовать для доступа к передаваемым данным.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.SYSKIND">
      <summary vsli:raw="Identifies the target operating system platform.">Указывает целевую платформу операционной системы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_MAC">
      <summary vsli:raw="The target operating system for the type library is Apple Macintosh. By default, all data fields are aligned on even-byte boundaries.">Целевая операционная система для библиотеки типов — Apple Macintosh. По умолчанию все поля данных выравниваются по границам четных байтов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN16">
      <summary vsli:raw="The target operating system for the type library is 16-bit Windows systems. By default, data fields are packed.">Целевая операционная система для библиотеки типов — 16-разрядные системы Windows. Поля данных по умолчанию упакованы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN32">
      <summary vsli:raw="The target operating system for the type library is 32-bit Windows systems. By default, data fields are naturally aligned (for example, 2-byte integers are aligned on even-byte boundaries; 4-byte integers are aligned on quad-word boundaries, and so on).">Целевая операционная система для библиотеки типов — 32-разрядные системы Windows. Поля данных по умолчанию выровнены естественным образом (например, 2-байтовые целые числа выровнены по границам четных байтов, 4-байтовые целые числа — по границам четырехбайтовых слов и т. д.).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.SYSKIND.SYS_WIN64">
      <summary vsli:raw="The target operating system for the type library is 64-bit Windows systems.">Целевая операционная система для библиотеки типов — 64-разрядные системы Windows.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary vsli:raw="Provides the managed definition of the &lt;see langword=&quot;TYMED&quot; /&gt; structure.">Предоставляет управляемое определение структуры <see langword="TYMED" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary vsli:raw="The storage medium is an enhanced metafile. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteEnhMetaFile&quot; /&gt; to delete the bitmap.">Среда хранения представляет собой расширенный метафайл. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteEnhMetaFile" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary vsli:raw="The storage medium is a disk file identified by a path. If the &lt;see langword=&quot;STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;OpenFile&quot; /&gt; to delete the file.">Среда хранения представляет собой файл на диске, заданный с помощью пути. Если элемент <see langword="STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="OpenFile" /> для удаления файла.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary vsli:raw="The storage medium is a Graphics Device Interface (GDI) component (HBITMAP). If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteObject&quot; /&gt; to delete the bitmap.">Среда хранения представляет собой компонент "Интерфейс графических устройств" (GDI) (HBITMAP). Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteObject" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary vsli:raw="The storage medium is a global memory handle (HGLOBAL). Allocate the global handle with the GMEM_SHARE flag. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;GlobalFree&quot; /&gt; to release the memory.">Среда хранения представляет собой глобальный дескриптор памяти (HGLOBAL). Глобальный дескриптор выделяется с помощью флага GMEM_SHARE. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="GlobalFree" /> для освобождения памяти.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary vsli:raw="The storage medium is a storage component identified by an &lt;see langword=&quot;IStorage&quot; /&gt; pointer. The data is in the streams and storages contained by this &lt;see langword=&quot;IStorage&quot; /&gt; instance. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStorage::Release&quot; /&gt; to release the storage component.">Среда хранения представляет собой компонент хранения, заданный указателем <see langword="IStorage" />. Данные находятся в потоках и хранилищах, содержащихся в этом экземпляре <see langword="IStorage" />. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> не имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="IStorage::Release" /> для освобождения компонента хранения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary vsli:raw="The storage medium is a stream object identified by an &lt;see langword=&quot;IStream&quot; /&gt; pointer. Use &lt;see langword=&quot;ISequentialStream::Read&quot; /&gt; to read the data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is not &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;IStream::Release&quot; /&gt; to release the stream component.">Среда хранения представляет собой объект потока, заданный указателем <see langword="IStream" />. <see langword="ISequentialStream::Read" /> служит для чтения данных. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> не имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="IStream::Release" /> для освобождения компонента потока.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary vsli:raw="The storage medium is a metafile (HMETAFILE). Use the Windows or WIN32 functions to access the metafile's data. If the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.STGMEDIUM&quot; /&gt;&lt;see cref=&quot;F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&quot; /&gt; member is &lt;see langword=&quot;null&quot; /&gt;, the destination process should use &lt;see langword=&quot;DeleteMetaFile&quot; /&gt; to delete the bitmap.">Среда хранения представляет собой метафайл (HMETAFILE). Для доступа к данным метафайла используются функции Windows или WIN32. Если элемент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> имеет значение <see langword="null" />, процесс назначения должен использовать <see langword="DeleteMetaFile" /> для удаления растрового изображения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary vsli:raw="No data is being passed.">Данные не передаются.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <summary vsli:raw="Contains attributes of a &lt;see langword=&quot;UCOMITypeInfo&quot; /&gt;.">Содержит атрибуты <see langword="UCOMITypeInfo" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbAlignment">
      <summary vsli:raw="Specifies the byte alignment for an instance of this type.">Задает выравнивание по границе байта для экземпляра этого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeInstance">
      <summary vsli:raw="The size of an instance of this type.">Размер экземпляра этого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cbSizeVft">
      <summary vsli:raw="The size of this type's virtual method table (VTBL).">Размер таблицы виртуальных методов этого типа (VTBL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cFuncs">
      <summary vsli:raw="Indicates the number of functions on the interface this structure describes.">Указывает количество функций в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cImplTypes">
      <summary vsli:raw="Indicates the number of implemented interfaces on the interface this structure describes.">Указывает количество реализованных интерфейсов в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.cVars">
      <summary vsli:raw="Indicates the number of variables and data fields on the interface described by this structure.">Указывает число переменных и полей данных в интерфейсе, описанном структурой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.dwReserved">
      <summary vsli:raw="Reserved for future use.">Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.guid">
      <summary vsli:raw="The GUID of the type information.">Идентификатор GUID информации о типе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.idldescType">
      <summary vsli:raw="IDL attributes of the described type.">Атрибуты IDL описанного типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lcid">
      <summary vsli:raw="Locale of member names and documentation strings.">Языковой стандарт имен элементов и строк документации.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.lpstrSchema">
      <summary vsli:raw="Reserved for future use.">Зарезервировано для будущего использования.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.MEMBER_ID_NIL">
      <summary vsli:raw="A constant used with the &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidConstructor&quot; /&gt; and &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.memidDestructor&quot; /&gt; fields.">Константа, используемая с полями <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidConstructor" /> и <see cref="F:System.Runtime.InteropServices.TYPEATTR.memidDestructor" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidConstructor">
      <summary vsli:raw="ID of constructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">Идентификатор конструктора или <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, если конструктор отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.memidDestructor">
      <summary vsli:raw="ID of destructor, or &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL&quot; /&gt; if none.">Идентификатор деструктора или <see cref="F:System.Runtime.InteropServices.TYPEATTR.MEMBER_ID_NIL" />, если деструктор отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.tdescAlias">
      <summary vsli:raw="If &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEATTR.typekind&quot; /&gt; == &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS&quot; /&gt;, specifies the type for which this type is an alias.">Если <see cref="F:System.Runtime.InteropServices.TYPEATTR.typekind" /> == <see cref="F:System.Runtime.InteropServices.TYPEKIND.TKIND_ALIAS" />, определяет тип, для которого данный тип является псевдонимом.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.typekind">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEKIND&quot; /&gt; value describing the type this information describes.">Значение <see cref="T:System.Runtime.InteropServices.TYPEKIND" />, описывающее тип, описанный этими данными.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMajorVerNum">
      <summary vsli:raw="Major version number.">Основной номер версии.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wMinorVerNum">
      <summary vsli:raw="Minor version number.">Дополнительный номер версии.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEATTR.wTypeFlags">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; value describing this information.">Значение <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" />, описывающее эти данные.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <summary vsli:raw="Describes the type of a variable, return type of a function, or the type of a function parameter.">Описывает тип переменной, возвращаемый тип функции или тип параметра функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.lpValue">
      <summary vsli:raw="If the variable is &lt;see langword=&quot;VT_SAFEARRAY&quot; /&gt; or &lt;see langword=&quot;VT_PTR&quot; /&gt;, the &lt;see langword=&quot;lpValue&quot; /&gt; field contains a pointer to a &lt;see langword=&quot;TYPEDESC&quot; /&gt; that specifies the element type.">Если переменная равна <see langword="VT_SAFEARRAY" /> или <see langword="VT_PTR" />, то поле <see langword="lpValue" /> содержит указатель на <see langword="TYPEDESC" />, показывающий тип элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEDESC.vt">
      <summary vsli:raw="Indicates the variant type for the item described by this &lt;see langword=&quot;TYPEDESC&quot; /&gt;.">Показывает тип variant элемента, описанного при помощи <see langword="TYPEDESC" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <summary vsli:raw="Defines the properties and attributes of a type description.">Определяет свойства и атрибуты описания типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAGGREGATABLE">
      <summary vsli:raw="The class supports aggregation.">Класс поддерживает агрегирование.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FAPPOBJECT">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Описание типа, описывающее объект <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCANCREATE">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Экземпляры этого типа могут быть созданы при помощи <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FCONTROL">
      <summary vsli:raw="The type is a control from which other types will be derived and should not be displayed to users.">Этот тип является элементом управления, из которого производятся другие типы. Он не должен отображаться для пользователей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDISPATCHABLE">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly. This flag is computed; there is no Object Description Language for the flag.">Показывает, что интерфейс является производным от <see langword="IDispatch" />, прямо или косвенно. Этот флаг вычисляется: для него не существует языка описания объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FDUAL">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and VTBL binding.">Интерфейс поддерживает и <see langword="IDispatch" />, и привязку VTBL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FHIDDEN">
      <summary vsli:raw="The type should not be displayed to browsers.">Этот тип не должен отображаться для браузеров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FLICENSED">
      <summary vsli:raw="The type is licensed.">Этот тип лицензирован.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FNONEXTENSIBLE">
      <summary vsli:raw="The interface cannot add members at run time.">Интерфейс не может добавлять члены в процессе выполнения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FOLEAUTOMATION">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including VTBL binding support. Setting dual on an interface sets both this flag and the  &lt;see cref=&quot;F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL&quot; /&gt;. This flag is not allowed on dispinterfaces.">Типы, используемые в данном интерфейсе, полностью совместимы с автоматизацией, включая поддержку привязки VTBL. Установка двойного интерфейса задает и этот флаг, и <see cref="F:System.Runtime.InteropServices.TYPEFLAGS.TYPEFLAG_FDUAL" />. Этот флаг не разрешен на диспетчерских интерфейсах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPREDECLID">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">Этот тип определен заранее. Клиентское приложение должно автоматически создать единственный экземпляр объекта с данным атрибутом. Имя переменной, указывающей на данный объект, совпадает с именем класса объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FPROXY">
      <summary vsli:raw="Indicates that the interface will be using a proxy/stub dynamic link library. This flag specifies that the type library proxy should not be unregistered when the type library is unregistered.">Показывает, что интерфейс будет использовать динамическую библиотеку заглушки/прокси-сервера. Этот флаг показывает, что, если регистрация библиотеки типов удалена, не следует удалять регистрацию для прокси-сервера библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREPLACEABLE">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">Объект поддерживает <see langword="IConnectionPointWithDefault" />, и для него задано поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FRESTRICTED">
      <summary vsli:raw="Should not be accessible from macro languages. This flag is intended for system-level types or types that type browsers should not display.">Следует исключить доступность из макроязыков. Этот флаг предназначен для типов уровня системы или типов, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEFLAGS.TYPEFLAG_FREVERSEBIND">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking children, which is the reverse of the default behavior.">Показывает, что расширения имен основных интерфейсов должны проверяться перед проверкой дочерних элементов, в отличие от поведения по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <summary vsli:raw="Specifies various types of data and functions.">Указывает различные типы данных и функций.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ALIAS">
      <summary vsli:raw="A type that is an alias for another type.">Тип, являющийся псевдонимом для другого типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_COCLASS">
      <summary vsli:raw="A set of implemented components interfaces.">Набор реализованных интерфейсов компонентов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_DISPATCH">
      <summary vsli:raw="A set of methods and properties that are accessible through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;. By default, dual interfaces return &lt;see langword=&quot;TKIND_DISPATCH&quot; /&gt;.">Набор методов и свойств, доступных с помощью <see langword="IDispatch::Invoke" />. По умолчанию двойные интерфейсы возвращают значение <see langword="TKIND_DISPATCH" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_ENUM">
      <summary vsli:raw="A set of enumerators.">Набор перечислителей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_INTERFACE">
      <summary vsli:raw="A type that has virtual functions, all of which are pure.">Тип, содержащий виртуальные функции, каждая из которых — чистая.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MAX">
      <summary vsli:raw="End-of-enumeration marker.">Метка окончания перечисления.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_MODULE">
      <summary vsli:raw="A module that can have only static functions and data (for example, a DLL).">Модуль, который может содержать только статические функции и данные (например, динамическая библиотека DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_RECORD">
      <summary vsli:raw="A structure with no methods.">Структура без методов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPEKIND.TKIND_UNION">
      <summary vsli:raw="A union of all members that have an offset of zero.">Объединение всех методов, смещение которых равно нулю.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <summary vsli:raw="Identifies a particular type library and provides localization support for member names.">Определяет конкретную библиотеку типов и обеспечивает поддержку локализации для имен членов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.guid">
      <summary vsli:raw="Represents a globally unique library ID of a type library.">Предоставляет уникальную глобальную библиотеку идентификаторов для библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.lcid">
      <summary vsli:raw="Represents a locale ID of a type library.">Представляет код языка библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.syskind">
      <summary vsli:raw="Represents the target hardware platform of a type library.">Представляет целевую аппаратную платформу библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wLibFlags">
      <summary vsli:raw="Represents library flags.">Представляет флаги библиотеки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMajorVerNum">
      <summary vsli:raw="Represents the major version number of a type library.">Представляет номер основной версии библиотеки типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYPELIBATTR.wMinorVerNum">
      <summary vsli:raw="Represents the minor version number of a type library.">Представляет дополнительный номер версии библиотеки типов.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC">
      <summary vsli:raw="Describes a variable, constant, or data member.">Описывает переменную, константу или данные-член.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.desc">
      <summary vsli:raw="Contains information about a variable.">Содержит сведения о переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION">
      <summary vsli:raw="Contains information about a variable.">Содержит сведения о переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue">
      <summary vsli:raw="Describes a symbolic constant.">Описывает символьную константу.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst">
      <summary vsli:raw="Indicates the offset of this variable within the instance.">Показывает смещение переменной внутри экземпляра.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.elemdescVar">
      <summary vsli:raw="Contains the variable type.">Содержит тип переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.lpstrSchema">
      <summary vsli:raw="This field is reserved for future use.">Это поле зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.memid">
      <summary vsli:raw="Indicates the member ID of a variable.">Показывает идентификатор ID элемента переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.varkind">
      <summary vsli:raw="Defines how to marshal a variable.">Определяет, как маршалировать переменную.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARDESC.wVarFlags">
      <summary vsli:raw="Defines the properties of a variable.">Определяет свойства переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <summary vsli:raw="Identifies the constants that define the properties of a variable.">Указывает константы, определяющие свойства переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FBINDABLE">
      <summary vsli:raw="The variable supports data binding.">Переменная поддерживает привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTBIND">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in type information can have this attribute.">Переменная является единственным свойством, представляющим объект наилучшим образом. Только одна переменная в сведениях о типе может содержать этот атрибут.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type of &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.">Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента. Разрешается для элементов диспетчерских и обычных интерфейсов, но запрещен для модулей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FDISPLAYBIND">
      <summary vsli:raw="The variable is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE&quot; /&gt; must also be set.">Переменная, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.VARFLAGS.VARFLAG_FBINDABLE" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FHIDDEN">
      <summary vsli:raw="The variable should not be displayed to the user in a browser, although it exists and is bindable.">Эту переменную не следует показывать пользователю в браузере, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">Переменная сопоставляется так же, как собственные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FNONBROWSABLE">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">Переменная появляется в обозревателе объектов, но не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREADONLY">
      <summary vsli:raw="Assignment to the variable should not be allowed.">Не следует разрешать присвоение значений этой переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREPLACEABLE">
      <summary vsli:raw="Tags the interface as having default behaviors.">Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FREQUESTEDIT">
      <summary vsli:raw="When set, any attempt to directly change the property results in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;. The implementation of &lt;see langword=&quot;OnRequestEdit&quot; /&gt; determines if the change is accepted.">При установке все попытки прямого изменения свойства приводят к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />. Реализация <see langword="OnRequestEdit" /> определяет, принято ли изменение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FRESTRICTED">
      <summary vsli:raw="The variable should not be accessible from macro languages. This flag is intended for system-level variables or variables that you do not want type browsers to display.">Переменную следует сделать недоступной из макроязыков. Этот флаг предназначен для переменных уровня системы или для переменных, которые не нужно отображать в обозревателях типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FSOURCE">
      <summary vsli:raw="The variable returns an object that is a source of events.">Переменная возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARFLAGS.VARFLAG_FUIDEFAULT">
      <summary vsli:raw="The variable is the default display in the user interface.">Переменная отображается по умолчанию в пользовательском интерфейсе.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.VARKIND">
      <summary vsli:raw="Defines the kind of variable.">Определяет вид переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_CONST">
      <summary vsli:raw="The &lt;see langword=&quot;VARDESC&quot; /&gt; structure describes a symbolic constant. There is no memory associated with it.">Структура <see langword="VARDESC" /> описывает символьную константу. Связанная с ней память отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_DISPATCH">
      <summary vsli:raw="The variable can be accessed only through &lt;see langword=&quot;IDispatch::Invoke&quot; /&gt;.">Доступ к переменной может быть получен только при помощи <see langword="IDispatch::Invoke" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_PERINSTANCE">
      <summary vsli:raw="The variable is a field or member of the type. It exists at a fixed offset within each instance of the type.">Переменная является полем или элементом типа. Она существует в фиксированном смещении в каждом экземпляре типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.VARKIND.VAR_STATIC">
      <summary vsli:raw="There is only one instance of the variable.">Имеется только один экземпляр переменной.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
      <summary vsli:raw="Specifies the method to call when you unregister an assembly for use from COM; this allows for the execution of user-written code during the unregistration process.">Определяет метод, вызываемый при удалении регистрации сборки, используемой из COM. Это позволяет в процессе удаления регистрации выполнять код, написанный пользователем.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CurrencyWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_CY&quot; /&gt;.">Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_CY" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" />, используя <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">
        <see langword="Decimal" />, для которого требуется выполнить инкапсуляцию, а также маршалинг как типа <see langword="VT_CY" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CurrencyWrapper&quot; /&gt; class with the object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.CurrencyWrapper" />, используя объект, содержащий <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</summary>
      <param name="obj" vsli:raw="The object containing the &lt;see langword=&quot;Decimal&quot; /&gt; to be wrapped and marshaled as &lt;see langword=&quot;VT_CY&quot; /&gt;.">Объект, содержащий <see langword="Decimal" />, для инкапсуляции, а также для маршалинга как типа <see langword="VT_CY" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; type.">Параметр <paramref name="obj" /> не принадлежит к типу <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject">
      <summary vsli:raw="Gets the wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Возвращает инкапсулированный объект, который должен быть маршалирован как тип <see langword="VT_CY" />.</summary>
      <returns vsli:raw="The wrapped object to be marshaled as type &lt;see langword=&quot;VT_CY&quot; /&gt;.">Инкапсулированный объект, который должен быть маршалирован как тип <see langword="VT_CY" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method's IUnknown::QueryInterface calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">Указывает, может ли интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /> использоваться в вызовахIUnknown::QueryInterface метода <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Allow">
      <summary vsli:raw="IUnknown::QueryInterface method calls can use the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface. When you use this value, the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)&quot; /&gt; method overload functions like the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)&quot; /&gt; overload.">Вызовы метода IUnknown::QueryInterface могут использовать интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />. Если используется это значение, перегруженный метод <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" /> действует аналогично перегруженному методу <see cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceMode.Ignore">
      <summary vsli:raw="IUnknown::QueryInterface method calls should ignore the &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt; interface.">Вызовы метода IUnknown::QueryInterface должны игнорировать интерфейс <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <summary vsli:raw="Provides return values for the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method.">Предоставляет значения, возвращаемые методом <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Failed">
      <summary vsli:raw="The interface for a specific interface ID is not available. In this case, the returned interface is &lt;see langword=&quot;null&quot; /&gt;. E_NOINTERFACE is returned to the caller of IUnknown::QueryInterface.">Интерфейс, соответствующий определенному идентификатору интерфейса, недоступен. В этом случае возвращается интерфейс <see langword="null" />. Объекту, вызвавшему метод IUnknown::QueryInterface, возвращается значение E_NOINTERFACE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled">
      <summary vsli:raw="The interface pointer that is returned from the &lt;see cref=&quot;M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)&quot; /&gt; method can be used as the result of IUnknown::QueryInterface.">Указатель интерфейса, возвращаемый методом <see cref="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)" />, можно использовать в качестве результата метода IUnknown::QueryInterface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled">
      <summary vsli:raw="The custom &lt;see langword=&quot;QueryInterface&quot; /&gt; was not used. Instead, the default implementation of IUnknown::QueryInterface should be used.">Пользовательский интерфейс <see langword="QueryInterface" /> не используется. Вместо него следует использовать реализацию по умолчанию метода IUnknown::QueryInterface.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultCharSetAttribute">
      <summary vsli:raw="Specifies the value of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; enumeration. This class cannot be inherited.">Определяет значение перечисления <see cref="T:System.Runtime.InteropServices.CharSet" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultCharSetAttribute.#ctor(System.Runtime.InteropServices.CharSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultCharSetAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultCharSetAttribute" /> с заданным значением <see cref="T:System.Runtime.InteropServices.CharSet" />.</summary>
      <param name="charSet" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; values.">Одно из значений <see cref="T:System.Runtime.InteropServices.CharSet" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultCharSetAttribute.CharSet">
      <summary vsli:raw="Gets the default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">Возвращает значение по умолчанию <see cref="T:System.Runtime.InteropServices.CharSet" /> для любого вызова атрибута <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</summary>
      <returns vsli:raw="The default value of &lt;see cref=&quot;T:System.Runtime.InteropServices.CharSet&quot; /&gt; for any call to &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt;.">Значение по умолчанию <see cref="T:System.Runtime.InteropServices.CharSet" /> для любого вызова атрибута <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Определяет пути, которые используются для поиска библиотек DLL, предоставляющих функции для вызовов неуправляемого кода.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; class, specifying the paths to use when searching for the targets of platform invokes.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> с указанием путей для поиска целевых объектов вызовов неуправляемого кода.</summary>
      <param name="paths" vsli:raw="A bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Побитовое сочетание значений перечисления, указывающих пути, по которым функция <c>LoadLibraryEx</c> выполняет поиск во время вызовов неуправляемого кода.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
      <summary vsli:raw="Gets a bitwise combination of enumeration values that specify the paths that the &lt;c&gt;LoadLibraryEx&lt;/c&gt; function searches during platform invokes.">Возвращает побитовое сочетание значений перечисления, указывающих пути, по которым функция <c>LoadLibraryEx</c> выполняет поиск во время вызовов неуправляемого кода.</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify search paths for platform invokes.">Битовая комбинация значений перечисления, определяющих пути поиска для вызовов платформы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary vsli:raw="Sets the default value of a parameter when called from a language that supports default parameters. This class cannot be inherited.">Устанавливает значение параметра по умолчанию, которое используется, если параметр вызывается из языка, поддерживающего параметры по умолчанию. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultParameterValueAttribute&quot; /&gt; class with the default value of a parameter.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> значением параметра по умолчанию.</summary>
      <param name="value" vsli:raw="An object that represents the default value of a parameter.">Объект, представляющий значение параметра по умолчанию.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary vsli:raw="Gets the default value of a parameter.">Возвращает значение, присваиваемое параметру по умолчанию.</summary>
      <returns vsli:raw="An object that represents the default value of a parameter.">Объект, представляющий значение параметра по умолчанию.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispatchWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_DISPATCH&quot; /&gt;.">Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_DISPATCH" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispatchWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt; class with the object being wrapped.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DispatchWrapper" /> с объектом, заключаемым в оболочку.</summary>
      <param name="obj" vsli:raw="The object to be wrapped and converted to &lt;see cref=&quot;F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH&quot; /&gt;.">Объект, который необходимо заключить в оболочку и преобразовать в <see cref="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a class or an array.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;obj&quot; /&gt; does not support &lt;see langword=&quot;IDispatch&quot; /&gt;.">
        <paramref name="obj" /> не является классом или массивом.

или -
<paramref name="obj" /> не поддерживает <see langword="IDispatch" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter was marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;obj&quot; /&gt; parameter inherits from a type marked with a &lt;see cref=&quot;T:System.Runtime.InteropServices.ComVisibleAttribute&quot; /&gt; attribute that was passed a value of &lt;see langword=&quot;false&quot; /&gt;.">Параметр <paramref name="obj" /> был помечен атрибутом <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />, переданным как значение <see langword="false" />.
-или-
Параметр <paramref name="obj" /> наследуется от типа, помеченного атрибутом <see cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />, переданным как значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.DispatchWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">Возвращает объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.DispatchWrapper&quot; /&gt;.">Объект, заключенный в оболочку с помощью <see cref="T:System.Runtime.InteropServices.DispatchWrapper" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DispIdAttribute">
      <summary vsli:raw="Specifies the COM dispatch identifier (DISPID) of a method, field, or property.">Указывает идентификатор диспетчера COM (DISPID) для метода, поля или свойства.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DispIdAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DispIdAttribute&quot; /&gt; class with the specified DISPID.">Инициализирует новый экземпляр класса <see langword="DispIdAttribute" />, используя указанный идентификатор DISPID.</summary>
      <param name="dispId" vsli:raw="The DISPID for the member.">Идентификатор DISPID для этого члена.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DispIdAttribute.Value">
      <summary vsli:raw="Gets the DISPID for the member.">Возвращает идентификатор DISPID для члена.</summary>
      <returns vsli:raw="The DISPID for the member.">Идентификатор DISPID для этого члена.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportAttribute">
      <summary vsli:raw="Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.">Показывает, что в качестве статической точки входа неуправляемая динамическая библиотека (DLL) предоставляет метод с атрибутами.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.DllImportAttribute&quot; /&gt; class with the name of the DLL containing the method to import.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> с именем динамической библиотеки (DLL), содержащей импортируемый метод.</summary>
      <param name="dllName" vsli:raw="The name of the DLL that contains the unmanaged method. In .NET Framework, this can include an assembly display name, if the DLL is included in an assembly.">Имя динамической библиотеки (DLL), содержащей неуправляемый метод. Если DLL включена в сборку, это имя может включать отображаемое имя сборки.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention">
      <summary vsli:raw="Indicates the calling convention of an entry point.">Показывает соглашение о вызове для точки входа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method and controls name mangling.">Показывает способ маршалинга параметров строки для метода, а также управляет искажением имени.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
      <summary vsli:raw="Indicates the name or ordinal of the DLL entry point to be called.">Показывает имя или порядковый номер точки входа вызываемой динамической библиотеки (DLL).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling">
      <summary vsli:raw="Controls whether the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.CharSet&quot; /&gt; field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.">Контролирует запуск поиска имен точек входа помимо заданной точки в неуправляемой динамической библиотеке (DLL), выполняемого средой CLR, полем <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig">
      <summary vsli:raw="Indicates whether unmanaged methods that have &lt;see langword=&quot;HRESULT&quot; /&gt; return values are directly translated or whether &lt;see langword=&quot;HRESULT&quot; /&gt; return values are automatically converted to exceptions.">Показывают, выполняется ли для методов с возвращаемыми значениями <see langword="HRESULT" /> или <see langword="retval" /> непосредственное преобразование, либо возвращаемые значения <see langword="HRESULT" /> или <see langword="retval" /> автоматически преобразуются в исключения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee sets an error (&lt;see langword=&quot;SetLastError&quot; /&gt; on Windows or &lt;see langword=&quot;errno&quot; /&gt; on other platforms) before returning from the attributed method.">Показывает, вызывает ли вызываемый объект функцию <see langword="SetLastError" /> интерфейса Windows API перед возвращением из метода, использующего атрибуты.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
      <summary vsli:raw="Gets the name of the DLL file that contains the entry point.">Возвращает имя динамической библиотеки (DLL), содержащей точку входа.</summary>
      <returns vsli:raw="The name of the DLL file that contains the entry point.">Имя файла динамической библиотеки (DLL), содержащей точку входа.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportResolver">
      <summary vsli:raw="Provides a delegate used to resolve native libraries via callback.">Предоставляет делегат, используемый для разрешения собственных библиотек посредством обратного вызова.</summary>
      <param name="libraryName" vsli:raw="The native library to resolve.">Собственная библиотека для разрешения.</param>
      <param name="assembly" vsli:raw="The assembly requesting the resolution.">Сборка, запрашивающая разрешение.</param>
      <param name="searchPath" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the PInvoke, if any. Otherwise, the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; on the assembly, if any. Otherwise &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> в PInvoke, если таковой имеется. В противном случае — <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /> для сборки, если имеется. В противном случае — <see langword="null" />.</param>
      <returns vsli:raw="The handle for the loaded native library on success, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; on failure.">Дескриптор загруженной собственной библиотеки в случае успеха, <see cref="F:System.IntPtr.Zero" /> — в случае сбоя.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.DllImportSearchPath">
      <summary vsli:raw="Specifies the paths that are used to search for DLLs that provide functions for platform invokes.">Определяет пути, которые используются для поиска библиотек DLL, предоставляющих функции для вызовов неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory">
      <summary vsli:raw="Include the application directory in the DLL search path.">Включить каталог приложения в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory">
      <summary vsli:raw="When searching for assembly dependencies, include the directory that contains the assembly itself, and search that directory first. When used in Native AOT and single-file deployment models, the application's installation directory is considered the &quot;assembly directory&quot; and is searched.">При поиске зависимостей сборки включите каталог, содержащий саму сборку, и сначала выполните поиск в этом каталоге. Это значение используется платформой .NET Framework, прежде чем пути передаются в функцию Win32 LoadLibraryEx.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior">
      <summary vsli:raw="Search the application directory, and then call the Win32 LoadLibraryEx function with the &lt;c&gt;LOAD_WITH_ALTERED_SEARCH_PATH&lt;/c&gt; flag. This value is ignored if any other value is specified. Operating systems that do not support the &lt;see cref=&quot;T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&quot; /&gt; attribute use this value, and ignore other values.">Выполните поиск в каталоге приложения, а затем вызовите функцию Win32 LoadLibraryEx с флагом <c>LOAD_WITH_ALTERED_SEARCH_PATH</c>. Это значение пропускается, если указано любое другое значение. Операционные системы, которые не поддерживают атрибут <see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />, используют это значение и пропускают остальные значения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories">
      <summary vsli:raw="Include the application directory, the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory, and user directories in the DLL search path.">Включить каталог приложения, каталог <see langword="%WinDir%\System32" /> и каталоги пользователей в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.System32">
      <summary vsli:raw="Include the &lt;see langword=&quot;%WinDir%\System32&quot; /&gt; directory in the DLL search path.">Включить каталог <see langword="%WinDir%\System32" /> в путь поиска DLL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies">
      <summary vsli:raw="Search for the dependencies of a DLL in the folder where the DLL is located before searching other folders.">Выполнять поиск зависимостей библиотеки DLL в папке, где находится библиотека DLL, прежде чем в других папках.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories">
      <summary vsli:raw="Include any path that was explicitly added to the process-wide search path by using the Win32 &lt;c&gt;AddDllDirectory&lt;/c&gt; function.">Включить любой путь, который был явно добавлен в путь поиска по всему процессу с помощью функции Win32 <c>AddDllDirectory</c>.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ErrorWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_ERROR&quot; /&gt;.">Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_ERROR" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT that corresponds to the exception supplied.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> со значением HRESULT, которое относится к выданному исключению.</summary>
      <param name="e" vsli:raw="The exception to be converted to an error code.">Исключение для преобразования в код ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with the HRESULT of the error.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" />, используя значение HRESULT ошибки.</summary>
      <param name="errorCode" vsli:raw="The HRESULT of the error.">Значение HRESULT ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ErrorWrapper&quot; /&gt; class with an object containing the HRESULT of the error.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> с объектом, содержащим значение HRESULT ошибки.</summary>
      <param name="errorCode" vsli:raw="The object containing the HRESULT of the error.">Объект, содержащий значение HRESULT ошибки.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;errorCode&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">Параметр <paramref name="errorCode" /> не принадлежит типу <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode">
      <summary vsli:raw="Gets the error code of the wrapper.">Возвращает код ошибки обертки.</summary>
      <returns vsli:raw="The HRESULT of the error.">Значение HRESULT ошибки.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.GuidAttribute">
      <summary vsli:raw="Supplies an explicit &lt;see cref=&quot;T:System.Guid&quot; /&gt; when an automatic GUID is undesirable.">Предоставляет явный идентификатор <see cref="T:System.Guid" /> в случае, когда использование автоматического идентификатора GUID нежелательно.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.GuidAttribute&quot; /&gt; class with the specified GUID.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.GuidAttribute" /> с заданным идентификатором GUID.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; to be assigned.">Присваиваемый идентификатор <see cref="T:System.Guid" />.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">Возвращает идентификатор <see cref="T:System.Guid" /> класса.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; of the class.">Идентификатор <see cref="T:System.Guid" /> класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary vsli:raw="Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.">Отслеживает незавершенные обработчики и инициирует сбор мусора при достижении заданного порогового значения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name and a threshold at which to begin handle collection.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleCollector" />, используя имя и порог, достижение которого вызывает сбор дескрипторов.</summary>
      <param name="name" vsli:raw="A name for the collector. This parameter allows you to name collectors that track handle types separately.">Имя сборщика. Этот параметр позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Значение, определяющее точку, с которой должен начаться сбор.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.">Значение параметра <paramref name="initialThreshold" /> меньше 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleCollector" />, используя имя, порог начала сбора дескрипторов и порок, при котором должен быть выполнен сбор дескрипторов.</summary>
      <param name="name" vsli:raw="A name for the collector.  This parameter allows you to name collectors that track handle types separately.">Имя сборщика.  Этот параметр позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</param>
      <param name="initialThreshold" vsli:raw="A value that specifies the point at which collections should begin.">Значение, определяющее точку, с которой должен начаться сбор.</param>
      <param name="maximumThreshold" vsli:raw="A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.">Значение, определяющее точку, в которой должен быть выполнен сбор. Оно должно быть равно максимальному числу доступных дескрипторов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than 0.">Значение параметра <paramref name="initialThreshold" /> меньше 0.

или -
Значение параметра <paramref name="maximumThreshold" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;maximumThreshold&quot; /&gt; parameter is less than the &lt;paramref name=&quot;initialThreshold&quot; /&gt; parameter.">Значение параметра <paramref name="maximumThreshold" /> меньше значения параметра <paramref name="initialThreshold" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary vsli:raw="Increments the current handle count.">Увеличивает текущий счетчик дескрипторов.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">Значение свойства <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> меньше 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary vsli:raw="Gets the number of handles collected.">Возвращает количество собранных дескрипторов.</summary>
      <returns vsli:raw="The number of handles collected.">Количество собранных дескрипторов.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections should begin.">Возвращает значение, определяющее точку, с которой должен начаться сбор.</summary>
      <returns vsli:raw="A value that specifies the point at which collections should begin.">Значение, определяющее точку, с которой должен начаться сбор.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary vsli:raw="Gets a value that specifies the point at which collections must occur.">Возвращает значение, определяющее точку, в которой должен быть выполнен сбор.</summary>
      <returns vsli:raw="A value that specifies the point at which collections must occur.">Значение, определяющее точку, в которой должен быть выполнен сбор.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleCollector&quot; /&gt; object.">Возвращает имя объекта <see cref="T:System.Runtime.InteropServices.HandleCollector" />.</summary>
      <returns vsli:raw="This &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Name&quot; /&gt; property allows you to name collectors that track handle types separately.">Это свойство <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> позволяет называть сборщики, независимо отслеживающие типы дескрипторов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary vsli:raw="Decrements the current handle count.">Уменьшает текущий счетчик дескрипторов.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Runtime.InteropServices.HandleCollector.Count&quot; /&gt; property is less than 0.">Значение свойства <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> меньше 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleRef">
      <summary vsli:raw="Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.">Инкапсулирует управляемый объект, который содержит дескриптор для ресурса (передается в неуправляемый код с помощью вызова платформы).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; class with the object to wrap and a handle to the resource used by unmanaged code.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.HandleRef" />, используя инкапсулируемый объект и дескриптор ресурса, используемого неуправляемым кодом.</summary>
      <param name="wrapper" vsli:raw="A managed object that should not be finalized until the platform invoke call returns.">Управляемый объект, который не следует завершать до возвращения из вызова неуправляемого кода.</param>
      <param name="handle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that indicates a handle to a resource.">Указатель<see cref="T:System.IntPtr" />, показывающий дескриптор для ресурса.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Handle">
      <summary vsli:raw="Gets the handle to a resource.">Возвращает дескриптор для ресурса.</summary>
      <returns vsli:raw="The handle to a resource.">Дескриптор для ресурса.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
      <summary vsli:raw="Returns the handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Возвращает дескриптор для ресурса указанного объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value" vsli:raw="The object that needs a handle.">Объект, для которого требуется дескриптор.</param>
      <returns vsli:raw="The handle to a resource of the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Дескриптор для ресурса указанного объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
      <summary vsli:raw="Returns the internal integer representation of a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Возвращает внутреннее целочисленное представление объекта <see cref="T:System.Runtime.InteropServices.HandleRef" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object to retrieve an internal integer representation from.">Объект <see cref="T:System.Runtime.InteropServices.HandleRef" /> для извлечения внутреннего целочисленного представления.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents a &lt;see cref=&quot;T:System.Runtime.InteropServices.HandleRef&quot; /&gt; object.">Объект <see cref="T:System.IntPtr" />, представляющий объект <see cref="T:System.Runtime.InteropServices.HandleRef" />.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleRef.Wrapper">
      <summary vsli:raw="Gets the object holding the handle to a resource.">Возвращает объект, содержащий дескриптор для ресурса.</summary>
      <returns vsli:raw="The object holding the handle to a resource.">Объект, содержащий дескриптор для ресурса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomAdapter">
      <summary vsli:raw="Provides a way for clients to access the actual object, rather than the adapter object handed out by a custom marshaler.">Позволяет клиентам получать доступ к фактическому объекту, а не к объекту адаптера, предоставленному пользовательским упаковщиком.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomAdapter.GetUnderlyingObject">
      <summary vsli:raw="Provides access to the underlying object wrapped by a custom marshaler.">Предоставляет доступ к базовому объекту, упакованному настраиваемым модулем упаковки и передачи.</summary>
      <returns vsli:raw="The object contained by the adapter object.">Объект, содержащийся в объекте адаптера.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomFactory">
      <summary vsli:raw="Enables users to write activation code for managed objects that extend &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt;.">Позволяет пользователям создавать код активизации для управляемых объектов, расширяющих <see cref="T:System.MarshalByRefObject" />,.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified type.">Создает новый экземпляр заданного типа.</summary>
      <param name="serverType" vsli:raw="The type to activate.">Активируемый тип.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.MarshalByRefObject&quot; /&gt; associated with the specified type.">Поставщик <see cref="T:System.MarshalByRefObject" />, связанный с указанным типом.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomMarshaler">
      <summary vsli:raw="Provides custom wrappers for handling method calls.">Предоставляет настраиваемые оболочки, обрабатывающие вызовы методов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
      <summary vsli:raw="Performs necessary cleanup of the managed data when it is no longer needed.">Выполняет необходимую очистку управляемых данных, если они больше не нужны.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be destroyed.">Управляемый объект, который необходимо уничтожить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary vsli:raw="Performs necessary cleanup of the unmanaged data when it is no longer needed.">Выполняет необходимую очистку неуправляемых данных, если они больше не нужны.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be destroyed.">Указатель на неуправляемые данные, которые необходимо уничтожить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
      <summary vsli:raw="Returns the size of the native data to be marshaled.">Возвращает размер собственных данных для маршалинга.</summary>
      <returns vsli:raw="The size, in bytes, of the native data.">Размер собственных данных в байтах.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
      <summary vsli:raw="Converts the managed data to unmanaged data.">Преобразует управляемые данные в неуправляемые.</summary>
      <param name="ManagedObj" vsli:raw="The managed object to be converted.">Управляемый объект, который необходимо преобразовать.</param>
      <returns vsli:raw="A pointer to the COM view of the managed object.">Указатель на COM-представление управляемого объекта.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary vsli:raw="Converts the unmanaged data to managed data.">Преобразует неуправляемые данные в управляемые.</summary>
      <param name="pNativeData" vsli:raw="A pointer to the unmanaged data to be wrapped.">Указатель на неуправляемые данные, которые необходимо инкапсулировать.</param>
      <returns vsli:raw="An object that represents the managed view of the COM data.">Объект, представляющий управляемое представление данных модели COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ICustomQueryInterface">
      <summary vsli:raw="Enables developers to provide a custom, managed implementation of the IUnknown::QueryInterface(REFIID riid, void **ppvObject) method.">Позволяет разработчикам предоставлять собственную управляемую реализацию метода IUnknown::QueryInterface(REFIID riid, void **ppvObject).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Returns an interface according to a specified interface ID.">Возвращает интерфейс, соответствующий указанному идентификатору интерфейса.</summary>
      <param name="iid" vsli:raw="The GUID of the requested interface.">Идентификатор GUID запрашиваемого интерфейса.</param>
      <param name="ppv" vsli:raw="A reference to the requested interface, when this method returns.">Ссылка на запрашиваемый интерфейс (когда данный метод возвращает значение).</param>
      <returns vsli:raw="One of the enumeration values that indicates whether a custom implementation of IUnknown::QueryInterface was used.">Одно из значений перечисления, указывающих, используется ли пользовательская реализация интерфейса IUnknown::QueryInterface.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
      <summary vsli:raw="Indicates that the types defined within an assembly were originally defined in a type library.">Показывает, что определенные в сборке типы были исходно определены в библиотеке типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute&quot; /&gt; class with the name of the original type library file.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ImportedFromTypeLibAttribute" /> с именем файла исходной библиотеки типов.</summary>
      <param name="tlbFile" vsli:raw="The location of the original type library file.">Местоположение файла исходной библиотеки типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ImportedFromTypeLibAttribute.Value">
      <summary vsli:raw="Gets the name of the original type library file.">Возвращает местоположение файла исходной библиотеки типов.</summary>
      <returns vsli:raw="The name of the original type library file.">Имя файла исходной библиотеки типов.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InterfaceTypeAttribute">
      <summary vsli:raw="Indicates whether a managed interface is dual, dispatch-only, or &lt;see langword=&quot;IUnknown&quot; /&gt; -only when exposed to COM.">Указывает, является ли интерфейс при предоставлении COM сдвоенным, диспетчерским или только <see langword="IUnknown" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />.</summary>
      <param name="interfaceType" vsli:raw="Describes how the interface should be exposed to COM clients.">Описывает способ предоставления интерфейса клиентам COM.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InterfaceTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; enumeration member.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InterfaceTypeAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />.</summary>
      <param name="interfaceType" vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; values that describes how the interface should be exposed to COM clients.">Одно из значений <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающих способ предоставления интерфейса клиентам COM.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">Возвращает значение <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающее способ предоставления интерфейса COM.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.ComInterfaceType&quot; /&gt; value that describes how the interface should be exposed to COM.">Значение <see cref="T:System.Runtime.InteropServices.ComInterfaceType" />, описывающее способ предоставления интерфейса COM.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidComObjectException">
      <summary vsli:raw="The exception thrown when an invalid COM object is used.">Исключение, вызванное использованием недопустимого COM-объекта.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with default properties.">Инициализирует новый экземпляр класса <see langword="InvalidComObjectException" /> со свойствами по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;COMException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see langword="COMException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;InvalidComObjectException&quot; /&gt; with a message.">Инициализирует новый экземпляр класса <see langword="InvalidComObjectException" /> с сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidComObjectException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InvalidComObjectException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <summary vsli:raw="The exception thrown by the marshaler when it encounters an argument of a variant type that can not be marshaled to managed code.">При обнаружении аргумента типа variant, маршалинг которого в управляемый код выполнить невозможно, модуль маршалинга вызывает исключение.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;InvalidOleVariantTypeException&quot; /&gt; class with a specified message.">Инициализирует новый экземпляр класса <see langword="InvalidOleVariantTypeException" /> с заданным сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.InvalidOleVariantTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.LCIDConversionAttribute">
      <summary vsli:raw="Indicates that a method's unmanaged signature expects a locale identifier (LCID) parameter.">Указывает, что неуправляемая подпись метода предполагает наличие параметра идентификатора языкового стандарта LCID.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.LCIDConversionAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;LCIDConversionAttribute&quot; /&gt; class with the position of the LCID in the unmanaged signature.">Инициализирует новый экземпляр класса <see langword="LCIDConversionAttribute" />, используя позицию идентификатора LCID в неуправляемой подписи.</summary>
      <param name="lcid" vsli:raw="Indicates the position of the LCID argument in the unmanaged signature, where 0 is the first argument.">Указывает позицию аргумента LCID в неуправляемой подписи, в которой первым аргументом является 0.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.LCIDConversionAttribute.Value">
      <summary vsli:raw="Gets the position of the LCID argument in the unmanaged signature.">Возвращает позицию аргумента LCID в неуправляемой подписи.</summary>
      <returns vsli:raw="The position of the LCID argument in the unmanaged signature, where 0 is the first argument.">Позиция аргумента LCID в неуправляемой подписи, в которой первым аргументом является 0.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
      <summary vsli:raw="Provides support for user customization of interop stubs in managed-to-COM interop scenarios.">Обеспечивает поддержку пользовательской настройки заглушек взаимодействия в сценариях с управляемым COM-взаимодействием.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute&quot; /&gt; class with the specified class type and method name.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> с заданным типом класса и именем метода.</summary>
      <param name="classType" vsli:raw="The class that contains the required stub method.">Класс, содержащий требуемый метод-заглушку.</param>
      <param name="methodName" vsli:raw="The name of the stub method.">Имя метода-заглушки.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;methodName&quot; /&gt; cannot be found.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method is not static or non-generic.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method's parameter list does not match the expected parameter list for the stub.">
        <paramref name="methodName" /> не найден.

или -
Метод не является статическим или универсальным.

или -
Список параметров метода не соответствует списку параметров, ожидаемых заглушкой.</exception>
      <exception cref="T:System.MethodAccessException" vsli:raw="The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.">Интерфейс, содержащий управляемый метод взаимодействия, не имеет доступа к методу-заглушке, поскольку метод-заглушка имеет закрытый или защищенный доступ, или из-за проблемы безопасности.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType">
      <summary vsli:raw="Gets the class that contains the required stub method.">Получает класс, содержащий требуемый метод-заглушку.</summary>
      <returns vsli:raw="The class that contains the customized interop stub.">Класс, содержащий настроенную заглушку взаимодействия.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName">
      <summary vsli:raw="Gets the name of the stub method.">Получает имя метода-заглушки.</summary>
      <returns vsli:raw="The name of a customized interop stub.">Имя настроенной заглушки взаимодействия.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Marshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.">Предоставляет коллекцию методов для выделения неуправляемой памяти, копирования блоков неуправляемой памяти и преобразования управляемых типов в неуправляемые, а также прочих разнообразных методов, используемых при взаимодействии с неуправляемым кодом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
      <summary vsli:raw="Increments the reference count on the specified interface.">Увеличивает счетчик ссылок для указанного интерфейса.</summary>
      <param name="pUnk" vsli:raw="The interface reference count to increment.">Увеличиваемый счетчик ссылок интерфейса.</param>
      <returns vsli:raw="The new value of the reference count on the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">Новое значение счетчика ссылок для параметра <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
      <summary vsli:raw="Allocates a block of memory of specified size from the COM task memory allocator.">Выделяет блок памяти указанного размера из механизма распределения памяти для задач COM.</summary>
      <param name="cb" vsli:raw="The size of the block of memory to be allocated.">Размер выделяемого блока памяти.</param>
      <returns vsli:raw="An integer representing the address of the block of memory allocated. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Целое число, представляющее адрес выделенного блока памяти. Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the specified number of bytes.">Выделяет память из неуправляемой памяти процесса, используя заданное количество байтов.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">Требуемое количество байтов памяти.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Указатель на только что выделенную память. Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
      <summary vsli:raw="Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.">Выделяет память из неуправляемой памяти процесса, используя указатель на заданное количество байтов.</summary>
      <param name="cb" vsli:raw="The required number of bytes in memory.">Требуемое количество байтов памяти.</param>
      <returns vsli:raw="A pointer to the newly allocated memory. This memory must be released using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt; method.">Указатель на только что выделенную память. Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
      <summary vsli:raw="Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.">Указывает, доступны ли для очистки вызываемые оболочки времени выполнения (RCW) из какого-либо контекста.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any RCWs available for cleanup; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если есть доступные для очистки вызываемые оболочки времени выполнения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
      <summary vsli:raw="Gets an interface pointer identified by the specified moniker.">Возвращает указатель интерфейса, определенный указанным моникером.</summary>
      <param name="monikerName" vsli:raw="The moniker corresponding to the desired interface pointer.">Моникер, соответствующий указателю нужного интерфейса.</param>
      <returns vsli:raw="An object containing a reference to the interface pointer identified by the &lt;paramref name=&quot;monikerName&quot; /&gt; parameter. A moniker is a name, and in this case, the moniker is defined by an interface.">Объект, содержащий ссылку на указатель интерфейса, идентифицируемый параметром <paramref name="monikerName" />. Моникер — это имя, в данном случае определенное интерфейсом.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="An unrecognized HRESULT was returned by the unmanaged &lt;see langword=&quot;BindToMoniker&quot; /&gt; method.">Нераспознанное значение HRESULT возвращено неуправляемым методом <see langword="BindToMoniker" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
      <summary vsli:raw="Changes the strength of an object's COM Callable Wrapper (CCW) handle.">Изменяет строгость дескриптора вызываемой оболочки COM (CCW) объекта.</summary>
      <param name="otp" vsli:raw="The object whose CCW holds a reference counted handle. The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.">Объект, CCW-оболочка которого содержит дескриптор счетчика ссылок. Этот дескриптор является строгим, если значение счетчика CCW-оболочки больше нуля; в противном случае он является слабым.</param>
      <param name="fIsWeak" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to change the strength of the handle on the &lt;paramref name=&quot;otp&quot; /&gt; parameter to weak, regardless of its reference count; &lt;see langword=&quot;false&quot; /&gt; to reset the handle strength on &lt;paramref name=&quot;otp&quot; /&gt; to be reference counted.">Значение <see langword="true" />, чтобы сделать дескриптор параметра <paramref name="otp" /> менее строгим независимо от числа ссылок; значение <see langword="false" />, чтобы сбросить значение строгости дескриптора параметра <paramref name="otp" /> и сделать его зависимым от числа ссылок.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
      <summary vsli:raw="Notifies the runtime to clean up all Runtime Callable Wrappers (RCWs) allocated in the current context.">Предписывает среде выполнения очистить все вызываемые оболочки времени выполнения (RCW), выделенные в текущем контексте.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива 8-битных целых чисел без знака в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива символов в неуправляемый указатель памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива чисел с плавающей запятой двойной точности в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива 16-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива 32-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива 64-битных целых чисел со знаком в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 8-битных целых чисел без знака.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed character array.">Копирует данные из указателя неуправляемой памяти в управляемый массив символов.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.">Копирует данные из неуправляемого указателя памяти в управляемый массив чисел с плавающей запятой двойной точности.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 16-битных целых чисел со знаком.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 32-битных целых чисел со знаком.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 64-битных целых чисел со знаком.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array.">Копирует данные из указателя неуправляемой памяти в управляемый массив <see cref="T:System.IntPtr" />.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.">Копирует данные из указателя неуправляемой памяти в управляемый массив чисел с плавающей запятой одиночной точности.</summary>
      <param name="source" vsli:raw="The memory pointer to copy from.">Указатель памяти, из которого выполняется копирование.</param>
      <param name="destination" vsli:raw="The array to copy to.">Массив для копирования данных.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the destination array where copying should start.">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива <see cref="T:System.IntPtr" /> в неуправляемый указатель памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
      <summary vsli:raw="Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.">Копирует данные из одномерного управляемого массива чисел с плавающей запятой одинарной точности в указатель неуправляемой памяти.</summary>
      <param name="source" vsli:raw="The one-dimensional array to copy from.">Одномерный массив, из которого выполняется копирование.</param>
      <param name="startIndex" vsli:raw="The zero-based index in the source array where copying should start.">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</param>
      <param name="destination" vsli:raw="The memory pointer to copy to.">Указатель памяти, в который выполняется копирование.</param>
      <param name="length" vsli:raw="The number of array elements to copy.">Число копируемых элементов массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;length&quot; /&gt; are not valid.">
        <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt;, &lt;paramref name=&quot;startIndex&quot; /&gt;, &lt;paramref name=&quot;destination&quot; /&gt;, or &lt;paramref name=&quot;length&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
      <summary vsli:raw="Aggregates a managed object with the specified COM object.">Объединяет управляемый объект с заданным COM-объектом.</summary>
      <param name="pOuter" vsli:raw="The outer &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">Внешний указатель <see langword="IUnknown" />.</param>
      <param name="o" vsli:raw="An object to aggregate.">Объект для объединения.</param>
      <returns vsli:raw="The inner &lt;see langword=&quot;IUnknown&quot; /&gt; pointer of the managed object.">Внутренний указатель <see langword="IUnknown" /> управляемого объекта.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Aggregates a managed object of the specified type with the specified COM object.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Объединяет управляемый объект заданного типа с заданным COM-объектом.</summary>
      <param name="pOuter" vsli:raw="The outer IUnknown pointer.">Внешний указатель IUnknown.</param>
      <param name="o" vsli:raw="The managed object to aggregate.">управляемый объект для агрегации.</param>
      <typeparam name="T" vsli:raw="The type of the managed object to aggregate.">тип управляемого объекта для агрегации.</typeparam>
      <returns vsli:raw="The inner IUnknown pointer of the managed object.">Внутренний указатель IUnknown управляемого объекта.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is a Windows Runtime object.">
        <paramref name="o" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
      <summary vsli:raw="Wraps the specified COM object in an object of the specified type.">Инкапсулирует указанный COM-объект в объекте заданного типа.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">Объект, который следует упаковать.</param>
      <param name="t" vsli:raw="The type of wrapper to create.">Тип создаваемой оболочки.</param>
      <returns vsli:raw="The newly wrapped object that is an instance of the desired type.">Новый инкапсулированный объект, являющийся экземпляром нужного типа.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">Параметр <paramref name="t" /> должен быть производным от <see langword="__ComObject" />.

или -
<paramref name="t" /> относится к типу Среда выполнения Windows.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the destination type because it does not support all required interfaces.">Параметр <paramref name="o" /> нельзя преобразовать в результирующий тип, так как он не поддерживает все требуемые интерфейсы.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Wraps the specified COM object in an object of the specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Инкапсулирует указанный COM-объект в объекте заданного типа.</summary>
      <param name="o" vsli:raw="The object to be wrapped.">Объект, который следует упаковать.</param>
      <typeparam name="T" vsli:raw="The type of object to wrap.">Тип пакуемого объекта.</typeparam>
      <typeparam name="TWrapper" vsli:raw="The type of object to return.">Тип возвращаемого объекта.</typeparam>
      <returns vsli:raw="The newly wrapped object.">Только что Инкапсулированный объект.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; must derive from &lt;see langword=&quot;__ComObject&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;typeparamref name=&quot;T&quot; /&gt; is a Windows Runtime type.">Параметр <typeparamref name="T" /> должен быть производным от <see langword="__ComObject" />.

или -
<typeparamref name="T" /> относится к типу Среда выполнения Windows.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; cannot be converted to the &lt;paramref name=&quot;TWrapper&quot; /&gt; because it does not support all required interfaces.">Параметр <paramref name="o" /> не может быть преобразован в <paramref name="TWrapper" />, так как он не поддерживает все необходимые интерфейсы.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Frees all substructures that the specified unmanaged memory block points to.">Освобождает все вложенные структуры, на которые указывает заданный блок неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <param name="structuretype" vsli:raw="Type of a formatted class. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Тип отформатированного класса. Предоставляет сведения распределения, необходимые для удаления буфера из параметра <paramref name="ptr" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">Параметр <paramref name="structureType" /> обеспечивает автоматическое распределение. Вместо него следует использовать последовательный или явный вариант.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Frees all substructures of a specified type that the specified unmanaged memory block points to.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Освобождает все вложенные структуры указанного типа, на которые указывает заданный блок неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <typeparam name="T" vsli:raw="The type of the formatted structure. This provides the layout information necessary to delete the buffer in the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Тип отформатированной структуры. Предоставляет сведения распределения, необходимые для удаления буфера из параметра <paramref name="ptr" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;T&quot; /&gt; has an automatic layout. Use sequential or explicit instead.">Параметр <typeparamref name="T" /> обеспечивает автоматическое распределение. Вместо него следует использовать последовательный или явный вариант.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
      <summary vsli:raw="Releases all references to a Runtime Callable Wrapper (RCW) by setting its reference count to 0.">Освобождает все ссылки на вызываемую оболочку времени выполнения, присваивая ее счетчику ссылок значение 0.</summary>
      <param name="o" vsli:raw="The RCW to be released.">Освобождаемая оболочка CLR.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with the &lt;paramref name=&quot;o&quot; /&gt; parameter, which is 0 (zero) if the release is successful.">Новое значение счетчика ссылок для вызываемой оболочки времени выполнения, связанной с параметром <paramref name="o" />, равное нулю (0), если высвобождение прошло успешно.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">
        <paramref name="o" /> не является допустимым COM-объектом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a &lt;see langword=&quot;BSTR&quot; /&gt; using the COM SysFreeString function.">Освобождает строку <see langword="BSTR" /> с помощью функции COM SysFreeString.</summary>
      <param name="ptr" vsli:raw="The address of the BSTR to be freed.">Адрес освобождаемой строки BSTR.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
      <summary vsli:raw="Frees a block of memory allocated by the unmanaged COM task memory allocator.">Освобождает блок памяти, выделенный неуправляемым механизмом распределения памяти для задач COM.</summary>
      <param name="ptr" vsli:raw="The address of the memory to be freed.">Адрес освобождаемой памяти.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
      <summary vsli:raw="Frees memory previously allocated from the unmanaged memory of the process.">Освобождает память, выделенную ранее из неуправляемой памяти процесса.</summary>
      <param name="hglobal" vsli:raw="The handle returned by the original matching call to &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Дескриптор, возвращенный исходным подходящим вызовом метода <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
      <summary vsli:raw="Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).">Возвращает уникальный глобальный идентификатор GUID для указанного типа или создает идентификатор GUID при помощи алгоритма, используемого средством экспортирования библиотек типов Tlbexp.exe.</summary>
      <param name="type" vsli:raw="The type to generate a GUID for.">Тип, для которого создается идентификатор GUID.</param>
      <returns vsli:raw="An identifier for the specified type.">Идентификатор для указанного типа.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
      <summary vsli:raw="Returns a programmatic identifier (ProgID) for the specified type.">Возвращает программный идентификатор ProgID для указанного типа.</summary>
      <param name="type" vsli:raw="The type to get a ProgID for.">Тип, для которого требуется получить программный идентификатор (ProgID).</param>
      <returns vsli:raw="The ProgID of the specified type.">Идентификатор ProgID для указанного типа.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a class that can be create by COM. The class must be public, have a public parameterless constructor, and be COM visible.">Параметр <paramref name="type" /> не является классом, который может быть создан с помощью COM. Класс должен быть открытым, иметь открытый конструктор без параметров, а также быть доступным для COM.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is enabled by default.">Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс заданного объекта. Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Объект, предоставляющий интерфейс.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">Тип запрашиваемого интерфейса.</param>
      <returns vsli:raw="The interface pointer that represents the specified interface for the object.">Указатель интерфейса, представляющий заданный интерфейс для объекта.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">Параметр <typeparamref name="T" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" /> является определением универсального типа.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the requested interface.">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="o" /> имеет значение <see langword="null" />.

или -
Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
      <summary vsli:raw="Returns a pointer to an IUnknown interface that represents the specified interface on the specified object. Custom query interface access is controlled by the specified customization mode.">Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс заданного объекта. Доступ к настраиваемому интерфейсу запросов контролируется указанным режимом настройки.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Объект, предоставляющий интерфейс.</param>
      <param name="T" vsli:raw="The type of interface that is requested.">Тип запрашиваемого интерфейса.</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to apply an &lt;see langword=&quot;IUnknown::QueryInterface&quot; /&gt; customization that is supplied by an &lt;see cref=&quot;T:System.Runtime.InteropServices.ICustomQueryInterface&quot; /&gt;.">Одно из значений перечисления, определяющее, нужно ли применять пользовательскую настройку <see langword="IUnknown::QueryInterface" />, предоставленную в интерфейсе <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</param>
      <returns vsli:raw="The interface pointer that represents the interface for the object.">Указатель интерфейса, представляющий интерфейс для объекта.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is a generic type definition.">Параметр <typeparamref name="T" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" /> является определением универсального типа.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object &lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">Объект <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="o" /> имеет значение <see langword="null" />.

или -
Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns a pointer to an IUnknown interface that represents the specified interface on an object of the specified type. Custom query interface access is enabled by default.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс объекта заданного типа. Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</summary>
      <param name="o" vsli:raw="The object that provides the interface.">Объект, предоставляющий интерфейс.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;o&quot; /&gt;.">Тип параметра <paramref name="o" />.</typeparam>
      <typeparam name="TInterface" vsli:raw="The type of interface to return.">Тип возвращаемых интерфейсов.</typeparam>
      <returns vsli:raw="The interface pointer that represents the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">Указатель интерфейса, представляющий интерфейс <paramref name="TInterface" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TInterface&quot; /&gt; parameter is not an interface.&#xA;&#xA; -or-&#xA;&#xA; The type is not visible to COM.&#xA;&#xA; -or-&#xA;&#xA; The &lt;typeparamref name=&quot;T&quot; /&gt; parameter is an open generic type.">Параметр <paramref name="TInterface" /> не является интерфейсом.

или -
Тип недоступен для COM.

или -
Параметр <typeparamref name="T" />  является открытым универсальным типом.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter does not support the &lt;paramref name=&quot;TInterface&quot; /&gt; interface.">Параметр <paramref name="o" /> не поддерживает интерфейс <paramref name="TInterface" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
      <summary vsli:raw="Retrieves data that is referenced by the specified key from the specified COM object.">Извлекает данные, на которые ссылается заданный ключ из указанного COM-объекта.</summary>
      <param name="obj" vsli:raw="The COM object that contains the data that you want.">COM-объект, содержащий требуемые данные.</param>
      <param name="key" vsli:raw="The key in the internal hash table of &lt;paramref name=&quot;obj&quot; /&gt; to retrieve the data from.">Ключ во внутренней хэш-таблице <paramref name="obj" /> для извлечения данных.</param>
      <returns vsli:raw="The data represented by the &lt;paramref name=&quot;key&quot; /&gt; parameter in the internal hash table of the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Данные, представленные параметром <paramref name="key" /> в параметре <paramref name="obj" /> внутренней хэш-таблице.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.

или -
Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> не является COM-объектом.

или -
<paramref name="obj" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
      <summary vsli:raw="Converts an unmanaged function pointer to a delegate.">Преобразует указатель на неуправляемую функцию в делегат.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to be converted.">Указатель на неуправляемую функцию, который требуется преобразовать.</param>
      <param name="t" vsli:raw="The type of the delegate to be returned.">Тип возвращаемого делегата.</param>
      <returns vsli:raw="A delegate instance that can be cast to the appropriate delegate type.">Экземпляр делегата, который может быть приведен к соответствующему типу делегата.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is not a delegate or is generic.">Параметр <paramref name="t" /> не является делегатом или является универсальным.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an unmanaged function pointer to a delegate of a specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует указатель на неуправляемую функцию в делегат указанного типа.</summary>
      <param name="ptr" vsli:raw="The unmanaged function pointer to convert.">Указатель на неуправляемую функцию, который требуется преобразовать.</param>
      <typeparam name="TDelegate" vsli:raw="The type of the delegate to return.">Тип возвращаемого делегата.</typeparam>
      <returns vsli:raw="A instance of the specified delegate type.">Экземпляр делегата указанного типа.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;TDelegate&quot; /&gt; generic parameter is not a delegate, or it is an open generic type.">Параметр <paramref name="TDelegate" /> не является делегатом или является открытым универсальным типом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ptr&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
      <summary vsli:raw="Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.">Извлекает последнюю ячейку таблицы виртуальных функций (VTBL) для типа, если он предоставлен модели COM.</summary>
      <param name="t" vsli:raw="A type that represents an interface or class.">Тип, представляющий интерфейс или класс.</param>
      <returns vsli:raw="The last VTBL slot of the interface when exposed to COM. If the &lt;paramref name=&quot;t&quot; /&gt; parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.">Последняя ячейка таблицы виртуальных функций (VTBL) интерфейса, если он предоставлен модели COM. Если параметр <paramref name="t" /> является классом, возвращенная ячейка таблицы VTBL будет последней ячейкой для интерфейса, созданного из класса.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
      <summary vsli:raw="Retrieves a code that identifies the type of the exception that occurred.">Извлекает код, определяющий тип возникшего исключения.</summary>
      <returns vsli:raw="The type of the exception.">Тип исключения.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Преобразует заданный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" />.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">Преобразуемое значение HRESULT.</param>
      <returns vsli:raw="An object that represents the converted HRESULT, or &lt;see langword=&quot;null&quot; /&gt; if the HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Объект, представляющий преобразованное значение HRESULT, или <see langword="null" />, если значение HRESULT не представляет код ошибки (например, <see langword="S_OK" /> или <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Converts the specified HRESULT error code to a corresponding &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, with additional error information passed in an IErrorInfo interface for the exception object.">Преобразует указанный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" /> с дополнительными сведениями об ошибке, передаваемыми в интерфейсе IErrorInfo для объекта исключения.</summary>
      <param name="errorCode" vsli:raw="The HRESULT to be converted.">Преобразуемое значение HRESULT.</param>
      <param name="errorInfo" vsli:raw="A pointer to the &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current &lt;see langword=&quot;IErrorInfo&quot; /&gt; interface and construct the exception just from the error code.">Указатель на интерфейс <see langword="IErrorInfo" />, предоставляющий дополнительные сведения об ошибке. Можно задать <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс <see langword="IErrorInfo" />, или <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс <see langword="IErrorInfo" /> и сформировать исключение только на основе кода ошибки.</param>
      <returns vsli:raw="An object that represents the converted HRESULT and information obtained from &lt;paramref name=&quot;errorInfo&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if an HRESULT value doesn't represent an error code (for example, &lt;see langword=&quot;S_OK&quot; /&gt; or &lt;see langword=&quot;S_FALSE&quot; /&gt;).">Объект, представляющий преобразованное значение HRESULT и сведения, полученные из <paramref name="errorInfo" />, или <see langword="null" />, если значение HRESULT не представляет код ошибки (например, <see langword="S_OK" /> или <see langword="S_FALSE" />).</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
      <summary vsli:raw="Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.">Извлекает не зависящее от компьютера описание исключения и сведения о состоянии потоков в момент возникновения исключения.</summary>
      <returns vsli:raw="A pointer to an EXCEPTION_POINTERS structure.">Указатель на структуру EXCEPTION_POINTERS.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
      <summary vsli:raw="Converts a delegate into a function pointer that is callable from unmanaged code.">Преобразует делегат в указатель на функцию, вызываемый из неуправляемого кода.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">Делегат, передаваемый в неуправляемый код.</param>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">Параметр <paramref name="d" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует делегат указанного типа в указатель на функцию, вызываемый из неуправляемого кода.</summary>
      <param name="d" vsli:raw="The delegate to be passed to unmanaged code.">Делегат, передаваемый в неуправляемый код.</param>
      <typeparam name="TDelegate" vsli:raw="The type of delegate to convert.">Тип преобразуемого делегата.</typeparam>
      <returns vsli:raw="A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.">Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is a generic type definition.">Параметр <paramref name="d" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;d&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
      <summary vsli:raw="Returns the instance handle (HINSTANCE) for the specified module.">Возвращает дескриптор экземпляра (HINSTANCE) для указанного модуля.</summary>
      <param name="m" vsli:raw="The module whose HINSTANCE is desired.">Модуль, дескриптор экземпляра (HINSTANCE) которого необходимо получить.</param>
      <returns vsli:raw="The HINSTANCE for &lt;paramref name=&quot;m&quot; /&gt;; or -1 if the module does not have an HINSTANCE.">Дескриптор экземпляра (HINSTANCE) для модуля <paramref name="m" />. Если для этого модуля отсутствует HINSTANCE, этот параметр имеет значение -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
      <summary vsli:raw="Converts the specified exception to an HRESULT.">Преобразует указанное исключение в значение HRESULT.</summary>
      <param name="e" vsli:raw="The exception to convert to an HRESULT.">Исключение, преобразуемое в значение HRESULT.</param>
      <returns vsli:raw="The HRESULT mapped to the supplied exception.">Значение HRESULT, сопоставленное с заданным исключением.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
      <summary vsli:raw="Returns the HRESULT corresponding to the last error incurred by Win32 code executed using &lt;see cref=&quot;T:System.Runtime.InteropServices.Marshal&quot; /&gt;.">Возвращает значение HRESULT, соответствующее последней ошибке, вызванной кодом Win32, выполняемым с использованием класса <see cref="T:System.Runtime.InteropServices.Marshal" />.</summary>
      <returns vsli:raw="The HRESULT corresponding to the last Win32 error code.">Значение HRESULT, соответствующее последнему коду ошибки Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
      <summary vsli:raw="Returns an IDispatch interface from a managed object.">Возвращает интерфейс IDispatch из управляемого объекта.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IDispatch&quot; /&gt; interface is requested.">Объект, для которого запрашивается интерфейс <see langword="IDispatch" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IDispatch&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">Указатель <see langword="IDispatch" /> для параметра <paramref name="o" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; does not support the requested interface.">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
      <summary vsli:raw="Returns an IUnknown interface from a managed object.">Возвращает интерфейс IUnknown из управляемого объекта.</summary>
      <param name="o" vsli:raw="The object whose &lt;see langword=&quot;IUnknown&quot; /&gt; interface is requested.">Объект, для которого запрашивается интерфейс <see langword="IUnknown" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IUnknown&quot; /&gt; pointer for the &lt;paramref name=&quot;o&quot; /&gt; parameter.">Указатель <see langword="IUnknown" /> для параметра <paramref name="o" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
      <summary vsli:raw="Returns the error code returned by the last unmanaged function that was called using platform invoke that has the &lt;see cref=&quot;F:System.Runtime.InteropServices.DllImportAttribute.SetLastError&quot; /&gt; flag set.">Возвращает код ошибки, возвращенной последней неуправляемой функцией, вызванной при помощи вызова неуправляемого кода с установленным флагом <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />.</summary>
      <returns vsli:raw="The last error code set by a call to the Win32 SetLastError function.">Последний код ошибки, заданный вызовом функции SetLastError платформы Win32.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
      <summary vsli:raw="Converts an object to a COM VARIANT.">Преобразует объект в COM VARIANT.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">Объект, для которого нужно получить COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Указатель, получающий тип VARIANT, соответствующий параметру <paramref name="obj" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is an instance of a generic type.">Параметр <paramref name="obj" /> является экземпляром универсального типа.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an object of a specified type to a COM VARIANT.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует объект заданного типа в COM VARIANT.</summary>
      <param name="obj" vsli:raw="The object for which to get a COM VARIANT.">Объект, для которого нужно получить COM VARIANT.</param>
      <param name="pDstNativeVariant" vsli:raw="A pointer to receive the VARIANT that corresponds to the &lt;paramref name=&quot;obj&quot; /&gt; parameter.">Указатель, получающий тип VARIANT, соответствующий параметру <paramref name="obj" />.</param>
      <typeparam name="T" vsli:raw="The type of the object to convert.">Тип объекта для преобразования.</typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its IUnknown interface.">Возвращает экземпляр типа, представляющего COM-объект, с помощью указателя на его интерфейс IUnknown.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Указатель на интерфейс <see langword="IUnknown" />.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Объект, представляющий указанный неуправляемый COM-объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pUnk&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">Свойство <paramref name="pUnk" /> имеет значение <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
      <summary vsli:raw="Converts a COM VARIANT to an object.">Преобразует COM VARIANT в объект.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Указатель на COM VARIANT.</param>
      <returns vsli:raw="An object that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Объект, соответствующий параметру <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts a COM VARIANT to an object of a specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует COM VARIANT в объект заданного типа.</summary>
      <param name="pSrcNativeVariant" vsli:raw="A pointer to a COM VARIANT.">Указатель на COM VARIANT.</param>
      <typeparam name="T" vsli:raw="The type to which to convert the COM VARIANT.">Тип, в который требуется преобразовать COM VARIANT.</typeparam>
      <returns vsli:raw="An object of the specified type that corresponds to the &lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; parameter.">Объект указанного типа, соответствующий параметру <paramref name="pSrcNativeVariant" />.</returns>
      <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; is not a valid VARIANT type.">
        <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pSrcNativeVariant&quot; /&gt; has an unsupported type.">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
      <summary vsli:raw="Converts an array of COM VARIANTs to an array of objects.">Преобразует массив типа COM VARIANT в массив объектов.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Указатель на первый элемент массива типа COM VARIANT.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Число объектов типа COM VARIANT в <paramref name="aSrcNativeVariant" />.</param>
      <returns vsli:raw="An object array that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Массив объектов, соответствующий элементу <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> является отрицательным числом.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Converts an array of COM VARIANTs to an array of a specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Преобразует массив типа COM VARIANT в массив указанного типа.</summary>
      <param name="aSrcNativeVariant" vsli:raw="A pointer to the first element of an array of COM VARIANTs.">Указатель на первый элемент массива типа COM VARIANT.</param>
      <param name="cVars" vsli:raw="The count of COM VARIANTs in &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Число объектов типа COM VARIANT в <paramref name="aSrcNativeVariant" />.</param>
      <typeparam name="T" vsli:raw="The type of the array to return.">Тип возвращаемого массива.</typeparam>
      <returns vsli:raw="An array of &lt;typeparamref name=&quot;T&quot; /&gt; objects that corresponds to &lt;paramref name=&quot;aSrcNativeVariant&quot; /&gt;.">Массив объектов <typeparamref name="T" />, соответствующий элементу <paramref name="aSrcNativeVariant" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;cVars&quot; /&gt; is a negative number.">
        <paramref name="cVars" /> является отрицательным числом.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
      <summary vsli:raw="Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.">Возвращает первую ячейку в таблице виртуальных функций (VTBL), которая содержит методы, определенные пользователем.</summary>
      <param name="t" vsli:raw="A type that represents an interface or a class.">Тип, представляющий интерфейс или класс.</param>
      <returns vsli:raw="The first VTBL slot that contains user-defined methods. The first slot is 3 if the interface is based on IUnknown, and 7 if the interface is based on IDispatch.">Первая ячейка таблицы виртуальных функций (VTBL), содержащая методы, определенные пользователем. Первая ячейка содержит значение 3, если интерфейс основан на интерфейсе IUnknown, или значение 7, если он основан на интерфейсе IDispatch.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not visible from COM.">Параметр <paramref name="t" /> недоступен из COM.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
      <summary vsli:raw="Returns a managed object of a specified type that represents a COM object.">Возвращает управляемый объект указанного типа, представляющий COM-объект.</summary>
      <param name="pUnk" vsli:raw="A pointer to the &lt;see langword=&quot;IUnknown&quot; /&gt; interface of the unmanaged object.">Указатель на интерфейс <see langword="IUnknown" /> неуправляемого объекта.</param>
      <param name="t" vsli:raw="The type of the requested managed class.">Тип запрашиваемого управляемого класса.</param>
      <returns vsli:raw="An instance of the class corresponding to the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the requested unmanaged COM object.">Экземпляр класса, который соответствует объекту <see cref="T:System.Type" />, представляющему запрошенный неуправляемый COM-объект.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;t&quot; /&gt; is not attributed with &lt;see cref=&quot;T:System.Runtime.InteropServices.ComImportAttribute&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;t&quot; /&gt; is a Windows Runtime type.">
        <paramref name="t" /> не отмечается атрибутом <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.

или -
<paramref name="t" /> относится к типу Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
      <summary vsli:raw="Returns the type associated with the specified class identifier (CLSID).">Возвращает тип, связанный с заданным идентификатором класса (CLSID).</summary>
      <param name="clsid" vsli:raw="The CLSID of the type to return.">CLSID возвращаемого типа.</param>
      <returns vsli:raw="&lt;see langword=&quot;System.__ComObject&quot; /&gt; regardless of whether the CLSID is valid.">
        <see langword="System.__ComObject" /> вне зависимости от того, допустим ли код CLSID.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
      <summary vsli:raw="Retrieves the name of the type represented by an ITypeInfo object.">Извлекает имя типа, представленного объектом ITypeInfo.</summary>
      <param name="typeInfo" vsli:raw="An object that represents an &lt;see langword=&quot;ITypeInfo&quot; /&gt; pointer.">Объект, представляющий указатель <see langword="ITypeInfo" />.</param>
      <returns vsli:raw="The name of the type that the &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter points to.">Имя типа, на который указывает параметр <paramref name="typeInfo" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;typeInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="typeInfo" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
      <summary vsli:raw="Creates a unique Runtime Callable Wrapper (RCW) object for a given IUnknown interface.">Создает уникальный объект вызываемой оболочки времени выполнения для заданного интерфейса IUnknown.</summary>
      <param name="unknown" vsli:raw="A managed pointer to an &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Управляемый указатель на интерфейс <see langword="IUnknown" />.</param>
      <returns vsli:raw="A unique RCW for the specified &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Уникальная оболочка RCW для указанного интерфейса <see langword="IUnknown" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
      <summary vsli:raw="Indicates whether a specified object represents a COM object.">Показывает, представляет ли указанный объект COM-объект.</summary>
      <param name="o" vsli:raw="The object to check.">Объект для проверки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;o&quot; /&gt; parameter is a COM type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="o" /> является COM-типом. В противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
      <summary vsli:raw="Indicates whether a type is visible to COM clients.">Показывает, является ли тип видимым для клиентов COM.</summary>
      <param name="t" vsli:raw="The type to check for COM visibility.">Тип, для которого требуется проверить видимость для COM.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type is visible to COM; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип видим для COM; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
      <summary vsli:raw="Returns the field offset of the unmanaged form of the managed class.">Возвращает смещение поля для неуправляемой формы управляемого класса.</summary>
      <param name="t" vsli:raw="A value type or formatted reference type that specifies the managed class. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; to the class.">Тип значения или форматированный ссылочный тип, указывающий управляемый класс. К классу должен применяться <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />.</param>
      <param name="fieldName" vsli:raw="The field within the &lt;paramref name=&quot;t&quot; /&gt; parameter.">Поле внутри параметра <paramref name="t" />.</param>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The class cannot be exported as a structure or the field is nonpublic. Beginning with the .NET Framework version 2.0, the field may be private.">Класс не может быть экспортирован как структура, или поле не является публичным. Начиная с версии 2.0 платформы .NET Framework поле может быть закрытым.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the field offset of the unmanaged form of a specified managed class.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает смещение поля для неуправляемой формы указанного управляемого класса.</summary>
      <param name="fieldName" vsli:raw="The name of the field in the &lt;paramref name=&quot;T&quot; /&gt; type.">Имя поля в типе <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A managed value type or formatted reference type. You must apply the &lt;see cref=&quot;T:System.Runtime.InteropServices.StructLayoutAttribute&quot; /&gt; attribute to the class.">Управляемый тип значения или форматированный ссылочный тип. Примените атрибут <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> к классу.</typeparam>
      <returns vsli:raw="The offset, in bytes, for the &lt;paramref name=&quot;fieldName&quot; /&gt; parameter within the specified class that is declared by platform invoke.">Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
      <summary vsli:raw="Executes one-time method setup tasks without calling the method.">Выполняет задачи настройки метода за один раз, не вызывая метод.</summary>
      <param name="m" vsli:raw="The method to be checked.">Проверяемый метод.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;m&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object.">Параметр <paramref name="m" /> не является объектом <see cref="T:System.Reflection.MethodInfo" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
      <summary vsli:raw="Performs a pre-link check for all methods on a class.">Выполняет проверку перед связыванием для всех методов класса.</summary>
      <param name="c" vsli:raw="The class whose methods are to be checked.">Класс, методы которого требуется проверить.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;c&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="c" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
      <summary vsli:raw="Copies all characters up to the first null character from an unmanaged ANSI or UTF-8 string to a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, and widens each character to UTF-16.">Копирует все символы вплоть до первого пустого из неуправляемой строки ANSI в управляемый объект <see cref="T:System.String" /> и преобразует каждый символ ANSI в Юникод.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">Адрес первого символа в неуправляемой строке.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string. If &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns a null string.">Управляемая строка, содержащая копию неуправляемой строки ANSI. Если параметр <paramref name="ptr" /> равен <see langword="null" />, метод возвращает пустую строку.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt;, copies a specified number of characters from an unmanaged ANSI or UTF-8 string into it, and widens each character to UTF-16.">Выделяет управляемый объект типа <see cref="T:System.String" />, копирует в него заданное число знаков из неуправляемой строки ANSI и преобразует каждый знак ANSI в Юникод.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">Адрес первого символа в неуправляемой строке.</param>
      <param name="len" vsli:raw="The byte count of the input string to copy.">Копируемое количество байтов исходной строки.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Управляемая строка, содержащая копию собственной строки ANSI, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае, этот метод возвращает значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">Значение параметра <paramref name="len" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from a string stored in unmanaged memory into it.">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из строки, хранящейся в неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Для платформ Юникода это адрес первого символа Юникода.

или -

Для платформ ANSI это адрес первого символа ANSI.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies the specified number of characters from a string stored in unmanaged memory into it.">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков из строки, сохраненной в неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="For Unicode platforms, the address of the first Unicode character.&#xA;&#xA; -or-&#xA;&#xA; For ANSI platforms, the address of the first ANSI character.">Для платформ Юникода это адрес первого символа Юникода.

или -

Для платформ ANSI это адрес первого символа ANSI.</param>
      <param name="len" vsli:raw="The number of characters to copy.">Число символов для копирования.</param>
      <returns vsli:raw="A managed string that holds a copy of the native string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Управляемая строка, хранящая копию исходной строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; is less than zero.">Значение параметра <paramref name="len" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a binary string (BSTR) stored in unmanaged memory into it.">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него двоичную строку (BSTR), хранящуюся в неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">Адрес первого символа в неуправляемой строке.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string.">Управляемая строка, содержащая копию неуправляемой строки.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; equals &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">
        <paramref name="ptr" /> равняется <see cref="F:System.IntPtr.Zero" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies all characters up to the first null character from an unmanaged Unicode string into it.">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из неуправляемой строки Юникода.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">Адрес первого символа в неуправляемой строке.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
      <summary vsli:raw="Allocates a managed &lt;see cref=&quot;T:System.String&quot; /&gt; and copies a specified number of characters from an unmanaged Unicode string into it.">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков неуправляемой строки Юникода.</summary>
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string.">Адрес первого символа в неуправляемой строке.</param>
      <param name="len" vsli:raw="The number of Unicode characters to copy.">Число копируемых символов Юникода.</param>
      <returns vsli:raw="A managed string that holds a copy of the unmanaged string if the value of the &lt;paramref name=&quot;ptr&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;; otherwise, this method returns &lt;see langword=&quot;null&quot; /&gt;.">Управляемая строка, содержащая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае этот метод возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)">
      <param name="ptr" vsli:raw="The address of the first character of the unmanaged string." />
      <param name="byteLen" vsli:raw="The number of bytes to copy." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a managed object.">Маршалирует данные из неуправляемого блока памяти в управляемый объект.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied. This must be an instance of a formatted class.">Объект, в который копируются данные. Он должен представлять собой экземпляр форматированного класса.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; Structure is a boxed value type.">Распределение структуры не является ни последовательным, ни явным.

или -

Структура принадлежит к упакованному типу значений.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
      <summary vsli:raw="Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.">Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект указанного типа.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <param name="structureType" vsli:raw="The type of object to be created. This object must represent a formatted class or a structure.">Тип создаваемого объекта. Этот объект должен представлять форматированный класс или структуру.</param>
      <returns vsli:raw="A managed object containing the data pointed to by the &lt;paramref name=&quot;ptr&quot; /&gt; parameter.">Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;structureType&quot; /&gt; parameter layout is not sequential or explicit.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;structureType&quot; /&gt; parameter is a generic type definition.">Распределения параметра <paramref name="structureType" />не является ни последовательным, ни явным.

или -
Параметр <paramref name="structureType" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;structureType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="structureType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;paramref name=&quot;structureType&quot; /&gt; does not have an accessible parameterless constructor.">Класс, указанный в <paramref name="structureType" />, не имеет доступного конструктора без параметров.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект типа, указанного параметром универсального типа.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <typeparam name="T" vsli:raw="The type of the object to which the data is to be copied. This must be a formatted class or a structure.">Тип объекта, в который копируются данные. Это должен быть форматированный класс или структура.</typeparam>
      <returns vsli:raw="A managed object that contains the data that the &lt;paramref name=&quot;ptr&quot; /&gt; parameter points to.">Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The layout of &lt;typeparamref name=&quot;T&quot; /&gt; is not sequential or explicit.">Макет <typeparamref name="T" /> не является ни последовательным, ни явным.</exception>
      <exception cref="T:System.MissingMethodException" vsli:raw="The class specified by &lt;typeparamref name=&quot;T&quot; /&gt; does not have an accessible parameterless constructor.">Класс, указанный в <typeparamref name="T" />, не имеет доступного конструктора без параметров.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from an unmanaged block of memory to a managed object of the specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Выполняет маршалирование данных из неуправляемого блока памяти в управляемый объекта указанного типа.</summary>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory.">Указатель на неуправляемый блок памяти.</param>
      <param name="structure" vsli:raw="The object to which the data is to be copied.">Объект, в который копируются данные.</param>
      <typeparam name="T" vsli:raw="The type of &lt;paramref name=&quot;structure&quot; /&gt;. This must be a formatted class.">Тип параметра <paramref name="structure" />. Этот должен быть форматированный класс.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="Structure layout is not sequential or explicit.">Распределение структуры не является ни последовательным, ни явным.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
      <summary vsli:raw="Requests a pointer to a specified interface from a COM object.">Запрашивает указатель на заданный интерфейс из COM-объекта.</summary>
      <param name="pUnk" vsli:raw="The interface to be queried.">Запрашиваемый интерфейс.</param>
      <param name="iid" vsli:raw="The interface identifier (IID) of the requested interface.">Идентификатор IID запрошенного интерфейса.</param>
      <param name="ppv" vsli:raw="When this method returns, contains a reference to the returned interface.">Когда этот метод возвращает результаты, в них содержится ссылка на возвращенный интерфейс.</param>
      <returns vsli:raw="An HRESULT that indicates the success or failure of the call.">Значение HRESULT, показывающее, успешно ли выполнен вызов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
      <summary vsli:raw="Reads a single byte from unmanaged memory.">Считывает один байт из неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns vsli:raw="The byte read from unmanaged memory.">Байт, считанный из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">Байт, считываемый из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
      <summary vsli:raw="Reads a single byte at a given offset (or index) from unmanaged memory.">Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The byte read from unmanaged memory at the given offset.">Байт, считываемый из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
      <summary vsli:raw="Reads a 16-bit signed integer from unmanaged memory.">Считывает из неуправляемой памяти 16-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory.">16-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 16-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 16-bit signed integer read from unmanaged memory at the given offset.">16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
      <summary vsli:raw="Reads a 32-bit signed integer from unmanaged memory.">Считывает из неуправляемой памяти 32-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">32-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory.">32-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 32-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 32-bit signed integer read from unmanaged memory at the given offset.">32-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
      <summary vsli:raw="Reads a 64-bit signed integer from unmanaged memory.">Считывает из неуправляемой памяти 64-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory.">64-битное целое число со знаком, считанное из неуправляемой памяти.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
      <summary vsli:raw="Reads a 64-bit signed integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The 64-bit signed integer read from unmanaged memory at the given offset.">64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
      <summary vsli:raw="Reads a processor native-sized integer from unmanaged memory.">Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory from which to read.">Адрес неуправляемой памяти, откуда производится чтение.</param>
      <returns vsli:raw="The integer read from unmanaged memory. A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.">Целое число, считанное из неуправляемой памяти. На 32-разрядных компьютерах возвращается 32-битное целое число, а на 64-разрядных компьютерах — 64-битное.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer at a given offset from unmanaged memory.">Считывает из неуправляемой памяти с указанным смещением знаковое целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory from which to read.">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">Целое число, считываемое из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
      <summary vsli:raw="Reads a processor native sized integer from unmanaged memory.">Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the source object.">Базовый адрес в неуправляемой памяти исходного объекта.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before reading.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед чтением.</param>
      <returns vsli:raw="The integer read from unmanaged memory at the given offset.">Целое число, считываемое из неуправляемой памяти с указанным смещением.</returns>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)&quot; /&gt;.">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block.">Новый размер выделенного блока.</param>
      <returns vsli:raw="An integer representing the address of the reallocated block of memory. This memory must be released with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)&quot; /&gt;.">Целое число, представляющее адрес повторно выделенного блока памяти. Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Resizes a block of memory previously allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</summary>
      <param name="pv" vsli:raw="A pointer to memory allocated with &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)&quot; /&gt;.">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</param>
      <param name="cb" vsli:raw="The new size of the allocated block. This is not a pointer; it is the byte count you are requesting, cast to type &lt;see cref=&quot;T:System.IntPtr&quot; /&gt;. If you pass a pointer, it is treated as a size.">Новый размер выделенного блока. Это не указатель; это запрашиваемое число байтов, приведенное к типу <see cref="T:System.IntPtr" />. Если передается указатель, он рассматривается как размер.</param>
      <returns vsli:raw="A pointer to the reallocated memory. This memory must be released using &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)&quot; /&gt;.">Указатель на повторно выделенную память. Эта память должна освобождаться с помощью <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory to satisfy the request.">Недостаточно памяти для выполнения запроса.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
      <summary vsli:raw="Decrements the reference count on the specified interface.">Уменьшает счетчик ссылок для указанного интерфейса.</summary>
      <param name="pUnk" vsli:raw="The interface to release.">Освобождаемый интерфейс.</param>
      <returns vsli:raw="The new value of the reference count on the interface specified by the &lt;paramref name=&quot;pUnk&quot; /&gt; parameter.">Новое значение счетчика ссылок для интерфейса, заданного параметром <paramref name="pUnk" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
      <summary vsli:raw="Decrements the reference count of the Runtime Callable Wrapper (RCW) associated with the specified COM object.">Уменьшает счетчик ссылок вызываемой оболочки времени выполнения, связанной с указанным COM-объектом.</summary>
      <param name="o" vsli:raw="The COM object to release.">Освобождаемый COM-объект.</param>
      <returns vsli:raw="The new value of the reference count of the RCW associated with &lt;paramref name=&quot;o&quot; /&gt;. This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.">Новое значение счетчика ссылок оболочки RCW, связанной с <paramref name="o" />. Это значение обычно равно нулю, поскольку оболочка RCW хранит только одну ссылку на COM-объект в оболочке вне зависимости от количества управляемых клиентов, которые ее вызывают.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is not a valid COM object.">
        <paramref name="o" /> не является допустимым COM-объектом.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;o&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
      <summary vsli:raw="Allocates an unmanaged binary string (BSTR) and copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into it.">Выделяет неуправляемую двоичную строку (BSTR) и копирует в нее содержимое управляемого объекта <see cref="T:System.Security.SecureString" />.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">Адрес в неуправляемой памяти, куда был скопирован параметр <paramref name="s" />, или значение 0, если параметр <paramref name="s" /> представляет собой объект <see cref="T:System.Security.SecureString" />, длина которого равна 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Sets data referenced by the specified key in the specified COM object.">Определяет данные, на которые ссылается заданный ключ в указанном COM-объекте.</summary>
      <param name="obj" vsli:raw="The COM object in which to store the data.">COM-объект для хранения данных.</param>
      <param name="key" vsli:raw="The key in the internal hash table of the COM object in which to store the data.">Ключ во внутренней хэш-таблице COM-объекта, в котором хранятся данные.</param>
      <param name="data" vsli:raw="The data to set.">Задаваемые данные.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data was set successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данные заданы успешно; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.

или -
Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a COM object.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;obj&quot; /&gt; is a Windows Runtime object.">
        <paramref name="obj" /> не является COM-объектом.

или -
<paramref name="obj" /> является объектом Среда выполнения Windows.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
      <summary vsli:raw="Returns the unmanaged size of an object in bytes.">Возвращает неуправляемый размер объекта в байтах.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">Объект, размер которого возвращается.</param>
      <returns vsli:raw="The size of the specified object in unmanaged code.">Размер указанного объекта в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
      <summary vsli:raw="Returns the size of an unmanaged type in bytes.">Возвращает размер неуправляемого типа в байтах.</summary>
      <param name="t" vsli:raw="The type whose size is to be returned.">Тип, размер которого возвращается.</param>
      <returns vsli:raw="The size of the specified type in unmanaged code.">Размер указанного типа в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is a generic type definition.">Параметр <paramref name="t" /> является определением универсального типа.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the size of an unmanaged type in bytes.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает размер неуправляемого типа в байтах.</summary>
      <typeparam name="T" vsli:raw="The type whose size is to be returned.">Тип, размер которого возвращается.</typeparam>
      <returns vsli:raw="The size, in bytes, of the type that is specified by the &lt;typeparamref name=&quot;T&quot; /&gt; generic type parameter.">Размер, в байтах, типа, определяемого параметром универсального типа <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Returns the unmanaged size of an object of a specified type in bytes.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает неуправляемый размер объекта указанного типа в байтах.</summary>
      <param name="structure" vsli:raw="The object whose size is to be returned.">Объект, размер которого возвращается.</param>
      <typeparam name="T" vsli:raw="The type of the &lt;paramref name=&quot;structure&quot; /&gt; parameter.">Тип параметра <paramref name="structure" />.</typeparam>
      <returns vsli:raw="The size, in bytes, of the specified object in unmanaged code.">Размер в байтах указанного объекта в неуправляемом коде.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;structure&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
      <summary vsli:raw="Allocates a BSTR and copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into it.">Выделяет строку BSTR и копирует в нее содержимое управляемого объекта <see cref="T:System.String" />.</summary>
      <param name="s" vsli:raw="The managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="An unmanaged pointer to the &lt;see langword=&quot;BSTR&quot; /&gt;, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is null.">Неуправляемый указатель на строку <see langword="BSTR" /> или значение 0, если параметр <paramref name="s" /> имеет значение null.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">Длина параметра <paramref name="s" /> выходит за пределы диапазона.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="The allocated memory block, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Выделенный блок памяти или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length for &lt;paramref name=&quot;s&quot; /&gt; is out of range.">Длина параметра <paramref name="s" /> выходит за пределы диапазона.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="An integer representing a pointer to the block of memory allocated for the string, or 0 if s is &lt;see langword=&quot;null&quot; /&gt;.">Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка s имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)">
      <param name="s" vsli:raw="A managed string to be copied." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory, converting into ANSI format if required.">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI, если это требуется.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the string was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Адрес в неуправляемой памяти, куда скопирована строка, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.String&quot; /&gt; into unmanaged memory.">Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память.</summary>
      <param name="s" vsli:raw="A managed string to be copied.">Копируемая управляемая строка.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="The method could not allocate enough native heap memory.">Метод не может выделить в куче достаточное количество динамической памяти, присущей данному объекту.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter exceeds the maximum length allowed by the operating system.">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
      <summary vsli:raw="Marshals data from a managed object to an unmanaged block of memory.">Маршалирует данные из управляемого объекта в неуправляемый блок памяти.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. This object must be a structure or an instance of a formatted class.">Управляемый объект, содержащий данные для маршалинга. Этот объект должен представлять собой структуру или экземпляр форматированного класса.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> в параметре <paramref name="ptr" /> перед тем, как этот метод скопирует данные. Блок должен содержать допустимые данные. Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;structure&quot; /&gt; is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).">
        <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.

или -
<paramref name="structure" /> — это экземпляр универсального типа (только в .NET Framework 4.5 и более ранних версиях).</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Marshals data from a managed object of a specified type to an unmanaged block of memory.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Выполняет маршалирование данных в неуправляемый блока памяти из управляемого объекта указанного типа.</summary>
      <param name="structure" vsli:raw="A managed object that holds the data to be marshaled. The object must be a structure or an instance of a formatted class.">Управляемый объект, содержащий данные для маршалинга. Объект должен представлять собой структуру или экземпляр форматированного класса.</param>
      <param name="ptr" vsli:raw="A pointer to an unmanaged block of memory, which must be allocated before this method is called.">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</param>
      <param name="fDeleteOld" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)&quot; /&gt; method on the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before this method copies the data. The block must contain valid data. Note that passing &lt;see langword=&quot;false&quot; /&gt; when the memory block already contains data can lead to a memory leak.">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> в параметре <paramref name="ptr" /> перед тем, как этот метод скопирует данные. Блок должен содержать допустимые данные. Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</param>
      <typeparam name="T" vsli:raw="The type of the managed object.">Тип управляемого объекта.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;structure&quot; /&gt; is a reference type that is not a formatted class.">
        <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.</exception>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
      <summary vsli:raw="Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems. This field is read-only.">Представляет используемый по умолчанию размер символа в системе. По умолчанию для систем Юникода задается значение 2, а для систем ANSI значение 1. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
      <summary vsli:raw="Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system. This field is read-only.">Представляет наибольший размер набора двухбайтовых символов (DBCS) в байтах для текущей операционной системы. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT value.">Создает исключение с определенным значением ошибки HRESULT.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">Значение HRESULT, соответствующее нужному исключению.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
      <summary vsli:raw="Throws an exception with a specific failure HRESULT, based on the specified IErrorInfo interface.">Создает исключение с определенным значением ошибки HRESULT в соответствии с указанным интерфейсом IErrorInfo.</summary>
      <param name="errorCode" vsli:raw="The HRESULT corresponding to the desired exception.">Значение HRESULT, соответствующее нужному исключению.</param>
      <param name="errorInfo" vsli:raw="A pointer to the IErrorInfo interface that provides more information about the error. You can specify &lt;c&gt;IntPtr(0)&lt;/c&gt; to use the current IErrorInfo interface, or &lt;c&gt;IntPtr(-1)&lt;/c&gt; to ignore the current IErrorInfo interface and construct the exception just from the error code.">Указатель на интерфейс IErrorInfo, предоставляющий дополнительные сведения об ошибке. Можно задать значение <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс IErrorInfo, или значение <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс IErrorInfo и создать исключение только на основе кода ошибки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
      <summary vsli:raw="Gets the address of the element at the specified index inside the specified array.">Возвращает адрес элемента по указанному индексу внутри заданного массива.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">Массив, содержащий требуемый элемент.</param>
      <param name="index" vsli:raw="The index in the &lt;paramref name=&quot;arr&quot; /&gt; parameter of the desired element.">Индекс необходимого элемента в параметре <paramref name="arr" />.</param>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; inside &lt;paramref name=&quot;arr&quot; /&gt;.">Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]&#xA;&#xA; Gets the address of the element at the specified index in an array of a specified type.">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Возвращает адрес элемента по указанному индексу внутри массива заданного типа.</summary>
      <param name="arr" vsli:raw="The array that contains the desired element.">Массив, содержащий требуемый элемент.</param>
      <param name="index" vsli:raw="The index of the desired element in the &lt;paramref name=&quot;arr&quot; /&gt; array.">Индекс необходимого элемента в массиве <paramref name="arr" />.</param>
      <typeparam name="T" vsli:raw="The type of the array.">Тип массива.</typeparam>
      <returns vsli:raw="The address of &lt;paramref name=&quot;index&quot; /&gt; in &lt;paramref name=&quot;arr&quot; /&gt;.">Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory.">Записывает однобайтовое значение в неуправляемую память.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Записывает однобайтовое значение в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
      <summary vsli:raw="Writes a single byte value to unmanaged memory at a specified offset.">Записывает однобайтовое значение в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
      <summary vsli:raw="Writes a character as a 16-bit integer value to unmanaged memory.">Записывает в неуправляемую память символ в виде 16-битного целого числа.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
      <summary vsli:raw="Writes a 16-bit integer value to unmanaged memory.">Записывает в неуправляемую память 16-битное целое число.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in the native heap to write to.">Базовый адрес для записи в собственной куче.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value into unmanaged memory at a specified offset.">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
      <summary vsli:raw="Writes a 16-bit signed integer value to unmanaged memory at a specified offset.">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory.">Записывает в неуправляемую память 32-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value into unmanaged memory at a specified offset.">Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
      <summary vsli:raw="Writes a 32-bit signed integer value to unmanaged memory at a specified offset.">Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write.">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory.">Записывает в неуправляемую память 64-битное целое число со знаком.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
      <summary vsli:raw="Writes a 64-bit signed integer value to unmanaged memory at a specified offset.">Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native-sized integer value to unmanaged memory at a specified offset.">Записывает в неуправляемую память с указанным смещением целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory to write to.">Базовый адрес для записи в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value into unmanaged memory.">Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The address in unmanaged memory to write to.">Адрес в неуправляемой памяти, по которому производится запись.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is not a recognized format.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;ptr&quot; /&gt; is invalid.">
        <paramref name="ptr" /> не является распознаваемым форматом.

или -
Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.

или -
<paramref name="ptr" /> недопустим.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
      <summary vsli:raw="Writes a processor native sized integer value to unmanaged memory.">Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</summary>
      <param name="ptr" vsli:raw="The base address in unmanaged memory of the target object.">Базовый адрес конечного объекта в неуправляемой памяти.</param>
      <param name="ofs" vsli:raw="An additional byte offset, which is added to the &lt;paramref name=&quot;ptr&quot; /&gt; parameter before writing.">Дополнительное смещение байтов, добавляемое к параметру <paramref name="ptr" /> перед записью.</param>
      <param name="val" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.AccessViolationException" vsli:raw="Base address (&lt;paramref name=&quot;ptr&quot; /&gt;) plus offset byte (&lt;paramref name=&quot;ofs&quot; /&gt;) produces a null or invalid address.">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ptr&quot; /&gt; is an &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; object. This method does not accept &lt;see cref=&quot;T:System.Runtime.InteropServices.ArrayWithOffset&quot; /&gt; parameters.">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />. Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
      <summary vsli:raw="Frees a BSTR pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)&quot; /&gt; method.">Освобождает указатель BSTR, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the &lt;see langword=&quot;BSTR&quot; /&gt; to free.">Адрес <see langword="BSTR" /> для освобождения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)&quot; /&gt; method.">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)&quot; /&gt; method.">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)">
      <param name="s" vsli:raw="The address of the unmanaged string to free." />
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)&quot; /&gt; method.">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
      <summary vsli:raw="Frees an unmanaged string pointer that was allocated using the &lt;see cref=&quot;M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)&quot; /&gt; method.">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</summary>
      <param name="s" vsli:raw="The address of the unmanaged string to free.">Адрес освобождаемой неуправляемой строки.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalAsAttribute">
      <summary vsli:raw="Indicates how to marshal the data between managed and unmanaged code.">Указывает способ маршалинга данных между управляемым и неуправляемым кодом.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">Значение, в виде которого будут маршалированы данные.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; enumeration member.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</summary>
      <param name="unmanagedType" vsli:raw="The value the data is to be marshaled as.">Значение, в виде которого будут маршалированы данные.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
      <summary vsli:raw="Specifies the element type of the unmanaged &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.LPArray&quot; /&gt; or &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.ByValArray&quot; /&gt;.">Задает тип элемента неуправляемого массива <see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /> или <see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
      <summary vsli:raw="Specifies the parameter index of the unmanaged &lt;see langword=&quot;iid_is&quot; /&gt; attribute used by COM.">Задает индекс параметра неуправляемого атрибута <see langword="iid_is" />, используемого в COM.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
      <summary vsli:raw="Provides additional information to a custom marshaler.">Предоставляет дополнительные сведения для настраиваемого модуля маршалинга.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
      <summary vsli:raw="Specifies the fully qualified name of a custom marshaler.">Задает полное имя настраиваемого модуля маршалинга.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
      <summary vsli:raw="Implements &lt;see cref=&quot;F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&quot; /&gt; as a type.">Реализует поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> в виде типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
      <summary vsli:raw="Indicates the element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Показывает тип элемента для поля <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
      <summary vsli:raw="Indicates the user-defined element type of the &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Указывает определенный пользователем тип элемента для поля <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
      <summary vsli:raw="Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.">Показывает количество элементов в массиве фиксированной длины или количество знаков (не байтов) в импортируемой строке.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
      <summary vsli:raw="Indicates the zero-based parameter that contains the count of array elements, similar to &lt;see langword=&quot;size_is&quot; /&gt; in COM.">Указывает параметр, содержащий отсчитываемое от нуля количество элементов массива, аналогичный параметру <see langword="size_is" /> в COM.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">Получает значение <see cref="T:System.Runtime.InteropServices.UnmanagedType" />, используемое для маршалинга данных.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedType&quot; /&gt; value the data is to be marshaled as.">Значение типа <see cref="T:System.Runtime.InteropServices.UnmanagedType" />, используемого для маршалинга данных.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.MarshalDirectiveException">
      <summary vsli:raw="The exception that is thrown by the marshaler when it encounters a &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalAsAttribute&quot; /&gt; it does not support.">Исключение, которое создается модулем упаковки и передачи, когда он встречает неподдерживаемый атрибут <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with default properties.">Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;MarshalDirectiveException&quot; /&gt; class with a specified error message.">Инициализирует новый экземпляр класса <see langword="MarshalDirectiveException" /> с указанным сообщением об ошибке.</summary>
      <param name="message" vsli:raw="The error message that specifies the reason for the exception.">Сообщение об ошибке с указанием причины возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.MarshalDirectiveException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.MarshalDirectiveException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.NativeLibrary">
      <summary vsli:raw="Provides APIs for managing native libraries.">Предоставляет интерфейсы API для управления собственными библиотеками.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)">
      <summary vsli:raw="Frees a loaded library with the specified OS handle, or takes no action if the input handle is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">Освобождает загруженную библиотеку с указанным дескриптором ОС или не выполняет никаких действий, если входной дескриптор равен <see cref="F:System.IntPtr.Zero" />.</summary>
      <param name="handle" vsli:raw="The native library OS handle to be freed.">Дескриптор ОС для собственной библиотеки, который необходимо освободить.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)">
      <summary vsli:raw="Gets the address of an exported symbol.">Возвращает адрес экспортируемого символа.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">Дескриптор ОС для собственной библиотеки.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">Имя экспортируемого символа.</param>
      <returns vsli:raw="The address of the symbol.">Адрес символа.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="handle" /> или <paramref name="name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.EntryPointNotFoundException" vsli:raw="The symbol is not found.">Символ не найден.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)">
      <summary vsli:raw="Provides a simple API for loading a native library that wraps the OS loader and uses default flags.">Предоставляет простой интерфейс API для загрузки собственной библиотеки, который инкапсулирует загрузчик ОС и использует флаги по умолчанию.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">Имя загружаемой собственной библиотеки.</param>
      <returns vsli:raw="The OS handle for the loaded native library.">Дескриптор ОС для загруженной собственной библиотеки.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="libraryPath" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">Не удается найти библиотеку.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">Библиотека недопустима.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
      <summary vsli:raw="Provides a high-level API for loading a native library.">Предоставляет высокоуровневый интерфейс API для загрузки собственной библиотеки.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">Имя загружаемой собственной библиотеки.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">Сборка, загружающая собственную библиотеку.</param>
      <param name="searchPath" vsli:raw="The search path.">Путь поиска.</param>
      <returns vsli:raw="The OS handle for the loaded library.">Дескриптор ОС для загруженной библиотеки.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryName&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="libraryName" /> или <paramref name="assembly" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> не является объектом <see langword="RuntimeAssembly" />.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">Не удается найти библиотеку.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">Библиотека недопустима.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)">
      <summary vsli:raw="Sets a callback for resolving native library imports from an assembly.">Задает обратный вызов для разрешения импортируемых модулей собственной библиотеки из сборки.</summary>
      <param name="assembly" vsli:raw="The assembly for which the resolver is registered.">Сборка, для которой регистрируется сопоставитель.</param>
      <param name="resolver" vsli:raw="The resolver callback to register.">Регистрируемый обратный вызов сопоставителя.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; or &lt;paramref name=&quot;resolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> или paramref name="resolver" /&gt; имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A resolver is already set for this assembly.">Сопоставитель уже задан для этой сборки.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)">
      <summary vsli:raw="Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.">Возвращает адрес экспортированного символа и значение, указывающее, успешно ли был выполнен вызов метода.</summary>
      <param name="handle" vsli:raw="The native library OS handle.">Дескриптор ОС для собственной библиотеки.</param>
      <param name="name" vsli:raw="The name of the exported symbol.">Имя экспортируемого символа.</param>
      <param name="address" vsli:raw="When the method returns, contains the symbol address, if it exists.">При возвращении управления методом содержит адрес символа, если он существует.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the address of the exported symbol was found successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод успешно вернул управление. В противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="handle" /> или <paramref name="name" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)">
      <summary vsli:raw="Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.">Предоставляет простой интерфейс API для загрузки собственной библиотеки и возвращает значение, указывающее, успешно ли была выполнена операция.</summary>
      <param name="libraryPath" vsli:raw="The name of the native library to be loaded.">Имя загружаемой собственной библиотеки.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">При возвращении управления методом содержит дескриптор ОС для загруженной собственной библиотеки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если собственная библиотека была загружена успешно; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="libraryPath" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)">
      <summary vsli:raw="Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.">Предоставляет высокоуровневый интерфейс API, который загружает собственную библиотеку и возвращает значение, указывающее, успешно ли была выполнена операция.</summary>
      <param name="libraryName" vsli:raw="The name of the native library to be loaded.">Имя загружаемой собственной библиотеки.</param>
      <param name="assembly" vsli:raw="The assembly loading the native library.">Сборка, загружающая собственную библиотеку.</param>
      <param name="searchPath" vsli:raw="The search path.">Путь поиска.</param>
      <param name="handle" vsli:raw="When the method returns, the OS handle of the loaded native library.">При возвращении управления методом содержит дескриптор ОС для загруженной собственной библиотеки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the native library was loaded successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если операция загрузки успешно завершена; в противном случае значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;libraryPath&quot; /&gt; or &lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="libraryPath" /> или <paramref name="assembly" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a &lt;see langword=&quot;RuntimeAssembly&quot; /&gt;.">
        <paramref name="assembly" /> не является объектом <see langword="RuntimeAssembly" />.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.OptionalAttribute">
      <summary vsli:raw="Indicates that a parameter is optional.">Указывает, что параметр является необязательным.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OptionalAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;OptionalAttribute&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see langword="OptionalAttribute" /> со значениями по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PreserveSigAttribute">
      <summary vsli:raw="Indicates that the HRESULT signature transformation that takes place during COM interop calls should be suppressed.">Показывает, что преобразование значения HRESULT или сигнатуры <see langword="retval" />, происходящее в процессе вызовов COM-взаимодействия, следует запретить.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PreserveSigAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
      <summary vsli:raw="Indicates that the attributed assembly is a primary interop assembly.">Показывает, что сборка с данным атрибутом является основной сборкой взаимодействия.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute&quot; /&gt; class with the major and minor version numbers of the type library for which this assembly is the primary interop assembly.">Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute" />, используя основной и дополнительный номера версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <param name="major" vsli:raw="The major version of the type library for which this assembly is the primary interop assembly.">Основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</param>
      <param name="minor" vsli:raw="The minor version of the type library for which this assembly is the primary interop assembly.">Дополнительный номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library for which this assembly is the primary interop assembly.">Возвращает основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <returns vsli:raw="The major version number of the type library for which this assembly is the primary interop assembly.">Основной номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library for which this assembly is the primary interop assembly.">Возвращает номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</summary>
      <returns vsli:raw="The minor version number of the type library for which this assembly is the primary interop assembly.">Дополнительный номер версии библиотеки типов, для которой эта сборка является основной сборкой взаимодействия.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.ProgIdAttribute">
      <summary vsli:raw="Allows the user to specify the ProgID of a class.">Позволяет пользователю задавать идентификатор ProgID класса.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ProgIdAttribute&quot; /&gt; with the specified ProgID.">Инициализирует новый экземпляр класса <see langword="ProgIdAttribute" />, используя указанный идентификатор ProgID.</summary>
      <param name="progId" vsli:raw="The ProgID to be assigned to the class.">Идентификатор ProgID, присваиваемый классу.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
      <summary vsli:raw="Gets the ProgID of the class.">Возвращает идентификатор ProgID класса.</summary>
      <returns vsli:raw="The ProgID of the class.">Идентификатор ProgID класса.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.RuntimeEnvironment">
      <summary vsli:raw="Provides a collection of &lt;see langword=&quot;static&quot; /&gt; methods that return information about the common language runtime environment.">Предоставляет коллекцию статических (<see langword="static" />) методов, возвращающих сведения о среде CLR.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.FromGlobalAccessCache(System.Reflection.Assembly)">
      <summary vsli:raw="Tests whether the specified assembly is loaded in the global assembly cache.">Проверяет, загружена ли указанная сборка в глобальный кэш сборок.</summary>
      <param name="a" vsli:raw="The assembly to test.">Проверяемая сборка.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the assembly is loaded in the global assembly cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сборка загружена в глобальный кэш сборок, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeDirectory">
      <summary vsli:raw="Returns the directory where the common language runtime is installed.">Возвращает каталог, в котором установлена среда CLR.</summary>
      <returns vsli:raw="A string that contains the path to the directory where the common language runtime is installed.">Строка, содержащая путь к каталогу, в котором установлена среда CLR.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(System.Guid,System.Guid)">
      <summary vsli:raw="Returns the specified interface on the specified class.">Возвращает указанный интерфейс для указанного класса.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">Идентификатор требуемого класса.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">Идентификатор требуемого интерфейса.</param>
      <returns vsli:raw="An unmanaged pointer to the requested interface.">Неуправляемый указатель на запрашиваемый интерфейс.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Сбой IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetRuntimeInterfaceAsObject(System.Guid,System.Guid)">
      <summary vsli:raw="Returns an instance of a type that represents a COM object by a pointer to its &lt;see langword=&quot;IUnknown&quot; /&gt; interface.">Возвращает экземпляр типа, представляющий COM-объект при помощи указателя на его интерфейс <see langword="IUnknown" />.</summary>
      <param name="clsid" vsli:raw="The identifier for the desired class.">Идентификатор требуемого класса.</param>
      <param name="riid" vsli:raw="The identifier for the desired interface.">Идентификатор требуемого интерфейса.</param>
      <returns vsli:raw="An object that represents the specified unmanaged COM object.">Объект, представляющий указанный неуправляемый COM-объект.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="IUnknown::QueryInterface failure.">Сбой IUnknown::QueryInterface.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.RuntimeEnvironment.GetSystemVersion">
      <summary vsli:raw="Gets the version number of the common language runtime that's running the current process.">Возвращает номер версии среды CLR, выполняющей текущий процесс.</summary>
      <returns vsli:raw="A string containing the version number of the common language runtime.">Строка, содержащая номер версии среды CLR.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile">
      <summary vsli:raw="Gets the path to the system configuration file.">Возвращает путь к файлу конфигурации системы.</summary>
      <returns vsli:raw="The path to the system configuration file.">Путь к файлу конфигурации системы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <summary vsli:raw="The exception thrown when the rank of an incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the rank specified in the managed signature.">Это исключение возникает, если ранг входного массива <see langword="SAFEARRAY" /> не совпадает с рангом, указанным в управляемой подписи.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayRankMismatchException&quot; /&gt; class with the specified message.">Инициализирует новый экземпляр класса <see langword="SafeArrayRankMismatchException" /> указанным сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayRankMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeArrayRankMismatchException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <summary vsli:raw="The exception thrown when the type of the incoming &lt;see langword=&quot;SAFEARRAY&quot; /&gt; does not match the type specified in the managed signature.">Исключение создается, если тип входящего <see langword="SAFEARRAY" /> не совпадает с типом, указанным в управляемой подписи.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with default values.">Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;SafeArrayTypeMismatchException&quot; /&gt; class with the specified message.">Инициализирует новый экземпляр класса <see langword="SafeArrayTypeMismatchException" /> указанным сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SafeArrayTypeMismatchException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeArrayTypeMismatchException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.SafeBuffer">
      <summary>Предоставляет управляемый буфер памяти, который может использоваться для чтения и записи. Попытки обращения к памяти за пределами управляемого буфера (опустошение или переполнение) вызывают исключения.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> и указывает, должен ли быть дескриптор буфера надежно освобожден.</summary>
      <param name="ownsHandle">Значение <see langword="true" />, чтобы надежно освободить маркер на стадии завершения; значение <see langword="false" />, чтобы предотвратить надежное освобождение (не рекомендуется).</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
      <summary>Получает из объекта <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> указатель для блока памяти.</summary>
      <param name="pointer">Указатель байта, передаваемый по ссылке, для получения указателя из объекта <see cref="T:System.Runtime.InteropServices.SafeBuffer" />. Необходимо присвоить этому указателю значение <see langword="null" />, прежде чем вызывать этот метод.</param>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
      <summary>Получает размер буфера (в байтах).</summary>
      <returns>Число байтов в буфере памяти.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
      <summary>Задает размер выделяемого буфера памяти, используя указанное количество элементов и размер элемента. Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Количество элементов в буфере.</param>
      <param name="sizeOfEachElement">Размер каждого элемента в буфере.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numElements" /> меньше нуля.

или -
Значение параметра <paramref name="sizeOfEachElement" /> меньше нуля.

или -
Произведение <paramref name="numElements" /> и <paramref name="sizeOfEachElement" /> превышает объем доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
      <summary>Определяет размер выделяемой области памяти (в байтах). Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numBytes">Количество байтов в буфере.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numBytes" /> меньше нуля.

или -
<paramref name="numBytes" /> больше доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
      <summary>Определяет размер выделяемой области памяти путем указания количества значений и их типа. Данный метод необходимо вызвать перед использованием экземпляра <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</summary>
      <param name="numElements">Количество элементов этого типа значения, под которое выделяется память.</param>
      <typeparam name="T">Тип значения, под который выделяется память.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="numElements" /> меньше нуля.

или -
Произведение <paramref name="numElements" /> и размера каждого элемента превышает объем доступного адресного пространства.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
      <summary>Считывает из памяти тип значения с указанным смещением.</summary>
      <param name="byteOffset">Расположение, из которого считывается тип значения. Может потребоваться продумать проблемы выравнивания.</param>
      <typeparam name="T">Считываемый тип значения.</typeparam>
      <returns>Тип значения, считанный из памяти.</returns>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Считывает из памяти указанное количество типов значений, начиная указанного смещения, и записывает их в массив, начиная с указанного индекса.</summary>
      <param name="byteOffset">Расположение, с которого начинается считывание.</param>
      <param name="array">Выходной массив для записи.</param>
      <param name="index">Расположение в выходном массиве, с которого начинается запись.</param>
      <param name="count">Количество типов значений, считываемых из входного массива и записываемых в выходной массив.</param>
      <typeparam name="T">Считываемый тип значения.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.

или -
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина массива за вычетом индекса меньше значения <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
      <summary>Высвобождает указатель, полученный методом <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
      <summary>Записывает тип значения в память в указанном расположении.</summary>
      <param name="byteOffset">Расположение, с которого начинается запись. Может потребоваться продумать проблемы выравнивания.</param>
      <param name="value">Значение для записи.</param>
      <typeparam name="T">Записываемый тип значения.</typeparam>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
      <summary>Записывает указанное количество типов значений в указанное расположение в памяти, считывая байты входного массива, начиная с указанного расположения.</summary>
      <param name="byteOffset">Расположение в памяти, в которое выполняется запись.</param>
      <param name="array">Входной массив.</param>
      <param name="index">Смещение в этом массиве, с которого начинается считывание.</param>
      <param name="count">Число записываемых типов значений.</param>
      <typeparam name="T">Записываемый тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Длина входного массива за вычетом <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> не был вызван.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.SEHException">
      <summary vsli:raw="Represents structured exception handling (SEH) errors.">Представляет ошибки структурной обработки исключений (SEH).</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class from serialization data.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" />, используя данные сериализации.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified message.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" /> с заданным сообщением.</summary>
      <param name="message" vsli:raw="The message that indicates the reason for the exception.">Сообщение, указывающее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.SEHException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.SEHException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.SEHException.CanResume">
      <summary vsli:raw="Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.">Показывает, возможно ли восстановление после исключения и возможно ли продолжить выполнение кода с точки возникновения этого исключения.</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;, because resumable exceptions are not implemented.">Всегда имеет значение <see langword="false" />, поскольку исключения с возможностью восстановления не реализованы.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary vsli:raw="Replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.">Заменяет стандартный независимый от потока модуль упаковки и передачи среды CLR на стандартный модуль упаковки и передачи STA OLE.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.StandardOleMarshalObject&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
      <summary vsli:raw="Provides support for type equivalence.">Обеспечивает поддержку эквивалентности типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class.">Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeIdentifierAttribute&quot; /&gt; class with the specified scope and identifier.">Создает новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> с указанными областью и идентификатором.</summary>
      <param name="scope" vsli:raw="The first type equivalence string.">Первая строка эквивалентности типов.</param>
      <param name="identifier" vsli:raw="The second type equivalence string.">Вторая строка эквивалентности типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;identifier&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Получает значение параметра <paramref name="identifier" />, переданного конструктору <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;identifier&quot; /&gt; parameter.">Значение параметра <paramref name="identifier" /> конструктора.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
      <summary vsli:raw="Gets the value of the &lt;paramref name=&quot;scope&quot; /&gt; parameter that was passed to the &lt;see cref=&quot;M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)&quot; /&gt; constructor.">Получает значение параметра <paramref name="scope" />, переданного конструктору <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</summary>
      <returns vsli:raw="The value of the constructor's &lt;paramref name=&quot;scope&quot; /&gt; parameter.">Значение параметра <paramref name="scope" /> конструктора.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.FUNCFLAGS&quot; /&gt; that were originally imported for this method from the COM type library.">Содержит флаги <see cref="T:System.Runtime.InteropServices.FUNCFLAGS" />, ранее импортированные для данного метода из библиотеки COM- типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see langword="TypeLibFuncAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для метода с атрибутом, обнаруженное в библиотеке типов, из которой метод был импортирован.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibFuncAttribute.#ctor(System.Runtime.InteropServices.TypeLibFuncFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibFuncAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see langword="TypeLibFuncAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for the attributed method as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для метода с атрибутом, обнаруженное в библиотеке типов, из которой метод был импортирован.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibFuncAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для этого метода.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibFuncFlags&quot; /&gt; value for this method.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibFuncFlags" /> для этого метода.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibFuncFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see langword=&quot;FUNCFLAGS&quot; /&gt; in the COM type library from where this method was imported.">Описывает исходные параметры <see langword="FUNCFLAGS" /> в библиотеке типов COM, из которой был импортирован данный метод.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable">
      <summary vsli:raw="The function that supports data binding.">Функция, поддерживающая привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultBind">
      <summary vsli:raw="The function that best represents the object. Only one function in a type information can have this attribute.">Функция, предоставляющая объект наилучшим образом. Этот атрибут в сведениях о типе может быть только у одной функции.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FDisplayBind">
      <summary vsli:raw="The function that is displayed to the user as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable&quot; /&gt; must also be set.">Функция, отображаемая пользователю как связываемая. <see cref="F:System.Runtime.InteropServices.TypeLibFuncFlags.FBindable" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FHidden">
      <summary vsli:raw="The function should not be displayed to the user, although it exists and is bindable.">Эту функцию не следует показывать пользователю, хотя она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FImmediateBind">
      <summary vsli:raw="The function is mapped as individual bindable properties.">Функция сопоставляется так же, как отдельные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FNonBrowsable">
      <summary vsli:raw="The property appears in an object browser, but not in a properties browser.">Это свойство отображается в обозревателе объектов и не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRequestEdit">
      <summary vsli:raw="When set, any call to a method that sets the property results first in a call to &lt;see langword=&quot;IPropertyNotifySink::OnRequestEdit&quot; /&gt;.">Если задано, любой вызов метод, задающего это свойство, сначала приводит к вызову <see langword="IPropertyNotifySink::OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FSource">
      <summary vsli:raw="The function returns an object that is a source of events.">Функция возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUiDefault">
      <summary vsli:raw="The type information member is the default member for display in the user interface.">Член сведений о типе является членом по умолчанию для отображения в пользовательском интерфейсе.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibFuncFlags.FUsesGetLastError">
      <summary vsli:raw="The function supports &lt;see langword=&quot;GetLastError&quot; /&gt;.">Функция поддерживает <see langword="GetLastError" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibImportClassAttribute">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Type&quot; /&gt; exclusively uses an interface. This class cannot be inherited.">Определяет, какой тип <see cref="T:System.Type" /> использует интерфейс исключительным образом. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibImportClassAttribute&quot; /&gt; class specifying the &lt;see cref=&quot;T:System.Type&quot; /&gt; that exclusively uses an interface.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute" />, задавая тип <see cref="T:System.Type" />, исключительным образом использующий интерфейс.</summary>
      <param name="importClass" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Объект <see cref="T:System.Type" />, использующий интерфейс исключительным образом.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibImportClassAttribute.Value">
      <summary vsli:raw="Gets the name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Возвращает имя объекта <see cref="T:System.Type" />, который использует интерфейс исключительным образом.</summary>
      <returns vsli:raw="The name of a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that exclusively uses an interface.">Имя объекта <see cref="T:System.Type" />, который использует интерфейс исключительным образом.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; that were originally imported for this type from the COM type library.">Содержит флаги <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" />, ранее импортированные для данного типа из библиотеки COM-типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see langword="TypeLibTypeAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для типа с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibTypeAttribute.#ctor(System.Runtime.InteropServices.TypeLibTypeFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TypeLibTypeAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see langword="TypeLibTypeAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for the attributed type as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для типа с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibTypeAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для этого типа.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibTypeFlags&quot; /&gt; value for this type.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibTypeFlags" /> для этого типа.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibTypeFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPEFLAGS&quot; /&gt; in the COM type library from which the type was imported.">Описывает исходные параметры флагов <see cref="T:System.Runtime.InteropServices.TYPEFLAGS" /> в библиотеке типов COM, из которой был импортирован данный тип.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAggregatable">
      <summary vsli:raw="The class supports aggregation.">Класс поддерживает агрегирование.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FAppObject">
      <summary vsli:raw="A type description that describes an &lt;see langword=&quot;Application&quot; /&gt; object.">Описание типа, описывающее объект <see langword="Application" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate">
      <summary vsli:raw="Instances of the type can be created by &lt;see langword=&quot;ITypeInfo::CreateInstance&quot; /&gt;.">Экземпляры этого типа могут быть созданы при помощи <see langword="ITypeInfo::CreateInstance" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FControl">
      <summary vsli:raw="The type is a control from which other types will be derived, and should not be displayed to users.">Этот тип является элементом управления, из которого производятся другие типы. Он не должен отображаться для пользователей.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable">
      <summary vsli:raw="Indicates that the interface derives from &lt;see langword=&quot;IDispatch&quot; /&gt;, either directly or indirectly.">Показывает, что интерфейс является производным от <see langword="IDispatch" />, прямо или косвенно.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FDual">
      <summary vsli:raw="The interface supplies both &lt;see langword=&quot;IDispatch&quot; /&gt; and V-table binding.">Интерфейс поддерживает и <see langword="IDispatch" />, и привязку v-таблицы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FHidden">
      <summary vsli:raw="The type should not be displayed to browsers.">Этот тип не должен отображаться для браузеров.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FLicensed">
      <summary vsli:raw="The type is licensed.">Этот тип лицензирован.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FNonExtensible">
      <summary vsli:raw="The interface cannot add members at run time.">Интерфейс не может добавлять члены в процессе выполнения.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation">
      <summary vsli:raw="The types used in the interface are fully compatible with Automation, including vtable binding support.">Типы, используемые в данном интерфейсе полностью совместимы с Automation, включая поддержку привязки v-таблицы.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FPreDeclId">
      <summary vsli:raw="The type is predefined. The client application should automatically create a single instance of the object that has this attribute. The name of the variable that points to the object is the same as the class name of the object.">Этот тип определен заранее. Клиентское приложение должно автоматически создать единственный экземпляр объекта с данным атрибутом. Имя переменной, указывающей на данный объект, совпадает с именем класса объекта.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReplaceable">
      <summary vsli:raw="The object supports &lt;see langword=&quot;IConnectionPointWithDefault&quot; /&gt;, and has default behaviors.">Объект поддерживает <see langword="IConnectionPointWithDefault" />, и для него задано поведение по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level types or types that type browsers should not display.">Этот флаг предназначен для типов уровня системы или типов, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibTypeFlags.FReverseBind">
      <summary vsli:raw="Indicates base interfaces should be checked for name resolution before checking child interfaces. This is the reverse of the default behavior.">Показывает, что расширения имен основных интерфейсов должны проверяться до проверки дочерних интерфейсов. Этот порядок проверки является обратным относительно поведения по умолчанию.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarAttribute">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; that were originally imported for this field from the COM type library.">Содержит флаги <see cref="T:System.Runtime.InteropServices.VARFLAGS" />, ранее импортированные для данного поля из библиотеки COM-типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для поля с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVarAttribute.#ctor(System.Runtime.InteropServices.TypeLibVarFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVarAttribute" /> заданным значением <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" />.</summary>
      <param name="flags" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for the attributed field as found in the type library it was imported from.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для поля с атрибутом, обнаруженное в библиотеке типов, из которой выполнялся импорт.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVarAttribute.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">Возвращает значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для этого поля.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVarFlags&quot; /&gt; value for this field.">Значение <see cref="T:System.Runtime.InteropServices.TypeLibVarFlags" /> для этого поля.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVarFlags">
      <summary vsli:raw="Describes the original settings of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VARFLAGS&quot; /&gt; in the COM type library from which the variable was imported.">Описывает исходные параметры <see cref="T:System.Runtime.InteropServices.VARFLAGS" /> в библиотеке COM-типов, из которой была импортирована эта переменная.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable">
      <summary vsli:raw="The variable supports data binding.">Переменная поддерживает привязку данных.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultBind">
      <summary vsli:raw="The variable is the single property that best represents the object. Only one variable in a type info can have this value.">Переменная является единственным свойством, представляющим объект наилучшим образом. Только одна переменная в сведениях о типе может иметь это значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDefaultCollelem">
      <summary vsli:raw="Permits an optimization in which the compiler looks for a member named &quot;xyz&quot; on the type &quot;abc&quot;. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function.">Допускает оптимизацию, в процессе которой компилятор ищет элемент с именем xyz типа abc. Если такой элемент обнаружен и помечен как функция доступа к элементу коллекции, заданной по умолчанию, то создается вызов этой функции-элемента.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FDisplayBind">
      <summary vsli:raw="The variable is displayed as bindable. &lt;see cref=&quot;F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable&quot; /&gt; must also be set.">Переменная отображается как связываемая. <see cref="F:System.Runtime.InteropServices.TypeLibVarFlags.FBindable" /> также следует задать.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FHidden">
      <summary vsli:raw="The variable should not be displayed in a browser, though it exists and is bindable.">Не следует отображать ту переменную в браузере, даже если она существует и является связываемой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FImmediateBind">
      <summary vsli:raw="The variable is mapped as individual bindable properties.">Переменная сопоставляется так же, как собственные связываемые свойства.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FNonBrowsable">
      <summary vsli:raw="The variable appears in an object browser, but not in a properties browser.">Переменная появляется в обозревателе объектов, но не отображается в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReadOnly">
      <summary vsli:raw="Assignment to the variable should not be allowed.">Не следует разрешать присвоение значений этой переменной.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FReplaceable">
      <summary vsli:raw="Tags the interface as having default behaviors.">Помечает интерфейс как обладающий заданным по умолчанию поведением.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRequestEdit">
      <summary vsli:raw="Indicates that the property supports the COM &lt;see langword=&quot;OnRequestEdit&quot; /&gt; notification.">Показывает, что свойство поддерживает уведомление COM <see langword="OnRequestEdit" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FRestricted">
      <summary vsli:raw="This flag is intended for system-level functions or functions that type browsers should not display.">Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FSource">
      <summary vsli:raw="The variable returns an object that is a source of events.">Переменная возвращает объект, являющийся источником событий.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.TypeLibVarFlags.FUiDefault">
      <summary vsli:raw="The default display in the user interface.">Отображение по умолчанию в интерфейсе пользователя.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.TypeLibVersionAttribute">
      <summary vsli:raw="Specifies the version number of an exported type library.">Задает номер версии экспортированной библиотеки типов.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.TypeLibVersionAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.TypeLibVersionAttribute&quot; /&gt; class with the major and minor version numbers of the type library.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" /> с основным и дополнительным номерами версии библиотеки типов.</summary>
      <param name="major" vsli:raw="The major version number of the type library.">Основной номер версии библиотеки типов.</param>
      <param name="minor" vsli:raw="The minor version number of the type library.">Дополнительный номер версии библиотеки типов.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MajorVersion">
      <summary vsli:raw="Gets the major version number of the type library.">Получает основной номер версии библиотеки типов.</summary>
      <returns vsli:raw="The major version number of the type library.">Основной номер версии библиотеки типов.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.TypeLibVersionAttribute.MinorVersion">
      <summary vsli:raw="Gets the minor version number of the type library.">Получает дополнительный номер версии библиотеки типов.</summary>
      <returns vsli:raw="The minor version number of the type library.">Дополнительный номер версии библиотеки типов.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnknownWrapper">
      <summary vsli:raw="Wraps objects the marshaler should marshal as a &lt;see langword=&quot;VT_UNKNOWN&quot; /&gt;.">Инкапсулирует объекты, которые необходимо маршалировать, как <see langword="VT_UNKNOWN" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnknownWrapper&quot; /&gt; class with the object to be wrapped.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.UnknownWrapper" /> инкапсулируемым в обертку объектом.</summary>
      <param name="obj" vsli:raw="The object being wrapped.">Инкапсулируемый в обертку объект.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject">
      <summary vsli:raw="Gets the object contained by this wrapper.">Возвращает объект, содержащийся в этой обертке.</summary>
      <returns vsli:raw="The wrapped object.">Инкапсулированный в обертку объект.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <summary vsli:raw="Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.">Управляет поведением при маршалинге сигнатуры делегата, передаваемой как указатель неуправляемой функции в неуправляемый код или из него. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&quot; /&gt; class with the specified calling convention.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute" /> с заданным соглашением о вызове.</summary>
      <param name="callingConvention" vsli:raw="The specified calling convention.">Заданное соглашение о вызове.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping">
      <summary vsli:raw="Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.">Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention">
      <summary vsli:raw="Gets the value of the calling convention.">Возвращает значение соглашения о вызове.</summary>
      <returns vsli:raw="The value of the calling convention specified by the &lt;see cref=&quot;M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)&quot; /&gt; constructor.">Значение соглашения о вызове, указанное конструктором <see cref="M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)" />.</returns>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet">
      <summary vsli:raw="Indicates how to marshal string parameters to the method, and controls name mangling.">Указывает способ маршалинга параметров строки для метода, а также управляет искажением имени.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError">
      <summary vsli:raw="Indicates whether the callee calls the &lt;see langword=&quot;SetLastError&quot; /&gt; Windows API function before returning from the attributed method.">Показывает, вызывает ли вызываемый объект функцию <see langword="SetLastError" /> интерфейса Windows API перед возвращением из метода, использующего атрибуты.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar">
      <summary vsli:raw="Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.">Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.UnmanagedType">
      <summary>Определяет порядок маршалинга параметров или полей в неуправляемый код.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AnsiBStr">
      <summary>Строка однобайтовых знаков ANSI с префиксом, обозначающим ее длину. Этот элемент можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.AsAny">
      <summary>Динамический тип, который определяет тип объекта во время выполнения и маршалирует объекта как объекта данного типа. Этот член является допустимым только для методов вызова неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Bool">
      <summary>4-байтовое логическое значение (<see langword="true" /> != 0, <see langword="false" /> = 0). Это тип BOOL платформы Win32.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.BStr">
      <summary>Двухбайтовая строка знаков Юникода с префиксом, обозначающим ее длину. Этот элемент, являющийся строкой, определенной в COM по умолчанию, можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValArray">
      <summary>Если свойство <see cref="P:System.Runtime.InteropServices.MarshalAsAttribute.Value" /> равно <see langword="ByValArray" />, то для указания числа элементов массива должно быть задано поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" />. Если требуется различать типы строк, поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType" /> может содержать тип <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> элементов массива. <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> можно использовать только для массива, элементы которого отображаются как поля в структуре.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.ByValTStr">
      <summary>Используется для встроенных массивов знаков фиксированной длины, появляющихся в структуре. Типы <see langword="ByValTStr" /> ведут себя как строки с фиксированным размером в стиле C в структуре (например, <c>char s [5]</c>). Тип символа, используемый с <see langword="ByValTStr" />, определяется аргументом <see cref="T:System.Runtime.InteropServices.CharSet" /> атрибута <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />, примененным к содержащей его структуре. Для задания размера массива всегда следует использовать поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Currency">
      <summary>Тип валюты. Используется в <see cref="T:System.Decimal" /> для маршалинга десятичного значения как типа денежной единицы COM, вместо <see langword="Decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler">
      <summary>Задает класс настраиваемых модулей маршалинга при использовании с полем <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /> или <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef" />. Поле <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie" /> можно использовать для передачи дополнительных сведений настраиваемому модулю маршалинга. Этот элемент можно использовать для всех ссылочных типов. Этот член допустим только для параметров и возвращаемых значений. Его нельзя использовать в полях.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Error">
      <summary>Собственный тип, связанный с <see cref="F:System.Runtime.InteropServices.UnmanagedType.I4" /> или <see cref="F:System.Runtime.InteropServices.UnmanagedType.U4" />, который приводит к экспорту параметра как значения HRESULT в экспортированной библиотеке типов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.FunctionPtr">
      <summary>Целое число, которое может использоваться как указатель функции в стиле языка С. Этот член можно использовать для типа данных <see cref="T:System.Delegate" /> или типа, наследуемого от <see cref="T:System.Delegate" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.HString">
      <summary>Строка Среда выполнения Windows. Этот элемент можно использовать для типа данных <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I1">
      <summary>1-байтовое целое число со знаком. Этот элемент можно использовать для преобразования значения типа Boolean в 1-байтовое значение <see langword="bool" /> в стиле языка C (<see langword="true" /> = 1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I2">
      <summary>2-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I4">
      <summary>4-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.I8">
      <summary>8-байтовое целое число со знаком.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IDispatch">
      <summary>Указатель COM <see langword="IDispatch" /> (<see langword="Object" /> в Microsoft Visual Basic 6.0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IInspectable">
      <summary>Указатель интерфейса Среда выполнения Windows. Этот элемент можно использовать для типа данных <see cref="T:System.Object" /> .</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Interface">
      <summary>Указатель интерфейса COM. Идентификатор <see cref="T:System.Guid" /> интерфейса получен из класса метаданных. Этот элемент можно использовать для указания точного типа интерфейса или типа интерфейса, используемого по умолчанию при применении к классу. Этот элемент определяет такое же поведение, что и <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" />, при его применении к типу данных <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.IUnknown">
      <summary>Указатель <see langword="IUnknown" /> COM. Этот элемент можно использовать для типа данных <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPArray">
      <summary>Указатель на первый элемент массива в стиле языка C. При маршалинге из управляемого кода в неуправляемый длина массива определяется исходя из длины управляемого массива. При маршалинге из неуправляемого кода в управляемый длина массива определяется исходя из значений полей <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst" /> и <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex" />, за которыми, если требуется различать тип строк, следует тип элементов неуправляемого массива.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStr">
      <summary>Однобайтовая строка знаков ANSI, заканчивающаяся нулем. Этот член можно использовать для типов данных <see cref="T:System.String" /> и <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPStruct">
      <summary>Указатель на структуру в стиле языка C, используемую для маршалинга управляемых форматируемых классов. Этот член является допустимым только для методов вызова неуправляемого кода.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPTStr">
      <summary>Строка символов, зависящих от платформы: ANSI для Windows 98, Юникод для Windows NT и Windows XP. Это значение поддерживается только для вызова неуправляемого кода и не используется для COM-взаимодействия, поскольку экспортирование строки типа <see langword="LPTStr" /> не поддерживается.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPUTF8Str">
      <summary>Указатель на строку в кодировке UTF-8.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.LPWStr">
      <summary>2-байтовая строка символов Юникода, заканчивающаяся нулем. Нельзя использовать значение <see langword="LPWStr" /> с неуправляемой строкой, если только эта строка не была создана с помощью неуправляемой функции <see langword="CoTaskMemAlloc" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R4">
      <summary>4-байтовое число с плавающей запятой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.R8">
      <summary>8-байтовое число с плавающей запятой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SafeArray">
      <summary>
        <see langword="SafeArray" /> — это описывающий сам себя массив, передающий тип, ранг и границы соответствующего массива данных. Этот элемент можно использовать с полем <see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType" />, чтобы переопределить тип элемента, заданный по умолчанию.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.Struct">
      <summary>Значение типа VARIANT, используемое для маршалинга управляемых форматируемых классов и типов значений.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysInt">
      <summary>Зависящее от платформы целое число со знаком: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.SysUInt">
      <summary>Зависящее от платформы целое число без знака: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.TBStr">
      <summary>Зависящая от платформы строка <see langword="char" />, предваряемая длиной: ANSI для Windows 98, Юникод для Windows NT. Этот элемент, аналогичный BSTR, используется редко.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U1">
      <summary>1-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U2">
      <summary>2-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U4">
      <summary>4-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.U8">
      <summary>8-байтовое целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VariantBool">
      <summary>2-байтовое значение типа VARIANT_BOOL, определенное OLE (<see langword="true" /> != -1, <see langword="false" /> = 0).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.UnmanagedType.VBByRefStr">
      <summary>Значение, позволяющее Visual Basic изменять строку в неуправляемом коде и получать результаты, отраженные в управляемом коде. Это значение поддерживается только для вызова неуправляемого кода.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VarEnum">
      <summary vsli:raw="Indicates how to marshal the array elements when an array is marshaled from managed to unmanaged code as a &lt;see cref=&quot;F:System.Runtime.InteropServices.UnmanagedType.SafeArray&quot; /&gt;.">Показывает способ маршалинга элементов массива при маршалинге массива из управляемого кода в неуправляемый код как массива <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ARRAY">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;SAFEARRAY&quot; /&gt; pointer.">Показывает указатель <see langword="SAFEARRAY" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB">
      <summary vsli:raw="Indicates length prefixed bytes.">Показывает длину префикса в байтах.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BLOB_OBJECT">
      <summary vsli:raw="Indicates that a blob contains an object.">Показывает, что BLOB-объект содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BOOL">
      <summary vsli:raw="Indicates a Boolean value.">Показывает логическое значение (Boolean).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BSTR">
      <summary vsli:raw="Indicates a BSTR string.">Показывает строку BSTR.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_BYREF">
      <summary vsli:raw="Indicates that a value is a reference.">Показывает, что значение является ссылкой.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CARRAY">
      <summary vsli:raw="Indicates a C style array.">Показывает массив в стиле языка C.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CF">
      <summary vsli:raw="Indicates the clipboard format.">Показывает формат буфера.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CLSID">
      <summary vsli:raw="Indicates a class ID.">Показывает идентификатор ID класса.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_CY">
      <summary vsli:raw="Indicates a currency value.">Показывает денежное значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DATE">
      <summary vsli:raw="Indicates a DATE value.">Показывает значение DATE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DECIMAL">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;decimal&quot; /&gt; value.">Показывает значение <see langword="decimal" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_DISPATCH">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IDispatch&quot; /&gt; pointer.">Показывает указатель <see langword="IDispatch" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_EMPTY">
      <summary vsli:raw="Indicates that a value was not specified.">Показывает, что значение не задано.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_ERROR">
      <summary vsli:raw="Indicates an SCODE.">Показывает SCODE.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_FILETIME">
      <summary vsli:raw="Indicates a FILETIME value.">Показывает значение FILETIME.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_HRESULT">
      <summary vsli:raw="Indicates an HRESULT.">Показывает значение HRESULT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;char&quot; /&gt; value.">Показывает значение <see langword="char" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I2">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;short&quot; /&gt; integer.">Показывает целое число <see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;long&quot; /&gt; integer.">Показывает целое число <see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_I8">
      <summary vsli:raw="Indicates a 64-bit integer.">Показывает 64-разрядное целое число.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_INT">
      <summary vsli:raw="Indicates an integer value.">Показывает целочисленное значение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPSTR">
      <summary vsli:raw="Indicates a null-terminated string.">Показывает строку, заканчивающуюся нулем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_LPWSTR">
      <summary vsli:raw="Indicates a wide string terminated by &lt;see langword=&quot;null&quot; /&gt;.">Показывает двухбайтную строку, завершенную <see langword="null" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_NULL">
      <summary vsli:raw="Indicates a null value, similar to a null value in SQL.">Показывает значение null, аналогичное значению null в SQL.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_PTR">
      <summary vsli:raw="Indicates a pointer type.">Показывает тип указателя.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R4">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;float&quot; /&gt; value.">Показывает значение <see langword="float" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_R8">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;double&quot; /&gt; value.">Показывает значение <see langword="double" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_RECORD">
      <summary vsli:raw="Indicates a user defined type.">Показывает тип, определенный пользователем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_SAFEARRAY">
      <summary vsli:raw="Indicates a SAFEARRAY. Not valid in a VARIANT.">Показывает SAFEARRAY. Не допустимо для значений типа VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORAGE">
      <summary vsli:raw="Indicates that the name of a storage follows.">Показывает, что далее следует имя хранилища.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STORED_OBJECT">
      <summary vsli:raw="Indicates that a storage contains an object.">Показывает, что хранилище содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAM">
      <summary vsli:raw="Indicates that the name of a stream follows.">Показывает, что далее следует имя потока.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_STREAMED_OBJECT">
      <summary vsli:raw="Indicates that a stream contains an object.">Показывает, что поток содержит объект.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI1">
      <summary vsli:raw="Indicates a &lt;see langword=&quot;byte&quot; /&gt;.">Показывает <see langword="byte" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI2">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;short&quot; /&gt;.">Показывает <see langword="unsigned" /><see langword="short" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI4">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt;.">Показывает <see langword="unsigned" /><see langword="long" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UI8">
      <summary vsli:raw="Indicates an 64-bit unsigned integer.">Показывает 64-разрядное целое число без знака.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UINT">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;unsigned&quot; /&gt; integer value.">Показывает целое число <see langword="unsigned" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN">
      <summary vsli:raw="Indicates an &lt;see langword=&quot;IUnknown&quot; /&gt; pointer.">Показывает указатель <see langword="IUnknown" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_USERDEFINED">
      <summary vsli:raw="Indicates a user defined type.">Показывает тип, определенный пользователем.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VARIANT">
      <summary vsli:raw="Indicates a VARIANT &lt;see langword=&quot;far&quot; /&gt; pointer.">Показывает указатель <see langword="far" /> типа VARIANT.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VECTOR">
      <summary vsli:raw="Indicates a simple, counted array.">Показывает одномерный сосчитанный массив.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.VarEnum.VT_VOID">
      <summary vsli:raw="Indicates a C style &lt;see langword=&quot;void&quot; /&gt;.">Показывает <see langword="void" /> в стиле языка C.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.VariantWrapper">
      <summary vsli:raw="Marshals data of type &lt;see langword=&quot;VT_VARIANT | VT_BYREF&quot; /&gt; from managed to unmanaged code. This class cannot be inherited.">Маршалирует данные типа <see langword="VT_VARIANT | VT_BYREF" /> из управляемого кода в неуправляемый. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter.">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> для заданного параметра <see cref="T:System.Object" />.</summary>
      <param name="obj" vsli:raw="The object to marshal.">Объект для маршалинга.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject">
      <summary vsli:raw="Gets the object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">Возвращает объект, инкапсулированный с помощью объекта <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</summary>
      <returns vsli:raw="The object wrapped by the &lt;see cref=&quot;T:System.Runtime.InteropServices.VariantWrapper&quot; /&gt; object.">Объект, инкапсулированный с помощью объекта <see cref="T:System.Runtime.InteropServices.VariantWrapper" />.</returns>
    </member>
    <member name="T:System.Security.SecureString">
      <summary vsli:raw="Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed. This class cannot be inherited.">Представляет текст, который должен оставаться конфиденциальным, например, путем его удаления из памяти компьютера, если он больше не нужен. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Security.SecureString.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this instance.">Произошла ошибка при защите значения этого экземпляра или снятии с него защиты.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Эта операция не поддерживается этой платформой.</exception>
    </member>
    <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class from a subarray of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.  &#xA;  &#xA; This constructor is not CLS-compliant. The CLS-compliant alternative is &lt;see cref=&quot;M:System.Security.SecureString.#ctor&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" /> из подмассива объектов <see cref="T:System.Char" />.
Этот конструктор несовместим с CLS. CLS-совместимая альтернатива — <see cref="M:System.Security.SecureString.#ctor" />.</summary>
      <param name="value" vsli:raw="A pointer to an array of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects.">Указатель на массив объектов <see cref="T:System.Char" />.</param>
      <param name="length" vsli:raw="The number of elements of &lt;paramref name=&quot;value&quot; /&gt; to include in the new instance.">Число элементов массива <paramref name="value" />, включаемых в новый экземпляр.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than 65,536.">
        <paramref name="length" /> меньше нуля или больше 65 536.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This operation is not supported on this platform.">Эта операция не поддерживается этой платформой.</exception>
    </member>
    <member name="M:System.Security.SecureString.AppendChar(System.Char)">
      <summary vsli:raw="Appends a character to the end of the current secure string.">Добавляет знак в конец текущей защищенной строки.</summary>
      <param name="c" vsli:raw="A character to append to this secure string.">Знак, добавляемый к защищенной строке.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Performing this operation would make the length of this secure string greater than 65,536 characters.">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.Clear">
      <summary vsli:raw="Deletes the value of the current secure string.">Удаляет значение текущей защищенной строки.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Данная защищенная строка доступна только для чтения.</exception>
    </member>
    <member name="M:System.Security.SecureString.Copy">
      <summary vsli:raw="Creates a copy of the current secure string.">Создает копию текущей защищенной строки.</summary>
      <returns vsli:raw="A duplicate of this secure string.">Копия этой защищенной строки.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.Dispose">
      <summary vsli:raw="Releases all resources used by the current &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object.">Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Security.SecureString" />.</summary>
    </member>
    <member name="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
      <summary vsli:raw="Inserts a character in this secure string at the specified index position.">Вставляет знак в заданную индексом позицию защищенной строки.</summary>
      <param name="index" vsli:raw="The index position where parameter &lt;paramref name=&quot;c&quot; /&gt; is inserted.">Индекс позиции вставки параметра <paramref name="c" />.</param>
      <param name="c" vsli:raw="The character to insert.">Вставляемый знак.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than the length of this secure string.  &#xA;  &#xA; -or-  &#xA;  &#xA; Performing this operation would make the length of this secure string greater than 65,536 characters.">Значение <paramref name="index" /> менее нуля или более длины защищенной строки.

или -
При выполнении этой операции длина защищенной строки превысит 65 536 символов.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.IsReadOnly">
      <summary vsli:raw="Indicates whether this secure string is marked read-only.">Указывает, что защищенная строка доступна только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this secure string is marked read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если защищенная строка доступна только для чтения; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
    </member>
    <member name="P:System.Security.SecureString.Length">
      <summary vsli:raw="Gets the number of characters in the current secure string.">Возвращает количество символов в текущей защищенной строке.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Char&quot; /&gt; objects in this secure string.">Количество объектов <see cref="T:System.Char" /> в этой защищенной строке.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
    </member>
    <member name="M:System.Security.SecureString.MakeReadOnly">
      <summary vsli:raw="Makes the text value of this secure string read-only.">Делает текстовое значение этой защищенной строки доступным только для чтения.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
    </member>
    <member name="M:System.Security.SecureString.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the character at the specified index position from this secure string.">Удаляет из защищенной строки знак, расположенный по указанному индексу.</summary>
      <param name="index" vsli:raw="The index position of a character in this secure string.">Индекс знака в защищенной строке.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
      <summary vsli:raw="Replaces the existing character at the specified index position with another character.">Заменяет расположенный по указанному индексу знак другим знаком.</summary>
      <param name="index" vsli:raw="The index position of an existing character in this secure string.">Индекс имеющегося знака в защищенной строке.</param>
      <param name="c" vsli:raw="A character that replaces the existing character.">Знак, заменяющий имеющийся знак.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This secure string has already been disposed.">Защищенная строка уже удалена.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This secure string is read-only.">Данная защищенная строка доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero, or greater than or equal to the length of this secure string.">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="An error occurred while protecting or unprotecting the value of this secure string.">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</exception>
    </member>
    <member name="T:System.Security.SecureStringMarshal">
      <summary vsli:raw="Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.">Предоставляет коллекцию методов для выделения неуправляемой памяти и копирования блоков неуправляемой памяти.</summary>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object to a block of memory allocated from the unmanaged COM task allocator.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied to, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; into unmanaged memory, converting into ANSI format as it copies.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, to where the &lt;paramref name=&quot;s&quot; /&gt; parameter was copied, or 0 if a null object was supplied.">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
    <member name="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
      <summary vsli:raw="Copies the contents of a managed &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object into unmanaged memory.">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память.</summary>
      <param name="s" vsli:raw="The managed object to copy.">Управляемый объект, подлежащий копированию.</param>
      <returns vsli:raw="The address, in unmanaged memory, where &lt;paramref name=&quot;s&quot; /&gt; was copied, or 0 if &lt;paramref name=&quot;s&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; object whose length is 0.">Адрес в неуправляемой памяти, куда был скопирован параметр <paramref name="s" />, или значение 0, если параметр <paramref name="s" /> представляет собой объект <see cref="T:System.Security.SecureString" />, длина которого равна 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is insufficient memory available.">Не хватает памяти.</exception>
    </member>
  </members>
</doc>