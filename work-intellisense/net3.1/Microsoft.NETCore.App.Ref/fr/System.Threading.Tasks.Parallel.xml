<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary vsli:raw="Provides support for parallel loops and regions.">Fournit une prise en charge pour les boucles et les régions parallèles.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> dans laquelle les itérations peuvent s’exécuter en parallèle et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel.">Exécute une boucle <see langword="for" /> dans laquelle des itérations peuvent s’exécuter en parallèle.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and loop options can be configured.">Exécute une boucle <see langword="for" /> dans laquelle les itérations peuvent s’exécuter en parallèle et les options de la boucle peuvent être configurées.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des index 64 bits dans laquelle les itérations peuvent s’exécuter en parallèle et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ParallelLoopResult&quot; /&gt; structure that contains information on what portion of the loop completed.">Structure <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> qui contient des informations indiquant quelle partie de la boucle est terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel.">Exécute une boucle <see langword="for" /> avec des index 64 bits dans laquelle les itérations peuvent s’exécuter en parallèle.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des index 64 bits dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.">Exécute une boucle <see langword="for" /> avec des index 64 bits dans laquelle les itérations peuvent s’exécuter en parallèle et les options de la boucle peuvent être configurées.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des données locales de thread dans laquelle les itérations peuvent s’exécuter en parallèle et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des données locales de thread dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des index 64 bits et des données locales de thread dans laquelle les itérations peuvent s’exécuter en parallèle et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une boucle <see langword="for" /> avec des index 64 bits et des données locales de thread dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être supervisé et manipulé.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Index de début, inclus.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Index de fin, exclusif.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each thread.">Délégué de fonction qui retourne l'état initial des données locales pour chaque thread.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each thread.">Délégué qui exécute une dernière action sur l'état local de chaque thread.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Partitionneur classable qui contient la source de données d'origine.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the source orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Any methods in the source orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans le partitionneur classable <paramref name="source" /> retourne la valeur <see langword="false" />.
ou
La propriété <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> dans le partitionneur classable de source retourne <see langword="false" />.

ou -
Toutes les méthodes dans le partitionneur classable source retournent <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception thrown from one of the specified delegates.">Exception levée depuis l’un des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Partitionneur classable qui contient la source de données d'origine.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L’argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans le partitionneur classable <paramref name="source" /> retourne la valeur <see langword="false" />.

ou -
La propriété <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> dans le partitionneur classable <paramref name="source" /> retourne la valeur <see langword="false" />.

ou
L'exception levée lorsque toute méthode dans l'OrderablePartitioner <paramref name="source" /> retourne une valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Exception envoyée pour contenir une exception envoyée à partir des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> du partitionneur <paramref name="source" /> retourne <see langword="false" />.

ou -
Une méthode du partitioneur <paramref name="source" /> retourne <see langword="null" />.

ou -
La méthode <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> dans le <paramref name="source" /> ne retourne pas le nombre correct de partitions.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Exception envoyée pour contenir une exception envoyée à partir des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s'exécuter en parallèle.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L’argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> du partitionneur <paramref name="source" /> retourne <see langword="false" />.

ou -
Exception levée lorsque toutes les méthodes dans le partitionneur <paramref name="source" /> retournent la valeur <see langword="null" />.

ou -
La méthode <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> dans le <paramref name="source" /> ne retourne pas le nombre correct de partitions.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Exception envoyée pour contenir une exception envoyée à partir des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> du partitionneur <paramref name="source" /> retourne <see langword="false" />.

ou -
Exception levée lorsque toutes les méthodes dans le partitionneur <paramref name="source" /> retournent la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Exception envoyée pour contenir une exception envoyée à partir des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s'exécuter en parallèle et les options de la boucle peuvent être configurées.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> du partitionneur <paramref name="source" /> retourne <see langword="false" />.

ou -
Exception levée lorsque toutes les méthodes dans le partitionneur <paramref name="source" /> retournent la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Exception envoyée pour contenir une exception envoyée à partir des délégués spécifiés.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des index 64 bits sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des index 64 bits sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle et les options de la boucle peuvent être configurées.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Partitionneur classable qui contient la source de données d'origine.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retourne <see langword="false" /> ou le partitionneur retourne des partitions <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes and  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des index 64 bits et des données locales de thread sur <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Partitionneur classable qui contient la source de données d'origine.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; or &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> ou <paramref name="localFinally" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retourne <see langword="false" /> ou le partitionneur retourne des partitions <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retourne <see langword="false" /> ou le partitionneur retourne des partitions <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.Concurrent.Partitioner" /> dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Partitionneur qui contient la source de données d'origine.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Type des éléments dans <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.


ou
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propriété <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> dans <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> retourne <see langword="false" /> ou le partitionneur retourne des partitions <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s’exécuter en parallèle, les options de la boucle peuvent être configurées et l’état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou
L'argument <paramref name="body" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data and 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Exécute une opération <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) avec des données locales de thread et des index 64 bits sur <see cref="T:System.Collections.IEnumerable" /> dans laquelle les itérations peuvent s'exécuter en parallèle, les options de la boucle peuvent être configurées et l'état de la boucle peut être surveillé et manipulé.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Source de données énumérable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Délégué de fonction qui retourne l'état initial des données locales pour chaque tâche.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Délégué appelé une fois par itération.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Délégué qui exécute une dernière action sur l'état local de chaque tâche.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Type des données contenues dans la source.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Type des données locales de thread.</typeparam>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Structure qui contient des informations sur la partie de la boucle terminée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="source" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="body" /> a la valeur <see langword="null" />.

ou -
L'argument <paramref name="localInit" /> a la valeur <see langword="null" />.


ou
L'argument <paramref name="localFinally" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> dans l'argument <paramref name="parallelOptions" /> est annulé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">Exception qui contient toutes les exceptions individuelles levées sur tous les threads.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel.">Exécute chacune des actions fournies, éventuellement en parallèle.</summary>
      <param name="actions" vsli:raw="An array of &lt;see cref=&quot;T:System.Action&quot; /&gt; to execute.">Tableau des <see cref="T:System.Action" /> à exécuter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="actions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">L'exception levée lorsque toute action dans le tableau <paramref name="actions" /> lève une exception.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">Le tableau <paramref name="actions" /> contient un élément <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.">Exécute chacune des actions fournies, éventuellement en parallèle, sauf si l'opération est annulée par l'utilisateur.</summary>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objet qui configure le comportement de cette opération.</param>
      <param name="actions" vsli:raw="An array of actions to execute.">Tableau des actions à exécuter.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; is set.">Objet <see cref="T:System.Threading.CancellationToken" /> dans <paramref name="parallelOptions" /> est défini.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="actions" /> a la valeur <see langword="null" />.
ou
L'argument <paramref name="parallelOptions" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">L'exception levée lorsque toute action dans le tableau <paramref name="actions" /> lève une exception.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">Le tableau <paramref name="actions" /> contient un élément <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">Objet <see cref="T:System.Threading.CancellationTokenSource" /> associé à <see cref="T:System.Threading.CancellationToken" /> dans l'objet <paramref name="parallelOptions" /> a été supprimé.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary vsli:raw="Provides completion status on the execution of a &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop.">Indique l'état d'achèvement de l'exécution d'une boucle <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary vsli:raw="Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.">Indique si la boucle s'est terminée et donc, si toutes les itérations de la boucle ont été exécutées et si la boucle n'a pas reçu de requête de fin prématurée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the loop ran to completion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">True si la boucle s'est correctement exécutée ; sinon, false.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary vsli:raw="Gets the index of the lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtient l'index de l'itération la plus basse d'où <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> a été appelé.</summary>
      <returns vsli:raw="Returns an integer that represents the lowest iteration from which the Break statement was called.">Retourne un entier qui représente l'itération la plus basse à partir de laquelle l'instruction Break a été appelée.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary vsli:raw="Enables iterations of parallel loops to interact with other iterations. An instance of this class is provided by the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class to each loop; you can not create instances in your code.">Permet aux itérations de boucles parallèles d’interagir avec d’autres itérations. Une instance de cette classe est fournie par la classe <see cref="T:System.Threading.Tasks.Parallel" /> à chaque boucle ; vous ne pouvez pas créer d’instances dans votre code.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution of iterations beyond the current iteration at the system's earliest convenience.">Indique que l’exécution de la boucle <see cref="T:System.Threading.Tasks.Parallel" /> doit s’arrêter après l’itération actuelle dès que le système le peut.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method was previously called. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">La méthode <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> a été appelée au préalable. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> et <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> ne peuvent pas être utilisés en combinaison par les itérations de la même boucle.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary vsli:raw="Gets whether any iteration of the loop has thrown an exception that went unhandled by that iteration.">Indique si une itération de la boucle a levé une exception qui n'a pas été gérée par cette itération.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an unhandled exception was thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si une exception non gérée a été levée ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary vsli:raw="Gets whether any iteration of the loop has called the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method.">Indique si une itération de la boucle a appelé la méthode <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any iteration has stopped the loop by calling the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si une itération a arrêté la boucle en appelant la <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> méthode ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary vsli:raw="Gets the lowest iteration of the loop from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtient l'itération la plus basse de la boucle d'où <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> a été appelé.</summary>
      <returns vsli:raw="The lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called. In the case of a &lt;see cref=&quot;M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})&quot; /&gt; loop, the value is based on an internally-generated index.">Itération la plus basse d'où <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> a été appelé. Dans le cas d'une boucle <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />, la valeur est basée sur un index généré en interne.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary vsli:raw="Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.">Indique si l'itération actuelle de la boucle doit s'arrêter en fonction des requêtes effectuées par cette itération ou d'autres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current iteration should exit; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'itération actuelle doit s'arrêter ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution at the system's earliest convenience.">Indique que l'exécution de la boucle <see cref="T:System.Threading.Tasks.Parallel" /> doit s'arrêter dès que le système le peut.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; method was called previously. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">La méthode <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> a été appelée au préalable. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> et <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> ne peuvent pas être utilisés en combinaison par les itérations de la même boucle.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary vsli:raw="Stores options that configure the operation of methods on the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class.">Stocke des options qui configurent l'opération de méthodes sur la classe <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtient ou définit le <see cref="T:System.Threading.CancellationToken" /> associé à cette instance de <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <returns vsli:raw="The token that is associated with this instance.">Jeton associé à cette instance.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets or sets the maximum number of concurrent tasks enabled by this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtient ou définit le nombre maximal de tâches simultanées activées par cette instance <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <returns vsli:raw="An integer that represents the maximum degree of parallelism.">Entier qui représente le degré maximal de parallélisme.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is being set to zero or to a value that is less than -1.">Une valeur égale à 0 ou inférieure à -1 est assignée à la propriété.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance. Setting this property to null indicates that the current scheduler should be used.">Obtient ou définit le <see cref="T:System.Threading.Tasks.TaskScheduler" /> associé à cette instance de <see cref="T:System.Threading.Tasks.ParallelOptions" />. L'affectation de la valeur null à cette propriété indique que le planificateur actuel doit être utilisé.</summary>
      <returns vsli:raw="The task scheduler that is associated with this instance.">Planificateur de tâches associé à cette instance.</returns>
    </member>
  </members>
</doc>