<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>Fournit du contenu HTTP basé sur un tableau d'octets.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="content" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset">Décalage, en octets, dans le paramètre <paramref name="content" /> utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count">Nombre d'octets dans le <paramref name="content" /> en commençant par le paramètre <paramref name="offset" /> utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="content" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="offset" /> est inférieur à zéro.

ou -
Le paramètre <paramref name="offset" /> est supérieur à la longueur du contenu spécifié par le paramètre <paramref name="content" />.

ou -
Le paramètre <paramref name="count" /> est inférieur à zéro.

ou -
Le paramètre <paramref name="count" /> est supérieur à la longueur du contenu spécifié par le paramètre <paramref name="content" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>Crée un flux de contenu HTTP au cours d’une opération asynchrone en lecture dont le magasin de stockage est la mémoire provenant du <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Sérialise et écrit le tableau d’octets fourni dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream">Le flux de données cible.</param>
      <param name="context">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>Détermine si un tableau d’octets a une longueur valide en octets.</summary>
      <param name="length">La longueur en octets du tableau d’octets.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>Spécifie la façon dont les certificats clients sont fournis.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>
        <see cref="T:System.Net.Http.HttpClientHandler" /> tentera de fournir automatiquement tous les certificats clients disponibles.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>L'application fournit manuellement les certificats clients au <see cref="T:System.Net.Http.WebRequestHandler" />. Cette valeur est celle par défaut.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>Type pour les gestionnaires HTTP qui délèguent le traitement des messages de réponse HTTP à un autre gestionnaire, appelé le gestionnaire interne.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.DelegatingHandler" /> avec un gestionnaire interne spécifique.</summary>
      <param name="innerHandler">Gestionnaire interne chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Net.Http.DelegatingHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>Obtient ou définit le gestionnaire interne qui traite les messages de réponse HTTP.</summary>
      <returns>Gestionnaire interne pour les messages de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP au gestionnaire interne à envoyer au serveur au cours d’une opération asynchrone.</summary>
      <param name="request">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken">Jeton d’annulation pour annuler une opération.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>Conteneur pour les tuples nom/valeur encodés en utilisant le type MIME application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.FormUrlEncodedContent" /> avec une collection de paires nom/valeur spécifique.</summary>
      <param name="nameValueCollection">Collection de paires nom/valeur.</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>Représente les informations d’authentification dans les valeurs d’en-tête Authorization, ProxyAuthorization, WWW-Authenticate et Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Schéma à utiliser pour l’autorisation.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Schéma à utiliser pour l’autorisation.</param>
      <param name="parameter">Informations d’identification contenant les informations d’authentification de l’agent utilisateur pour la ressource demandée.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>Obtient les informations d’identification contenant les informations d’authentification de l’agent utilisateur pour la ressource demandée.</summary>
      <returns>Les informations d’identification contenant les informations d’authentification.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête d'authentification.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d'authentification valide.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>Obtient le schéma à utiliser pour l’autorisation.</summary>
      <returns>Schéma à utiliser pour l’autorisation.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>Représente la valeur de l'en-tête Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>Jetons d’extension de cache, chacun avec une valeur affectée facultative.</summary>
      <returns>Collection de jetons d’extension de cache, chacun avec une valeur affectée facultative.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>La date maximale, spécifiée en secondes, à laquelle le client HTTP est prêt à accepter une réponse.</summary>
      <returns>La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>Si un client HTTP est prêt à accepter une réponse qui a dépassé son délai d’expiration.</summary>
      <returns>
        <see langword="true" /> si un client HTTP est prêt à accepter une réponse qui a dépassé le délai d’expiration, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>La durée maximale, en secondes, durant laquelle un client HTTP est prêt à accepter une réponse qui a dépassé son délai d’expiration.</summary>
      <returns>La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>Le délai, en secondes, pendant lequel un client HTTP est prêt à accepter une réponse.</summary>
      <returns>La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>Si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée de cache devient obsolète.</summary>
      <returns>
        <see langword="true" /> si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée devient obsolète ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>Si un client HTTP est prêt à accepter une réponse mise en cache.</summary>
      <returns>
        <see langword="true" /> si le client HTTP n’est pas disposé à accepter une réponse mise en cache ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>Collection de noms de champs dans la directive « no-cache » d’un champ d’en-tête cache-control sur une réponse HTTP.</summary>
      <returns>Collection de noms de champs.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>Si un cache ne doit pas stocker une partie du message de requête HTTP ou de toutes les réponses.</summary>
      <returns>
        <see langword="true" /> si un cache ne doit pas stocker une partie du message de requête HTTP ou d’une réponse ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>Qu’il s’agisse d’un proxy ou d’un cache, il ne doit changer aucun aspect du corps de l’entité.</summary>
      <returns>
        <see langword="true" /> si un proxy ou un cache ne doivent changer aucun aspect du corps de l’entité ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>Indique si un cache doit répondre à l’aide d’une entrée mise en cache et cohérente avec les autres contraintes de la requête HTTP ou répondre avec l’état 504 (expiration de la passerelle).</summary>
      <returns>
        <see langword="true" /> si un cache doit répondre à l’aide d’une entrée mise en cache et cohérente avec les autres contraintes de la requête HTTP ou répondre avec l’état 504 (expiration de la passerelle) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input">Une chaîne qui représente des informations de valeur d’en-tête de contrôle de cache.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de contrôle de cache valide.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>Si tout ou partie du message de réponse HTTP est destiné(e) à un utilisateur unique et ne doit pas être mis(e) en cache par un cache partagé.</summary>
      <returns>
        <see langword="true" /> si le message de réponse HTTP est destiné à un utilisateur unique et ne doit pas être mis en cache par un cache partagé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>Une collection de noms de champs dans la directive « private » d’un champ d’en-tête cache-control sur une réponse HTTP.</summary>
      <returns>Collection de noms de champs.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>Si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée de cache devient obsolète pour les caches d’agent utilisateur partagés.</summary>
      <returns>
        <see langword="true" /> si le serveur d’origine nécessite la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée devient obsolète pour les caches d’agent utilisateur partagés, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>Si une réponse HTTP peut être mise en cache par n’importe quel cache, même si elle serait normalement non mise en cache ou mise en cache uniquement dans un cache non partagé.</summary>
      <returns>
        <see langword="true" /> si la réponse HTTP peut être mise en cache par n’importe quel cache, même si elle serait normalement non mise en cache ou mise en cache uniquement dans un cache non partagé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>L’âge maximal partagé, exprimé en secondes, dans une réponse HTTP qui remplace la directive “max-age” dans un en-tête Cache-Control ou un en-tête Expires pour un cache partagé.</summary>
      <returns>La durée en secondes.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>Représente la valeur de l'en-tête Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>Date à laquelle le fichier a été créé.</summary>
      <returns>Date de création du fichier.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>Type de disposition d’une partie du corps du contenu.</summary>
      <returns>Type de disposition.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>Une suggestion de construction de nom de fichier pour le stockage de la charge utile de messages à utiliser si l’entité est détachée et stockée dans un fichier distinct.</summary>
      <returns>Nom de fichier suggéré.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>Une suggestion de construction de noms de fichiers pour le stockage des charges utiles de messages à utiliser si les entités sont détachées et stockées dans des fichiers distincts.</summary>
      <returns>Nom de fichier proposé sous la forme nom_de_fichier*.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>Dernière date de modification du fichier.</summary>
      <returns>La date de modification du fichier.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>Le nom d’une partie du corps d’un contenu.</summary>
      <returns>Le nom d’une partie du corps du contenu.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>Un ensemble de paramètres incluant l’en-tête Content-Disposition.</summary>
      <returns>Collection de paramètres.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente des informations de valeur d’en-tête de disposition de contenu.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de disposition de contenu valide.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>La date de dernière lecture du fichier.</summary>
      <returns>Date de la dernière lecture.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>La taille approximative, en octets, du fichier.</summary>
      <returns>La taille approximative, en octets.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>Représente la valeur de l'en-tête Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length">Point de départ ou de fin de la plage, en octets.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Position, en octets, à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position, en octets, à laquelle arrêter l'envoi de données.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Position, en octets, à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position, en octets, à laquelle arrêter l'envoi de données.</param>
      <param name="length">Point de départ ou de fin de la plage, en octets.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>Obtient la position à laquelle démarrer l’envoi de données.</summary>
      <returns>Position, en octets, à laquelle démarrer l'envoi de données.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>Détermine si l’en-tête Content-Range a une longueur spécifiée.</summary>
      <returns>
        <see langword="true" /> si la valeur Content-Range a une longueur spécifiée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>Détermine si la valeur Content-Range a une plage spécifiée.</summary>
      <returns>
        <see langword="true" /> si la valeur Content-Range a une plage spécifiée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>Obtient la longueur du corps de l’entité complète.</summary>
      <returns>La longueur du corps de l’entité complète.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input">Une chaîne qui représente des informations de valeur d’en-tête de plage de contenu.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de plage de contenu valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>Obtient la position à laquelle arrêter l’envoi de données.</summary>
      <returns>Position à laquelle arrêter l'envoi de données.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>Les unités de plage utilisées.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient des unités de plage.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>Représente une valeur d'en-tête de balise d'entité.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak">Valeur qui indique si cet en-tête de balise d'entité est un validateur faible. Si l'en-tête de la balise d'entité est un validateur faible, <paramref name="isWeak" /> doit avoir la valeur <see langword="true" />. Si l'en-tête de la balise d'entité est un validateur fort, <paramref name="isWeak" /> doit avoir la valeur <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>Obtient la valeur d'en-tête de la balise d'entité.</summary>
      <returns>retourne <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> ;</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>Détermine si la balise d’entité est précédée d’un indicateur de faiblesse.</summary>
      <returns>
        <see langword="true" /> si la balise d’entité est précédée d’un indicateur de faiblesse ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de l’étiquette d’entité.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d’étiquette d’entité valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>Récupère la chaîne opaque entre guillemets.</summary>
      <returns>Chaîne opaque entre guillemets.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>Représente la collection d’en-têtes de contenu, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>Obtient la valeur de l’en-tête de contenu <see langword="Allow" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Allow" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>Obtient la valeur de l’en-tête de contenu <see langword="Content-Disposition" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête de contenu <see langword="Content-Disposition" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>Obtient la valeur de l’en-tête de contenu <see langword="Content-Encoding" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête de contenu <see langword="Content-Encoding" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>Obtient la valeur de l’en-tête de contenu <see langword="Content-Language" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête de contenu <see langword="Content-Language" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Length" /> sur une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête de contenu <see langword="Content-Length" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Location" /> sur une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête de contenu <see langword="Content-Location" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-MD5" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête de contenu <see langword="Content-MD5" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Range" /> sur une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête de contenu <see langword="Content-Range" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Type" /> sur une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête de contenu <see langword="Content-Type" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Expires" /> sur une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête de contenu <see langword="Expires" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>Obtient ou définit la valeur de l’en-tête de contenu <see langword="Last-Modified" /> sur une réponse HTTP.</summary>
      <returns>La valeur de l’en-tête de contenu <see langword="Last-Modified" /> sur une réponse HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>Collection d’en-têtes et leurs valeurs, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Ajoute l'en-tête spécifié et ses valeurs dans la collection de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">En-tête à ajouter à la collection.</param>
      <param name="values">Liste des valeurs d'en-tête à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException">Le nom ne peut pas être null ou vide.</exception>
      <exception cref="T:System.ArgumentNullException">Les valeurs ne peuvent pas être null ou vides.</exception>
      <exception cref="T:System.InvalidOperationException">Nom de l’en-tête mal utilisé. Assurez-vous que les en-têtes de requête sont utilisés avec HttpRequestMessage, les en-têtes de réponse avec HttpResponseMessage et les en-têtes de contenu avec les objets HttpContent.</exception>
      <exception cref="T:System.FormatException">Le format du nom d’en-tête n’est pas valide.

ou -

Les caractères de nouvelle ligne dans les valeurs d’en-tête doivent être suivis d’un espace.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>Ajoute l'en-tête spécifié et sa valeur dans la collection de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">En-tête à ajouter à la collection.</param>
      <param name="value">Contenu de l'en-tête.</param>
      <exception cref="T:System.ArgumentException">Le nom ne peut pas être null ou vide.</exception>
      <exception cref="T:System.InvalidOperationException">Nom de l’en-tête mal utilisé. Assurez-vous que les en-têtes de requête sont utilisés avec HttpRequestMessage, les en-têtes de réponse avec HttpResponseMessage et les en-têtes de contenu avec les objets HttpContent.</exception>
      <exception cref="T:System.FormatException">Le format du nom d’en-tête n’est pas valide.

ou -

Les caractères de nouvelle ligne dans les valeurs d’en-tête doivent être suivis d’un espace.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>Supprime tous les en-têtes de la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>Retourne une valeur si un en-tête spécifique existe dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">L’en-tête spécifique.</param>
      <returns>
        <see langword="true" /> si le style de table spécifié existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <returns>Énumérateur pour <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>Retourne toutes les valeurs d’en-tête pour un en-tête spécifique stocké dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">L’en-tête spécifié pour lequel retourner les valeurs.</param>
      <returns>Tableau de chaînes d'en-tête.</returns>
      <exception cref="T:System.InvalidOperationException">L’en-tête est introuvable.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>Supprime l'en-tête spécifié de la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Nom de l'en-tête à supprimer de la collection.</param>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtient un énumérateur capable d’itérer au sein d’un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Une instance d’une implémentation d’un <see cref="T:System.Collections.IEnumerator" /> qui peut itérer au sein d’un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.HttpHeaders" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Retourne une valeur qui indique si l’en-tête spécifié et ses valeurs ont été ajoutés à la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sans valider les informations fournies.</summary>
      <param name="name">En-tête à ajouter à la collection.</param>
      <param name="values">Les valeurs de l'en-tête.</param>
      <returns>
        <see langword="true" /> si <paramref name="name" /> et <paramref name="values" /> de l’en-tête spécifié ont pu être ajoutés à la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>Retourne une valeur qui indique si l’en-tête spécifié et sa valeur ont été ajoutés à la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sans valider les informations fournies.</summary>
      <param name="name">En-tête à ajouter à la collection.</param>
      <param name="value">Contenu de l'en-tête.</param>
      <returns>
        <see langword="true" /> si <paramref name="name" /> et <paramref name="value" /> de l’en-tête spécifié ont pu être ajoutés à la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>Retourne si un en-tête et des valeurs spécifiées sont stockés dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">L’en-tête spécifié.</param>
      <param name="values">Les valeurs d’en-tête spécifiées.</param>
      <returns>
        <see langword="true" /> est l'en-tête spécifié et <paramref name="name" /> et <see langword="values" /> sont stockés dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>Représente une collection de valeurs d'en-tête.</summary>
      <typeparam name="T">Type de collection d'en-têtes.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>Ajoute une entrée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Élément à ajouter à la collection d'en-têtes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>Supprime toutes les entrées de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>Détermine si <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contient un élément.</summary>
      <param name="item">L’élément à rechercher dans la collection d’en-têtes.</param>
      <returns>
        <see langword="true" /> si l’entrée se trouve dans l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copie l'ensemble de l'objet <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>Obtient le nombre d'en-têtes de la collection <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Nombre d’en-têtes dans une collection</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Énumérateur pour l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>Obtient une valeur indiquant si l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'instance du <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>Analyse et ajoute une entrée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">Entrée à ajouter.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>Supprime l’élément spécifié de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Élément à supprimer.</param>
      <returns>
        <see langword="true" /> si le <paramref name="item" /> a été supprimé de l’instance  <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Énumérateur pour l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> actuel. .</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>Détermine si l’entrée peut être analysée et ajoutée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">L’entrée à valider.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> peut être analysée et ajoutée à l'instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" /></returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>Représente la collection d’en-têtes de requête, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>Récupère la valeur de l’en-tête <see langword="Accept" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Accept" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>Obtient la valeur de l’en-tête <see langword="Accept-Charset" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Accept-Charset" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>Obtient la valeur de l’en-tête <see langword="Accept-Encoding" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Accept-Encoding" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>Obtient la valeur de l’en-tête <see langword="Accept-Language" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Accept-Language" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Authorization" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Authorization" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Cache-Control" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Cache-Control" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>Obtient la valeur de l’en-tête <see langword="Connection" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Connection" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>Obtient ou définit une valeur qui indique si l’en-tête <see langword="Connection" /> pour une requête HTTP contient la valeur « Close ».</summary>
      <returns>
        <see langword="true" /> si l’en-tête <see langword="Connection" /> contient la valeur « Close », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Date" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Date" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>Obtient la valeur de l’en-tête <see langword="Expect" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Expect" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>Récupère ou définit une valeur qui indique si l’en-tête <see langword="Expect" /> d’une demande HTTP contient la valeur Continue.</summary>
      <returns>
        <see langword="true" /> si l’en-tête <see langword="Expect" /> contient la valeur Continue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="From" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="From" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Host" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Host" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>Récupère la valeur de l’en-tête <see langword="If-Match" /> d’une requête HTTP.</summary>
      <returns>retourne <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ;
La valeur de l’en-tête <see langword="If-Match" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="If-Modified-Since" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="If-Modified-Since" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>Récupère la valeur de l’en-tête <see langword="If-None-Match" /> d’une requête HTTP.</summary>
      <returns>Récupère la valeur de l’en-tête <see langword="If-None-Match" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="If-Range" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="If-Range" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="If-Unmodified-Since" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="If-Unmodified-Since" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Max-Forwards" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Max-Forwards" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>Obtient la valeur de l’en-tête <see langword="Pragma" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Pragma" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Proxy-Authorization" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Proxy-Authorization" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Range" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Range" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>Récupère ou définit la valeur de l’en-tête <see langword="Referer" /> d’une requête HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Referer" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>Obtient la valeur de l’en-tête <see langword="TE" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="TE" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>Obtient la valeur de l’en-tête <see langword="Trailer" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Trailer" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>Obtient la valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>Obtient ou définit une valeur qui indique si l’en-tête <see langword="Transfer-Encoding" /> pour une requête HTTP contient la valeur « Chunked ».</summary>
      <returns>
        <see langword="true" /> si l’en-tête <see langword="Transfer-Encoding" /> contient « Chunked », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>Récupère la valeur de l’en-tête <see langword="Upgrade" /> d’une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Upgrade" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>Obtient la valeur de l’en-tête <see langword="User-Agent" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="User-Agent" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>Obtient la valeur de l’en-tête <see langword="Via" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Via" /> pour une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>Obtient la valeur de l’en-tête <see langword="Warning" /> pour une requête HTTP.</summary>
      <returns>La valeur de l’en-tête <see langword="Warning" /> pour une requête HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>Représente la collection d'en-têtes de réponse comme définie dans RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>Obtient la valeur de l’en-tête <see langword="Accept-Ranges" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Accept-Ranges" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="Age" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Age" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="Cache-Control" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Cache-Control" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>Obtient la valeur de l’en-tête <see langword="Connection" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Connection" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>Obtient ou définit une valeur qui indique si l’en-tête <see langword="Connection" /> pour une réponse HTTP contient la valeur « Close ».</summary>
      <returns>
        <see langword="true" /> si l’en-tête <see langword="Connection" /> contient la valeur « Close », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="Date" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Date" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="ETag" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="ETag" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="Location" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Location" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>Obtient la valeur de l’en-tête <see langword="Pragma" /> pour une réponse HTTP.</summary>
      <returns>retourne <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ;
Valeur de l’en-tête <see langword="Pragma" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>Obtient la valeur de l’en-tête <see langword="Proxy-Authenticate" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Proxy-Authenticate" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>Obtient ou définit la valeur de l’en-tête <see langword="Retry-After" /> d’une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Retry-After" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>Obtient la valeur de l’en-tête <see langword="Server" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Server" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>Obtient la valeur de l’en-tête <see langword="Trailer" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Trailer" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>Obtient la valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>Obtient ou définit une valeur qui indique si l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP contient des segments.</summary>
      <returns>
        <see langword="true" /> si l’en-tête <see langword="Transfer-Encoding" /> contient « Chunked », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>Obtient la valeur de l’en-tête <see langword="Upgrade" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Upgrade" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>Obtient la valeur de l’en-tête <see langword="Vary" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Vary" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>Obtient la valeur de l’en-tête <see langword="Via" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Via" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>Obtient la valeur de l’en-tête <see langword="Warning" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="Warning" /> d’une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>Obtient la valeur de l’en-tête <see langword="WWW-Authenticate" /> pour une réponse HTTP.</summary>
      <returns>Valeur de l’en-tête <see langword="WWW-Authenticate" /> pour une réponse HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>Représente un type de média utilisé dans un en-tête Content-Type défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source">Objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType">Source représentée sous forme de chaîne pour initialiser la nouvelle instance.</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>Obtient ou définit le jeu de caractères.</summary>
      <returns>Jeu de caractères.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>Obtient ou définit la valeur d’en-tête media-type.</summary>
      <returns>La valeur d’en-tête media-type.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>Obtient ou définit les paramètres de valeur d’en-tête media-type.</summary>
      <returns>Les paramètres de valeur d’en-tête media-type.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de type de média.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas valide via les informations de valeur d’en-tête de type de média.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>Représente un type de média avec une considération de qualité supplémentaire, utilisé dans un en-tête Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> représenté sous forme de chaîne pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> représenté sous forme de chaîne pour initialiser la nouvelle instance.</param>
      <param name="quality">Qualité associée à cette valeur d'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente le type de média avec les informations de valeur d’en-tête de qualité.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" /> .</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas un type de média valide avec des informations de valeur d’en-tête de qualité.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>Obtient ou définit la valeur de la qualité pour <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns>Valeur de qualité pour l’objet <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>Représente une paire nom/valeur utilisée dans différents en-têtes comme défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source">Objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nom de l'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nom de l'en-tête.</param>
      <param name="value">La valeur d’en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>Obtient le nom d’en-tête.</summary>
      <returns>Nom de l'en-tête.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur de nom de l’en-tête.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur de nom d’en-tête valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>Obtient la valeur d’en-tête.</summary>
      <returns>La valeur d’en-tête.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>Représente une paire nom/valeur avec des paramètres utilisés dans différents en-têtes comme défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source">Objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nom de l'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nom de l'en-tête.</param>
      <param name="value">La valeur d’en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>Récupère les paramètres de l’objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Collection contenant les paramètres.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input">Chaîne représentant une valeur de nom valide avec des informations de valeur d’en-tête de paramètre.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une valeur de nom valide avec des informations de valeur d’en-tête de paramètre.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>Représente une valeur de jeton de produit dans un en-tête d'agent utilisateur.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">Nom du produit.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">Valeur du nom de produit.</param>
      <param name="version">Valeur de la version du produit.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>Obtient le nom du jeton du produit.</summary>
      <returns>Nom du jeton du produit.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de produit.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>Obtient la version du jeton du produit.</summary>
      <returns>La version du jeton du produit.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>Représente une valeur qui peut être un produit ou un commentaire dans un en-tête User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product">Objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment">Valeur de commentaire.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName">Valeur du nom de produit.</param>
      <param name="productVersion">Valeur de la version du produit.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>Obtient le commentaire à partir de l’objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>La valeur du commentaire est <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête d’informations produit.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas valide une information de valeur d’en-tête d’informations produit valide.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>Obtient le produit à partir de l’objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>La valeur de produit à partir de cet objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>Représente une valeur d'en-tête If-Range qui peut être une date, une heure ou une valeur de balise d'entité.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date">Valeur de date utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Balise d'entité représentée sous forme de chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>Obtient la date à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>La date à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>Obtient la balise d’entité pour l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>La balise d’entité pour l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de condition de plage.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de condition de plage valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>Représente une valeur d'en-tête de plage.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> avec une plage d'octets.</summary>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de plage.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de plage valide.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>Récupère les plages spécifiées dans l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Les plages de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>Obtient l’unité à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Unité à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>Représente une valeur d'en-tête de plage.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>Obtient la position à laquelle démarrer l’envoi de données.</summary>
      <returns>Position à laquelle démarrer l'envoi de données.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>Obtient la position à laquelle arrêter l’envoi de données.</summary>
      <returns>Position à laquelle arrêter l'envoi de données.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>Représente une valeur d'en-tête Retry-After qui peut être une date, une heure ou une valeur TimeSpan.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date">Offset de la date et de l'heure utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta">Différentiel, en secondes, utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>Obtient le décalage de date et d’heure à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Décalage de date et d’heure à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>Obtient le delta en secondes à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Delta en secondes à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de condition de nouvelle tentative.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de condition de nouvelle tentative valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>Représente une valeur d'en-tête de chaîne avec une qualité facultative.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Chaîne utilisée pour initialiser la nouvelle instance.</param>
      <param name="quality">Considération de qualité utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de qualité.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une chaîne valide avec des informations de valeur d’en-tête de qualité.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>Récupère le facteur de qualité dans l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Le facteur de qualité de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>Obtient la valeur de chaîne à partir de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Valeur de chaîne à partir de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>Représente une valeur d'en-tête Accept-Encoding.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source">Objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>Obtient les paramètres de codage de transfert.</summary>
      <returns>Paramètres de codage de transfert.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête de codage de transfert.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information valide de valeur d’en-tête de codage de transfert.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>Obtient la valeur de codage de transfert.</summary>
      <returns>La valeur de codage de transfert.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>Représente une valeur d'en-tête Accept-Encoding avec une considération de qualité facultative.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Chaîne utilisée pour initialiser la nouvelle instance.</param>
      <param name="quality">Valeur pour la considération de qualité.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur de codage de transfert.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas un codage de transfert valide avec des informations de valeur d’en-tête de qualité.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>Récupère le facteur de qualité dans la <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns>Le facteur de qualité de la <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>Représente la valeur d'un en-tête Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">Version de protocole du protocole reçu.</param>
      <param name="receivedBy">L’hôte et le port de réception de la requête ou de la réponse.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">Version de protocole du protocole reçu.</param>
      <param name="receivedBy">L’hôte et le port de réception de la requête ou de la réponse.</param>
      <param name="protocolName">Nom de protocole du protocole reçu.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">Version de protocole du protocole reçu.</param>
      <param name="receivedBy">L’hôte et le port de réception de la requête ou de la réponse.</param>
      <param name="protocolName">Nom de protocole du protocole reçu.</param>
      <param name="comment">Champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>Obtient le champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</summary>
      <returns>Champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête.</param>
      <returns>Instance de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas valide via les informations de valeur d’en-tête.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>Obtient le nom du protocole reçu.</summary>
      <returns>Nom du protocole.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>Obtient la version du protocole reçu.</summary>
      <returns>Version du protocole.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>Obtient l’hôte et le port de réception de la requête ou de la réponse.</summary>
      <returns>L’hôte et le port de réception de la requête ou de la réponse.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuelle.</summary>
      <returns>Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>Représente une valeur d'avertissement utilisée par l'en-tête Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Code d’avertissement spécifique.</param>
      <param name="agent">L’hôte qui a joint l’avertissement.</param>
      <param name="text">Chaîne entre guillemets contenant le texte d’avertissement.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Code d’avertissement spécifique.</param>
      <param name="agent">L’hôte qui a joint l’avertissement.</param>
      <param name="text">Chaîne entre guillemets contenant le texte d’avertissement.</param>
      <param name="date">Horodatage date/heure de l’avertissement.</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>Récupère l’hôte qui a joint l’avertissement.</summary>
      <returns>L’hôte qui a joint l’avertissement.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>Obtient le code d’avertissement spécifique.</summary>
      <returns>Code d’avertissement spécifique.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>Obtient l’horodatage date/heure de l’avertissement.</summary>
      <returns>Horodatage date/heure de l’avertissement.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input">Chaîne qui représente les informations de valeur d’en-tête d'authentification.</param>
      <returns>Retourne une instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d'authentification valide.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuelle.</summary>
      <returns>Renvoie une copie de l'instance active.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>Obtient une chaîne entre guillemets contenant le texte d’avertissement.</summary>
      <returns>Chaîne entre guillemets contenant le texte d’avertissement.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> valide.</summary>
      <param name="input">Chaîne à valider.</param>
      <param name="parsedValue">La version <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> de la chaîne.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>Fournit une classe de base pour envoyer des requêtes HTTP et recevoir des réponses HTTP d'une ressource identifiée par un URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec un <see cref="T:System.Net.Http.HttpClientHandler" /> qui est supprimé lorsque cette instance est supprimée.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec le gestionnaire spécifié. Le gestionnaire est supprimé lorsque cette instance est supprimée.</summary>
      <param name="handler">Pile du gestionnaire HTTP à utiliser pour envoyer des requêtes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec le gestionnaire fourni et spécifie si ce gestionnaire doit être supprimé quand cette instance est supprimée.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> si le gestionnaire interne doit être supprimé à l’aide de HttpClient.Dispose ; <see langword="false" /> si vous prévoyez de réutiliser le gestionnaire interne.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>Obtient ou définit l'URI (Uniform Resource Identifier) de la ressource Internet à utiliser pour envoyer des requêtes.</summary>
      <returns>Adresse de base de l'URI de la ressource Internet utilisée pour l'envoi des demandes.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>Annulation de toutes les requêtes en attente sur cette instance.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>Obtient ou définit le proxy HTTP global.</summary>
      <returns>Proxy utilisé par chaque appel qui instancie un <see cref="T:System.Net.HttpWebRequest" />.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur passée ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>Obtient les en-têtes qui doivent être envoyés avec chaque requête.</summary>
      <returns>En-têtes qui doivent être envoyés avec chaque demande.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>Obtient ou définit la version de HTTP par défaut utilisée pour les requêtes suivantes effectuées par cette instance de <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <returns>Version par défaut à utiliser pour toutes les demandes effectuées avec cette <see cref="T:System.Net.Http.HttpClient" /> instance.</returns>
      <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, <see langword="DefaultRequestVersion" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L’instance de <see cref="T:System.Net.Http.HttpClient" /> a déjà démarré une ou plusieurs requêtes.</exception>
      <exception cref="T:System.ObjectDisposedException">L’instance de <see cref="T:System.Net.Http.HttpClient" /> a déjà été supprimée.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpClient" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="completionOption">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="completionOption">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="completionOption">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="completionOption">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>Envoie une requête GET à l’URI spécifié et retourne le corps de la réponse sous forme de tableau d’octets dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>Obtient ou définit le nombre maximum d'octets à mettre en mémoire tampon lors de la lecture du contenu de la réponse.</summary>
      <returns>Nombre maximal d'octets à mettre en mémoire tampon lors de la lecture du contenu de réponse. La valeur par défaut de cette propriété est 2 gigaoctets.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La taille spécifiée est inférieure ou égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération a déjà été lancée dans l’instance actuelle.</exception>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envoie une requête PATCH à un URI désigné comme chaîne en tant qu’opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoie une requête PATCH avec un jeton d’annulation à un URI représenté comme chaîne dans une opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envoie une requête PATCH en tant qu’opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoie une requête PATCH avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri">URI auquel la requête est envoyée.</param>
      <param name="content">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour recevoir une notification d'annulation.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de requête HTTP à envoyer.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de requête HTTP à envoyer.</param>
      <param name="completionOption">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de requête HTTP à envoyer.</param>
      <param name="completionOption">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</param>
      <param name="cancellationToken">Jeton d'annulation pour annuler une opération.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de requête HTTP à envoyer.</param>
      <param name="cancellationToken">Jeton d'annulation pour annuler une opération.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>Obtient ou définit la période d'attente jusqu'à l'expiration de la demande.</summary>
      <returns>Période d'attente jusqu'à l'expiration de la demande.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d’attente spécifié est inférieur ou égal à zéro et n’est pas <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération a déjà été lancée dans l’instance actuelle.</exception>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>Gestionnaire de messages par défaut utilisé par <see cref="T:System.Net.Http.HttpClient" /> dans le .NET Framework et .NET Core 2.0 et antérieur.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>Crée une instance d’une classe <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire doit suivre les réponses de redirection.</summary>
      <returns>
        <see langword="true" />Si le gestionnaire doit suivre les réponses de redirection ; sinon <see langword="false" />,. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>Obtient ou définit le type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse du contenu HTTP.</summary>
      <returns>Méthode de décompression automatique utilisée par le gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>Obtient ou définit une valeur qui indique si le certificat est vérifié par rapport à la liste de révocation de l’autorité de certification.</summary>
      <returns>
        <see langword="true" /> si la liste de révocation de certificats est vérifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException">.NET Framework 4.7.1 uniquement : Cette propriété n'est pas implémentée.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>Obtient ou définit une valeur qui indique si le certificat est automatiquement prélevé dans le magasin de certificats ou si l’appelant est autorisé à transmettre un certificat client spécifique.</summary>
      <returns>Collection de certificats de sécurité associée à ce gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>Obtient la collection de certificats de sécurité qui sont des requêtes associées au serveur.</summary>
      <returns>X509CertificateCollection présenté au serveur lors de l’exécution de l’authentification du client basée sur un certificat.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>Obtient ou définit le conteneur du cookie utilisé pour stocker des cookies de serveur par le gestionnaire.</summary>
      <returns>Conteneur du cookie utilisé pour stocker des cookies de serveur par le gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>Obtient ou définit les informations d’authentification utilisées par ce gestionnaire.</summary>
      <returns>Informations d’identification d’authentification associées au gestionnaire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>Obtient un délégué mis en cache qui retourne toujours <see langword="true" />.</summary>
      <returns>Délégué mis en cache qui retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>Quand le proxy par défaut (système) est utilisé, obtient ou définit les informations d’identification à envoyer au serveur proxy par défaut pour l’authentification. Le proxy par défaut est utilisé uniquement quand <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> a la valeur <see langword="true" /> et <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> a la valeur <see langword="null" />.</summary>
      <returns>Informations d’identification nécessaires pour authentifier une demande au serveur proxy par défaut.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpClientHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>Récupère ou définit le nombre maximal de redirections suivies par le gestionnaire.</summary>
      <returns>Le nombre maximal de réponses de redirection suivies par le gestionnaire. La valeur par défaut est 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>Obtient ou définit le nombre maximal de connexions simultanées (par point de terminaison de serveur) autorisé lors de l’établissement de demandes à l’aide d’un objet <see cref="T:System.Net.Http.HttpClient" />. Notez que la limite est établie par point de terminaison de serveur : par exemple, une valeur de 256 permettrait 256 connexions simultanées à http://www.adatum.com/ et 256 autres à http://www.adventure-works.com/.</summary>
      <returns>Nombre maximal de connexions simultanées (par point de terminaison de serveur) <see cref="T:System.Net.Http.HttpClient" /> autorisées par un objet.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>Obtient ou définit la taille de mémoire tampon du contenu de requête maximale utilisée par le gestionnaire.</summary>
      <returns>Taille de mémoire tampon du contenu de requête maximale en octets. La valeur par défaut est 2 Go.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>Obtient ou définit la longueur maximale en kilo-octets (1024 octets) des en-têtes de réponse. Par exemple, si la valeur est 64, 65 536 octets sont autorisés pour la longueur maximale des en-têtes de réponse.</summary>
      <returns>Longueur maximale, en kilo-octets (1024 octets), des en-têtes de réponse.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>Obtient ou définit une valeur indiquant si le gestionnaire envoie un en-tête d’autorisation avec la requête.</summary>
      <returns>
        <see langword="true" /> pour que le gestionnaire envoie un en-tête d’autorisation HTTP avec les requêtes une fois l’authentification effectuée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>Obtient un dictionnaire accessible en écriture (autrement dit, un mappage) des propriétés personnalisées pour les demandes <see cref="T:System.Net.Http.HttpClient" />. Le dictionnaire est initialisé vide ; vous pouvez insérer et interroger des paires clé-valeur pour vos gestionnaires personnalisés et un traitement spécial.</summary>
      <returns>Dictionnaire accessible en écriture des propriétés personnalisées.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>Obtient ou définit les informations du proxy utilisées par le gestionnaire.</summary>
      <returns>Informations du proxy utilisées par le gestionnaire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Crée une instance de <see cref="T:System.Net.Http.HttpResponseMessage" /> selon les informations fournies dans le <see cref="T:System.Net.Http.HttpRequestMessage" /> en tant qu’opération qui ne se bloque pas.</summary>
      <param name="request">Méthode de requête HTTP.</param>
      <param name="cancellationToken">Jeton d’annulation pour annuler l’opération.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>Obtient ou définit une méthode de rappel pour valider le certificat de serveur.</summary>
      <returns>Méthode de rappel pour valider le certificat de serveur.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>Obtient ou définit le protocole TLS/SSL utilisé par les objets <see cref="T:System.Net.Http.HttpClient" /> gérés par l’objet HttpClientHandler.</summary>
      <returns>Une des valeurs définies dans l'énumération <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException">.NET Framework 4.7.1 uniquement : Cette propriété n'est pas implémentée.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>Obtient une valeur qui indique si le gestionnaire prend en charge la décompression automatique du contenu de la réponse.</summary>
      <returns>
        <see langword="true" /> si le gestionnaire prend en charge la décompression automatique du contenu de la réponse ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>Obtient une valeur qui indique si le gestionnaire prend en charge les paramètres du proxy.</summary>
      <returns>
        <see langword="true" /> si le gestionnaire prend en charge les paramètres du proxy ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>Obtient une valeur qui indique si le gestionnaire prend en charge les paramètres de configuration des propriétés <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> et <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns>
        <see langword="true" /> si le gestionnaire prend en charge les paramètres de configuration des propriétés <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> et <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire utilise la propriété <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> pour stocker des cookies de serveur, et utilise ces cookies lors de l’envoi des requêtes.</summary>
      <returns>
        <see langword="true" /> si le gestionnaire utilise la propriété <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> pour stocker des cookies de serveur et utilise ces cookies lors de l’envoi de requêtes ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>Obtient ou définit une valeur qui contrôle si les informations d’identification par défaut sont envoyées avec les requêtes par le gestionnaire.</summary>
      <returns>
        <see langword="true" /> si les informations d'identification par défaut sont utilisées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire utilise un proxy pour les requêtes.</summary>
      <returns>
        <see langword="true" /> si le gestionnaire doit utiliser un proxy pour les requêtes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>Indique si les opérations <see cref="T:System.Net.Http.HttpClient" /> doivent être considérées comme étant terminées dès qu'une réponse est disponible, ou après avoir pris connaissance de l'intégralité du message de réponse intégrant le contenu.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>L'opération doit se terminer après la lecture de l'intégralité de la réponse intégrant le contenu.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>L'opération doit se terminer dès qu'une réponse est disponible et que les en-têtes sont lus. Le contenu n'est pas encore lu.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>Classe de base représentant un corps d'entité HTTP et des en-têtes de contenu.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream">Le flux de données cible.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream">Le flux de données cible.</param>
      <param name="context">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>Sérialise le contenu HTTP dans un flux de mémoire en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>Obtient les en-têtes de contenu HTTP tels que définis dans RFC 2616.</summary>
      <returns>En-têtes de contenu tels que définis dans RFC 2616.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</summary>
      <param name="maxBufferSize">Taille maximale, en octets, de la mémoire tampon à utiliser.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>Sérialise le contenu HTTP dans un tableau d’octets en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>Sérialiser le contenu HTTP et renvoyer un flux qui représente le contenu au cours d’une opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>Sérialise le contenu HTTP dans une chaîne en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream">Le flux de données cible.</param>
      <param name="context">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>Détermine si le contenu HTTP a une longueur valide en octets.</summary>
      <param name="length">La longueur en octets du contenu HTTP.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>Type de base pour les gestionnaires de messages HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpMessageHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken">Jeton d'annulation pour annuler une opération.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>Classe spécialisée qui permet aux applications d’appeler la méthode <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> sur une chaîne de gestionnaire HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> avec un <see cref="T:System.Net.Http.HttpMessageHandler" /> spécifique.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> avec un <see cref="T:System.Net.Http.HttpMessageHandler" /> spécifique.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> si le gestionnaire interne doit être supprimé à l'aide de Dispose(),<see langword="false" /> si vous prévoyez de réutiliser le gestionnaire interne.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpMessageInvoker" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken">Jeton d'annulation pour annuler une opération.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>Classe d'assistance pour récupérer et comparer les méthodes HTTP standard et pour créer de nouvelles méthodes HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpMethod" /> avec une méthode HTTP spécifique.</summary>
      <param name="method">Méthode HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>Représente une méthode de protocole HTTP DELETE.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>Détermine si l'objet <see cref="T:System.Net.Http.HttpMethod" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="other">Méthode HTTP à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si l’objet spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="obj">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si l’objet spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>Représente une méthode de protocole HTTP GET.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>Sert de fonction de hachage pour ce type.</summary>
      <returns>Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>Représente une méthode de protocole HTTP HEAD. La méthode HEAD est identique à GET, mais le serveur retourne uniquement des en-têtes de message dans la réponse, sans corps du message.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>Méthode &amp;HTTP.</summary>
      <returns>Méthode HTTP représentée comme <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Opérateur d’égalité pour la comparaison de deux objets <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à gauche d’un opérateur d’égalité.</param>
      <param name="right">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à droite d’un opérateur d’égalité.</param>
      <returns>
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> spécifiés sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>L’opérateur d’inégalité pour la comparaison de deux objets <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à gauche d'un opérateur d’inégalité.</param>
      <param name="right">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à droite d'un opérateur d’inégalité.</param>
      <returns>
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> spécifiés sont inégaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>Représente une méthode de protocole HTTP OPTIONS.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>Représente une méthode de protocole HTTP POST utilisée pour publier une nouvelle entité en plus d'un URI.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>Représente une méthode de protocole HTTP PUT utilisée pour remplacer une entité identifiée par un URI.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns>Chaîne représentant l’objet actif.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>Représente une méthode de protocole HTTP TRACE.</summary>
      <returns>retourne <see cref="T:System.Net.Http.HttpMethod" /> ;</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>Classe de base pour les exceptions levées par les classes <see cref="T:System.Net.Http.HttpClient" /> et <see cref="T:System.Net.Http.HttpMessageHandler" /> .</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" /> avec un message spécifique qui décrit l'exception actuelle.</summary>
      <param name="message">Message qui décrit l'exception en cours.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" /> avec un message spécifique décrivant l'exception actuelle et une exception interne.</summary>
      <param name="message">Message qui décrit l'exception en cours.</param>
      <param name="inner">Exception interne.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>Représente un message de requête HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" /> avec une méthode HTTP et une requête <see cref="T:System.Uri" />.</summary>
      <param name="method">Méthode HTTP.</param>
      <param name="requestUri">Chaîne qui représente la requête <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" /> avec une méthode HTTP et une requête <see cref="T:System.Uri" />.</summary>
      <param name="method">Méthode HTTP.</param>
      <param name="requestUri">
        <see cref="T:System.Uri" /> à demander.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>Récupère ou définit le contenu du message HTTP.</summary>
      <returns>Le contenu d’un message</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpRequestMessage" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>Récupère la collection d’en-têtes de requêtes HTTP.</summary>
      <returns>La collection d’en-têtes de requêtes HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>Récupère ou définit la méthode HTTP utilisée par le message de requête HTTP.</summary>
      <returns>La méthode HTTP utilisée par le message de requête. La méthode par défaut est la méthode GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>Obtient un ensemble de propriétés pour la requête HTTP.</summary>
      <returns>retourne <see cref="T:System.Collections.Generic.IDictionary`2" /> ;</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>Obtient ou définit <see cref="T:System.Uri" /> utilisé pour la requête HTTP.</summary>
      <returns>
        <see cref="T:System.Uri" /> utilisé pour la requête HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns>Représentation sous forme de chaîne de l’objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>Obtient ou définit la version du message HTTP.</summary>
      <returns>Version du message HTTP. La valeur par défaut est <c>1,1</c>, sauf si vous ciblez .net Core 2,1 ou 2,2. Dans ce cas, la valeur par défaut est <c>2,0</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>Représente un message de réponse HTTP avec le code et les données d'état.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpResponseMessage" /> avec un <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> spécifique.</summary>
      <param name="statusCode">Code d’état de la réponse HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>Récupère ou définit le contenu d’un message de réponse HTTP.</summary>
      <returns>Le contenu du message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>Libère les ressources non managées et supprime les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpResponseMessage" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>Lève une exception si la propriété <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> pour la réponse HTTP est <see langword="false" />.</summary>
      <returns>Message de réponse HTTP si l’appel a réussi.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">La réponse HTTP est en échec.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>Obtient la collection d’en-têtes de réponse HTTP.</summary>
      <returns>Collection d’en-têtes de réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>Obtient une valeur qui indique si la réponse HTTP a réussi.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> était dans la plage 200-299 ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>Récupère ou définit l’expression du motif qui est généralement envoyée par les serveurs avec le code d’état.</summary>
      <returns>L’expression du motif envoyée par le serveur.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>Récupère ou définit le message de requête qui a conduit à ce message de réponse.</summary>
      <returns>Le message de requête qui a conduit à ce message de réponse.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>Obtient ou définit le code d’état de la réponse HTTP.</summary>
      <returns>Code d’état de la réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns>Représentation sous forme de chaîne de l’objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>Obtient la collection d’en-têtes de fin inclus dans une réponse HTTP.</summary>
      <returns>Collection d’en-têtes de fin dans la réponse HTTP.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR : La réponse HTTP/2 contient des pseudo-en-têtes dans le cadre d’en-têtes de fin.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>Obtient ou définit la version du message HTTP.</summary>
      <returns>Version du message HTTP. La valeur par défaut est 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>Type de base pour les gestionnaires qui traitent uniquement des messages de demande et/ou de réponse.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>Crée une instance d’une classe <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crée une instance d'une classe <see cref="T:System.Net.Http.MessageProcessingHandler" /> avec un gestionnaire interne spécifique.</summary>
      <param name="innerHandler">Gestionnaire interne chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Exécute le traitement de chaque requête envoyée au serveur.</summary>
      <param name="request">Le message de la requête HTTP à traiter.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns>Le message de requête HTTP qui a été traité.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Effectuer le traitement sur chaque réponse du serveur.</summary>
      <param name="response">Le message de réponse HTTP à traiter.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns>Le message de réponse HTTP qui a été traité.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envoie une requête HTTP au gestionnaire interne à envoyer au serveur au cours d’une opération asynchrone.</summary>
      <param name="request">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>Fournit une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l'aide de la spécification de type de contenu multipart/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Sous-type du contenu Multipart.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> est <see langword="null" /> ou contient uniquement des espaces blancs.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Sous-type du contenu en plusieurs parties.</param>
      <param name="boundary">Chaîne limite pour le contenu Multipart.</param>
      <exception cref="T:System.ArgumentException">Le <paramref name="subtype" /> était <see langword="null" /> ou était une chaîne vide.
<paramref name="boundary" /> est <see langword="null" /> ou contient uniquement des espaces blancs.

ou -
<paramref name="boundary" /> se termine par un espace.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de <paramref name="boundary" /> était supérieure à 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>Ajoute le contenu multipart HTTP à une collection d'objets de <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l'aide de la spécification de type de contenu multipart/*</summary>
      <param name="content">Contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>Sérialise le contenu HTTP dans un flux en utilisant l’encodage multipart/* en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.MultipartContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>Retourne un énumérateur qui itère dans la collection d’objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l’aide de la spécification du type de contenu multipart/*.</summary>
      <returns>Objet pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Sérialise le contenu HTTP en plusieurs parties dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream">Le flux de données cible.</param>
      <param name="context">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>L’implémentation explicite de la méthode <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns>Objet pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>Détermine si le contenu HTTP en plusieurs parties a une longueur valide en octets.</summary>
      <param name="length">La longueur en octets du contenu HTTP.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>Fournit un conteneur pour le contenu encodé à l'aide du type MIME multipart/form-data.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary">Chaîne limite pour le contenu multipart/form-data.</param>
      <exception cref="T:System.ArgumentException">La <paramref name="boundary" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.

ou -
<paramref name="boundary" /> se termine par un espace.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la <paramref name="boundary" /> est supérieure à 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content">Contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content">Contenu HTTP à ajouter à la collection.</param>
      <param name="name">Nom du contenu HTTP à ajouter.</param>
      <exception cref="T:System.ArgumentException">La <paramref name="name" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content">Contenu HTTP à ajouter à la collection.</param>
      <param name="name">Nom du contenu HTTP à ajouter.</param>
      <param name="fileName">Nom de fichier du contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException">La <paramref name="name" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.

ou -
La <paramref name="fileName" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>Fournit le Gestionnaire de messages par défaut utilisé par <see cref="T:System.Net.Http.HttpClient" /> dans .NET Core 2.1 et ultérieur.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>Obtient ou définit le type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse du contenu HTTP.</summary>
      <returns>Type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse de contenu HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>Obtient ou définit l’objet conteneur de cookie managé.</summary>
      <returns>Objet conteneur de cookies managés.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>Quand le proxy par défaut (système) est utilisé, obtient ou définit les informations d’identification utilisées pour envoyer au serveur proxy par défaut pour l’authentification.</summary>
      <returns>Informations d’identification utilisées pour authentifier l’utilisateur auprès d’un proxy d’authentification.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>Obtient ou définit le nombre maximal de redirections HTTP autorisées.</summary>
      <returns>Nombre maximal de redirections HTTP autorisées.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>Obtient ou définit le nombre maximal de connexions TCP simultanées autorisées à un seul serveur.</summary>
      <returns>Le nombre maximal de connexions TCP simultanées autorisées à un seul serveur.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>Obtient ou définit la quantité maximale de données qui peuvent être purgées à partir des réponses en octets.</summary>
      <returns>Quantité maximale de données qui peuvent être vidées des réponses en octets.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>Obtient ou définit la longueur maximale en kilo-octets (1024 octets) des en-têtes de réponse.</summary>
      <returns>Taille maximale de la partie d’en-tête de la réponse du serveur, en kilo-octets.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>Obtient ou définit la durée pendant laquelle une connexion peut être inactive dans le pool pour être considérée réutilisable.</summary>
      <returns>Durée d’inactivité maximale pour une connexion dans le pool. La valeur par défaut de cette propriété est 2 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à <see cref="F:System.TimeSpan.Zero" /> ou est égale à <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>Obtient ou définit une valeur indiquant si le gestionnaire envoie un en-tête d’autorisation avec la requête.</summary>
      <returns>
        <see langword="true" />Si le gestionnaire envoie un en-tête d’autorisation avec la demande ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>Obtient ou définit le proxy personnalisé quand la propriété  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />  est <see langword="true" />.</summary>
      <returns>Proxy personnalisé.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>Obtient ou définit le jeu d’options utilisé pour l’authentification TLS du client.</summary>
      <returns>Ensemble d’options utilisé pour l’authentification TLS du client.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary>Fournit un contenu HTTP basé sur un flux.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize">Taille en octets de la mémoire tampon pour <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> était inférieur ou égal à zéro.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>Écrit le contenu de flux HTTP dans un flux de mémoire en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.StreamContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream">Flux de données cible.</param>
      <param name="context">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>Détermine si le contenu de flux a une longueur valide en octets.</summary>
      <param name="length">La longueur du flux de contenu en octets.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>Fournit du contenu HTTP basé sur une chaîne.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Encodage à utiliser pour le contenu.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Encodage à utiliser pour le contenu.</param>
      <param name="mediaType">Type de média à utiliser pour le contenu.</param>
    </member>
  </members>
</doc>