<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">Encapsule un emplacement mémoire pour stocker des données locales. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">Vérifie que les ressources sont libérées et que toute autre opération de nettoyage est effectuée quand le garbage collector récupère l'objet <see cref="T:System.LocalDataStoreSlot" />.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Spécifie l'état apartment (cloisonné) de <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">
        <see cref="T:System.Threading.Thread" /> crée et entre un apartment (cloisonné) MTA (multithreaded apartment).</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">
        <see cref="T:System.Threading.Thread" /> crée et entre un thread cloisonné STA (single thread apartment).</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">La propriété <see cref="P:System.Threading.Thread.ApartmentState" /> n'a pas été définie.</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">Fournit des méthodes pour définir et capturer la pile compressée sur le thread actuel. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">Capture la pile compressée du thread actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">Objet <see cref="T:System.Threading.CompressedStack" />.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">Crée une copie de la pile compressée en cours.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">Objet <see cref="T:System.Threading.CompressedStack" /> représentant la pile compressée en cours.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">Obtient la pile compressée pour le thread actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">
        <see cref="T:System.Threading.CompressedStack" /> pour le thread actuel.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">Un appelant dans la chaîne d'appel ne dispose pas de l'autorisation requise pour accéder à du code non managé.

ou -
La demande de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> a échoué.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les informations de contexte logiques nécessaires à la recréation d'une instance de ce contexte d'exécution.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir à l'aide des informations de sérialisation.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> représentant le contexte de destination de la sérialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">Exécute une méthode dans la pile compressée spécifiée sur le thread actuel.</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">
        <see cref="T:System.Threading.CompressedStack" /> à définir.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">
        <see cref="T:System.Threading.ContextCallback" /> représentant la méthode à exécuter dans le contexte de sécurité spécifié.</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">Objet à passer à la méthode de rappel.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Représente la méthode qui s’exécute sur un élément <see cref="T:System.Threading.Thread" />.</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">Objet qui contient les données de la procédure thread.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">Crée et contrôle un thread, définit sa priorité et obtient son état.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Thread" />, en spécifiant un délégué qui permet à un objet d'être passé au thread quand le thread est démarré.</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">Délégué qui représente les méthodes à appeler au début de l'exécution de ce thread.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Thread" />, en spécifiant un délégué qui permet à un objet d'être passé au thread quand le thread est démarré et en spécifiant la taille de pile maximale pour le thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Délégué <see cref="T:System.Threading.ParameterizedThreadStart" /> qui représente les méthodes à appeler au début de l'exécution de ce thread.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Taille de pile maximale, en octets, à utiliser par le thread, ou 0 pour utiliser la taille de pile maximale par défaut spécifiée dans l'en-tête pour le fichier exécutable.
Important   Pour le code partiellement fiable, <paramref name="maxStackSize" /> est ignoré s’il est supérieur à la taille de la pile par défaut. Aucune exception n'est levée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Thread" /> .</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Délégué <see cref="T:System.Threading.ThreadStart" /> qui représente les méthodes à appeler au début de l'exécution de ce thread.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="start" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Thread" />, en spécifiant la taille de pile maximale pour le thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Délégué <see cref="T:System.Threading.ThreadStart" /> qui représente les méthodes à appeler au début de l'exécution de ce thread.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Taille de pile maximale, en octets, à utiliser par le thread, ou 0 pour utiliser la taille de pile maximale par défaut spécifiée dans l'en-tête pour le fichier exécutable.
Important   Pour le code partiellement fiable, <paramref name="maxStackSize" /> est ignoré s’il est supérieur à la taille de la pile par défaut. Aucune exception n'est levée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">Déclenche <see cref="T:System.Threading.ThreadAbortException" /> dans le thread sur lequel l'appel a lieu pour commencer le processus d'arrêt du thread. L'appel de cette méthode arrête généralement le thread.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant ne possède pas l'autorisation requise.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Le thread en cours d’abandon est actuellement suspendu.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">Déclenche une <see cref="T:System.Threading.ThreadAbortException" /> dans le thread sur lequel l'appel a lieu pour commencer le processus d'arrêt du thread, tout en fournissant des informations sur les exceptions relatives à l'arrêt du thread. L'appel de cette méthode arrête généralement le thread.</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">Objet contenant des informations spécifiques à l'application, telles que l'état, qui peuvent être utilisées par le thread en cours d'abandon.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant ne possède pas l'autorisation requise.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Le thread en cours d’abandon est actuellement suspendu.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Alloue sur tous les threads un emplacement de données sans nom. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">Emplacement de données nommé alloué sur tous les threads.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Alloue sur tous les threads un emplacement de données nommé. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">Nom de l'emplacement de données à allouer.</param>
      <returns vsli:raw="The allocated named data slot on all threads.">Emplacement de données nommé alloué sur tous les threads.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">Un emplacement de données portant le nom spécifié existe déjà.</exception>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">Obtient ou définit l'état de cloisonnement de ce thread.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">Une des valeurs de <see cref="T:System.Threading.ApartmentState" />. La valeur initiale est <see langword="Unknown" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">Une tentative est effectuée pour définir cette propriété sur un état qui n’est pas un état de cloisonnement valide (un état autre que celui de thread unique cloisonné (<see langword="STA" />) ou de multithread cloisonné (<see langword="MTA" />)).</exception>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">Avertit un hôte que l'exécution est sur le point d'entrer dans une zone de code dans laquelle les effets d'un abandon de thread ou d'une exception non gérée peuvent compromettre d'autres tâches dans le domaine d'application.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">Avertit un hôte que le code managé est sur le point d'exécuter des instructions qui dépendent de l'identité du thread du système d'exploitation physique actuel.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant ne possède pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">Obtient ou définit la culture du thread actuel.</summary>
      <returns vsli:raw="An object that represents the culture for the current thread.">Objet qui représente la culture du thread actuel.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La propriété est définie sur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">.NET Core uniquement : la lecture ou l’écriture de la culture d’un thread à partir d’un autre thread n’est pas prise en charge.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">Obtient ou définit le principal actuel du thread (pour une sécurité basée sur les rôles).</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">Valeur <see cref="T:System.Security.Principal.IPrincipal" /> représentant le contexte de sécurité.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">L’appelant n’a pas l’autorisation nécessaire pour définir le principal.</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">Obtient le thread en cours d'exécution.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">
        <see cref="T:System.Threading.Thread" /> constituant la représentation du thread en cours d'exécution.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">Obtient ou définit la culture actuelle utilisée par le Gestionnaire de ressources pour rechercher des ressources spécifiques à la culture au moment de l'exécution.</summary>
      <returns vsli:raw="An object that represents the current culture.">Objet qui représente la culture actuelle.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La propriété est définie sur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">La propriété a la valeur d’un nom de culture qui ne peut pas être utilisé pour localiser un fichier de ressources. Les noms de fichiers des ressources doivent inclure uniquement des lettres, des chiffres, des traits d’union ou des traits de soulignement.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">.NET Core uniquement : la lecture ou l’écriture de la culture d’un thread à partir d’un autre thread n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">Désactive le nettoyage automatique des wrappers RCW (Runtime Callable Wrapper) pour le thread actuel.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">Avertit un hôte que l’exécution est sur le point d’entrer dans une zone de code dans laquelle les effets d’un abandon de thread ou d’une exception non gérée sont limités à la tâche actuelle.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">Avertit un hôte que le code managé a terminé l'exécution des instructions qui dépendent de l'identité du thread du système d'exploitation physique actuel.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant ne possède pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">Obtient un objet <see cref="T:System.Threading.ExecutionContext" /> qui contient des informations relatives aux divers contextes du thread actuel.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">Objet <see cref="T:System.Threading.ExecutionContext" /> qui consolide des informations de contexte pour le thread actuel.</returns>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">Vérifie que les ressources sont libérées et que toute autre opération de nettoyage est effectuée quand le garbage collector récupère l'objet <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Élimine l'association entre un nom et un emplacement pour tous les threads du processus. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">Nom de l'emplacement de données à libérer.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">Retourne une valeur <see cref="T:System.Threading.ApartmentState" /> qui indique l'état de cloisonnement.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">Une des valeurs <see cref="T:System.Threading.ApartmentState" /> qui indique l'état de cloisonnement du thread managé. La valeur par défaut est <see cref="F:System.Threading.ApartmentState.Unknown" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">Retourne un objet <see cref="T:System.Threading.CompressedStack" /> qui peut être utilisé pour capturer la pile pour le thread actuel.</summary>
      <returns>None.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">Dans tous les cas.</exception>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId">
      <summary vsli:raw="Gets an ID used to indicate on which processor the current thread is executing.">Obtient un ID utilisé pour indiquer le processeur sur lequel le thread actuel s’exécute.</summary>
      <returns vsli:raw="An integer representing the cached processor ID.">Entier représentant l’ID de processeur mis en cache.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Récupère la valeur de l'emplacement spécifié sur le thread actif, dans le domaine actuel du thread actif. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">
        <see cref="T:System.LocalDataStoreSlot" /> à partir duquel obtenir la valeur.</param>
      <returns vsli:raw="The retrieved value.">Valeur récupérée.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">Retourne le domaine actuel dans lequel le thread actif est en cours d'exécution.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">
        <see cref="T:System.AppDomain" /> représentant le domaine d'application actuel du thread en cours d'exécution.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">Retourne un identificateur unique de domaine d'application.</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">Entier signé 32 bits identifiant de manière unique le domaine d'application.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">Retourne un code de hachage pour le thread actuel.</summary>
      <returns vsli:raw="An integer hash code value.">Valeur de code de hachage entier.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Recherche un emplacement de données nommé. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the local data slot.">Nom de l'emplacement de données local.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">
        <see cref="T:System.LocalDataStoreSlot" /> alloué pour ce thread.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">Interrompt un thread dont l'état est <see cref="F:System.Threading.ThreadState.WaitSleepJoin" />.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">L’appelant ne possède pas le <see cref="T:System.Security.Permissions.SecurityPermission" /> nécessaire.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">Obtient une valeur indiquant l'état de l'exécution du thread actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce thread a été démarré et s’il ne s’est pas arrêté normalement ou s’il a été abandonné ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">Obtient ou définit une valeur indiquant si le thread est un thread d'arrière-plan ou non.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce thread est ou doit devenir un thread d'arrière-plan ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">Le thread est inactif.</exception>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">Obtient une valeur indiquant si un thread appartient au pool de threads managés ou non.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce thread appartient au pool de threads managés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">Bloque le thread appelant jusqu’à ce que le thread représenté par cette instance s’arrête, tout en continuant d’exécuter le pompage COM et <see langword="SendMessage" /> standard.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">L’appelant a tenté de joindre un thread dont l’état est <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">Le thread est interrompu lors de l’attente.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloque le thread appelant jusqu'à ce que le thread représenté par cette instance s'arrête ou que la durée spécifiée soit écoulée, tout en continuant d'exécuter le pompage COM et SendMessage standard.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">Nombre de millisecondes à attendre l'arrêt du thread.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> si le thread s'est arrêté ; <see langword="false" /> s'il ne s'est pas arrêté après l'expiration du délai spécifié par le paramètre <paramref name="millisecondsTimeout" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">La valeur de <paramref name="millisecondsTimeout" /> est négative et n’est pas égale à <see cref="F:System.Threading.Timeout.Infinite" /> en millisecondes.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">Le thread n’a pas été démarré.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" /> est inférieur à -1 (Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">Le thread a été interrompu lors de l’attente.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloque le thread appelant jusqu'à ce que le thread représenté par cette instance s'arrête ou que la durée spécifiée soit écoulée, tout en continuant d'exécuter le pompage COM et SendMessage standard.</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">
        <see cref="T:System.TimeSpan" /> ayant pour valeur la durée à attendre l'arrêt du thread.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> si le thread s'est arrêté ; <see langword="false" /> s'il ne s'est pas arrêté après l'expiration du délai spécifié par le paramètre <paramref name="timeout" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">La valeur de <paramref name="timeout" /> est négative et n’est pas égale à <see cref="F:System.Threading.Timeout.Infinite" /> en millisecondes, ou est supérieure à <see cref="F:System.Int32.MaxValue" /> millisecondes.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">L’appelant a tenté de joindre un thread dont l’état est <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">Obtient un identificateur unique pour le thread managé actuel.</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">Entier représentant un identificateur unique pour ce thread managé.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">Synchronise l'accès à la mémoire comme suit : le processeur qui exécute le thread actuel ne peut pas réorganiser les instructions de sorte que les accès à la mémoire antérieurs à l'appel de <see cref="M:System.Threading.Thread.MemoryBarrier" /> s'exécutent après les accès à la mémoire postérieurs à l'appel de <see cref="M:System.Threading.Thread.MemoryBarrier" />.</summary>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">Obtient ou définit le nom du thread.</summary>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">Chaîne contenant le nom du thread ou <see langword="null" /> si aucun nom n'a été défini.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">Une opération ensembliste a été demandée, mais la propriété <see langword="Name" /> a déjà été définie.</exception>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">Obtient ou définit une valeur indiquant la priorité de planification d'un thread.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">Une des valeurs de <see cref="T:System.Threading.ThreadPriority" />. La valeur par défaut est <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">Le thread a atteint un état final, tel que <see cref="F:System.Threading.ThreadState.Aborted" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">La valeur spécifiée pour une opération set n’est pas une valeur <see cref="T:System.Threading.ThreadPriority" /> valide.</exception>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">Annule un <see cref="M:System.Threading.Thread.Abort(System.Object)" /> demandé pour le thread actuel.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" /> n’a pas été appelé sur le thread actuel.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">L’appelant n’a pas l’autorisation de sécurité requise pour le thread actuel.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">Reprend un thread qui a été suspendu.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">Le thread n’a pas été démarré, est inactif ou n’est pas dans l’état interrompu.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">L’appelant ne possède pas le <see cref="T:System.Security.Permissions.SecurityPermission" /> nécessaire.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Définit l'état de cloisonnement d'un thread avant qu'il ne soit démarré.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nouvel état de cloisonnement.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET Core uniquement : ce membre n’est pas pris en charge sur les plateformes macOS et Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> n’est pas un état de cloisonnement valide.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Le thread a déjà été démarré.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">L’état de cloisonnement a déjà été initialisé.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">Applique une <see cref="T:System.Threading.CompressedStack" /> capturée au thread actuel.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">Objet <see cref="T:System.Threading.CompressedStack" /> à appliquer au thread actuel.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">Dans tous les cas.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Définit les données dans l'emplacement spécifié sur le thread en cours d'exécution, pour le domaine actuel de ce thread. Pour de meilleures performances, utilisez à la place les champs marqués avec l'attribut <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">
        <see cref="T:System.LocalDataStoreSlot" /> dans lequel définir la valeur.</param>
      <param name="data" vsli:raw="The value to be set.">Valeur à définir.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">Suspend le thread actuel pendant le nombre spécifié de millisecondes.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Nombre de millisecondes pendant lesquelles le thread est suspendu. Si la valeur de l'argument <paramref name="millisecondsTimeout" /> est égale à zéro, le thread abandonne le reste de sa tranche de temps à n'importe quel thread de priorité égale prêt à être exécuté. S'il n'existe pas d'autres threads de priorité égale prêts à être exécutés, l'exécution du thread actuel n'est pas suspendue.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">La valeur du délai d’attente est négative et n’est pas égale à <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">Suspend le thread actuel pendant la durée spécifiée.</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Durée pendant laquelle le thread est suspendu. Si la valeur de l’argument <paramref name="millisecondsTimeout" /> est <see cref="F:System.TimeSpan.Zero" />, le thread abandonne le reste de sa tranche de temps à n’importe quel thread de priorité égale prêt à être exécuté. S'il n'existe pas d'autres threads de priorité égale prêts à être exécutés, l'exécution du thread actuel n'est pas suspendue.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">La valeur de <paramref name="timeout" /> est négative et n’est pas égale à <see cref="F:System.Threading.Timeout.Infinite" /> en millisecondes, ou est supérieure à <see cref="F:System.Int32.MaxValue" /> millisecondes.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">Provoque l'attente d'un thread pendant le nombre de fois défini par le paramètre <paramref name="iterations" />.</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">Entier signé 32 bits qui définit le temps pendant lequel un thread doit attendre.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">Provoque le changement, par le système d'exploitation, de l'état de l'instance actuelle en <see cref="F:System.Threading.ThreadState.Running" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Le thread a déjà été démarré.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">La mémoire disponible est insuffisante pour démarrer ce thread.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">Provoque le changement, par le système d'exploitation, de l'état de l'instance actuelle en <see cref="F:System.Threading.ThreadState.Running" />, et fournit éventuellement un objet contenant les données que la méthode exécutée par le thread doit utiliser.</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">Objet contenant les données que la méthode exécutée par le thread doit utiliser.</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Le thread a déjà été démarré.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">La mémoire disponible est insuffisante pour démarrer ce thread.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">Ce thread a été créé à l’aide d’un délégué <see cref="T:System.Threading.ThreadStart" /> au lieu d’un délégué <see cref="T:System.Threading.ParameterizedThreadStart" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">Suspend le thread ou, s'il est déjà suspendu, n'a aucun effet.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">Le thread n’a pas été démarré ou est inactif.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">L’appelant ne possède pas le <see cref="T:System.Security.Permissions.SecurityPermission" /> nécessaire.</exception>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">Obtient une valeur contenant les états du thread actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">Une des valeurs <see cref="T:System.Threading.ThreadState" /> indiquant l'état du thread actuel. La valeur initiale est <see cref="F:System.Threading.ThreadState.Unstarted" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Définit l'état de cloisonnement d'un thread avant qu'il ne soit démarré.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nouvel état de cloisonnement.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'état de cloisonnement est défini ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET Core uniquement : ce membre n’est pas pris en charge sur les plateformes macOS et Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> n’est pas un état de cloisonnement valide.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">Le thread a démarré et s’est arrêté, ou l’appel n’est pas effectué depuis le contexte du thread pendant que le thread est en cours d’exécution.</exception>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lit la valeur d'un champ. Il s'agit de la dernière valeur écrite par un processeur d'un ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeurs.</summary>
      <param name="address" vsli:raw="The field to be read.">Champ à lire.</param>
      <returns vsli:raw="The value that was read.">Dernière valeur écrite dans le champ par un processeur.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Écrit immédiatement une valeur dans un champ pour que la valeur soit visible pour tous les processeurs de l'ordinateur.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Champ dans lequel la valeur doit être écrite.</param>
      <param name="value" vsli:raw="The value to be written.">Valeur à écrire.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">Oblige le thread appelant à céder l'exécution à un autre thread prêt à s'exécuter sur le processeur actuel. Le système d'exploitation sélectionne le thread auquel l'exécution doit être cédée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le système d'exploitation a basculé l'exécution vers un autre thread ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">Exception levée lors d'un appel adressé à la méthode <see cref="M:System.Threading.Thread.Abort(System.Object)" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">Obtient un objet contenant des informations spécifiques de l'application et liées à l'abandon de thread.</summary>
      <returns vsli:raw="An object containing application-specific information.">Objet contenant des informations spécifiques de l'application.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Application.ThreadException" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> survenue.</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">Obtient le <see cref="T:System.Exception" /> qui s'est produit.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> survenue.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">Représente la méthode qui gérera l’événement <see cref="E:System.Windows.Forms.Application.ThreadException" /> d’un <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Threading.ThreadExceptionEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">Exception levée lorsque l'interruption survient alors que <see cref="T:System.Threading.Thread" />est en état d'attente.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadInterruptedException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadInterruptedException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadInterruptedException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadInterruptedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Spécifie la priorité de planification de <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">Il est possible de planifier <see cref="T:System.Threading.Thread" /> après les threads de priorité <see langword="Highest" /> et avant les threads de priorité <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">Il est possible de planifier <see cref="T:System.Threading.Thread" /> après les threads de priorité <see langword="Normal" /> et avant les threads de priorité <see langword="Lowest" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">Il est possible de planifier <see cref="T:System.Threading.Thread" /> avant les threads de toute autre priorité.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">Il est possible de planifier <see cref="T:System.Threading.Thread" /> après les threads de toute autre priorité.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">Il est possible de planifier <see cref="T:System.Threading.Thread" /> après les threads de priorité <see langword="AboveNormal" /> et avant les threads de priorité <see langword="BelowNormal" />. Par défaut, les threads ont une priorité <see langword="Normal" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Représente la méthode qui s’exécute sur un élément <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">Exception levée lorsqu'une erreur se produit dans un thread managé après le démarrage du thread de système d'exploitation sous-jacent, mais avant que le thread soit prêt à exécuter le code utilisateur.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Spécifie les états d'exécution de <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">L'état du thread inclut <see cref="F:System.Threading.ThreadState.AbortRequested" /> et le thread est à présent inactif ; toutefois, son état n'est pas encore passé à <see cref="F:System.Threading.ThreadState.Stopped" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">La méthode <see cref="M:System.Threading.Thread.Abort(System.Object)" /> a été appelée sur le thread, mais ce dernier n'a pas encore reçu <see cref="T:System.Threading.ThreadAbortException" /> en attente qui tentera de l'arrêter.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">Le thread est exécuté en tant que thread d'arrière-plan, par opposition à un thread de premier plan. Cet état est contrôlé par définition de la propriété <see cref="P:System.Threading.Thread.IsBackground" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">Le thread a été démarré et n’est pas encore arrêté.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">Le thread s'est arrêté.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">Une demande d'arrêt du thread est en cours. Ceci est exclusivement destiné à un usage interne.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">Le thread a été suspendu.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">Une demande de suspension du thread est en cours.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">La méthode <see cref="M:System.Threading.Thread.Start" /> n'a pas été appelée sur le thread.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">Le thread est bloqué. Cela peut résulter de l’appel de <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> ou <see cref="M:System.Threading.Thread.Join" />, d’une demande de verrouillage (par exemple l’appel de <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> ou <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />) ou de l’attente d’un objet de synchronisation de threads tel que <see cref="T:System.Threading.ManualResetEvent" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">Exception qui est levée lorsque <see cref="T:System.Threading.Thread" /> est dans un état <see cref="P:System.Threading.Thread.ThreadState" /> non valide pour l'appel de méthode.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadStateException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadStateException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadStateException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.ThreadStateException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
  </members>
</doc>